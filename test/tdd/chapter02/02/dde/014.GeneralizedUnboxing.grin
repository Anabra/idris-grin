primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
idris_int_eq.unboxed idris_int_eq0 idris_int_eq1.32.arity.1 =
  (CGrInt idris_int_eq0_1) <- fetch idris_int_eq0
  (CGrInt idris_int_eq1_1) <- pure (CGrInt idris_int_eq1.32.arity.1)
  idris_int_eq2 <- _prim_int_eq $ idris_int_eq0_1 idris_int_eq1_1
  ccp.0 <- case idris_int_eq2 of
    #False ->
      pure 0
    #True ->
      pure 1
  pure ccp.0

idris_int_lt.unboxed idris_int_lt0.32.arity.1 idris_int_lt1.32.arity.1 =
  (CGrInt idris_int_lt0_1) <- pure (CGrInt idris_int_lt0.32.arity.1)
  (CGrInt idris_int_lt1_1) <- pure (CGrInt idris_int_lt1.32.arity.1)
  idris_int_lt2 <- _prim_int_lt $ idris_int_lt0_1 idris_int_lt1_1
  ccp.1 <- case idris_int_lt2 of
    #False ->
      pure 0
    #True ->
      pure 1
  pure ccp.1

idris_float_div.unboxed idris_float_div0.32.arity.1 idris_float_div1.32.arity.1 =
  (CGrFloat idris_float_div0_1) <- pure (CGrFloat idris_float_div0.32.arity.1)
  (CGrFloat idris_float_div1_1) <- pure (CGrFloat idris_float_div1.32.arity.1)
  idris_float_div2 <- _prim_float_div $ idris_float_div0_1 idris_float_div1_1
  pure idris_float_div2

idris_read_str.unboxed =
  idris_read_str1 <- _prim_read_string $
  pure idris_read_str1

idris_str_concat.unboxed idris_str_concat1 idris_str_concat2.32.arity.1 =
  (CGrString idris_str_concat1_0) <- fetch idris_str_concat1
  (CGrString idris_str_concat2_0) <- pure (CGrString idris_str_concat2.32.arity.1)
  idris_str_concat3 <- _prim_string_concat $ idris_str_concat1_0 idris_str_concat2_0
  pure idris_str_concat3

idris_str_eq.unboxed idris_str_eq1 idris_str_eq2.32.arity.1 =
  (CGrString idris_str_eq1_0) <- fetch idris_str_eq1
  (CGrString idris_str_eq2_0) <- pure (CGrString idris_str_eq2.32.arity.1)
  idris_str_eq3 <- _prim_string_eq $ idris_str_eq1_0 idris_str_eq2_0
  ccp.2 <- case idris_str_eq3 of
    #False ->
      pure 0
    #True ->
      pure 1
  pure ccp.2

idris_str_len.unboxed idris_str_len1 =
  (CGrString idris_str_len2) <- fetch idris_str_len1
  idris_str_len3 <- _prim_string_len $ idris_str_len2
  pure idris_str_len3

idris_str_rev.unboxed idris_str_rev1.32.arity.1 =
  (CGrString idris_str_rev1_0) <- pure (CGrString idris_str_rev1.32.arity.1)
  idris_str_rev2 <- _prim_string_reverse $ idris_str_rev1_0
  pure idris_str_rev2

idris_str_head.unboxed idris_str_head1 =
  (CGrString idris_str_head1_0) <- fetch idris_str_head1
  idris_str_head2 <- _prim_string_head $ idris_str_head1_0
  pure idris_str_head2

idris_str_tail.unboxed idris_str_tail1 =
  (CGrString idris_str_tail1_0) <- fetch idris_str_tail1
  idris_str_tail2 <- _prim_string_tail $ idris_str_tail1_0
  pure idris_str_tail2

idris_str_cons idris_str_cons1 idris_str_cons2 =
  (CGrInt idris_str_cons1_0) <- fetch idris_str_cons1
  (CGrString idris_str_cons2_0) <- fetch idris_str_cons2
  idris_str_cons3 <- _prim_string_cons $ idris_str_cons1_0 idris_str_cons2_0
  pure (CGrString idris_str_cons3)

idris_int_float.unboxed idris_int_float1 =
  (CGrInt idris_int_float1_0) <- fetch idris_int_float1
  idris_int_float2 <- _prim_int_float $ idris_int_float1_0
  pure idris_int_float2

idris_ffi_file_eof.unboxed idris_ffi_file_eof1.32.arity.1 =
  (CGrInt idris_ffi_file_eof1_0) <- pure (CGrInt idris_ffi_file_eof1.32.arity.1)
  idris_ffi_file_eof2 <- _prim_ffi_file_eof $ idris_ffi_file_eof1_0
  pure idris_ffi_file_eof2

idris_lz_ext.unboxed idris_lz_ext1.32.arity.1 =
  (CGrInt idris_lz_ext2) <- pure (CGrInt idris_lz_ext1.32.arity.1)
  idris_lz_ext3 <- _prim_int_add $ idris_lz_ext2 0
  pure idris_lz_ext3

prim__stdin.unboxed =
  pure 0

grinMain =
  "idr_{runMain_0}0_val_211.0" <- idr_Main.main $
  "idr_{runMain_0}0.0" <- store "idr_{runMain_0}0_val_211.0"
  "idr_{runMain_0}1_val.0" <- pure (CErased)
  "idr_{runMain_0}1.0" <- store "idr_{runMain_0}1_val.0"
  "idr_{APPLY_0}0.8.0" <- pure "idr_{runMain_0}0.0"
  "idr_{APPLY_0}1.8.0" <- pure "idr_{runMain_0}1.0"
  "idr_{APPLY_0}0_val.8.0" <- fetch "idr_{APPLY_0}0.8.0"
  "idr_{runMain_0}0_val.0" <- case "idr_{APPLY_0}0_val.8.0" of
    (C"idr_{U_Prelude.Interactive.replWith_1}" "idr_{APPLY_0}2_204.8.0" "idr_{APPLY_0}3.8.0" "idr_{APPLY_0}4.8.0" "idr_{APPLY_0}5.8.0") ->
      idr_Prelude.Interactive.replWith $ "idr_{APPLY_0}3.8.0" "idr_{APPLY_0}4.8.0" "idr_{APPLY_0}5.8.0" "idr_{APPLY_0}1.8.0"
  "idr_{runMain_0}0_212.0" <- store "idr_{runMain_0}0_val.0"
  "idr_{EVAL_0}0.0.0" <- pure "idr_{runMain_0}0_212.0"
  "idr_{EVAL_0}0_val.0.0" <- fetch "idr_{EVAL_0}0.0.0"
  r <- fetch "idr_{EVAL_0}0.0.0"
  pure ()

idr_Prelude.File.do_feof.unboxed idr_Prelude.File.do_feof0 =
  (CGrInt idr_Prelude.File.do_feof0.32.1.arity.1) <- fetch idr_Prelude.File.do_feof0
  idris_ffi_file_eof.unboxed $ idr_Prelude.File.do_feof0.32.1.arity.1

idr_Prelude.List.dropWhile idr_Prelude.List.dropWhile1 idr_Prelude.List.dropWhile2 =
  idr_Prelude.List.dropWhile2_val <- fetch idr_Prelude.List.dropWhile2
  case idr_Prelude.List.dropWhile2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4) ->
      "idr_{APPLY_0}0.0" <- pure idr_Prelude.List.dropWhile1
      "idr_{APPLY_0}1.0" <- pure idr_Prelude.List.dropWhile3
      "idr_{APPLY_0}0_val.0" <- fetch "idr_{APPLY_0}0.0"
      idr_Prelude.List.dropWhile5_val <- case "idr_{APPLY_0}0_val.0" of
        (C"idr_{U_Prelude.Chars.isSpace_1}") ->
          idr_Prelude.Chars.isSpace $ "idr_{APPLY_0}1.0"
      idr_Prelude.List.dropWhile5 <- store idr_Prelude.List.dropWhile5_val
      idr_Prelude.List.dropWhile5_val_15 <- fetch idr_Prelude.List.dropWhile5
      case idr_Prelude.List.dropWhile5_val_15 of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4)
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.dropWhile6_val <- pure (CErased)
          idr_Prelude.List.dropWhile6 <- store idr_Prelude.List.dropWhile6_val
          idr_Prelude.List.dropWhile $ idr_Prelude.List.dropWhile1 idr_Prelude.List.dropWhile4
    (Cidr_Prelude.List.Nil) ->
      fetch idr_Prelude.List.dropWhile2

idr_Prelude.Chars.isSpace idr_Prelude.Chars.isSpace0 =
  idr_Prelude.Chars.isSpace1_val_52 <- pure (CGrInt 32)
  idr_Prelude.Chars.isSpace1 <- store idr_Prelude.Chars.isSpace1_val_52
  (CGrInt idr_Prelude.Chars.isSpace1.32.11.arity.1) <- fetch idr_Prelude.Chars.isSpace1
  unboxed.CGrInt.7 <- idris_int_eq.unboxed $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace1.32.11.arity.1
  idr_Prelude.Chars.isSpace1_val <- pure (CGrInt unboxed.CGrInt.7)
  idr_Prelude.Chars.isSpace1_53 <- store idr_Prelude.Chars.isSpace1_val
  idr_Prelude.Chars.isSpace1_val_54 <- fetch idr_Prelude.Chars.isSpace1_53
  case idr_Prelude.Chars.isSpace1_val_54 of
    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0) ->
      case idr_Prelude.Chars.isSpace_cpat_LInt64_0 of
        0 ->
          idr_Prelude.Chars.isSpace2_val_55 <- pure (CGrInt 9)
          idr_Prelude.Chars.isSpace2 <- store idr_Prelude.Chars.isSpace2_val_55
          (CGrInt idr_Prelude.Chars.isSpace2.32.12.arity.1) <- fetch idr_Prelude.Chars.isSpace2
          unboxed.CGrInt.8 <- idris_int_eq.unboxed $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace2.32.12.arity.1
          idr_Prelude.Chars.isSpace2_val <- pure (CGrInt unboxed.CGrInt.8)
          idr_Prelude.Chars.isSpace2_56 <- store idr_Prelude.Chars.isSpace2_val
          idr_Prelude.Chars.isSpace2_val_57 <- fetch idr_Prelude.Chars.isSpace2_56
          case idr_Prelude.Chars.isSpace2_val_57 of
            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_58) ->
              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_58 of
                0 ->
                  idr_Prelude.Chars.isSpace3_val_59 <- pure (CGrInt 13)
                  idr_Prelude.Chars.isSpace3 <- store idr_Prelude.Chars.isSpace3_val_59
                  (CGrInt idr_Prelude.Chars.isSpace3.32.13.arity.1) <- fetch idr_Prelude.Chars.isSpace3
                  unboxed.CGrInt.9 <- idris_int_eq.unboxed $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace3.32.13.arity.1
                  idr_Prelude.Chars.isSpace3_val <- pure (CGrInt unboxed.CGrInt.9)
                  idr_Prelude.Chars.isSpace3_60 <- store idr_Prelude.Chars.isSpace3_val
                  idr_Prelude.Chars.isSpace3_val_61 <- fetch idr_Prelude.Chars.isSpace3_60
                  case idr_Prelude.Chars.isSpace3_val_61 of
                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_62) ->
                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_62 of
                        0 ->
                          idr_Prelude.Chars.isSpace4_val_63 <- pure (CGrInt 10)
                          idr_Prelude.Chars.isSpace4 <- store idr_Prelude.Chars.isSpace4_val_63
                          (CGrInt idr_Prelude.Chars.isSpace4.32.14.arity.1) <- fetch idr_Prelude.Chars.isSpace4
                          unboxed.CGrInt.10 <- idris_int_eq.unboxed $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace4.32.14.arity.1
                          idr_Prelude.Chars.isSpace4_val <- pure (CGrInt unboxed.CGrInt.10)
                          idr_Prelude.Chars.isSpace4_64 <- store idr_Prelude.Chars.isSpace4_val
                          idr_Prelude.Chars.isSpace4_val_65 <- fetch idr_Prelude.Chars.isSpace4_64
                          case idr_Prelude.Chars.isSpace4_val_65 of
                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_66) ->
                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_66 of
                                0 ->
                                  idr_Prelude.Chars.isSpace5_val_67 <- pure (CGrInt 12)
                                  idr_Prelude.Chars.isSpace5 <- store idr_Prelude.Chars.isSpace5_val_67
                                  (CGrInt idr_Prelude.Chars.isSpace5.32.15.arity.1) <- fetch idr_Prelude.Chars.isSpace5
                                  unboxed.CGrInt.11 <- idris_int_eq.unboxed $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace5.32.15.arity.1
                                  idr_Prelude.Chars.isSpace5_val <- pure (CGrInt unboxed.CGrInt.11)
                                  idr_Prelude.Chars.isSpace5_68 <- store idr_Prelude.Chars.isSpace5_val
                                  idr_Prelude.Chars.isSpace5_val_69 <- fetch idr_Prelude.Chars.isSpace5_68
                                  case idr_Prelude.Chars.isSpace5_val_69 of
                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_70) ->
                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_70 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace6_val_71 <- pure (CGrInt 11)
                                          idr_Prelude.Chars.isSpace6 <- store idr_Prelude.Chars.isSpace6_val_71
                                          (CGrInt idr_Prelude.Chars.isSpace6.32.16.arity.1) <- fetch idr_Prelude.Chars.isSpace6
                                          unboxed.CGrInt.12 <- idris_int_eq.unboxed $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace6.32.16.arity.1
                                          idr_Prelude.Chars.isSpace6_val <- pure (CGrInt unboxed.CGrInt.12)
                                          idr_Prelude.Chars.isSpace6_72 <- store idr_Prelude.Chars.isSpace6_val
                                          idr_Prelude.Chars.isSpace6_val_73 <- fetch idr_Prelude.Chars.isSpace6_72
                                          case idr_Prelude.Chars.isSpace6_val_73 of
                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_74) ->
                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_74 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace7_val_75 <- pure (CGrInt 160)
                                                  idr_Prelude.Chars.isSpace7 <- store idr_Prelude.Chars.isSpace7_val_75
                                                  (CGrInt idr_Prelude.Chars.isSpace7.32.17.arity.1) <- fetch idr_Prelude.Chars.isSpace7
                                                  unboxed.CGrInt.13 <- idris_int_eq.unboxed $ idr_Prelude.Chars.isSpace0 idr_Prelude.Chars.isSpace7.32.17.arity.1
                                                  idr_Prelude.Chars.isSpace7_val <- pure (CGrInt unboxed.CGrInt.13)
                                                  idr_Prelude.Chars.isSpace7_76 <- store idr_Prelude.Chars.isSpace7_val
                                                  idr_Prelude.Chars.isSpace7_val_77 <- fetch idr_Prelude.Chars.isSpace7_76
                                                  case idr_Prelude.Chars.isSpace7_val_77 of
                                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_78) ->
                                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_78 of
                                                        0 ->
                                                          pure (Cidr_Prelude.Bool.False)
                                                        #default ->
                                                          pure (Cidr_Prelude.Bool.True)
                                                #default ->
                                                  pure (Cidr_Prelude.Bool.True)
                                        #default ->
                                          pure (Cidr_Prelude.Bool.True)
                                #default ->
                                  pure (Cidr_Prelude.Bool.True)
                        #default ->
                          pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.True)

idr_Prelude.List.length.unboxed idr_Prelude.List.length1 =
  idr_Prelude.List.length1_val <- fetch idr_Prelude.List.length1
  case idr_Prelude.List.length1_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.length2 idr_Prelude.List.length3) ->
      idr_Prelude.List.length4_val_79 <- pure (CErased)
      idr_Prelude.List.length4 <- store idr_Prelude.List.length4_val_79
      unboxed.CGrInt.14 <- idr_Prelude.List.length.unboxed $ idr_Prelude.List.length3
      idr_Prelude.List.length4_val <- pure (CGrInt unboxed.CGrInt.14)
      idr_Prelude.List.length4_80 <- store idr_Prelude.List.length4_val
      idr_Prelude.List.length5_val <- pure (CGrInt 1)
      idr_Prelude.List.length5 <- store idr_Prelude.List.length5_val
      idris_int_add0.0 <- pure idr_Prelude.List.length4_80
      idris_int_add1.0 <- pure idr_Prelude.List.length5
      (CGrInt idris_int_add0_1.0) <- fetch idris_int_add0.0
      (CGrInt idris_int_add1_1.0) <- fetch idris_int_add1.0
      idris_int_add2.0 <- _prim_int_add $ idris_int_add0_1.0 idris_int_add1_1.0
      (CGrInt unboxed.CGrInt.0) <- pure (CGrInt idris_int_add2.0)
      pure unboxed.CGrInt.0
    (Cidr_Prelude.List.Nil) ->
      pure 0

idr_Main.main =
  idr_Main.main0_val <- pure (CErased)
  idr_Main.main0 <- store idr_Main.main0_val
  idr_Main.main1_val <- pure (Cidr_MkUnit)
  idr_Main.main1 <- store idr_Main.main1_val
  idr_Main.main2_val <- pure (CGrString #"Enter a string: ")
  idr_Main.main2 <- store idr_Main.main2_val
  idr_Main.main3_val <- pure (C"idr_{U_Main.{main_2}_2}")
  idr_Main.main3 <- store idr_Main.main3_val
  pure (C"idr_{U_Prelude.Interactive.replWith_1}" idr_Main.main0 idr_Main.main1 idr_Main.main2 idr_Main.main3)

idr_prim__floatToStr.unboxed idr_prim__floatToStr0 =
  idris_float_str1.0 <- pure idr_prim__floatToStr0
  (CGrFloat idris_float_str1_0.0) <- fetch idris_float_str1.0
  idris_float_str2.0 <- _prim_float_string $ idris_float_str1_0.0
  pure idris_float_str2.0

idr_prim__strCons idr_prim__strCons0 idr_prim__strCons1 =
  idris_str_cons $ idr_prim__strCons0 idr_prim__strCons1

idr_Prelude.Interactive.replWith idr_Prelude.Interactive.replWith1 idr_Prelude.Interactive.replWith2 idr_Prelude.Interactive.replWith3 idr_Prelude.Interactive.replWith4 =
  unboxed.CGrInt.19 <- prim__stdin.unboxed $
  idr_Prelude.Interactive.replWith5_val_121 <- pure (CGrInt unboxed.CGrInt.19)
  idr_Prelude.Interactive.replWith5 <- store idr_Prelude.Interactive.replWith5_val_121
  idr_Prelude.File.fEOF0.0 <- pure idr_Prelude.Interactive.replWith5
  unboxed.CGrInt.2.0 <- idr_Prelude.File.do_feof.unboxed $ idr_Prelude.File.fEOF0.0
  idr_Prelude.File.fEOF2_val.0 <- pure (CGrInt unboxed.CGrInt.2.0)
  idr_Prelude.File.fEOF2.0 <- store idr_Prelude.File.fEOF2_val.0
  idr_Prelude.File.fEOF3_val_16.0 <- pure (CGrInt 0)
  idr_Prelude.File.fEOF3.0 <- store idr_Prelude.File.fEOF3_val_16.0
  (CGrInt idr_Prelude.File.fEOF3.32.2.arity.1.0) <- fetch idr_Prelude.File.fEOF3.0
  unboxed.CGrInt.3.0 <- idris_int_eq.unboxed $ idr_Prelude.File.fEOF2.0 idr_Prelude.File.fEOF3.32.2.arity.1.0
  idr_Prelude.File.fEOF3_val.0 <- pure (CGrInt unboxed.CGrInt.3.0)
  idr_Prelude.File.fEOF3_17.0 <- store idr_Prelude.File.fEOF3_val.0
  idr_Prelude.File.fEOF3_val_18.0 <- fetch idr_Prelude.File.fEOF3_17.0
  idr_Prelude.Interactive.replWith5_val <- case idr_Prelude.File.fEOF3_val_18.0 of
    (CGrInt idr_Prelude.File.fEOF_cpat_LInt64_0.0) ->
      case idr_Prelude.File.fEOF_cpat_LInt64_0.0 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
  idr_Prelude.Interactive.replWith5_122 <- store idr_Prelude.Interactive.replWith5_val
  idr_Prelude.Interactive.replWith5_val_123 <- fetch idr_Prelude.Interactive.replWith5_122
  case idr_Prelude.Interactive.replWith5_val_123 of
    (Cidr_Prelude.Bool.False) ->
      (CGrString idr_Prelude.Interactive.replWith2.32.25.arity.1) <- fetch idr_Prelude.Interactive.replWith2
      idris_write_str2.32.arity.1.0 <- pure idr_Prelude.Interactive.replWith2.32.25.arity.1
      (CGrString idris_write_str2_0.0) <- pure (CGrString idris_write_str2.32.arity.1.0)
      _prim_string_print $ idris_write_str2_0.0
      idr_Prelude.Interactive.replWith6_val_124 <- pure (CUnit)
      idr_Prelude.Interactive.replWith6 <- store idr_Prelude.Interactive.replWith6_val_124
      idr_Prelude.Interactive.replWith6_val <- pure (Cidr_MkUnit)
      idr_Prelude.Interactive.replWith6_125 <- store idr_Prelude.Interactive.replWith6_val
      idr_Prelude.Interactive.replWith7_val_126 <- pure (CErased)
      idr_Prelude.Interactive.replWith7 <- store idr_Prelude.Interactive.replWith7_val_126
      unboxed.CGrString.0.0 <- idris_read_str.unboxed $
      idr_Prelude.Interactive.getLine'2_val.0 <- pure (CGrString unboxed.CGrString.0.0)
      idr_Prelude.Interactive.getLine'2.0 <- store idr_Prelude.Interactive.getLine'2_val.0
      (CGrString idr_Prelude.Interactive.getLine'2.32.3.arity.1.0) <- fetch idr_Prelude.Interactive.getLine'2.0
      unboxed.CGrString.1.0 <- idris_str_rev.unboxed $ idr_Prelude.Interactive.getLine'2.32.3.arity.1.0
      idr_Prelude.Interactive.getLine'3_val_22.0 <- pure (CGrString unboxed.CGrString.1.0)
      idr_Prelude.Interactive.getLine'3.0 <- store idr_Prelude.Interactive.getLine'3_val_22.0
      idr_Prelude.Interactive.getLine'4_val.0 <- pure (CGrString #"")
      idr_Prelude.Interactive.getLine'4.0 <- store idr_Prelude.Interactive.getLine'4_val.0
      (CGrString idr_Prelude.Interactive.getLine'4.32.4.arity.1.0) <- fetch idr_Prelude.Interactive.getLine'4.0
      unboxed.CGrInt.4.0 <- idris_str_eq.unboxed $ idr_Prelude.Interactive.getLine'3.0 idr_Prelude.Interactive.getLine'4.32.4.arity.1.0
      idr_Prelude.Interactive.getLine'3_val_21.0 <- pure (CGrInt unboxed.CGrInt.4.0)
      idr_Prelude.Interactive.getLine'3_23.0 <- store idr_Prelude.Interactive.getLine'3_val_21.0
      idr_Prelude.Interactive.getLine'3_val_24.0 <- fetch idr_Prelude.Interactive.getLine'3_23.0
      idr_Prelude.Interactive.getLine'3_val_20.0 <- case idr_Prelude.Interactive.getLine'3_val_24.0 of
        (CGrInt idr_Prelude.Interactive.getLine'_cpat_LInt64_0.0) ->
          case idr_Prelude.Interactive.getLine'_cpat_LInt64_0.0 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
      idr_Prelude.Interactive.getLine'3_25.0 <- store idr_Prelude.Interactive.getLine'3_val_20.0
      idr_Prelude.Interactive.getLine'4_val_26.0 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Interactive.getLine'4_27.0 <- store idr_Prelude.Interactive.getLine'4_val_26.0
      (Cidr_Prelude.Bool.True) <- fetch idr_Prelude.Interactive.getLine'4_27.0
      idr_Prelude.Interactive.getLine'3_val_19.0 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Interactive.getLine'3_25.0
      idr_Prelude.Interactive.getLine'3_28.0 <- store idr_Prelude.Interactive.getLine'3_val_19.0
      idr_Prelude.Interactive.getLine'3_val_29.0 <- fetch idr_Prelude.Interactive.getLine'3_28.0
      idr_Prelude.Interactive.getLine'3_val.0 <- case idr_Prelude.Interactive.getLine'3_val_29.0 of
        (Cidr_Prelude.Basics.No) ->
          pure (CGrString #"")
        (Cidr_Prelude.Basics.Yes) ->
          (CGrString idr_Prelude.Interactive.getLine'2.32.6.arity.1.0) <- fetch idr_Prelude.Interactive.getLine'2.0
          unboxed.CGrString.2.0 <- idris_str_rev.unboxed $ idr_Prelude.Interactive.getLine'2.32.6.arity.1.0
          idr_Prelude.Interactive.getLine'4_val_31.0 <- pure (CGrString unboxed.CGrString.2.0)
          idr_Prelude.Interactive.getLine'4_32.0 <- store idr_Prelude.Interactive.getLine'4_val_31.0
          unboxed.CGrInt.5.0 <- idris_str_head.unboxed $ idr_Prelude.Interactive.getLine'4_32.0
          idr_Prelude.Interactive.getLine'4_val_30.0 <- pure (CGrInt unboxed.CGrInt.5.0)
          idr_Prelude.Interactive.getLine'4_33.0 <- store idr_Prelude.Interactive.getLine'4_val_30.0
          idr_Prelude.Interactive.getLine'4_val_34.0 <- fetch idr_Prelude.Interactive.getLine'4_33.0
          case idr_Prelude.Interactive.getLine'4_val_34.0 of
            (CGrInt idr_Prelude.Interactive.getLine'_cpat_LInt64_10.0) ->
              case idr_Prelude.Interactive.getLine'_cpat_LInt64_10.0 of
                10 ->
                  (CGrString idr_Prelude.Interactive.getLine'2.32.7.arity.1.0) <- fetch idr_Prelude.Interactive.getLine'2.0
                  unboxed.CGrString.3.0 <- idris_str_rev.unboxed $ idr_Prelude.Interactive.getLine'2.32.7.arity.1.0
                  idr_Prelude.Interactive.getLine'5_val.0 <- pure (CGrString unboxed.CGrString.3.0)
                  idr_Prelude.Interactive.getLine'5.0 <- store idr_Prelude.Interactive.getLine'5_val.0
                  unboxed.CGrString.4.0 <- idris_str_tail.unboxed $ idr_Prelude.Interactive.getLine'5.0
                  pure (CGrString unboxed.CGrString.4.0)
                #default ->
                  (CGrString idr_Prelude.Interactive.getLine'2.32.8.arity.1.0) <- fetch idr_Prelude.Interactive.getLine'2.0
                  unboxed.CGrString.5.0 <- idris_str_rev.unboxed $ idr_Prelude.Interactive.getLine'2.32.8.arity.1.0
                  idr_Prelude.Interactive.getLine'5_val_36.0 <- pure (CGrString unboxed.CGrString.5.0)
                  idr_Prelude.Interactive.getLine'5_37.0 <- store idr_Prelude.Interactive.getLine'5_val_36.0
                  unboxed.CGrInt.6.0 <- idris_str_head.unboxed $ idr_Prelude.Interactive.getLine'5_37.0
                  idr_Prelude.Interactive.getLine'5_val_35.0 <- pure (CGrInt unboxed.CGrInt.6.0)
                  idr_Prelude.Interactive.getLine'5_38.0 <- store idr_Prelude.Interactive.getLine'5_val_35.0
                  (CGrString idr_Prelude.Interactive.getLine'2.32.9.arity.1.0) <- fetch idr_Prelude.Interactive.getLine'2.0
                  unboxed.CGrString.6.0 <- idris_str_rev.unboxed $ idr_Prelude.Interactive.getLine'2.32.9.arity.1.0
                  idr_Prelude.Interactive.getLine'6_val_39.0 <- pure (CGrString unboxed.CGrString.6.0)
                  idr_Prelude.Interactive.getLine'6.0 <- store idr_Prelude.Interactive.getLine'6_val_39.0
                  unboxed.CGrString.7.0 <- idris_str_tail.unboxed $ idr_Prelude.Interactive.getLine'6.0
                  idr_Prelude.Interactive.getLine'6_val.0 <- pure (CGrString unboxed.CGrString.7.0)
                  idr_Prelude.Interactive.getLine'6_40.0 <- store idr_Prelude.Interactive.getLine'6_val.0
                  idris_str_cons $ idr_Prelude.Interactive.getLine'5_38.0 idr_Prelude.Interactive.getLine'6_40.0
      idr_Prelude.Interactive.getLine'3_49.0 <- store idr_Prelude.Interactive.getLine'3_val.0
      (CGrString idr_Prelude.Interactive.getLine'3_49.32.10.arity.1.0) <- fetch idr_Prelude.Interactive.getLine'3_49.0
      unboxed.CGrString.8 <- idris_str_rev.unboxed $ idr_Prelude.Interactive.getLine'3_49.32.10.arity.1.0
      idr_Prelude.Interactive.replWith7_val <- pure (CGrString unboxed.CGrString.8)
      idr_Prelude.Interactive.replWith7_127 <- store idr_Prelude.Interactive.replWith7_val
      "idr_{APPLY_0}0.5" <- pure idr_Prelude.Interactive.replWith3
      "idr_{APPLY_0}1.5" <- pure idr_Prelude.Interactive.replWith1
      "idr_{APPLY_0}0_val.5" <- fetch "idr_{APPLY_0}0.5"
      idr_Prelude.Interactive.replWith8_val_128 <- case "idr_{APPLY_0}0_val.5" of
        (C"idr_{U_Main.{main_2}_2}") ->
          pure (C"idr_{U_Main.{main_2}_1}" "idr_{APPLY_0}1.5")
      idr_Prelude.Interactive.replWith8 <- store idr_Prelude.Interactive.replWith8_val_128
      "idr_{APPLY_0}0.6" <- pure idr_Prelude.Interactive.replWith8
      "idr_{APPLY_0}1.6" <- pure idr_Prelude.Interactive.replWith7_127
      "idr_{APPLY_0}0_val.6" <- fetch "idr_{APPLY_0}0.6"
      idr_Prelude.Interactive.replWith8_val <- case "idr_{APPLY_0}0_val.6" of
        (C"idr_{U_Main.{main_2}_1}" "idr_{APPLY_0}2_203.6") ->
          do
            unboxed.Cidr_Prelude.Maybe.Just.0 <- "idr_Main.{main_2}.unboxed" $ "idr_{APPLY_0}1.6"
            pure (Cidr_Prelude.Maybe.Just unboxed.Cidr_Prelude.Maybe.Just.0)
      idr_Prelude.Interactive.replWith8_129 <- store idr_Prelude.Interactive.replWith8_val
      idr_Prelude.Interactive.replWith8_val_130 <- fetch idr_Prelude.Interactive.replWith8_129
      case idr_Prelude.Interactive.replWith8_val_130 of
        (Cidr_Prelude.Maybe.Just idr_Prelude.Interactive.replWith9) ->
          idr_Prelude.Interactive.replWith9_val <- fetch idr_Prelude.Interactive.replWith9
          (Cidr_Builtins.MkPair idr_Prelude.Interactive.replWith10 idr_Prelude.Interactive.replWith11) <- pure idr_Prelude.Interactive.replWith9_val
          idr_Prelude.Interactive.replWith12_val <- pure (CErased)
          idr_Prelude.Interactive.replWith12 <- store idr_Prelude.Interactive.replWith12_val
          idr_Prelude.Interactive.replWith13_val <- pure (CErased)
          idr_Prelude.Interactive.replWith13 <- store idr_Prelude.Interactive.replWith13_val
          idr_Prelude.Interactive.replWith14_val <- pure (CErased)
          idr_Prelude.Interactive.replWith14 <- store idr_Prelude.Interactive.replWith14_val
          idr_Prelude.Interactive.replWith15_val <- pure (C"idr_{U_Prelude.Interactive.{replWith_3}_1}" idr_Prelude.Interactive.replWith10)
          idr_Prelude.Interactive.replWith15 <- store idr_Prelude.Interactive.replWith15_val
          idr_Prelude.Interactive.replWith16_val <- pure (C"idr_{U_Prelude.Interactive.{replWith_4}_1}" idr_Prelude.Interactive.replWith11 idr_Prelude.Interactive.replWith2 idr_Prelude.Interactive.replWith3)
          idr_Prelude.Interactive.replWith16 <- store idr_Prelude.Interactive.replWith16_val
          idr_io_bind3.0 <- pure idr_Prelude.Interactive.replWith15
          idr_io_bind4.0 <- pure idr_Prelude.Interactive.replWith16
          idr_io_bind5.0 <- pure idr_Prelude.Interactive.replWith4
          "idr_{APPLY_0}0.1.0" <- pure idr_io_bind3.0
          "idr_{APPLY_0}1.1.0" <- pure idr_io_bind5.0
          "idr_{APPLY_0}0_val.1.0" <- fetch "idr_{APPLY_0}0.1.0"
          idr_io_bind6_val_50.0 <- case "idr_{APPLY_0}0_val.1.0" of
            (C"idr_{U_Prelude.Interactive.{replWith_3}_1}" "idr_{APPLY_0}2_205.1.0") ->
              "idr_Prelude.Interactive.{replWith_3}" $ "idr_{APPLY_0}2_205.1.0"
          idr_io_bind6.0 <- store idr_io_bind6_val_50.0
          "idr_{APPLY_0}0.2.0" <- pure idr_io_bind4.0
          "idr_{APPLY_0}1.2.0" <- pure idr_io_bind6.0
          "idr_{APPLY_0}0_val.2.0" <- fetch "idr_{APPLY_0}0.2.0"
          idr_io_bind6_val.0 <- case "idr_{APPLY_0}0_val.2.0" of
            (C"idr_{U_Prelude.Interactive.{replWith_4}_1}" "idr_{APPLY_0}2_206.2.0" "idr_{APPLY_0}3_207.2.0" "idr_{APPLY_0}4_208.2.0") ->
              "idr_Prelude.Interactive.{replWith_4}" $ "idr_{APPLY_0}2_206.2.0" "idr_{APPLY_0}3_207.2.0" "idr_{APPLY_0}4_208.2.0"
          idr_io_bind6_51.0 <- store idr_io_bind6_val.0
          "idr_{APPLY_0}0.3.0" <- pure idr_io_bind6_51.0
          "idr_{APPLY_0}1.3.0" <- pure idr_io_bind5.0
          "idr_{APPLY_0}0_val.3.0" <- fetch "idr_{APPLY_0}0.3.0"
          case "idr_{APPLY_0}0_val.3.0" of
            (C"idr_{U_Prelude.Interactive.replWith_1}" "idr_{APPLY_0}2_204.3.0" "idr_{APPLY_0}3.3.0" "idr_{APPLY_0}4.3.0" "idr_{APPLY_0}5.3.0") ->
              idr_Prelude.Interactive.replWith $ "idr_{APPLY_0}3.3.0" "idr_{APPLY_0}4.3.0" "idr_{APPLY_0}5.3.0" "idr_{APPLY_0}1.3.0"
    (Cidr_Prelude.Bool.True) ->
      pure (Cidr_MkUnit)

idr_Prelude.List.span idr_Prelude.List.span1 idr_Prelude.List.span2 =
  idr_Prelude.List.span2_val <- fetch idr_Prelude.List.span2
  case idr_Prelude.List.span2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4) ->
      "idr_{APPLY_0}0.7" <- pure idr_Prelude.List.span1
      "idr_{APPLY_0}1.7" <- pure idr_Prelude.List.span3
      "idr_{APPLY_0}0_val.7" <- fetch "idr_{APPLY_0}0.7"
      idr_Prelude.List.span5_val <- case "idr_{APPLY_0}0_val.7" of
        (C"idr_{U_Prelude.Strings.{words'_6}_1}") ->
          "idr_Prelude.Strings.{words'_6}" $ "idr_{APPLY_0}1.7"
      idr_Prelude.List.span5 <- store idr_Prelude.List.span5_val
      idr_Prelude.List.span5_val_133 <- fetch idr_Prelude.List.span5
      case idr_Prelude.List.span5_val_133 of
        (Cidr_Prelude.Bool.False) ->
          idr_Prelude.List.span6_val <- pure (Cidr_Prelude.List.Nil)
          idr_Prelude.List.span6 <- store idr_Prelude.List.span6_val
          idr_Prelude.List.span7_val <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4)
          idr_Prelude.List.span7 <- store idr_Prelude.List.span7_val
          pure (Cidr_Builtins.MkPair idr_Prelude.List.span6 idr_Prelude.List.span7)
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.span6_val_135 <- pure (CErased)
          idr_Prelude.List.span6_136 <- store idr_Prelude.List.span6_val_135
          idr_Prelude.List.span6_val_134 <- idr_Prelude.List.span $ idr_Prelude.List.span1 idr_Prelude.List.span4
          idr_Prelude.List.span6_137 <- store idr_Prelude.List.span6_val_134
          idr_Prelude.List.span6_val_138 <- fetch idr_Prelude.List.span6_137
          (Cidr_Builtins.MkPair idr_Prelude.List.span7_139 idr_Prelude.List.span8) <- pure idr_Prelude.List.span6_val_138
          idr_Prelude.List.span9_val <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span7_139)
          idr_Prelude.List.span9 <- store idr_Prelude.List.span9_val
          pure (Cidr_Builtins.MkPair idr_Prelude.List.span9 idr_Prelude.List.span8)
    (Cidr_Prelude.List.Nil) ->
      idr_Prelude.List.span3_val <- pure (Cidr_Prelude.List.Nil)
      idr_Prelude.List.span3_140 <- store idr_Prelude.List.span3_val
      idr_Prelude.List.span4_val <- pure (Cidr_Prelude.List.Nil)
      idr_Prelude.List.span4_141 <- store idr_Prelude.List.span4_val
      pure (Cidr_Builtins.MkPair idr_Prelude.List.span3_140 idr_Prelude.List.span4_141)

idr_Prelude.Strings.words idr_Prelude.Strings.words0 =
  idr_Prelude.Strings.words1_val <- pure (CErased)
  idr_Prelude.Strings.words1 <- store idr_Prelude.Strings.words1_val
  idr_Prelude.Strings.words2_val <- pure (CErased)
  idr_Prelude.Strings.words2 <- store idr_Prelude.Strings.words2_val
  idr_Prelude.Strings.words3_val <- pure (C"idr_{U_Prelude.Strings.{words_5}_1}")
  idr_Prelude.Strings.words3 <- store idr_Prelude.Strings.words3_val
  idr_Prelude.Strings.words4_val_158 <- pure (CGrString #"")
  idr_Prelude.Strings.words4 <- store idr_Prelude.Strings.words4_val_158
  (CGrString idr_Prelude.Strings.words4.32.26.arity.1) <- fetch idr_Prelude.Strings.words4
  unboxed.CGrInt.20 <- idris_str_eq.unboxed $ idr_Prelude.Strings.words0 idr_Prelude.Strings.words4.32.26.arity.1
  idr_Prelude.Strings.words4_val_157 <- pure (CGrInt unboxed.CGrInt.20)
  idr_Prelude.Strings.words4_159 <- store idr_Prelude.Strings.words4_val_157
  idr_Prelude.Strings.words4_val_160 <- fetch idr_Prelude.Strings.words4_159
  idr_Prelude.Strings.words4_val_156 <- case idr_Prelude.Strings.words4_val_160 of
    (CGrInt idr_Prelude.Strings.words_cpat_LInt64_0) ->
      case idr_Prelude.Strings.words_cpat_LInt64_0 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
  idr_Prelude.Strings.words4_161 <- store idr_Prelude.Strings.words4_val_156
  idr_Prelude.Strings.words5_val <- pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Strings.words5 <- store idr_Prelude.Strings.words5_val
  (Cidr_Prelude.Bool.True) <- fetch idr_Prelude.Strings.words5
  idr_Prelude.Strings.words4_val_155 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.words4_161
  idr_Prelude.Strings.words4_162 <- store idr_Prelude.Strings.words4_val_155
  idr_Prelude.Strings.words4_val_163 <- fetch idr_Prelude.Strings.words4_162
  idr_Prelude.Strings.words4_val_154 <- case idr_Prelude.Strings.words4_val_163 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.List.Nil)
    (Cidr_Prelude.Basics.Yes) ->
      unboxed.CGrInt.21 <- idris_str_head.unboxed $ idr_Prelude.Strings.words0
      idr_Prelude.Strings.words5_val_164 <- pure (CGrInt unboxed.CGrInt.21)
      idr_Prelude.Strings.words5_165 <- store idr_Prelude.Strings.words5_val_164
      idr_Prelude.Strings.words6_val_166 <- pure (CErased)
      idr_Prelude.Strings.words6 <- store idr_Prelude.Strings.words6_val_166
      unboxed.CGrString.9 <- idris_str_tail.unboxed $ idr_Prelude.Strings.words0
      idr_Prelude.Strings.words7_val_170 <- pure (CGrString unboxed.CGrString.9)
      idr_Prelude.Strings.words7 <- store idr_Prelude.Strings.words7_val_170
      idr_Prelude.Strings.words8_val <- pure (CGrString #"")
      idr_Prelude.Strings.words8 <- store idr_Prelude.Strings.words8_val
      (CGrString idr_Prelude.Strings.words8.32.28.arity.1) <- fetch idr_Prelude.Strings.words8
      unboxed.CGrInt.22 <- idris_str_eq.unboxed $ idr_Prelude.Strings.words7 idr_Prelude.Strings.words8.32.28.arity.1
      idr_Prelude.Strings.words7_val_169 <- pure (CGrInt unboxed.CGrInt.22)
      idr_Prelude.Strings.words7_171 <- store idr_Prelude.Strings.words7_val_169
      idr_Prelude.Strings.words7_val_172 <- fetch idr_Prelude.Strings.words7_171
      idr_Prelude.Strings.words7_val_168 <- case idr_Prelude.Strings.words7_val_172 of
        (CGrInt idr_Prelude.Strings.words_cpat_LInt64_0_173) ->
          case idr_Prelude.Strings.words_cpat_LInt64_0_173 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
      idr_Prelude.Strings.words7_174 <- store idr_Prelude.Strings.words7_val_168
      idr_Prelude.Strings.words8_val_175 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Strings.words8_176 <- store idr_Prelude.Strings.words8_val_175
      (Cidr_Prelude.Bool.True) <- fetch idr_Prelude.Strings.words8_176
      idr_Prelude.Strings.words7_val_167 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Strings.words7_174
      idr_Prelude.Strings.words7_177 <- store idr_Prelude.Strings.words7_val_167
      idr_Prelude.Strings.words7_val_178 <- fetch idr_Prelude.Strings.words7_177
      idr_Prelude.Strings.words7_val <- case idr_Prelude.Strings.words7_val_178 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Strings.StrNil)
        (Cidr_Prelude.Basics.Yes) ->
          unboxed.CGrString.10 <- idris_str_tail.unboxed $ idr_Prelude.Strings.words0
          idr_Prelude.Strings.words8_val_180 <- pure (CGrString unboxed.CGrString.10)
          idr_Prelude.Strings.words8_181 <- store idr_Prelude.Strings.words8_val_180
          unboxed.CGrInt.23 <- idris_str_head.unboxed $ idr_Prelude.Strings.words8_181
          idr_Prelude.Strings.words8_val_179 <- pure (CGrInt unboxed.CGrInt.23)
          idr_Prelude.Strings.words8_182 <- store idr_Prelude.Strings.words8_val_179
          unboxed.CGrString.11 <- idris_str_tail.unboxed $ idr_Prelude.Strings.words0
          idr_Prelude.Strings.words9_val_183 <- pure (CGrString unboxed.CGrString.11)
          idr_Prelude.Strings.words9 <- store idr_Prelude.Strings.words9_val_183
          unboxed.CGrString.12 <- idris_str_tail.unboxed $ idr_Prelude.Strings.words9
          idr_Prelude.Strings.words9_val <- pure (CGrString unboxed.CGrString.12)
          idr_Prelude.Strings.words9_184 <- store idr_Prelude.Strings.words9_val
          pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.words8_182 idr_Prelude.Strings.words9_184)
      idr_Prelude.Strings.words7_185 <- store idr_Prelude.Strings.words7_val
      idr_Prelude.Strings.words6_val <- idr__Prelude.Strings.unpack_with_36 $ idr_Prelude.Strings.words7_185
      idr_Prelude.Strings.words6_186 <- store idr_Prelude.Strings.words6_val
      pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words5_165 idr_Prelude.Strings.words6_186)
  idr_Prelude.Strings.words4_187 <- store idr_Prelude.Strings.words4_val_154
  idr_Prelude.Strings.words4_val <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words4_187
  idr_Prelude.Strings.words4_188 <- store idr_Prelude.Strings.words4_val
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Prelude.Strings.words3 idr_Prelude.Strings.words4_188

idr_Prelude.Strings.words' idr_Prelude.Strings.words'0 =
  idr_Prelude.Strings.words'1_val_189 <- pure (CErased)
  idr_Prelude.Strings.words'1 <- store idr_Prelude.Strings.words'1_val_189
  idr_Prelude.Strings.words'2_val <- pure (C"idr_{U_Prelude.Chars.isSpace_1}")
  idr_Prelude.Strings.words'2 <- store idr_Prelude.Strings.words'2_val
  idr_Prelude.Strings.words'1_val <- idr_Prelude.List.dropWhile $ idr_Prelude.Strings.words'2 idr_Prelude.Strings.words'0
  idr_Prelude.Strings.words'1_190 <- store idr_Prelude.Strings.words'1_val
  idr_Prelude.Strings.words'1_val_191 <- fetch idr_Prelude.Strings.words'1_190
  case idr_Prelude.Strings.words'1_val_191 of
    (Cidr_Prelude.List.Nil) ->
      pure (Cidr_Prelude.List.Nil)
    #default ->
      idr_Prelude.Strings.words'2_val_193 <- pure (CErased)
      idr_Prelude.Strings.words'2_194 <- store idr_Prelude.Strings.words'2_val_193
      idr_Prelude.Strings.words'3_val <- pure (C"idr_{U_Prelude.Strings.{words'_6}_1}")
      idr_Prelude.Strings.words'3 <- store idr_Prelude.Strings.words'3_val
      idr_Prelude.Strings.words'4_val_195 <- pure (CErased)
      idr_Prelude.Strings.words'4 <- store idr_Prelude.Strings.words'4_val_195
      idr_Prelude.Strings.words'5_val <- pure (C"idr_{U_Prelude.Chars.isSpace_1}")
      idr_Prelude.Strings.words'5 <- store idr_Prelude.Strings.words'5_val
      idr_Prelude.Strings.words'4_val <- idr_Prelude.List.dropWhile $ idr_Prelude.Strings.words'5 idr_Prelude.Strings.words'0
      idr_Prelude.Strings.words'4_196 <- store idr_Prelude.Strings.words'4_val
      idr_Prelude.Strings.words'2_val_192 <- idr_Prelude.List.span $ idr_Prelude.Strings.words'3 idr_Prelude.Strings.words'4_196
      idr_Prelude.Strings.words'2_197 <- store idr_Prelude.Strings.words'2_val_192
      idr_Prelude.Strings.words'2_val_198 <- fetch idr_Prelude.Strings.words'2_197
      (Cidr_Builtins.MkPair idr_Prelude.Strings.words'3_199 idr_Prelude.Strings.words'4_200) <- pure idr_Prelude.Strings.words'2_val_198
      idr_Prelude.Strings.words'5_val_201 <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words'4_200
      idr_Prelude.Strings.words'5_202 <- store idr_Prelude.Strings.words'5_val_201
      pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words'3_199 idr_Prelude.Strings.words'5_202)

"idr_Main.{average_0}" "idr_Main.{average_0}0" "idr_Main.{average_0}1" =
  idris_int_add0.1 <- pure "idr_Main.{average_0}0"
  idris_int_add1.1 <- pure "idr_Main.{average_0}1"
  (CGrInt idris_int_add0_1.1) <- fetch idris_int_add0.1
  (CGrInt idris_int_add1_1.1) <- fetch idris_int_add1.1
  idris_int_add2.1 <- _prim_int_add $ idris_int_add0_1.1 idris_int_add1_1.1
  pure (CGrInt idris_int_add2.1)

"idr_Main.{average_1}.unboxed" "idr_Main.{average_1}0" =
  idr_prim_lenString0.0 <- pure "idr_Main.{average_1}0"
  unboxed.CGrInt.24 <- idris_str_len.unboxed $ idr_prim_lenString0.0
  "idr_Main.{average_1}1_val" <- pure (CGrInt unboxed.CGrInt.24)
  "idr_Main.{average_1}1" <- store "idr_Main.{average_1}1_val"
  idr_prim__zextInt_BigInt0.0 <- pure "idr_Main.{average_1}1"
  (CGrInt idr_prim__zextInt_BigInt0.32.24.arity.1.0) <- fetch idr_prim__zextInt_BigInt0.0
  idris_lz_ext.unboxed $ idr_prim__zextInt_BigInt0.32.24.arity.1.0

"idr_Main.{main_2}.unboxed" "idr_Main.{main_2}1" =
  "idr_Main.{main_2}2_val_214" <- pure (CGrString #"The average word length is: ")
  "idr_Main.{main_2}2" <- store "idr_Main.{main_2}2_val_214"
  "idr_Main.{main_2}3_val_216" <- pure (CErased)
  "idr_Main.{main_2}3" <- store "idr_Main.{main_2}3_val_216"
  "idr_Main.{main_2}4_val" <- pure (C"idr_{U_prim__floatToStr_1}")
  "idr_Main.{main_2}4" <- store "idr_Main.{main_2}4_val"
  "idr_Main.{main_2}5_val" <- pure (Cidr_Prelude.Show.Open)
  "idr_Main.{main_2}5" <- store "idr_Main.{main_2}5_val"
  idr_Main.average0.0 <- pure "idr_Main.{main_2}1"
  idr_Main.average1_val_2.0 <- pure (CErased)
  idr_Main.average1.0 <- store idr_Main.average1_val_2.0
  idr_Main.average2_val.0 <- pure (CErased)
  idr_Main.average2.0 <- store idr_Main.average2_val.0
  idr_Main.average3_val.0 <- pure (C"idr_{U_Main.{average_0}_2}")
  idr_Main.average3.0 <- store idr_Main.average3_val.0
  idr_Main.average4_val.0 <- pure (CGrInt 0)
  idr_Main.average4.0 <- store idr_Main.average4_val.0
  idr_Main.average5_val_3.0 <- pure (CErased)
  idr_Main.average5.0 <- store idr_Main.average5_val_3.0
  idr_Main.average6_val.0 <- pure (CErased)
  idr_Main.average6.0 <- store idr_Main.average6_val.0
  idr_Main.average7_val.0 <- pure (C"idr_{U_Main.{average_1}_1}")
  idr_Main.average7.0 <- store idr_Main.average7_val.0
  idr_Main.average8_val.0 <- idr_Prelude.Strings.words $ idr_Main.average0.0
  idr_Main.average8.0 <- store idr_Main.average8_val.0
  idr_Main.average5_val.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Main.average7.0 idr_Main.average8.0
  idr_Main.average5_4.0 <- store idr_Main.average5_val.0
  idr_Main.average1_val_1.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ idr_Main.average3.0 idr_Main.average4.0 idr_Main.average5_4.0
  idr_Main.average1_5.0 <- store idr_Main.average1_val_1.0
  unboxed.CGrFloat.0.0 <- idris_int_float.unboxed $ idr_Main.average1_5.0
  idr_Main.average1_val.0 <- pure (CGrFloat unboxed.CGrFloat.0.0)
  idr_Main.average1_6.0 <- store idr_Main.average1_val.0
  idr_Main.average2_val_9.0 <- pure (CErased)
  idr_Main.average2_10.0 <- store idr_Main.average2_val_9.0
  idr_Main.average3_val_11.0 <- idr_Prelude.Strings.words $ idr_Main.average0.0
  idr_Main.average3_12.0 <- store idr_Main.average3_val_11.0
  unboxed.CGrInt.1.0 <- idr_Prelude.List.length.unboxed $ idr_Main.average3_12.0
  idr_Main.average2_val_8.0 <- pure (CGrInt unboxed.CGrInt.1.0)
  idr_Main.average2_13.0 <- store idr_Main.average2_val_8.0
  unboxed.CGrFloat.1.0 <- idris_int_float.unboxed $ idr_Main.average2_13.0
  idr_Main.average2_val_7.0 <- pure (CGrFloat unboxed.CGrFloat.1.0)
  idr_Main.average2_14.0 <- store idr_Main.average2_val_7.0
  (CGrFloat idr_Main.average1_6.32.0.arity.1.0) <- fetch idr_Main.average1_6.0
  (CGrFloat idr_Main.average2_14.32.0.arity.1.0) <- fetch idr_Main.average2_14.0
  unboxed.CGrFloat.2 <- idris_float_div.unboxed $ idr_Main.average1_6.32.0.arity.1.0 idr_Main.average2_14.32.0.arity.1.0
  "idr_Main.{main_2}6_val" <- pure (CGrFloat unboxed.CGrFloat.2)
  "idr_Main.{main_2}6" <- store "idr_Main.{main_2}6_val"
  (Cidr_Prelude.Show.Open) <- fetch "idr_Main.{main_2}5"
  idr_Prelude.Show.primNumShow1.0 <- pure "idr_Main.{main_2}4"
  idr_Prelude.Show.primNumShow3.0 <- pure "idr_Main.{main_2}6"
  "idr_{APPLY_0}0.4.0" <- pure idr_Prelude.Show.primNumShow1.0
  "idr_{APPLY_0}1.4.0" <- pure idr_Prelude.Show.primNumShow3.0
  "idr_{APPLY_0}0_val.4.0" <- fetch "idr_{APPLY_0}0.4.0"
  idr_Prelude.Show.primNumShow4_val.0 <- case "idr_{APPLY_0}0_val.4.0" of
    (C"idr_{U_prim__floatToStr_1}") ->
      do
        unboxed.CGrString.0 <- idr_prim__floatToStr.unboxed $ "idr_{APPLY_0}1.4.0"
        pure (CGrString unboxed.CGrString.0)
  idr_Prelude.Show.primNumShow4.0 <- store idr_Prelude.Show.primNumShow4_val.0
  idr_Prelude.Show.primNumShow2_val.0 <- pure (Cidr_Prelude.Show.Open)
  ccp.3.0 <- case idr_Prelude.Show.primNumShow2_val.0 of
    (Cidr_Prelude.Show.Open) ->
      pure 0
  idr_Prelude.Show.primNumShow5_val_83.0 <- pure (CGrInt ccp.3.0)
  idr_Prelude.Show.primNumShow5.0 <- store idr_Prelude.Show.primNumShow5_val_83.0
  idr_Prelude.Show.primNumShow6_val.0 <- pure (CGrInt 5)
  idr_Prelude.Show.primNumShow6.0 <- store idr_Prelude.Show.primNumShow6_val.0
  idr_Prelude.Show.primNumShow5_val_82.0 <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0" $ idr_Prelude.Show.primNumShow5.0 idr_Prelude.Show.primNumShow6.0
  idr_Prelude.Show.primNumShow5_84.0 <- store idr_Prelude.Show.primNumShow5_val_82.0
  idr_Prelude.Show.primNumShow5_val_85.0 <- fetch idr_Prelude.Show.primNumShow5_84.0
  idr_Prelude.Show.primNumShow5_val_81.0 <- case idr_Prelude.Show.primNumShow5_val_85.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      idr_Prelude.Show.primNumShow2_val_88.0 <- pure (Cidr_Prelude.Show.Open)
      ccp.4.0 <- case idr_Prelude.Show.primNumShow2_val_88.0 of
        (Cidr_Prelude.Show.Open) ->
          pure 0
      idr_Prelude.Show.primNumShow6_val_87.0 <- pure (CGrInt ccp.4.0)
      idr_Prelude.Show.primNumShow6_89.0 <- store idr_Prelude.Show.primNumShow6_val_87.0
      idr_Prelude.Show.primNumShow7_val.0 <- pure (CGrInt 5)
      idr_Prelude.Show.primNumShow7.0 <- store idr_Prelude.Show.primNumShow7_val.0
      (CGrInt idr_Prelude.Show.primNumShow7.32.18.arity.1.0) <- fetch idr_Prelude.Show.primNumShow7.0
      unboxed.CGrInt.15.0 <- idris_int_eq.unboxed $ idr_Prelude.Show.primNumShow6_89.0 idr_Prelude.Show.primNumShow7.32.18.arity.1.0
      idr_Prelude.Show.primNumShow6_val_86.0 <- pure (CGrInt unboxed.CGrInt.15.0)
      idr_Prelude.Show.primNumShow6_90.0 <- store idr_Prelude.Show.primNumShow6_val_86.0
      idr_Prelude.Show.primNumShow6_val_91.0 <- fetch idr_Prelude.Show.primNumShow6_90.0
      case idr_Prelude.Show.primNumShow6_val_91.0 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0.0 of
            0 ->
              pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_92.0 <- store idr_Prelude.Show.primNumShow5_val_81.0
  idr_Prelude.Show.primNumShow5_val_93.0 <- fetch idr_Prelude.Show.primNumShow5_92.0
  idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_93.0 of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_val_97.0 <- pure (CGrString #"")
      idr_Prelude.Show.primNumShow6_98.0 <- store idr_Prelude.Show.primNumShow6_val_97.0
      (CGrString idr_Prelude.Show.primNumShow6_98.32.19.arity.1.0) <- fetch idr_Prelude.Show.primNumShow6_98.0
      unboxed.CGrInt.16.0 <- idris_str_eq.unboxed $ idr_Prelude.Show.primNumShow4.0 idr_Prelude.Show.primNumShow6_98.32.19.arity.1.0
      idr_Prelude.Show.primNumShow6_val_96.0 <- pure (CGrInt unboxed.CGrInt.16.0)
      idr_Prelude.Show.primNumShow6_99.0 <- store idr_Prelude.Show.primNumShow6_val_96.0
      idr_Prelude.Show.primNumShow6_val_100.0 <- fetch idr_Prelude.Show.primNumShow6_99.0
      idr_Prelude.Show.primNumShow6_val_95.0 <- case idr_Prelude.Show.primNumShow6_val_100.0 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_101.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0_101.0 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
      idr_Prelude.Show.primNumShow6_102.0 <- store idr_Prelude.Show.primNumShow6_val_95.0
      idr_Prelude.Show.primNumShow7_val_103.0 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Show.primNumShow7_104.0 <- store idr_Prelude.Show.primNumShow7_val_103.0
      (Cidr_Prelude.Bool.True) <- fetch idr_Prelude.Show.primNumShow7_104.0
      idr_Prelude.Show.primNumShow6_val_94.0 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Show.primNumShow6_102.0
      idr_Prelude.Show.primNumShow6_105.0 <- store idr_Prelude.Show.primNumShow6_val_94.0
      idr_Prelude.Show.primNumShow6_val_106.0 <- fetch idr_Prelude.Show.primNumShow6_105.0
      case idr_Prelude.Show.primNumShow6_val_106.0 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Bool.False)
        (Cidr_Prelude.Basics.Yes) ->
          unboxed.CGrInt.17.0 <- idris_str_head.unboxed $ idr_Prelude.Show.primNumShow4.0
          idr_Prelude.Show.primNumShow7_val_108.0 <- pure (CGrInt unboxed.CGrInt.17.0)
          idr_Prelude.Show.primNumShow7_109.0 <- store idr_Prelude.Show.primNumShow7_val_108.0
          idr_Prelude.Show.primNumShow8_val.0 <- pure (CGrInt 45)
          idr_Prelude.Show.primNumShow8.0 <- store idr_Prelude.Show.primNumShow8_val.0
          (CGrInt idr_Prelude.Show.primNumShow8.32.21.arity.1.0) <- fetch idr_Prelude.Show.primNumShow8.0
          unboxed.CGrInt.18.0 <- idris_int_eq.unboxed $ idr_Prelude.Show.primNumShow7_109.0 idr_Prelude.Show.primNumShow8.32.21.arity.1.0
          idr_Prelude.Show.primNumShow7_val_107.0 <- pure (CGrInt unboxed.CGrInt.18.0)
          idr_Prelude.Show.primNumShow7_110.0 <- store idr_Prelude.Show.primNumShow7_val_107.0
          idr_Prelude.Show.primNumShow7_val_111.0 <- fetch idr_Prelude.Show.primNumShow7_110.0
          case idr_Prelude.Show.primNumShow7_val_111.0 of
            (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_112.0) ->
              case idr_Prelude.Show.primNumShow_cpat_LInt64_0_112.0 of
                0 ->
                  pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_113.0 <- store idr_Prelude.Show.primNumShow5_val.0
  idr_Prelude.Show.primNumShow5_val_114.0 <- fetch idr_Prelude.Show.primNumShow5_113.0
  "idr_Main.{main_2}3_val_215" <- case idr_Prelude.Show.primNumShow5_val_114.0 of
    (Cidr_Prelude.Bool.False) ->
      fetch idr_Prelude.Show.primNumShow4.0
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_val_115.0 <- pure (CGrString #"(")
      idr_Prelude.Show.primNumShow6_116.0 <- store idr_Prelude.Show.primNumShow6_val_115.0
      idr_Prelude.Show.primNumShow7_val_118.0 <- pure (CGrString #")")
      idr_Prelude.Show.primNumShow7_119.0 <- store idr_Prelude.Show.primNumShow7_val_118.0
      (CGrString idr_Prelude.Show.primNumShow7_119.32.22.arity.1.0) <- fetch idr_Prelude.Show.primNumShow7_119.0
      idr_Prelude.Show.primNumShow7_val_117.0 <- do
        unboxed.CGrString.1 <- idris_str_concat.unboxed $ idr_Prelude.Show.primNumShow4.0 idr_Prelude.Show.primNumShow7_119.32.22.arity.1.0
        pure (CGrString unboxed.CGrString.1)
      idr_Prelude.Show.primNumShow7_120.0 <- store idr_Prelude.Show.primNumShow7_val_117.0
      (CGrString idr_Prelude.Show.primNumShow7_120.32.23.arity.1.0) <- fetch idr_Prelude.Show.primNumShow7_120.0
      do
        unboxed.CGrString.2 <- idris_str_concat.unboxed $ idr_Prelude.Show.primNumShow6_116.0 idr_Prelude.Show.primNumShow7_120.32.23.arity.1.0
        pure (CGrString unboxed.CGrString.2)
  "idr_Main.{main_2}3_217" <- store "idr_Main.{main_2}3_val_215"
  "idr_Main.{main_2}4_val_218" <- pure (CGrString #"\n")
  "idr_Main.{main_2}4_219" <- store "idr_Main.{main_2}4_val_218"
  (CGrString "idr_Main.{main_2}4_219.32.31.arity.1") <- fetch "idr_Main.{main_2}4_219"
  "idr_Main.{main_2}3_val" <- do
    unboxed.CGrString.3 <- idris_str_concat.unboxed $ "idr_Main.{main_2}3_217" "idr_Main.{main_2}4_219.32.31.arity.1"
    pure (CGrString unboxed.CGrString.3)
  "idr_Main.{main_2}3_220" <- store "idr_Main.{main_2}3_val"
  (CGrString "idr_Main.{main_2}3_220.32.32.arity.1") <- fetch "idr_Main.{main_2}3_220"
  "idr_Main.{main_2}2_val_213" <- do
    unboxed.CGrString.4 <- idris_str_concat.unboxed $ "idr_Main.{main_2}2" "idr_Main.{main_2}3_220.32.32.arity.1"
    pure (CGrString unboxed.CGrString.4)
  "idr_Main.{main_2}2_221" <- store "idr_Main.{main_2}2_val_213"
  "idr_Main.{main_2}3_val_222" <- pure (Cidr_MkUnit)
  "idr_Main.{main_2}3_223" <- store "idr_Main.{main_2}3_val_222"
  "idr_Main.{main_2}2_val" <- pure (Cidr_Builtins.MkPair "idr_Main.{main_2}2_221" "idr_Main.{main_2}3_223")
  "idr_Main.{main_2}2_224" <- store "idr_Main.{main_2}2_val"
  pure "idr_Main.{main_2}2_224"

"idr_Prelude.Interactive.{replWith_3}" "idr_Prelude.Interactive.{replWith_3}0" =
  (CGrString "idr_Prelude.Interactive.{replWith_3}0.32.33.arity.1") <- fetch "idr_Prelude.Interactive.{replWith_3}0"
  idris_write_str2.32.arity.1.1 <- pure "idr_Prelude.Interactive.{replWith_3}0.32.33.arity.1"
  (CGrString idris_write_str2_0.1) <- pure (CGrString idris_write_str2.32.arity.1.1)
  _prim_string_print $ idris_write_str2_0.1
  "idr_Prelude.Interactive.{replWith_3}2_val" <- pure (CUnit)
  "idr_Prelude.Interactive.{replWith_3}2" <- store "idr_Prelude.Interactive.{replWith_3}2_val"
  pure (Cidr_MkUnit)

"idr_Prelude.Interactive.{replWith_4}" "idr_Prelude.Interactive.{replWith_4}0" "idr_Prelude.Interactive.{replWith_4}1" "idr_Prelude.Interactive.{replWith_4}2" =
  "idr_Prelude.Interactive.{replWith_4}4_val" <- pure (CErased)
  "idr_Prelude.Interactive.{replWith_4}4" <- store "idr_Prelude.Interactive.{replWith_4}4_val"
  pure (C"idr_{U_Prelude.Interactive.replWith_1}" "idr_Prelude.Interactive.{replWith_4}4" "idr_Prelude.Interactive.{replWith_4}0" "idr_Prelude.Interactive.{replWith_4}1" "idr_Prelude.Interactive.{replWith_4}2")

"idr_Prelude.Strings.{words_5}" "idr_Prelude.Strings.{words_5}0" =
  "idr_Prelude.Strings.{words_5}1_val" <- pure (CErased)
  "idr_Prelude.Strings.{words_5}1" <- store "idr_Prelude.Strings.{words_5}1_val"
  "idr_Prelude.Strings.{words_5}2_val" <- pure (CErased)
  "idr_Prelude.Strings.{words_5}2" <- store "idr_Prelude.Strings.{words_5}2_val"
  "idr_Prelude.Strings.{words_5}3_val" <- pure (C"idr_{U_prim__strCons_2}")
  "idr_Prelude.Strings.{words_5}3" <- store "idr_Prelude.Strings.{words_5}3_val"
  "idr_Prelude.Strings.{words_5}4_val" <- pure (CGrString #"")
  "idr_Prelude.Strings.{words_5}4" <- store "idr_Prelude.Strings.{words_5}4_val"
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Strings.{words_5}3" "idr_Prelude.Strings.{words_5}4" "idr_Prelude.Strings.{words_5}0"

"idr_Prelude.Strings.{words'_6}" "idr_Prelude.Strings.{words'_6}0" =
  "idr_Prelude.Strings.{words'_6}1_val" <- idr_Prelude.Chars.isSpace $ "idr_Prelude.Strings.{words'_6}0"
  "idr_Prelude.Strings.{words'_6}1" <- store "idr_Prelude.Strings.{words'_6}1_val"
  "idr_Prelude.Strings.{words'_6}1_val_225" <- fetch "idr_Prelude.Strings.{words'_6}1"
  case "idr_Prelude.Strings.{words'_6}1_val_225" of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.True)
    (Cidr_Prelude.Bool.True) ->
      pure (Cidr_Prelude.Bool.False)

"idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}" "idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}0" =
  (CGrString "idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}0.32.34.arity.1") <- fetch "idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}0"
  idris_write_str2.32.arity.1.2 <- pure "idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}0.32.34.arity.1"
  (CGrString idris_write_str2_0.2) <- pure (CGrString idris_write_str2.32.arity.1.2)
  _prim_string_print $ idris_write_str2_0.2
  "idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}2_val" <- pure (CUnit)
  "idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}2" <- store "idr_Prelude.Interactive.{replWith_____Prelude__Interactive__idr_167_22_167_29_case_lam_7}2_val"
  pure (Cidr_MkUnit)

"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00" =
  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val" <- pure (Cidr_Prelude.Bool.True)
  case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val" of
    (Cidr_Prelude.Bool.True) ->
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226" <- fetch "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00"
      case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226" of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Basics.No)
        (Cidr_Prelude.Bool.True) ->
          pure (Cidr_Prelude.Basics.Yes)

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06") ->
      "idr_{APPLY_0}0.9" <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02"
      "idr_{APPLY_0}1.9" <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05"
      "idr_{APPLY_0}0_val.9" <- fetch "idr_{APPLY_0}0.9"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" <- case "idr_{APPLY_0}0_val.9" of
        (C"idr_{U_Main.{average_0}_2}") ->
          pure (C"idr_{U_Main.{average_0}_1}" "idr_{APPLY_0}1.9")
        (C"idr_{U_prim__strCons_2}") ->
          pure (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}1.9")
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val_227" <- pure (CErased)
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val_227"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:09_val" <- pure (CErased)
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:09" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:09_val"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val" <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_228" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
      "idr_{APPLY_0}0.10" <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07"
      "idr_{APPLY_0}1.10" <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_228"
      "idr_{APPLY_0}0_val.10" <- fetch "idr_{APPLY_0}0.10"
      case "idr_{APPLY_0}0_val.10" of
        (C"idr_{U_Main.{average_0}_1}" "idr_{APPLY_0}2.10") ->
          "idr_Main.{average_0}" $ "idr_{APPLY_0}2.10" "idr_{APPLY_0}1.10"
        (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_210.10") ->
          idr_prim__strCons $ "idr_{APPLY_0}2_210.10" "idr_{APPLY_0}1.10"
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03"

"idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03" =
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"
  case "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05") ->
      "idr_{APPLY_0}0.11" <- pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02"
      "idr_{APPLY_0}1.11" <- pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
      "idr_{APPLY_0}0_val.11" <- fetch "idr_{APPLY_0}0.11"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val" <- case "idr_{APPLY_0}0_val.11" of
        (C"idr_{U_Main.{average_1}_1}") ->
          do
            unboxed.CGrInt.1 <- "idr_Main.{average_1}.unboxed" $ "idr_{APPLY_0}1.11"
            pure (CGrInt unboxed.CGrInt.1)
        (C"idr_{U_Prelude.Strings.{words_5}_1}") ->
          "idr_Prelude.Strings.{words_5}" $ "idr_{APPLY_0}1.11"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val_229" <- pure (CErased)
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val_229"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:08_val" <- pure (CErased)
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:08" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:08_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val" <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_230" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val"
      pure (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_230")
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"

"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01" =
  (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.35.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01"
  unboxed.CGrInt.25 <- idris_int_eq.unboxed $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.35.arity.1"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val" <- pure (CGrInt unboxed.CGrInt.25)
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val_231" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02"
  case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val_231" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0" of
        0 ->
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.32.36.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00"
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.36.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01"
          unboxed.CGrInt.26 <- idris_int_lt.unboxed $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.32.36.arity.1" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.36.arity.1"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val" <- pure (CGrInt unboxed.CGrInt.26)
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val_232" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03"
          case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val_232" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_233") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_233" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.GT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.LT)
        #default ->
          pure (Cidr_Prelude.Interfaces.EQ)

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_364_val_234 <- pure (CErased)
      idr__Prelude.Strings.unpack_with_364 <- store idr__Prelude.Strings.unpack_with_364_val_234
      idr__Prelude.Strings.unpack_with_365_val_238 <- pure (CGrString #"")
      idr__Prelude.Strings.unpack_with_365 <- store idr__Prelude.Strings.unpack_with_365_val_238
      (CGrString idr__Prelude.Strings.unpack_with_365.32.37.arity.1) <- fetch idr__Prelude.Strings.unpack_with_365
      unboxed.CGrInt.27 <- idris_str_eq.unboxed $ idr__Prelude.Strings.unpack_with_363 idr__Prelude.Strings.unpack_with_365.32.37.arity.1
      idr__Prelude.Strings.unpack_with_365_val_237 <- pure (CGrInt unboxed.CGrInt.27)
      idr__Prelude.Strings.unpack_with_365_239 <- store idr__Prelude.Strings.unpack_with_365_val_237
      idr__Prelude.Strings.unpack_with_365_val_240 <- fetch idr__Prelude.Strings.unpack_with_365_239
      idr__Prelude.Strings.unpack_with_365_val_236 <- case idr__Prelude.Strings.unpack_with_365_val_240 of
        (CGrInt idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0) ->
          case idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
      idr__Prelude.Strings.unpack_with_365_241 <- store idr__Prelude.Strings.unpack_with_365_val_236
      idr__Prelude.Strings.unpack_with_366_val <- pure (Cidr_Prelude.Bool.True)
      idr__Prelude.Strings.unpack_with_366 <- store idr__Prelude.Strings.unpack_with_366_val
      (Cidr_Prelude.Bool.True) <- fetch idr__Prelude.Strings.unpack_with_366
      idr__Prelude.Strings.unpack_with_365_val_235 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr__Prelude.Strings.unpack_with_365_241
      idr__Prelude.Strings.unpack_with_365_242 <- store idr__Prelude.Strings.unpack_with_365_val_235
      idr__Prelude.Strings.unpack_with_365_val_243 <- fetch idr__Prelude.Strings.unpack_with_365_242
      idr__Prelude.Strings.unpack_with_365_val <- case idr__Prelude.Strings.unpack_with_365_val_243 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Strings.StrNil)
        (Cidr_Prelude.Basics.Yes) ->
          unboxed.CGrInt.28 <- idris_str_head.unboxed $ idr__Prelude.Strings.unpack_with_363
          idr__Prelude.Strings.unpack_with_366_val_244 <- pure (CGrInt unboxed.CGrInt.28)
          idr__Prelude.Strings.unpack_with_366_245 <- store idr__Prelude.Strings.unpack_with_366_val_244
          unboxed.CGrString.13 <- idris_str_tail.unboxed $ idr__Prelude.Strings.unpack_with_363
          idr__Prelude.Strings.unpack_with_367_val <- pure (CGrString unboxed.CGrString.13)
          idr__Prelude.Strings.unpack_with_367 <- store idr__Prelude.Strings.unpack_with_367_val
          pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_245 idr__Prelude.Strings.unpack_with_367)
      idr__Prelude.Strings.unpack_with_365_246 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 $ idr__Prelude.Strings.unpack_with_365_246
      idr__Prelude.Strings.unpack_with_364_247 <- store idr__Prelude.Strings.unpack_with_364_val
      pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_247)
    (Cidr_Prelude.Strings.StrNil) ->
      pure (Cidr_Prelude.List.Nil)
