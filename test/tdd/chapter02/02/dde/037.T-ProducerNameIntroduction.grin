primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  v.0 <- do
    v.1 <- pure (CErased)
    pure v.1
  v.2 <- do
    v.66 <- pure (CGrString #"Enter a string: ")
    pure v.66
  idr_Main.main2.0 <- store v.2
  v.3 <- do
    v.72 <- pure (C"idr_{U_Main.{main_2}_2}")
    pure v.72
  idr_Main.main3.0 <- store v.3
  v.4 <- do
    v.142 <- pure (C"idr_{U_Prelude.Interactive.replWith_1}.0" idr_Main.main2.0 idr_Main.main3.0)
    pure v.142
  "idr_{runMain_0}0.0" <- store v.4
  "idr_{runMain_0}1.0" <- store v.0
  "idr_{APPLY_0}0_val.8.0" <- fetch "idr_{runMain_0}0.0"
  "idr_{runMain_0}0_val.0" <- case "idr_{APPLY_0}0_val.8.0" of
    (C"idr_{U_Prelude.Interactive.replWith_1}.0" "idr_{APPLY_0}4.8.0" "idr_{APPLY_0}5.8.0") ->
      "idr_{APPLY_0}3.8.0" <- do
        v.143 <- pure (#undefined :: #ptr)
        pure v.143
      idr_Prelude.Interactive.replWith $ "idr_{APPLY_0}3.8.0" "idr_{APPLY_0}4.8.0" "idr_{APPLY_0}5.8.0" "idr_{runMain_0}1.0"
  pure ()

idr_Prelude.List.dropWhile idr_Prelude.List.dropWhile1 idr_Prelude.List.dropWhile2 =
  idr_Prelude.List.dropWhile2_val <- fetch idr_Prelude.List.dropWhile2
  case idr_Prelude.List.dropWhile2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4) ->
      "idr_{APPLY_0}0_val.0" <- fetch idr_Prelude.List.dropWhile1
      idr_Prelude.List.dropWhile5_val <- case "idr_{APPLY_0}0_val.0" of
        (C"idr_{U_Prelude.Chars.isSpace_1}") ->
          p.0 <- fetch idr_Prelude.List.dropWhile3
          (CGrInt "idr_{APPLY_0}1.0.48.0.arity.1") <- pure p.0
          idr_Prelude.Chars.isSpace1.32.11.arity.1.0 <- pure 32
          idris_int_eq2.0.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace1.32.11.arity.1.0
          ccp.0.0.0 <- case idris_int_eq2.0.0 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.5 <- do
            v.144 <- pure (CGrInt ccp.0.0.0)
            pure v.144
          case v.5 of
            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0.0) ->
              case idr_Prelude.Chars.isSpace_cpat_LInt64_0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace2.32.12.arity.1.0 <- pure 9
                  idris_int_eq2.1.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace2.32.12.arity.1.0
                  ccp.0.1.0 <- case idris_int_eq2.1.0 of
                    #False ->
                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                    #True ->
                      pure 1
                  v.6 <- do
                    v.145 <- pure (CGrInt ccp.0.1.0)
                    pure v.145
                  case v.6 of
                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_58.0) ->
                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_58.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace3.32.13.arity.1.0 <- pure 13
                          idris_int_eq2.2.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace3.32.13.arity.1.0
                          ccp.0.2.0 <- case idris_int_eq2.2.0 of
                            #False ->
                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                            #True ->
                              pure 1
                          v.7 <- do
                            v.146 <- pure (CGrInt ccp.0.2.0)
                            pure v.146
                          case v.7 of
                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_62.0) ->
                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_62.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.32.14.arity.1.0 <- pure 10
                                  idris_int_eq2.3.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace4.32.14.arity.1.0
                                  ccp.0.3.0 <- case idris_int_eq2.3.0 of
                                    #False ->
                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                    #True ->
                                      pure 1
                                  v.8 <- do
                                    v.147 <- pure (CGrInt ccp.0.3.0)
                                    pure v.147
                                  case v.8 of
                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_66.0) ->
                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_66.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace5.32.15.arity.1.0 <- pure 12
                                          idris_int_eq2.4.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace5.32.15.arity.1.0
                                          ccp.0.4.0 <- case idris_int_eq2.4.0 of
                                            #False ->
                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                            #True ->
                                              pure 1
                                          v.9 <- do
                                            v.148 <- pure (CGrInt ccp.0.4.0)
                                            pure v.148
                                          case v.9 of
                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_70.0) ->
                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_70.0 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace6.32.16.arity.1.0 <- pure 11
                                                  idris_int_eq2.5.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace6.32.16.arity.1.0
                                                  ccp.0.5.0 <- case idris_int_eq2.5.0 of
                                                    #False ->
                                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                                    #True ->
                                                      pure 1
                                                  v.10 <- do
                                                    v.149 <- pure (CGrInt ccp.0.5.0)
                                                    pure v.149
                                                  case v.10 of
                                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_74.0) ->
                                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_74.0 of
                                                        0 ->
                                                          idr_Prelude.Chars.isSpace7.32.17.arity.1.0 <- pure 160
                                                          idris_int_eq2.6.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace7.32.17.arity.1.0
                                                          ccp.0.6.0 <- case idris_int_eq2.6.0 of
                                                            #False ->
                                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                                            #True ->
                                                              pure 1
                                                          v.11 <- do
                                                            v.150 <- pure (CGrInt ccp.0.6.0)
                                                            pure v.150
                                                          case v.11 of
                                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_78.0) ->
                                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_78.0 of
                                                                0 ->
                                                                  v.12 <- do
                                                                    v.151 <- pure (Cidr_Prelude.Bool.False)
                                                                    pure v.151
                                                                  pure v.12
                                                                #default ->
                                                                  v.13 <- do
                                                                    v.152 <- pure (Cidr_Prelude.Bool.True)
                                                                    pure v.152
                                                                  pure v.13
                                                        #default ->
                                                          v.14 <- do
                                                            v.153 <- pure (Cidr_Prelude.Bool.True)
                                                            pure v.153
                                                          pure v.14
                                                #default ->
                                                  v.15 <- do
                                                    v.154 <- pure (Cidr_Prelude.Bool.True)
                                                    pure v.154
                                                  pure v.15
                                        #default ->
                                          v.16 <- do
                                            v.155 <- pure (Cidr_Prelude.Bool.True)
                                            pure v.155
                                          pure v.16
                                #default ->
                                  v.17 <- do
                                    v.156 <- pure (Cidr_Prelude.Bool.True)
                                    pure v.156
                                  pure v.17
                        #default ->
                          v.18 <- do
                            v.157 <- pure (Cidr_Prelude.Bool.True)
                            pure v.157
                          pure v.18
                #default ->
                  v.19 <- do
                    v.158 <- pure (Cidr_Prelude.Bool.True)
                    pure v.158
                  pure v.19
      case idr_Prelude.List.dropWhile5_val of
        (Cidr_Prelude.Bool.False) ->
          v.20 <- do
            v.159 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4)
            pure v.159
          pure v.20
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.dropWhile $ idr_Prelude.List.dropWhile1 idr_Prelude.List.dropWhile4
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.List.dropWhile2_val

idr_Prelude.List.length.unboxed idr_Prelude.List.length1 =
  idr_Prelude.List.length1_val <- fetch idr_Prelude.List.length1
  case idr_Prelude.List.length1_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.length2 idr_Prelude.List.length3) ->
      unboxed.CGrInt.14 <- idr_Prelude.List.length.unboxed $ idr_Prelude.List.length3
      v.21 <- do
        v.160 <- pure (CGrInt unboxed.CGrInt.14)
        pure v.160
      idr_Prelude.List.length4_80 <- store v.21
      v.22 <- do
        v.161 <- pure (CGrInt 1)
        pure v.161
      idr_Prelude.List.length5 <- store v.22
      p.2 <- fetch idr_Prelude.List.length4_80
      (CGrInt idris_int_add0_1.0) <- pure p.2
      p.1 <- fetch idr_Prelude.List.length5
      (CGrInt idris_int_add1_1.0) <- pure p.1
      idris_int_add2.0 <- _prim_int_add $ idris_int_add0_1.0 idris_int_add1_1.0
      pure idris_int_add2.0
    (Cidr_Prelude.List.Nil) ->
      pure 0

idr_Prelude.Interactive.replWith idr_Prelude.Interactive.replWith1 idr_Prelude.Interactive.replWith2 idr_Prelude.Interactive.replWith3 idr_Prelude.Interactive.replWith4 =
  unboxed.CGrInt.19 <- pure 0
  v.23 <- do
    v.162 <- pure (CGrInt unboxed.CGrInt.19)
    pure v.162
  idr_Prelude.Interactive.replWith5 <- store v.23
  p.19 <- fetch idr_Prelude.Interactive.replWith5
  (CGrInt idr_Prelude.File.fEOF0.0.40.7.arity.1) <- pure p.19
  idris_ffi_file_eof2.0 <- _prim_ffi_file_eof $ idr_Prelude.File.fEOF0.0.40.7.arity.1
  v.24 <- do
    v.163 <- pure (CGrInt 0)
    pure v.163
  v.25 <- do
    v.164 <- pure (CGrInt.0)
    pure v.164
  idr_Prelude.Interactive.replWith5_val <- case v.25 of
    (CGrInt.0) ->
      idr_Prelude.File.fEOF_cpat_LInt64_0.0 <- do
        v.165 <- pure (#undefined :: T_Int64)
        pure v.165
      case idr_Prelude.File.fEOF_cpat_LInt64_0.0 of
        0 ->
          v.26 <- do
            v.166 <- pure (Cidr_Prelude.Bool.True)
            pure v.166
          pure v.26
        #default ->
          v.27 <- do
            v.167 <- pure (Cidr_Prelude.Bool.False)
            pure v.167
          pure v.27
  case idr_Prelude.Interactive.replWith5_val of
    (Cidr_Prelude.Bool.False) ->
      p.18 <- fetch idr_Prelude.Interactive.replWith2
      (CGrString idr_Prelude.Interactive.replWith2.32.25.arity.1) <- pure p.18
      _prim_string_print $ idr_Prelude.Interactive.replWith2.32.25.arity.1
      idris_read_str1.0 <- _prim_read_string $
      idris_str_rev2.0 <- _prim_string_reverse $ idris_read_str1.0
      v.28 <- do
        v.168 <- pure (CGrString #"")
        pure v.168
      idr_Prelude.Interactive.getLine'4.32.4.arity.1.0 <- pure #""
      idris_str_eq3.0 <- _prim_string_eq $ idris_str_rev2.0 idr_Prelude.Interactive.getLine'4.32.4.arity.1.0
      ccp.2.0 <- case idris_str_eq3.0 of
        #False ->
          pure unboxed.CGrInt.19
        #True ->
          pure 1
      v.29 <- do
        v.169 <- pure (CGrInt ccp.2.0)
        pure v.169
      idr_Prelude.Interactive.getLine'3_val_20.0 <- case v.29 of
        (CGrInt idr_Prelude.Interactive.getLine'_cpat_LInt64_0.0) ->
          case idr_Prelude.Interactive.getLine'_cpat_LInt64_0.0 of
            0 ->
              v.30 <- do
                v.170 <- pure (Cidr_Prelude.Bool.True)
                pure v.170
              pure v.30
            #default ->
              v.31 <- do
                v.171 <- pure (Cidr_Prelude.Bool.False)
                pure v.171
              pure v.31
      idr_Prelude.Interactive.getLine'3_25.0 <- store idr_Prelude.Interactive.getLine'3_val_20.0
      v.32 <- do
        v.172 <- pure (Cidr_Prelude.Bool.True)
        pure v.172
      idr_Prelude.Interactive.getLine'3_val_19.0 <- case v.32 of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.0" <- fetch idr_Prelude.Interactive.getLine'3_25.0
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.0" of
            (Cidr_Prelude.Bool.False) ->
              v.33 <- do
                v.173 <- pure (Cidr_Prelude.Basics.No)
                pure v.173
              pure v.33
            (Cidr_Prelude.Bool.True) ->
              v.34 <- do
                v.174 <- pure (Cidr_Prelude.Basics.Yes)
                pure v.174
              pure v.34
      idr_Prelude.Interactive.getLine'3_val.0 <- case idr_Prelude.Interactive.getLine'3_val_19.0 of
        (Cidr_Prelude.Basics.No) ->
          pure v.28
        (Cidr_Prelude.Basics.Yes) ->
          idris_str_rev2.1 <- _prim_string_reverse $ idris_read_str1.0
          idris_str_head2.0 <- _prim_string_head $ idris_str_rev2.1
          v.35 <- do
            v.175 <- pure (CGrInt idris_str_head2.0)
            pure v.175
          case v.35 of
            (CGrInt idr_Prelude.Interactive.getLine'_cpat_LInt64_10.0) ->
              case idr_Prelude.Interactive.getLine'_cpat_LInt64_10.0 of
                10 ->
                  idris_str_rev2.2 <- _prim_string_reverse $ idris_read_str1.0
                  idris_str_tail2.0 <- _prim_string_tail $ idris_str_rev2.2
                  v.36 <- do
                    v.176 <- pure (CGrString idris_str_tail2.0)
                    pure v.176
                  pure v.36
                #default ->
                  idris_str_rev2.3 <- _prim_string_reverse $ idris_read_str1.0
                  idris_str_head2.1 <- _prim_string_head $ idris_str_rev2.3
                  v.37 <- do
                    v.177 <- pure (CGrInt idris_str_head2.1)
                    pure v.177
                  idr_Prelude.Interactive.getLine'5_38.0 <- store v.37
                  idris_str_rev2.4 <- _prim_string_reverse $ idris_read_str1.0
                  idris_str_tail2.1 <- _prim_string_tail $ idris_str_rev2.4
                  v.38 <- do
                    v.178 <- pure (CGrString idris_str_tail2.1)
                    pure v.178
                  idr_Prelude.Interactive.getLine'6_40.0 <- store v.38
                  p.4 <- fetch idr_Prelude.Interactive.getLine'5_38.0
                  (CGrInt idris_str_cons1_0.0) <- pure p.4
                  p.3 <- fetch idr_Prelude.Interactive.getLine'6_40.0
                  (CGrString idris_str_cons2_0.0) <- pure p.3
                  idris_str_cons3.0 <- _prim_string_cons $ idris_str_cons1_0.0 idris_str_cons2_0.0
                  v.39 <- do
                    v.179 <- pure (CGrString idris_str_cons3.0)
                    pure v.179
                  pure v.39
      (CGrString idr_Prelude.Interactive.getLine'3_49.32.10.arity.1.0) <- pure idr_Prelude.Interactive.getLine'3_val.0
      idris_str_rev2.5 <- _prim_string_reverse $ idr_Prelude.Interactive.getLine'3_49.32.10.arity.1.0
      v.40 <- do
        v.180 <- pure (CGrString idris_str_rev2.5)
        pure v.180
      idr_Prelude.Interactive.replWith7_127 <- store v.40
      "idr_{APPLY_0}0_val.5" <- fetch idr_Prelude.Interactive.replWith3
      idr_Prelude.Interactive.replWith8_val_128 <- case "idr_{APPLY_0}0_val.5" of
        (C"idr_{U_Main.{main_2}_2}") ->
          v.41 <- do
            v.181 <- pure (C"idr_{U_Main.{main_2}_1}.0")
            pure v.181
          pure v.41
      idr_Prelude.Interactive.replWith8 <- store idr_Prelude.Interactive.replWith8_val_128
      "idr_{APPLY_0}0_val.6" <- fetch idr_Prelude.Interactive.replWith8
      idr_Prelude.Interactive.replWith8_val <- case "idr_{APPLY_0}0_val.6" of
        (C"idr_{U_Main.{main_2}_1}.0") ->
          v.42 <- do
            v.182 <- pure (C"idr_{U_prim__floatToStr_1}")
            pure v.182
          "idr_Main.{main_2}4.0" <- store v.42
          v.43 <- do
            v.183 <- pure (C"idr_{U_Main.{average_0}_2}")
            pure v.183
          idr_Main.average3.0.0 <- store v.43
          idr_Main.average4.0.0 <- store v.24
          v.44 <- do
            v.184 <- pure (C"idr_{U_Main.{average_1}_1}")
            pure v.184
          idr_Main.average7.0.0 <- store v.44
          p.12 <- fetch idr_Prelude.Interactive.replWith7_127
          (CGrString idr_Main.average0.0.0.48.1.arity.1) <- pure p.12
          idr_Main.average8_val.0.0 <- idr_Prelude.Strings.words $ idr_Main.average0.0.0.48.1.arity.1
          idr_Main.average8.0.0 <- store idr_Main.average8_val.0.0
          idr_Main.average5_val.0.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Main.average7.0.0 idr_Main.average8.0.0
          idr_Main.average5_4.0.0 <- store idr_Main.average5_val.0.0
          idr_Main.average1_val_1.0.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ idr_Main.average3.0.0 idr_Main.average4.0.0 idr_Main.average5_4.0.0
          idr_Main.average1_5.0.0 <- store idr_Main.average1_val_1.0.0
          p.11 <- fetch idr_Main.average1_5.0.0
          (CGrInt idris_int_float1_0.0) <- pure p.11
          idris_int_float2.0 <- _prim_int_float $ idris_int_float1_0.0
          idr_Main.average3_val_11.0.0 <- idr_Prelude.Strings.words $ idr_Main.average0.0.0.48.1.arity.1
          idr_Main.average3_12.0.0 <- store idr_Main.average3_val_11.0.0
          unboxed.CGrInt.1.0.0 <- idr_Prelude.List.length.unboxed $ idr_Main.average3_12.0.0
          v.45 <- do
            v.185 <- pure (CGrInt unboxed.CGrInt.1.0.0)
            pure v.185
          idr_Main.average2_13.0.0 <- store v.45
          p.10 <- fetch idr_Main.average2_13.0.0
          (CGrInt idris_int_float1_0.1) <- pure p.10
          idris_int_float2.1 <- _prim_int_float $ idris_int_float1_0.1
          idris_float_div2.0 <- _prim_float_div $ idris_int_float2.0 idris_int_float2.1
          v.46 <- do
            v.186 <- pure (CGrFloat idris_float_div2.0)
            pure v.186
          "idr_Main.{main_2}6.0" <- store v.46
          "idr_{APPLY_0}0_val.4.0.0" <- fetch "idr_Main.{main_2}4.0"
          idr_Prelude.Show.primNumShow4_val.0.0 <- case "idr_{APPLY_0}0_val.4.0.0" of
            (C"idr_{U_prim__floatToStr_1}") ->
              p.5 <- fetch "idr_Main.{main_2}6.0"
              (CGrFloat idris_float_str1_0.0.0) <- pure p.5
              idris_float_str2.0.0 <- _prim_float_string $ idris_float_str1_0.0.0
              v.47 <- do
                v.187 <- pure (CGrString idris_float_str2.0.0)
                pure v.187
              pure v.47
          v.48 <- do
            v.188 <- pure (Cidr_Prelude.Show.Open)
            pure v.188
          ccp.3.0.0 <- case v.48 of
            (Cidr_Prelude.Show.Open) ->
              pure unboxed.CGrInt.19
          idr_Prelude.Show.primNumShow6.0.40.23.arity.1.0 <- pure 5
          idris_int_eq2.8 <- _prim_int_eq $ ccp.3.0.0 idr_Prelude.Show.primNumShow6.0.40.23.arity.1.0
          ccp.0.8 <- case idris_int_eq2.8 of
            #False ->
              pure unboxed.CGrInt.19
            #True ->
              pure 1
          v.49 <- do
            v.189 <- pure (CGrInt ccp.0.8)
            pure v.189
          idr_Prelude.Show.primNumShow5_val_82.0.0 <- case v.49 of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0" of
                0 ->
                  idris_int_lt2.0 <- _prim_int_lt $ ccp.3.0.0 idr_Prelude.Show.primNumShow6.0.40.23.arity.1.0
                  ccp.1.0 <- case idris_int_lt2.0 of
                    #False ->
                      pure unboxed.CGrInt.19
                    #True ->
                      pure 1
                  v.50 <- do
                    v.190 <- pure (CGrInt ccp.1.0)
                    pure v.190
                  case v.50 of
                    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_233.0") ->
                      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_233.0" of
                        0 ->
                          v.51 <- do
                            v.191 <- pure (Cidr_Prelude.Interfaces.GT)
                            pure v.191
                          pure v.51
                        #default ->
                          v.52 <- do
                            v.192 <- pure (Cidr_Prelude.Interfaces.LT)
                            pure v.192
                          pure v.52
                #default ->
                  v.53 <- do
                    v.193 <- pure (Cidr_Prelude.Interfaces.EQ)
                    pure v.193
                  pure v.53
          idr_Prelude.Show.primNumShow5_val_81.0.0 <- case idr_Prelude.Show.primNumShow5_val_82.0.0 of
            (Cidr_Prelude.Interfaces.GT) ->
              pure v.32
            #default ->
              ccp.4.0.0 <- case v.48 of
                (Cidr_Prelude.Show.Open) ->
                  pure unboxed.CGrInt.19
              idr_Prelude.Show.primNumShow7.32.18.arity.1.0.0 <- pure 5
              idris_int_eq2.9 <- _prim_int_eq $ ccp.4.0.0 idr_Prelude.Show.primNumShow7.32.18.arity.1.0.0
              ccp.0.9 <- case idris_int_eq2.9 of
                #False ->
                  pure unboxed.CGrInt.19
                #True ->
                  pure 1
              v.54 <- do
                v.194 <- pure (CGrInt ccp.0.9)
                pure v.194
              case v.54 of
                (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0.0.0) ->
                  case idr_Prelude.Show.primNumShow_cpat_LInt64_0.0.0 of
                    0 ->
                      v.55 <- do
                        v.195 <- pure (Cidr_Prelude.Bool.False)
                        pure v.195
                      pure v.55
                    #default ->
                      pure v.32
          idr_Prelude.Show.primNumShow5_val.0.0 <- case idr_Prelude.Show.primNumShow5_val_81.0.0 of
            (Cidr_Prelude.Bool.False) ->
              v.56 <- do
                v.196 <- pure (Cidr_Prelude.Bool.False)
                pure v.196
              pure v.56
            (Cidr_Prelude.Bool.True) ->
              idr_Prelude.Show.primNumShow6_98.32.19.arity.1.0.0 <- pure #""
              (CGrString idr_Prelude.Show.primNumShow4.0.40.25.arity.1.0) <- pure idr_Prelude.Show.primNumShow4_val.0.0
              idris_str_eq3.1 <- _prim_string_eq $ idr_Prelude.Show.primNumShow4.0.40.25.arity.1.0 idr_Prelude.Show.primNumShow6_98.32.19.arity.1.0.0
              ccp.2.1 <- case idris_str_eq3.1 of
                #False ->
                  pure unboxed.CGrInt.19
                #True ->
                  pure 1
              v.57 <- do
                v.197 <- pure (CGrInt ccp.2.1)
                pure v.197
              idr_Prelude.Show.primNumShow6_val_95.0.0 <- case v.57 of
                (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_101.0.0) ->
                  case idr_Prelude.Show.primNumShow_cpat_LInt64_0_101.0.0 of
                    0 ->
                      pure v.32
                    #default ->
                      v.58 <- do
                        v.198 <- pure (Cidr_Prelude.Bool.False)
                        pure v.198
                      pure v.58
              idr_Prelude.Show.primNumShow6_102.0.0 <- store idr_Prelude.Show.primNumShow6_val_95.0.0
              idr_Prelude.Show.primNumShow6_val_94.0.0 <- case v.32 of
                (Cidr_Prelude.Bool.True) ->
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.1" <- fetch idr_Prelude.Show.primNumShow6_102.0.0
                  case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.1" of
                    (Cidr_Prelude.Bool.False) ->
                      v.59 <- do
                        v.199 <- pure (Cidr_Prelude.Basics.No)
                        pure v.199
                      pure v.59
                    (Cidr_Prelude.Bool.True) ->
                      v.60 <- do
                        v.200 <- pure (Cidr_Prelude.Basics.Yes)
                        pure v.200
                      pure v.60
              case idr_Prelude.Show.primNumShow6_val_94.0.0 of
                (Cidr_Prelude.Basics.No) ->
                  v.61 <- do
                    v.201 <- pure (Cidr_Prelude.Bool.False)
                    pure v.201
                  pure v.61
                (Cidr_Prelude.Basics.Yes) ->
                  (CGrString idr_Prelude.Show.primNumShow4.0.40.26.arity.1.0) <- pure idr_Prelude.Show.primNumShow4_val.0.0
                  idris_str_head2.2 <- _prim_string_head $ idr_Prelude.Show.primNumShow4.0.40.26.arity.1.0
                  idr_Prelude.Show.primNumShow8.32.21.arity.1.0.0 <- pure 45
                  idris_int_eq2.10 <- _prim_int_eq $ idris_str_head2.2 idr_Prelude.Show.primNumShow8.32.21.arity.1.0.0
                  ccp.0.10 <- case idris_int_eq2.10 of
                    #False ->
                      pure unboxed.CGrInt.19
                    #True ->
                      pure 1
                  v.62 <- do
                    v.202 <- pure (CGrInt ccp.0.10)
                    pure v.202
                  case v.62 of
                    (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_112.0.0) ->
                      case idr_Prelude.Show.primNumShow_cpat_LInt64_0_112.0.0 of
                        0 ->
                          v.63 <- do
                            v.203 <- pure (Cidr_Prelude.Bool.False)
                            pure v.203
                          pure v.63
                        #default ->
                          pure v.32
          "idr_Main.{main_2}3_val_215.0" <- case idr_Prelude.Show.primNumShow5_val.0.0 of
            (Cidr_Prelude.Bool.False) ->
              pure idr_Prelude.Show.primNumShow4_val.0.0
            (Cidr_Prelude.Bool.True) ->
              idr_Prelude.Show.primNumShow7_119.32.22.arity.1.0.0 <- pure #")"
              (CGrString idr_Prelude.Show.primNumShow4.0.40.28.arity.1.0) <- pure idr_Prelude.Show.primNumShow4_val.0.0
              idris_str_concat3.0 <- _prim_string_concat $ idr_Prelude.Show.primNumShow4.0.40.28.arity.1.0 idr_Prelude.Show.primNumShow7_119.32.22.arity.1.0.0
              idr_Prelude.Show.primNumShow6_116.0.40.29.arity.1.0 <- pure #"("
              idris_str_concat3.1 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_116.0.40.29.arity.1.0 idris_str_concat3.0
              v.64 <- do
                v.204 <- pure (CGrString idris_str_concat3.1)
                pure v.204
              pure v.64
          "idr_Main.{main_2}4_219.32.31.arity.1.0" <- pure #"\n"
          (CGrString "idr_Main.{main_2}3_217.40.30.arity.1.0") <- pure "idr_Main.{main_2}3_val_215.0"
          idris_str_concat3.2 <- _prim_string_concat $ "idr_Main.{main_2}3_217.40.30.arity.1.0" "idr_Main.{main_2}4_219.32.31.arity.1.0"
          "idr_Main.{main_2}2.40.31.arity.1.0" <- pure #"The average word length is: "
          idris_str_concat3.3 <- _prim_string_concat $ "idr_Main.{main_2}2.40.31.arity.1.0" idris_str_concat3.2
          v.65 <- do
            v.205 <- pure (CGrString idris_str_concat3.3)
            pure v.205
          "idr_Main.{main_2}2_221.0" <- store v.65
          v.67 <- do
            v.206 <- pure (Cidr_Builtins.MkPair.0 "idr_Main.{main_2}2_221.0")
            pure v.206
          "idr_Main.{main_2}2_224.0" <- store v.67
          v.68 <- do
            v.207 <- pure (Cidr_Prelude.Maybe.Just "idr_Main.{main_2}2_224.0")
            pure v.207
          pure v.68
      case idr_Prelude.Interactive.replWith8_val of
        (Cidr_Prelude.Maybe.Just idr_Prelude.Interactive.replWith9) ->
          idr_Prelude.Interactive.replWith9_val <- fetch idr_Prelude.Interactive.replWith9
          (Cidr_Builtins.MkPair.0 idr_Prelude.Interactive.replWith10) <- pure idr_Prelude.Interactive.replWith9_val
          v.69 <- do
            v.208 <- pure (C"idr_{U_Prelude.Interactive.{replWith_3}_1}" idr_Prelude.Interactive.replWith10)
            pure v.208
          idr_Prelude.Interactive.replWith15 <- store v.69
          v.70 <- do
            v.209 <- pure (C"idr_{U_Prelude.Interactive.{replWith_4}_1}.0" idr_Prelude.Interactive.replWith2 idr_Prelude.Interactive.replWith3)
            pure v.209
          idr_Prelude.Interactive.replWith16 <- store v.70
          "idr_{APPLY_0}0_val.1.0" <- fetch idr_Prelude.Interactive.replWith15
          idr_io_bind6_val_50.0 <- case "idr_{APPLY_0}0_val.1.0" of
            (C"idr_{U_Prelude.Interactive.{replWith_3}_1}" "idr_{APPLY_0}2_205.1.0") ->
              p.14 <- fetch "idr_{APPLY_0}2_205.1.0"
              (CGrString "idr_{APPLY_0}2_205.1.0.40.14.arity.1") <- pure p.14
              _prim_string_print $ "idr_{APPLY_0}2_205.1.0.40.14.arity.1"
              v.71 <- do
                v.210 <- pure (Cidr_MkUnit)
                pure v.210
              pure v.71
          "idr_{APPLY_0}0_val.2.0" <- fetch idr_Prelude.Interactive.replWith16
          idr_io_bind6_val.0 <- case "idr_{APPLY_0}0_val.2.0" of
            (C"idr_{U_Prelude.Interactive.{replWith_4}_1}.0" "idr_{APPLY_0}3_207.2.0" "idr_{APPLY_0}4_208.2.0") ->
              v.73 <- do
                v.211 <- pure (C"idr_{U_Prelude.Interactive.replWith_1}.0" "idr_{APPLY_0}3_207.2.0" "idr_{APPLY_0}4_208.2.0")
                pure v.211
              pure v.73
          idr_io_bind6_51.0 <- store idr_io_bind6_val.0
          "idr_{APPLY_0}0_val.3.0" <- fetch idr_io_bind6_51.0
          case "idr_{APPLY_0}0_val.3.0" of
            (C"idr_{U_Prelude.Interactive.replWith_1}.0" "idr_{APPLY_0}4.3.0" "idr_{APPLY_0}5.3.0") ->
              "idr_{APPLY_0}3.3.0" <- do
                v.212 <- pure (#undefined :: #ptr)
                pure v.212
              idr_Prelude.Interactive.replWith $ "idr_{APPLY_0}3.3.0" "idr_{APPLY_0}4.3.0" "idr_{APPLY_0}5.3.0" idr_Prelude.Interactive.replWith4
    (Cidr_Prelude.Bool.True) ->
      v.74 <- do
        v.213 <- pure (Cidr_MkUnit)
        pure v.213
      pure v.74

idr_Prelude.List.span idr_Prelude.List.span1 idr_Prelude.List.span2 =
  idr_Prelude.List.span2_val <- fetch idr_Prelude.List.span2
  case idr_Prelude.List.span2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4) ->
      "idr_{APPLY_0}0_val.7" <- fetch idr_Prelude.List.span1
      idr_Prelude.List.span5_val <- case "idr_{APPLY_0}0_val.7" of
        (C"idr_{U_Prelude.Strings.{words'_6}_1}") ->
          p.20 <- fetch idr_Prelude.List.span3
          (CGrInt "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1") <- pure p.20
          idr_Prelude.Chars.isSpace1.32.11.arity.1.1 <- pure 32
          idris_int_eq2.0.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace1.32.11.arity.1.1
          ccp.0.0.1 <- case idris_int_eq2.0.1 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.75 <- do
            v.214 <- pure (CGrInt ccp.0.0.1)
            pure v.214
          "idr_Prelude.Strings.{words'_6}1_val.0" <- case v.75 of
            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0.1) ->
              case idr_Prelude.Chars.isSpace_cpat_LInt64_0.1 of
                0 ->
                  idr_Prelude.Chars.isSpace2.32.12.arity.1.1 <- pure 9
                  idris_int_eq2.1.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace2.32.12.arity.1.1
                  ccp.0.1.1 <- case idris_int_eq2.1.1 of
                    #False ->
                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                    #True ->
                      pure 1
                  v.76 <- do
                    v.215 <- pure (CGrInt ccp.0.1.1)
                    pure v.215
                  case v.76 of
                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_58.1) ->
                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_58.1 of
                        0 ->
                          idr_Prelude.Chars.isSpace3.32.13.arity.1.1 <- pure 13
                          idris_int_eq2.2.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace3.32.13.arity.1.1
                          ccp.0.2.1 <- case idris_int_eq2.2.1 of
                            #False ->
                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                            #True ->
                              pure 1
                          v.77 <- do
                            v.216 <- pure (CGrInt ccp.0.2.1)
                            pure v.216
                          case v.77 of
                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_62.1) ->
                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_62.1 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.32.14.arity.1.1 <- pure 10
                                  idris_int_eq2.3.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace4.32.14.arity.1.1
                                  ccp.0.3.1 <- case idris_int_eq2.3.1 of
                                    #False ->
                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                    #True ->
                                      pure 1
                                  v.78 <- do
                                    v.217 <- pure (CGrInt ccp.0.3.1)
                                    pure v.217
                                  case v.78 of
                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_66.1) ->
                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_66.1 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace5.32.15.arity.1.1 <- pure 12
                                          idris_int_eq2.4.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace5.32.15.arity.1.1
                                          ccp.0.4.1 <- case idris_int_eq2.4.1 of
                                            #False ->
                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                            #True ->
                                              pure 1
                                          v.79 <- do
                                            v.218 <- pure (CGrInt ccp.0.4.1)
                                            pure v.218
                                          case v.79 of
                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_70.1) ->
                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_70.1 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace6.32.16.arity.1.1 <- pure 11
                                                  idris_int_eq2.5.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace6.32.16.arity.1.1
                                                  ccp.0.5.1 <- case idris_int_eq2.5.1 of
                                                    #False ->
                                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                                    #True ->
                                                      pure 1
                                                  v.80 <- do
                                                    v.219 <- pure (CGrInt ccp.0.5.1)
                                                    pure v.219
                                                  case v.80 of
                                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_74.1) ->
                                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_74.1 of
                                                        0 ->
                                                          idr_Prelude.Chars.isSpace7.32.17.arity.1.1 <- pure 160
                                                          idris_int_eq2.6.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace7.32.17.arity.1.1
                                                          ccp.0.6.1 <- case idris_int_eq2.6.1 of
                                                            #False ->
                                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                                            #True ->
                                                              pure 1
                                                          v.81 <- do
                                                            v.220 <- pure (CGrInt ccp.0.6.1)
                                                            pure v.220
                                                          case v.81 of
                                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_78.1) ->
                                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_78.1 of
                                                                0 ->
                                                                  v.82 <- do
                                                                    v.221 <- pure (Cidr_Prelude.Bool.False)
                                                                    pure v.221
                                                                  pure v.82
                                                                #default ->
                                                                  v.83 <- do
                                                                    v.222 <- pure (Cidr_Prelude.Bool.True)
                                                                    pure v.222
                                                                  pure v.83
                                                        #default ->
                                                          v.84 <- do
                                                            v.223 <- pure (Cidr_Prelude.Bool.True)
                                                            pure v.223
                                                          pure v.84
                                                #default ->
                                                  v.85 <- do
                                                    v.224 <- pure (Cidr_Prelude.Bool.True)
                                                    pure v.224
                                                  pure v.85
                                        #default ->
                                          v.86 <- do
                                            v.225 <- pure (Cidr_Prelude.Bool.True)
                                            pure v.225
                                          pure v.86
                                #default ->
                                  v.87 <- do
                                    v.226 <- pure (Cidr_Prelude.Bool.True)
                                    pure v.226
                                  pure v.87
                        #default ->
                          v.88 <- do
                            v.227 <- pure (Cidr_Prelude.Bool.True)
                            pure v.227
                          pure v.88
                #default ->
                  v.89 <- do
                    v.228 <- pure (Cidr_Prelude.Bool.True)
                    pure v.228
                  pure v.89
          case "idr_Prelude.Strings.{words'_6}1_val.0" of
            (Cidr_Prelude.Bool.False) ->
              v.90 <- do
                v.229 <- pure (Cidr_Prelude.Bool.True)
                pure v.229
              pure v.90
            (Cidr_Prelude.Bool.True) ->
              v.91 <- do
                v.230 <- pure (Cidr_Prelude.Bool.False)
                pure v.230
              pure v.91
      case idr_Prelude.List.span5_val of
        (Cidr_Prelude.Bool.False) ->
          v.92 <- do
            v.231 <- pure (Cidr_Prelude.List.Nil)
            pure v.231
          idr_Prelude.List.span6 <- store v.92
          v.93 <- do
            v.232 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4)
            pure v.232
          idr_Prelude.List.span7 <- store v.93
          v.94 <- do
            v.233 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span6 idr_Prelude.List.span7)
            pure v.233
          pure v.94
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.span6_val_134 <- idr_Prelude.List.span $ idr_Prelude.List.span1 idr_Prelude.List.span4
          (Cidr_Builtins.MkPair idr_Prelude.List.span7_139 idr_Prelude.List.span8) <- pure idr_Prelude.List.span6_val_134
          v.95 <- do
            v.234 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span7_139)
            pure v.234
          idr_Prelude.List.span9 <- store v.95
          v.96 <- do
            v.235 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span9 idr_Prelude.List.span8)
            pure v.235
          pure v.96
    (Cidr_Prelude.List.Nil) ->
      v.97 <- do
        v.236 <- pure (Cidr_Prelude.List.Nil)
        pure v.236
      idr_Prelude.List.span3_140 <- store v.97
      idr_Prelude.List.span4_141 <- store v.97
      v.98 <- do
        v.237 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span3_140 idr_Prelude.List.span4_141)
        pure v.237
      pure v.98

idr_Prelude.Strings.words idr_Prelude.Strings.words0.48.arity.1 =
  v.99 <- do
    v.238 <- pure (C"idr_{U_Prelude.Strings.{words_5}_1}")
    pure v.238
  idr_Prelude.Strings.words3 <- store v.99
  idr_Prelude.Strings.words4.32.26.arity.1 <- pure #""
  idris_str_eq3.2 <- _prim_string_eq $ idr_Prelude.Strings.words0.48.arity.1 idr_Prelude.Strings.words4.32.26.arity.1
  ccp.2.2 <- case idris_str_eq3.2 of
    #False ->
      pure 0
    #True ->
      pure 1
  v.100 <- do
    v.239 <- pure (CGrInt ccp.2.2)
    pure v.239
  idr_Prelude.Strings.words4_val_156 <- case v.100 of
    (CGrInt idr_Prelude.Strings.words_cpat_LInt64_0) ->
      case idr_Prelude.Strings.words_cpat_LInt64_0 of
        0 ->
          v.101 <- do
            v.240 <- pure (Cidr_Prelude.Bool.True)
            pure v.240
          pure v.101
        #default ->
          v.102 <- do
            v.241 <- pure (Cidr_Prelude.Bool.False)
            pure v.241
          pure v.102
  idr_Prelude.Strings.words4_161 <- store idr_Prelude.Strings.words4_val_156
  v.103 <- do
    v.242 <- pure (Cidr_Prelude.Bool.True)
    pure v.242
  idr_Prelude.Strings.words4_val_155 <- case v.103 of
    (Cidr_Prelude.Bool.True) ->
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.2" <- fetch idr_Prelude.Strings.words4_161
      case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.2" of
        (Cidr_Prelude.Bool.False) ->
          v.104 <- do
            v.243 <- pure (Cidr_Prelude.Basics.No)
            pure v.243
          pure v.104
        (Cidr_Prelude.Bool.True) ->
          v.105 <- do
            v.244 <- pure (Cidr_Prelude.Basics.Yes)
            pure v.244
          pure v.105
  idr_Prelude.Strings.words4_val_154 <- case idr_Prelude.Strings.words4_val_155 of
    (Cidr_Prelude.Basics.No) ->
      v.106 <- do
        v.245 <- pure (Cidr_Prelude.List.Nil)
        pure v.245
      pure v.106
    (Cidr_Prelude.Basics.Yes) ->
      idris_str_head2.3 <- _prim_string_head $ idr_Prelude.Strings.words0.48.arity.1
      v.107 <- do
        v.246 <- pure (CGrInt idris_str_head2.3)
        pure v.246
      idr_Prelude.Strings.words5_165 <- store v.107
      idris_str_tail2.2 <- _prim_string_tail $ idr_Prelude.Strings.words0.48.arity.1
      idr_Prelude.Strings.words8.32.28.arity.1 <- pure #""
      idris_str_eq3.3 <- _prim_string_eq $ idris_str_tail2.2 idr_Prelude.Strings.words8.32.28.arity.1
      ccp.2.3 <- case idris_str_eq3.3 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.108 <- do
        v.247 <- pure (CGrInt ccp.2.3)
        pure v.247
      idr_Prelude.Strings.words7_val_168 <- case v.108 of
        (CGrInt idr_Prelude.Strings.words_cpat_LInt64_0_173) ->
          case idr_Prelude.Strings.words_cpat_LInt64_0_173 of
            0 ->
              pure v.103
            #default ->
              v.109 <- do
                v.248 <- pure (Cidr_Prelude.Bool.False)
                pure v.248
              pure v.109
      idr_Prelude.Strings.words7_174 <- store idr_Prelude.Strings.words7_val_168
      idr_Prelude.Strings.words7_val_167 <- case v.103 of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.3" <- fetch idr_Prelude.Strings.words7_174
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.3" of
            (Cidr_Prelude.Bool.False) ->
              v.110 <- do
                v.249 <- pure (Cidr_Prelude.Basics.No)
                pure v.249
              pure v.110
            (Cidr_Prelude.Bool.True) ->
              v.111 <- do
                v.250 <- pure (Cidr_Prelude.Basics.Yes)
                pure v.250
              pure v.111
      idr_Prelude.Strings.words7_val <- case idr_Prelude.Strings.words7_val_167 of
        (Cidr_Prelude.Basics.No) ->
          v.112 <- do
            v.251 <- pure (Cidr_Prelude.Strings.StrNil)
            pure v.251
          pure v.112
        (Cidr_Prelude.Basics.Yes) ->
          idris_str_tail2.3 <- _prim_string_tail $ idr_Prelude.Strings.words0.48.arity.1
          idris_str_head2.4 <- _prim_string_head $ idris_str_tail2.3
          v.113 <- do
            v.252 <- pure (CGrInt idris_str_head2.4)
            pure v.252
          idr_Prelude.Strings.words8_182 <- store v.113
          idris_str_tail2.4 <- _prim_string_tail $ idr_Prelude.Strings.words0.48.arity.1
          idris_str_tail2.5 <- _prim_string_tail $ idris_str_tail2.4
          v.114 <- do
            v.253 <- pure (CGrString idris_str_tail2.5)
            pure v.253
          idr_Prelude.Strings.words9_184 <- store v.114
          v.115 <- do
            v.254 <- pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.words8_182 idr_Prelude.Strings.words9_184)
            pure v.254
          pure v.115
      idr_Prelude.Strings.words7_185 <- store idr_Prelude.Strings.words7_val
      idr_Prelude.Strings.words6_val <- idr__Prelude.Strings.unpack_with_36 $ idr_Prelude.Strings.words7_185
      idr_Prelude.Strings.words6_186 <- store idr_Prelude.Strings.words6_val
      v.116 <- do
        v.255 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words5_165 idr_Prelude.Strings.words6_186)
        pure v.255
      pure v.116
  idr_Prelude.Strings.words4_187 <- store idr_Prelude.Strings.words4_val_154
  idr_Prelude.Strings.words4_val <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words4_187
  idr_Prelude.Strings.words4_188 <- store idr_Prelude.Strings.words4_val
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Prelude.Strings.words3 idr_Prelude.Strings.words4_188

idr_Prelude.Strings.words' idr_Prelude.Strings.words'0 =
  v.117 <- do
    v.256 <- pure (C"idr_{U_Prelude.Chars.isSpace_1}")
    pure v.256
  idr_Prelude.Strings.words'2 <- store v.117
  idr_Prelude.Strings.words'1_val <- idr_Prelude.List.dropWhile $ idr_Prelude.Strings.words'2 idr_Prelude.Strings.words'0
  case idr_Prelude.Strings.words'1_val of
    (Cidr_Prelude.List.Nil) ->
      v.118 <- do
        v.257 <- pure (Cidr_Prelude.List.Nil)
        pure v.257
      pure v.118
    #default ->
      v.119 <- do
        v.258 <- pure (C"idr_{U_Prelude.Strings.{words'_6}_1}")
        pure v.258
      idr_Prelude.Strings.words'3 <- store v.119
      idr_Prelude.Strings.words'5 <- store v.117
      idr_Prelude.Strings.words'4_val <- idr_Prelude.List.dropWhile $ idr_Prelude.Strings.words'5 idr_Prelude.Strings.words'0
      idr_Prelude.Strings.words'4_196 <- store idr_Prelude.Strings.words'4_val
      idr_Prelude.Strings.words'2_val_192 <- idr_Prelude.List.span $ idr_Prelude.Strings.words'3 idr_Prelude.Strings.words'4_196
      (Cidr_Builtins.MkPair idr_Prelude.Strings.words'3_199 idr_Prelude.Strings.words'4_200) <- pure idr_Prelude.Strings.words'2_val_192
      idr_Prelude.Strings.words'5_val_201 <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words'4_200
      idr_Prelude.Strings.words'5_202 <- store idr_Prelude.Strings.words'5_val_201
      v.120 <- do
        v.259 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words'3_199 idr_Prelude.Strings.words'5_202)
        pure v.259
      pure v.120

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06") ->
      "idr_{APPLY_0}0_val.9" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" <- case "idr_{APPLY_0}0_val.9" of
        (C"idr_{U_Main.{average_0}_2}") ->
          v.121 <- do
            v.260 <- pure (C"idr_{U_Main.{average_0}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
            pure v.260
          pure v.121
        (C"idr_{U_prim__strCons_2}") ->
          v.122 <- do
            v.261 <- pure (C"idr_{U_prim__strCons_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
            pure v.261
          pure v.122
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val" <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_228" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
      "idr_{APPLY_0}0_val.10" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07"
      case "idr_{APPLY_0}0_val.10" of
        (C"idr_{U_Main.{average_0}_1}" "idr_{APPLY_0}2.10") ->
          p.24 <- fetch "idr_{APPLY_0}2.10"
          (CGrInt idris_int_add0_1.1.0) <- pure p.24
          p.23 <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_228"
          (CGrInt idris_int_add1_1.1.0) <- pure p.23
          idris_int_add2.1.0 <- _prim_int_add $ idris_int_add0_1.1.0 idris_int_add1_1.1.0
          v.123 <- do
            v.262 <- pure (CGrInt idris_int_add2.1.0)
            pure v.262
          pure v.123
        (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_210.10") ->
          p.26 <- fetch "idr_{APPLY_0}2_210.10"
          (CGrInt idris_str_cons1_0.1) <- pure p.26
          p.25 <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_228"
          (CGrString idris_str_cons2_0.1) <- pure p.25
          idris_str_cons3.1 <- _prim_string_cons $ idris_str_cons1_0.1 idris_str_cons2_0.1
          v.124 <- do
            v.263 <- pure (CGrString idris_str_cons3.1)
            pure v.263
          pure v.124
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03"

"idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03" =
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"
  case "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05") ->
      "idr_{APPLY_0}0_val.11" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val" <- case "idr_{APPLY_0}0_val.11" of
        (C"idr_{U_Main.{average_1}_1}") ->
          p.28 <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
          (CGrString idris_str_len2.0) <- pure p.28
          idris_str_len3.0 <- _prim_string_len $ idris_str_len2.0
          v.125 <- do
            v.264 <- pure (CGrInt idris_str_len3.0)
            pure v.264
          "idr_Main.{average_1}1.0" <- store v.125
          p.27 <- fetch "idr_Main.{average_1}1.0"
          (CGrInt idr_prim__zextInt_BigInt0.32.24.arity.1.0.0) <- pure p.27
          idris_lz_ext3.0 <- _prim_int_add $ idr_prim__zextInt_BigInt0.32.24.arity.1.0.0 0
          v.126 <- do
            v.265 <- pure (CGrInt idris_lz_ext3.0)
            pure v.265
          pure v.126
        (C"idr_{U_Prelude.Strings.{words_5}_1}") ->
          v.127 <- do
            v.266 <- pure (C"idr_{U_prim__strCons_2}")
            pure v.266
          "idr_Prelude.Strings.{words_5}3.0" <- store v.127
          v.128 <- do
            v.267 <- pure (CGrString #"")
            pure v.267
          "idr_Prelude.Strings.{words_5}4.0" <- store v.128
          "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Strings.{words_5}3.0" "idr_Prelude.Strings.{words_5}4.0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val" <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_230" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val"
      v.129 <- do
        v.268 <- pure (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_230")
        pure v.268
      pure v.129
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val"

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_365.32.37.arity.1 <- pure #""
      p.29 <- fetch idr__Prelude.Strings.unpack_with_363
      (CGrString idr__Prelude.Strings.unpack_with_363.40.33.arity.1) <- pure p.29
      idris_str_eq3.4 <- _prim_string_eq $ idr__Prelude.Strings.unpack_with_363.40.33.arity.1 idr__Prelude.Strings.unpack_with_365.32.37.arity.1
      ccp.2.4 <- case idris_str_eq3.4 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.130 <- do
        v.269 <- pure (CGrInt ccp.2.4)
        pure v.269
      idr__Prelude.Strings.unpack_with_365_val_236 <- case v.130 of
        (CGrInt idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0) ->
          case idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0 of
            0 ->
              v.131 <- do
                v.270 <- pure (Cidr_Prelude.Bool.True)
                pure v.270
              pure v.131
            #default ->
              v.132 <- do
                v.271 <- pure (Cidr_Prelude.Bool.False)
                pure v.271
              pure v.132
      idr__Prelude.Strings.unpack_with_365_241 <- store idr__Prelude.Strings.unpack_with_365_val_236
      v.133 <- do
        v.272 <- pure (Cidr_Prelude.Bool.True)
        pure v.272
      idr__Prelude.Strings.unpack_with_365_val_235 <- case v.133 of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.4" <- fetch idr__Prelude.Strings.unpack_with_365_241
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_226.4" of
            (Cidr_Prelude.Bool.False) ->
              v.134 <- do
                v.273 <- pure (Cidr_Prelude.Basics.No)
                pure v.273
              pure v.134
            (Cidr_Prelude.Bool.True) ->
              v.135 <- do
                v.274 <- pure (Cidr_Prelude.Basics.Yes)
                pure v.274
              pure v.135
      idr__Prelude.Strings.unpack_with_365_val <- case idr__Prelude.Strings.unpack_with_365_val_235 of
        (Cidr_Prelude.Basics.No) ->
          v.136 <- do
            v.275 <- pure (Cidr_Prelude.Strings.StrNil)
            pure v.275
          pure v.136
        (Cidr_Prelude.Basics.Yes) ->
          idris_str_head2.5 <- _prim_string_head $ idr__Prelude.Strings.unpack_with_363.40.33.arity.1
          v.137 <- do
            v.276 <- pure (CGrInt idris_str_head2.5)
            pure v.276
          idr__Prelude.Strings.unpack_with_366_245 <- store v.137
          idris_str_tail2.6 <- _prim_string_tail $ idr__Prelude.Strings.unpack_with_363.40.33.arity.1
          v.138 <- do
            v.277 <- pure (CGrString idris_str_tail2.6)
            pure v.277
          idr__Prelude.Strings.unpack_with_367 <- store v.138
          v.139 <- do
            v.278 <- pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_245 idr__Prelude.Strings.unpack_with_367)
            pure v.278
          pure v.139
      idr__Prelude.Strings.unpack_with_365_246 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 $ idr__Prelude.Strings.unpack_with_365_246
      idr__Prelude.Strings.unpack_with_364_247 <- store idr__Prelude.Strings.unpack_with_364_val
      v.140 <- do
        v.279 <- pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_247)
        pure v.279
      pure v.140
    (Cidr_Prelude.Strings.StrNil) ->
      v.141 <- do
        v.280 <- pure (Cidr_Prelude.List.Nil)
        pure v.280
      pure v.141
