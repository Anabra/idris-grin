primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  v.0 <- pure (CErased)
  v.1 <- pure v.0
  v.2 <- pure (C"idr_{U_Main.{main_2}_2}")
  v.72 <- pure v.2
  idr_Main.main3.0 <- store v.72
  "idr_{runMain_0}1.0" <- store v.1
  idr_Main.main2.0.220.0.arity.1 <- pure #"Enter a string: "
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.replWith $ idr_Main.main2.0.220.0.arity.1 idr_Main.main3.0 "idr_{runMain_0}1.0"
  pure ()

idr_Prelude.List.dropWhile idr_Prelude.List.dropWhile2 =
  idr_Prelude.List.dropWhile2_val <- fetch idr_Prelude.List.dropWhile2
  case idr_Prelude.List.dropWhile2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4) ->
      p.0 <- fetch idr_Prelude.List.dropWhile3
      p.1 <- pure p.0
      (CGrInt "idr_{APPLY_0}1.0.48.0.arity.1") <- pure p.1
      idr_Prelude.Chars.isSpace1.32.11.arity.1.0 <- pure 32
      idris_int_eq2.0.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace1.32.11.arity.1.0
      ccp.0.0.0 <- case idris_int_eq2.0.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Prelude.List.dropWhile5_val <- case ccp.0.0.0 of
        0 ->
          idr_Prelude.Chars.isSpace2.32.12.arity.1.0 <- pure 9
          idris_int_eq2.1.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace2.32.12.arity.1.0
          ccp.0.1.0 <- case idris_int_eq2.1.0 of
            #False ->
              pure ccp.0.0.0
            #True ->
              pure 1
          case ccp.0.1.0 of
            0 ->
              idr_Prelude.Chars.isSpace3.32.13.arity.1.0 <- pure 13
              idris_int_eq2.2.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace3.32.13.arity.1.0
              ccp.0.2.0 <- case idris_int_eq2.2.0 of
                #False ->
                  pure ccp.0.0.0
                #True ->
                  pure 1
              case ccp.0.2.0 of
                0 ->
                  idr_Prelude.Chars.isSpace4.32.14.arity.1.0 <- pure 10
                  idris_int_eq2.3.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace4.32.14.arity.1.0
                  ccp.0.3.0 <- case idris_int_eq2.3.0 of
                    #False ->
                      pure ccp.0.0.0
                    #True ->
                      pure 1
                  case ccp.0.3.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.32.15.arity.1.0 <- pure 12
                      idris_int_eq2.4.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace5.32.15.arity.1.0
                      ccp.0.4.0 <- case idris_int_eq2.4.0 of
                        #False ->
                          pure ccp.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.4.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.32.16.arity.1.0 <- pure 11
                          idris_int_eq2.5.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace6.32.16.arity.1.0
                          ccp.0.5.0 <- case idris_int_eq2.5.0 of
                            #False ->
                              pure ccp.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.5.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.32.17.arity.1.0 <- pure 160
                              idris_int_eq2.6.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.0.arity.1" idr_Prelude.Chars.isSpace7.32.17.arity.1.0
                              ccp.0.6.0 <- case idris_int_eq2.6.0 of
                                #False ->
                                  pure ccp.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.6.0 of
                                0 ->
                                  v.3 <- pure (Cidr_Prelude.Bool.False)
                                  v.73 <- pure v.3
                                  pure v.73
                                #default ->
                                  v.4 <- pure (Cidr_Prelude.Bool.True)
                                  v.74 <- pure v.4
                                  pure v.74
                            #default ->
                              v.5 <- pure (Cidr_Prelude.Bool.True)
                              v.75 <- pure v.5
                              pure v.75
                        #default ->
                          v.6 <- pure (Cidr_Prelude.Bool.True)
                          v.76 <- pure v.6
                          pure v.76
                    #default ->
                      v.7 <- pure (Cidr_Prelude.Bool.True)
                      v.77 <- pure v.7
                      pure v.77
                #default ->
                  v.8 <- pure (Cidr_Prelude.Bool.True)
                  v.78 <- pure v.8
                  pure v.78
            #default ->
              v.9 <- pure (Cidr_Prelude.Bool.True)
              v.79 <- pure v.9
              pure v.79
        #default ->
          v.10 <- pure (Cidr_Prelude.Bool.True)
          v.80 <- pure v.10
          pure v.80
      case idr_Prelude.List.dropWhile5_val of
        (Cidr_Prelude.Bool.False) ->
          v.11 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4)
          v.81 <- pure v.11
          pure v.81
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.dropWhile $ idr_Prelude.List.dropWhile4
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.List.dropWhile2_val

idr_Prelude.List.length.unboxed idr_Prelude.List.length1 =
  idr_Prelude.List.length1_val <- fetch idr_Prelude.List.length1
  case idr_Prelude.List.length1_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.length2 idr_Prelude.List.length3) ->
      unboxed.CGrInt.14 <- idr_Prelude.List.length.unboxed $ idr_Prelude.List.length3
      idris_int_add1_1.0 <- pure 1
      idris_int_add2.0 <- _prim_int_add $ unboxed.CGrInt.14 idris_int_add1_1.0
      pure idris_int_add2.0
    (Cidr_Prelude.List.Nil) ->
      pure 0

idr_Prelude.Interactive.replWith idr_Prelude.Interactive.replWith2.220.arity.1 idr_Prelude.Interactive.replWith3 idr_Prelude.Interactive.replWith4 =
  unboxed.CGrInt.19 <- pure 0
  idris_ffi_file_eof2.0 <- _prim_ffi_file_eof $ unboxed.CGrInt.19
  v.12 <- pure (CGrInt 0)
  v.82 <- pure v.12
  v.13 <- pure (#undefined :: T_Int64)
  v.83 <- pure v.13
  case v.83 of
    0 ->
      v.14 <- pure (Cidr_MkUnit)
      v.84 <- pure v.14
      pure v.84
    #default ->
      _prim_string_print $ idr_Prelude.Interactive.replWith2.220.arity.1
      pure ()
      idris_read_str1.0.0 <- _prim_read_string $
      idris_str_rev2.0.0 <- _prim_string_reverse $ idris_read_str1.0.0
      v.15 <- pure (CGrString #"")
      v.85 <- pure v.15
      idr_Prelude.Interactive.getLine'4.32.4.arity.1.0.0 <- pure #""
      idris_str_eq3.0.0 <- _prim_string_eq $ idris_str_rev2.0.0 idr_Prelude.Interactive.getLine'4.32.4.arity.1.0.0
      ccp.2.0.0 <- case idris_str_eq3.0.0 of
        #False ->
          pure unboxed.CGrInt.19
        #True ->
          pure 1
      idr_Prelude.Interactive.getLine'3_val_20.0.0 <- case ccp.2.0.0 of
        0 ->
          v.16 <- pure (Cidr_Prelude.Bool.True)
          v.86 <- pure v.16
          pure v.86
        #default ->
          v.17 <- pure (Cidr_Prelude.Bool.False)
          v.87 <- pure v.17
          pure v.87
      v.18 <- pure (Cidr_Prelude.Bool.True)
      v.88 <- pure v.18
      idr_Prelude.Interactive.getLine'3_val.0.0 <- case idr_Prelude.Interactive.getLine'3_val_20.0.0 of
        (Cidr_Prelude.Bool.False) ->
          pure v.85
        (Cidr_Prelude.Bool.True) ->
          idris_str_head2.0.0.0 <- _prim_string_head $ idris_str_rev2.0.0
          case idris_str_head2.0.0.0 of
            10 ->
              idris_str_tail2.0.0.0 <- _prim_string_tail $ idris_str_rev2.0.0
              v.19 <- pure (CGrString idris_str_tail2.0.0.0)
              v.89 <- pure v.19
              pure v.89
            #default ->
              idris_str_tail2.1.0.0 <- _prim_string_tail $ idris_str_rev2.0.0
              idris_str_cons3.0.0.0 <- _prim_string_cons $ idris_str_head2.0.0.0 idris_str_tail2.1.0.0
              v.20 <- pure (CGrString idris_str_cons3.0.0.0)
              v.90 <- pure v.20
              pure v.90
      p.5 <- pure idr_Prelude.Interactive.getLine'3_val.0.0
      (CGrString idr_Prelude.Interactive.getLine'3_49.32.10.arity.1.0.0) <- pure p.5
      idris_str_rev2.5.0 <- _prim_string_reverse $ idr_Prelude.Interactive.getLine'3_49.32.10.arity.1.0.0
      v.21 <- pure (C"idr_{U_Main.{average_0}_2}")
      v.91 <- pure v.21
      idr_Main.average3.0.0.0 <- store v.91
      idr_Main.average4.0.0.0 <- store v.82
      v.22 <- pure (C"idr_{U_Main.{average_1}_1}")
      v.92 <- pure v.22
      idr_Main.average7.0.0.0 <- store v.92
      v.23 <- pure (C"idr_{U_Prelude.Strings.{words_5}_1}")
      v.93 <- pure v.23
      idr_Prelude.Strings.words3.0 <- store v.93
      idris_str_eq3.2.0 <- _prim_string_eq $ idris_str_rev2.5.0 idr_Prelude.Interactive.getLine'4.32.4.arity.1.0.0
      ccp.2.2.0 <- case idris_str_eq3.2.0 of
        #False ->
          pure unboxed.CGrInt.19
        #True ->
          pure 1
      idr_Prelude.Strings.words4_val_154.0 <- case ccp.2.2.0 of
        0 ->
          idris_str_head2.3.0.0.0 <- _prim_string_head $ idris_str_rev2.5.0
          v.24 <- pure (CGrInt idris_str_head2.3.0.0.0)
          v.96.0 <- pure v.24
          idr_Prelude.Strings.words5_165.0.0.0 <- store v.96.0
          idris_str_tail2.2.0.0.0 <- _prim_string_tail $ idris_str_rev2.5.0
          idris_str_eq3.3.0.0.0 <- _prim_string_eq $ idris_str_tail2.2.0.0.0 idr_Prelude.Interactive.getLine'4.32.4.arity.1.0.0
          ccp.2.3.0.0.0 <- case idris_str_eq3.3.0.0.0 of
            #False ->
              pure unboxed.CGrInt.19
            #True ->
              pure 1
          idr_Prelude.Strings.words7_val.0.0.0 <- case ccp.2.3.0.0.0 of
            0 ->
              idris_str_head2.4.0.0.0.0.0 <- _prim_string_head $ idris_str_tail2.2.0.0.0
              v.25 <- pure (CGrInt idris_str_head2.4.0.0.0.0.0)
              v.97.0 <- pure v.25
              idr_Prelude.Strings.words8_182.0.0.0.0.0 <- store v.97.0
              idris_str_tail2.5.0.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.2.0.0.0
              v.26 <- pure (CGrString idris_str_tail2.5.0.0.0.0.0)
              v.98.0 <- pure v.26
              idr_Prelude.Strings.words9_184.0.0.0.0.0 <- store v.98.0
              v.27 <- pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.words8_182.0.0.0.0.0 idr_Prelude.Strings.words9_184.0.0.0.0.0)
              v.99.0 <- pure v.27
              pure v.99.0
            #default ->
              v.28 <- pure (Cidr_Prelude.Strings.StrNil)
              v.100.0 <- pure v.28
              pure v.100.0
          idr_Prelude.Strings.words7_185.0.0.0 <- store idr_Prelude.Strings.words7_val.0.0.0
          idr_Prelude.Strings.words6_val.0.0.0 <- idr__Prelude.Strings.unpack_with_36 $ idr_Prelude.Strings.words7_185.0.0.0
          idr_Prelude.Strings.words6_186.0.0.0 <- store idr_Prelude.Strings.words6_val.0.0.0
          v.29 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words5_165.0.0.0 idr_Prelude.Strings.words6_186.0.0.0)
          v.101.0 <- pure v.29
          pure v.101.0
        #default ->
          v.30 <- pure (Cidr_Prelude.List.Nil)
          v.95.0 <- pure v.30
          pure v.95.0
      idr_Prelude.Strings.words4_187.0 <- store idr_Prelude.Strings.words4_val_154.0
      idr_Prelude.Strings.words4_val.0 <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words4_187.0
      idr_Prelude.Strings.words4_188.0 <- store idr_Prelude.Strings.words4_val.0
      idr_Main.average8_val.0.0.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Prelude.Strings.words3.0 idr_Prelude.Strings.words4_188.0
      idr_Main.average8.0.0.0 <- store idr_Main.average8_val.0.0.0
      idr_Main.average5_val.0.0.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Main.average7.0.0.0 idr_Main.average8.0.0.0
      idr_Main.average5_4.0.0.0 <- store idr_Main.average5_val.0.0.0
      idr_Main.average1_val_1.0.0.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ idr_Main.average3.0.0.0 idr_Main.average4.0.0.0 idr_Main.average5_4.0.0.0
      p.4 <- pure idr_Main.average1_val_1.0.0.0
      (CGrInt idris_int_float1_0.0.0) <- pure p.4
      idris_int_float2.0.0 <- _prim_int_float $ idris_int_float1_0.0.0
      unboxed.CGrInt.1.0.0.0 <- idr_Prelude.List.length.unboxed $ idr_Main.average8.0.0.0
      idris_int_float2.1.0 <- _prim_int_float $ unboxed.CGrInt.1.0.0.0
      idris_float_div2.0.0 <- _prim_float_div $ idris_int_float2.0.0 idris_int_float2.1.0
      idris_float_str2.0.0.0 <- _prim_float_string $ idris_float_div2.0.0
      v.31 <- pure (CGrString idris_float_str2.0.0.0)
      v.102 <- pure v.31
      idr_Prelude.Show.primNumShow6.0.40.23.arity.1.0.0 <- pure 5
      idris_int_eq2.8.0 <- _prim_int_eq $ unboxed.CGrInt.19 idr_Prelude.Show.primNumShow6.0.40.23.arity.1.0.0
      ccp.0.8.0 <- case idris_int_eq2.8.0 of
        #False ->
          pure unboxed.CGrInt.19
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow5_val_82.0.0.0 <- case ccp.0.8.0 of
        0 ->
          idris_int_lt2.0.0 <- _prim_int_lt $ unboxed.CGrInt.19 idr_Prelude.Show.primNumShow6.0.40.23.arity.1.0.0
          ccp.1.0.0 <- case idris_int_lt2.0.0 of
            #False ->
              pure unboxed.CGrInt.19
            #True ->
              pure 1
          case ccp.1.0.0 of
            0 ->
              v.32 <- pure (Cidr_Prelude.Interfaces.GT)
              v.103 <- pure v.32
              pure v.103
            #default ->
              v.33 <- pure (Cidr_Prelude.Interfaces.LT)
              v.104 <- pure v.33
              pure v.104
        #default ->
          v.34 <- pure (Cidr_Prelude.Interfaces.EQ)
          v.105 <- pure v.34
          pure v.105
      idr_Prelude.Show.primNumShow5_val_81.0.0.0 <- case idr_Prelude.Show.primNumShow5_val_82.0.0.0 of
        (Cidr_Prelude.Interfaces.GT) ->
          pure v.88
        #default ->
          ccp.0.9.0 <- case idris_int_eq2.8.0 of
            #False ->
              pure unboxed.CGrInt.19
            #True ->
              pure 1
          case ccp.0.9.0 of
            0 ->
              v.35 <- pure (Cidr_Prelude.Bool.False)
              v.106 <- pure v.35
              pure v.106
            #default ->
              pure v.88
      idr_Prelude.Show.primNumShow5_val.0.0.0 <- case idr_Prelude.Show.primNumShow5_val_81.0.0.0 of
        (Cidr_Prelude.Bool.False) ->
          v.36 <- pure (Cidr_Prelude.Bool.False)
          v.107 <- pure v.36
          pure v.107
        (Cidr_Prelude.Bool.True) ->
          idris_str_eq3.1.0 <- _prim_string_eq $ idris_float_str2.0.0.0 idr_Prelude.Interactive.getLine'4.32.4.arity.1.0.0
          ccp.2.1.0 <- case idris_str_eq3.1.0 of
            #False ->
              pure unboxed.CGrInt.19
            #True ->
              pure 1
          case ccp.2.1.0 of
            0 ->
              idris_str_head2.2.0.0.0 <- _prim_string_head $ idris_float_str2.0.0.0
              idr_Prelude.Show.primNumShow8.32.21.arity.1.0.0.0.0.0 <- pure 45
              idris_int_eq2.10.0.0.0 <- _prim_int_eq $ idris_str_head2.2.0.0.0 idr_Prelude.Show.primNumShow8.32.21.arity.1.0.0.0.0.0
              ccp.0.10.0.0.0 <- case idris_int_eq2.10.0.0.0 of
                #False ->
                  pure unboxed.CGrInt.19
                #True ->
                  pure 1
              case ccp.0.10.0.0.0 of
                0 ->
                  v.37 <- pure (Cidr_Prelude.Bool.False)
                  v.108 <- pure v.37
                  pure v.108
                #default ->
                  pure v.88
            #default ->
              v.38 <- pure (Cidr_Prelude.Bool.False)
              v.109 <- pure v.38
              pure v.109
      "idr_Main.{main_2}3_val_215.0.0" <- case idr_Prelude.Show.primNumShow5_val.0.0.0 of
        (Cidr_Prelude.Bool.False) ->
          pure v.102
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Show.primNumShow7_119.32.22.arity.1.0.0.0 <- pure #")"
          idris_str_concat3.0.0 <- _prim_string_concat $ idris_float_str2.0.0.0 idr_Prelude.Show.primNumShow7_119.32.22.arity.1.0.0.0
          idr_Prelude.Show.primNumShow6_116.0.40.29.arity.1.0.0 <- pure #"("
          idris_str_concat3.1.0 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_116.0.40.29.arity.1.0.0 idris_str_concat3.0.0
          v.39 <- pure (CGrString idris_str_concat3.1.0)
          v.110 <- pure v.39
          pure v.110
      "idr_Main.{main_2}4_219.32.31.arity.1.0.0" <- pure #"\n"
      p.3 <- pure "idr_Main.{main_2}3_val_215.0.0"
      (CGrString "idr_Main.{main_2}3_217.40.30.arity.1.0.0") <- pure p.3
      idris_str_concat3.2.0 <- _prim_string_concat $ "idr_Main.{main_2}3_217.40.30.arity.1.0.0" "idr_Main.{main_2}4_219.32.31.arity.1.0.0"
      "idr_Main.{main_2}2.40.31.arity.1.0.0" <- pure #"The average word length is: "
      idris_str_concat3.3.0 <- _prim_string_concat $ "idr_Main.{main_2}2.40.31.arity.1.0.0" idris_str_concat3.2.0
      _prim_string_print $ idris_str_concat3.3.0
      pure ()
      idr_Prelude.Interactive.replWith $ idr_Prelude.Interactive.replWith2.220.arity.1 idr_Prelude.Interactive.replWith3 idr_Prelude.Interactive.replWith4

idr_Prelude.List.span idr_Prelude.List.span2 =
  idr_Prelude.List.span2_val <- fetch idr_Prelude.List.span2
  case idr_Prelude.List.span2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4) ->
      p.20 <- fetch idr_Prelude.List.span3
      p.8 <- pure p.20
      (CGrInt "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1") <- pure p.8
      idr_Prelude.Chars.isSpace1.32.11.arity.1.1 <- pure 32
      idris_int_eq2.0.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace1.32.11.arity.1.1
      ccp.0.0.1 <- case idris_int_eq2.0.1 of
        #False ->
          pure 0
        #True ->
          pure 1
      "idr_Prelude.Strings.{words'_6}1_val.0" <- case ccp.0.0.1 of
        0 ->
          idr_Prelude.Chars.isSpace2.32.12.arity.1.1 <- pure 9
          idris_int_eq2.1.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace2.32.12.arity.1.1
          ccp.0.1.1 <- case idris_int_eq2.1.1 of
            #False ->
              pure ccp.0.0.1
            #True ->
              pure 1
          case ccp.0.1.1 of
            0 ->
              idr_Prelude.Chars.isSpace3.32.13.arity.1.1 <- pure 13
              idris_int_eq2.2.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace3.32.13.arity.1.1
              ccp.0.2.1 <- case idris_int_eq2.2.1 of
                #False ->
                  pure ccp.0.0.1
                #True ->
                  pure 1
              case ccp.0.2.1 of
                0 ->
                  idr_Prelude.Chars.isSpace4.32.14.arity.1.1 <- pure 10
                  idris_int_eq2.3.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace4.32.14.arity.1.1
                  ccp.0.3.1 <- case idris_int_eq2.3.1 of
                    #False ->
                      pure ccp.0.0.1
                    #True ->
                      pure 1
                  case ccp.0.3.1 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.32.15.arity.1.1 <- pure 12
                      idris_int_eq2.4.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace5.32.15.arity.1.1
                      ccp.0.4.1 <- case idris_int_eq2.4.1 of
                        #False ->
                          pure ccp.0.0.1
                        #True ->
                          pure 1
                      case ccp.0.4.1 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.32.16.arity.1.1 <- pure 11
                          idris_int_eq2.5.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace6.32.16.arity.1.1
                          ccp.0.5.1 <- case idris_int_eq2.5.1 of
                            #False ->
                              pure ccp.0.0.1
                            #True ->
                              pure 1
                          case ccp.0.5.1 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.32.17.arity.1.1 <- pure 160
                              idris_int_eq2.6.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_6}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace7.32.17.arity.1.1
                              ccp.0.6.1 <- case idris_int_eq2.6.1 of
                                #False ->
                                  pure ccp.0.0.1
                                #True ->
                                  pure 1
                              case ccp.0.6.1 of
                                0 ->
                                  v.40 <- pure (Cidr_Prelude.Bool.False)
                                  v.111 <- pure v.40
                                  pure v.111
                                #default ->
                                  v.41 <- pure (Cidr_Prelude.Bool.True)
                                  v.112 <- pure v.41
                                  pure v.112
                            #default ->
                              v.42 <- pure (Cidr_Prelude.Bool.True)
                              v.113 <- pure v.42
                              pure v.113
                        #default ->
                          v.43 <- pure (Cidr_Prelude.Bool.True)
                          v.114 <- pure v.43
                          pure v.114
                    #default ->
                      v.44 <- pure (Cidr_Prelude.Bool.True)
                      v.115 <- pure v.44
                      pure v.115
                #default ->
                  v.45 <- pure (Cidr_Prelude.Bool.True)
                  v.116 <- pure v.45
                  pure v.116
            #default ->
              v.46 <- pure (Cidr_Prelude.Bool.True)
              v.117 <- pure v.46
              pure v.117
        #default ->
          v.47 <- pure (Cidr_Prelude.Bool.True)
          v.118 <- pure v.47
          pure v.118
      case "idr_Prelude.Strings.{words'_6}1_val.0" of
        (Cidr_Prelude.Bool.False) ->
          idr_Prelude.List.span6_val_134.0 <- idr_Prelude.List.span $ idr_Prelude.List.span4
          p.7 <- pure idr_Prelude.List.span6_val_134.0
          (Cidr_Builtins.MkPair idr_Prelude.List.span7_139.0 idr_Prelude.List.span8.0) <- pure p.7
          v.48 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span7_139.0)
          v.119 <- pure v.48
          idr_Prelude.List.span9.0 <- store v.119
          v.49 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span9.0 idr_Prelude.List.span8.0)
          v.120 <- pure v.49
          pure v.120
        (Cidr_Prelude.Bool.True) ->
          v.50 <- pure (Cidr_Prelude.List.Nil)
          v.121 <- pure v.50
          idr_Prelude.List.span6.0 <- store v.121
          v.51 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4)
          v.122 <- pure v.51
          idr_Prelude.List.span7.0 <- store v.122
          v.52 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span6.0 idr_Prelude.List.span7.0)
          v.123 <- pure v.52
          pure v.123
    (Cidr_Prelude.List.Nil) ->
      v.53 <- pure (Cidr_Prelude.List.Nil)
      v.124 <- pure v.53
      idr_Prelude.List.span3_140 <- store v.124
      v.54 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span3_140 idr_Prelude.List.span3_140)
      v.125 <- pure v.54
      pure v.125

idr_Prelude.Strings.words' idr_Prelude.Strings.words'0 =
  idr_Prelude.Strings.words'1_val <- idr_Prelude.List.dropWhile $ idr_Prelude.Strings.words'0
  case idr_Prelude.Strings.words'1_val of
    (Cidr_Prelude.List.Nil) ->
      v.55 <- pure (Cidr_Prelude.List.Nil)
      v.126 <- pure v.55
      pure v.126
    #default ->
      idr_Prelude.Strings.words'4_196 <- store idr_Prelude.Strings.words'1_val
      idr_Prelude.Strings.words'2_val_192 <- idr_Prelude.List.span $ idr_Prelude.Strings.words'4_196
      p.9 <- pure idr_Prelude.Strings.words'2_val_192
      (Cidr_Builtins.MkPair idr_Prelude.Strings.words'3_199 idr_Prelude.Strings.words'4_200) <- pure p.9
      idr_Prelude.Strings.words'5_val_201 <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words'4_200
      idr_Prelude.Strings.words'5_202 <- store idr_Prelude.Strings.words'5_val_201
      v.56 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words'3_199 idr_Prelude.Strings.words'5_202)
      v.127 <- pure v.56
      pure v.127

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06") ->
      "idr_{APPLY_0}0_val.9" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" <- case "idr_{APPLY_0}0_val.9" of
        (C"idr_{U_Main.{average_0}_2}") ->
          v.57 <- pure (C"idr_{U_Main.{average_0}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          v.128 <- pure v.57
          pure v.128
        (C"idr_{U_prim__strCons_2}") ->
          v.58 <- pure (C"idr_{U_prim__strCons_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          v.129 <- pure v.58
          pure v.129
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val" <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06"
      case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" of
        (C"idr_{U_Main.{average_0}_1}" "idr_{APPLY_0}2.10") ->
          p.24 <- fetch "idr_{APPLY_0}2.10"
          p.11 <- pure p.24
          (CGrInt idris_int_add0_1.1.0) <- pure p.11
          p.10 <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
          (CGrInt idris_int_add1_1.1.0) <- pure p.10
          idris_int_add2.1.0 <- _prim_int_add $ idris_int_add0_1.1.0 idris_int_add1_1.1.0
          v.59 <- pure (CGrInt idris_int_add2.1.0)
          v.130 <- pure v.59
          pure v.130
        (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_210.10") ->
          p.26 <- fetch "idr_{APPLY_0}2_210.10"
          p.13 <- pure p.26
          (CGrInt idris_str_cons1_0.1) <- pure p.13
          p.12 <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
          (CGrString idris_str_cons2_0.1) <- pure p.12
          idris_str_cons3.1 <- _prim_string_cons $ idris_str_cons1_0.1 idris_str_cons2_0.1
          v.60 <- pure (CGrString idris_str_cons3.1)
          v.131 <- pure v.60
          pure v.131
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03"

"idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03" =
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"
  case "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05") ->
      "idr_{APPLY_0}0_val.11" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val" <- case "idr_{APPLY_0}0_val.11" of
        (C"idr_{U_Main.{average_1}_1}") ->
          p.28 <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
          p.14 <- pure p.28
          (CGrString idris_str_len2.0) <- pure p.14
          idris_str_len3.0 <- _prim_string_len $ idris_str_len2.0
          idris_lz_ext3.0 <- _prim_int_add $ idris_str_len3.0 0
          v.61 <- pure (CGrInt idris_lz_ext3.0)
          v.132 <- pure v.61
          pure v.132
        (C"idr_{U_Prelude.Strings.{words_5}_1}") ->
          v.62 <- pure (C"idr_{U_prim__strCons_2}")
          v.133 <- pure v.62
          "idr_Prelude.Strings.{words_5}3.0" <- store v.133
          v.63 <- pure (CGrString #"")
          v.134 <- pure v.63
          "idr_Prelude.Strings.{words_5}4.0" <- store v.134
          "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Strings.{words_5}3.0" "idr_Prelude.Strings.{words_5}4.0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val" <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_230" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val"
      v.64 <- pure (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_230")
      v.135 <- pure v.64
      pure v.135
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val"

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_365.32.37.arity.1 <- pure #""
      p.29 <- fetch idr__Prelude.Strings.unpack_with_363
      p.15 <- pure p.29
      (CGrString idr__Prelude.Strings.unpack_with_363.40.33.arity.1) <- pure p.15
      idris_str_eq3.4 <- _prim_string_eq $ idr__Prelude.Strings.unpack_with_363.40.33.arity.1 idr__Prelude.Strings.unpack_with_365.32.37.arity.1
      ccp.2.4 <- case idris_str_eq3.4 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr__Prelude.Strings.unpack_with_365_val <- case ccp.2.4 of
        0 ->
          idris_str_head2.5.0.0 <- _prim_string_head $ idr__Prelude.Strings.unpack_with_363.40.33.arity.1
          v.65 <- pure (CGrInt idris_str_head2.5.0.0)
          v.136 <- pure v.65
          idr__Prelude.Strings.unpack_with_366_245.0.0 <- store v.136
          idris_str_tail2.6.0.0 <- _prim_string_tail $ idr__Prelude.Strings.unpack_with_363.40.33.arity.1
          v.66 <- pure (CGrString idris_str_tail2.6.0.0)
          v.137 <- pure v.66
          idr__Prelude.Strings.unpack_with_367.0.0 <- store v.137
          v.67 <- pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_245.0.0 idr__Prelude.Strings.unpack_with_367.0.0)
          v.138 <- pure v.67
          pure v.138
        #default ->
          v.68 <- pure (Cidr_Prelude.Strings.StrNil)
          v.139 <- pure v.68
          pure v.139
      idr__Prelude.Strings.unpack_with_365_246 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 $ idr__Prelude.Strings.unpack_with_365_246
      idr__Prelude.Strings.unpack_with_364_247 <- store idr__Prelude.Strings.unpack_with_364_val
      v.69 <- pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_247)
      v.140 <- pure v.69
      pure v.140
    (Cidr_Prelude.Strings.StrNil) ->
      v.70 <- pure (Cidr_Prelude.List.Nil)
      v.141 <- pure v.70
      pure v.141
