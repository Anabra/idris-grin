grinMain =
  v.0 <- pure (C"idr_{U_prim__floatToStr_1}")
  idr_Main.main3_val.0 <- pure v.0
  idr_Main.main3.0 <- store idr_Main.main3_val.0
  v.1 <- pure (CGrString #"This is a test sentence!")
  idr_Main.main5_val_52.0 <- pure v.1
  idr_Main.main5.0 <- store idr_Main.main5_val_52.0
  v.2 <- pure (C"idr_{U_Main.{average_0}_2}")
  idr_Main.average3_val.0 <- pure v.2
  idr_Main.average3.0 <- store idr_Main.average3_val.0
  v.3 <- pure (CGrInt 0)
  idr_Main.average4_val.0 <- pure v.3
  idr_Main.average4.0 <- store idr_Main.average4_val.0
  v.4 <- pure (C"idr_{U_Main.{average_1}_1}")
  idr_Main.average7_val.0 <- pure v.4
  idr_Main.average7.0 <- store idr_Main.average7_val.0
  (CGrString idr_Main.average0.48.0.arity.1.0) <- fetch idr_Main.main5.0
  idr_Main.average8_val.0 <- idr_Prelude.Strings.words idr_Main.average0.48.0.arity.1.0
  idr_Main.average8.0 <- store idr_Main.average8_val.0
  idr_Main.average5_val.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" idr_Main.average7.0 idr_Main.average8.0
  idr_Main.average5_4.0 <- store idr_Main.average5_val.0
  idr_Main.average1_val_1.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" idr_Main.average3.0 idr_Main.average4.0 idr_Main.average5_4.0
  idr_Main.average1_5.0 <- store idr_Main.average1_val_1.0
  (CGrInt idris_int_float1_0.0) <- fetch idr_Main.average1_5.0
  idris_int_float2.0 <- _prim_int_float idris_int_float1_0.0
  idr_Main.average3_val_11.0 <- idr_Prelude.Strings.words idr_Main.average0.48.0.arity.1.0
  idr_Main.average3_12.0 <- store idr_Main.average3_val_11.0
  unboxed.CGrInt.1.0 <- idr_Prelude.List.length.unboxed idr_Main.average3_12.0
  v.5 <- pure (CGrInt unboxed.CGrInt.1.0)
  idr_Main.average2_val_8.0 <- pure v.5
  idr_Main.average2_13.0 <- store idr_Main.average2_val_8.0
  (CGrInt idris_int_float1_0.1) <- fetch idr_Main.average2_13.0
  idris_int_float2.1 <- _prim_int_float idris_int_float1_0.1
  idris_float_div2.0 <- _prim_float_div idris_int_float2.0 idris_int_float2.1
  v.6 <- pure (CGrFloat idris_float_div2.0)
  idr_Main.main5_val.0 <- pure v.6
  idr_Main.main5_53.0 <- store idr_Main.main5_val.0
  "idr_{APPLY_0}0_val.1.0" <- fetch idr_Main.main3.0
  idr_Prelude.Show.primNumShow4_val.0 <- case "idr_{APPLY_0}0_val.1.0" of
    (C"idr_{U_prim__floatToStr_1}") ->
      (CGrFloat idris_float_str1_0.0.0) <- fetch idr_Main.main5_53.0
      idris_float_str2.0.0 <- _prim_float_string idris_float_str1_0.0.0
      v.7 <- pure (CGrString idris_float_str2.0.0)
      pure v.7 -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0)
  v.8 <- pure (Cidr_Prelude.Show.Open)
  idr_Prelude.Show.primNumShow2_val.0 <- pure v.8
  ccp.3.0 <- case idr_Prelude.Show.primNumShow2_val.0 of
    (Cidr_Prelude.Show.Open) ->
      pure 0
  idr_Prelude.Show.primNumShow6.40.10.arity.1.0 <- pure 5
  idris_int_eq2.0 <- _prim_int_eq ccp.3.0 idr_Prelude.Show.primNumShow6.40.10.arity.1.0
  ccp.0.0 <- case idris_int_eq2.0 of
    #False ->
      pure 0
    #True ->
      pure 1
  v.9 <- pure (CGrInt ccp.0.0)
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val.0" <- pure v.9
  idr_Prelude.Show.primNumShow5_val_64.0 <- case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val.0" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0") ->
      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0" of
        0 ->
          idris_int_lt2.0 <- _prim_int_lt ccp.3.0 idr_Prelude.Show.primNumShow6.40.10.arity.1.0
          ccp.1.0 <- case idris_int_lt2.0 of
            #False ->
              pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0"
            #True ->
              pure 1
          v.10 <- pure (CGrInt ccp.1.0)
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val.0" <- pure v.10
          case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val.0" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_186.0") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_186.0" of
                0 ->
                  v.11 <- pure (Cidr_Prelude.Interfaces.GT)
                  pure v.11
                #default ->
                  v.12 <- pure (Cidr_Prelude.Interfaces.LT)
                  pure v.12
        #default ->
          v.13 <- pure (Cidr_Prelude.Interfaces.EQ)
          pure v.13
  idr_Prelude.Show.primNumShow5_val_63.0 <- case idr_Prelude.Show.primNumShow5_val_64.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      v.14 <- pure (Cidr_Prelude.Bool.True)
      pure v.14
    #default ->
      ccp.4.0 <- case idr_Prelude.Show.primNumShow2_val.0 of
        (Cidr_Prelude.Show.Open) ->
          pure 0
      idr_Prelude.Show.primNumShow7.32.13.arity.1.0 <- pure 5
      idris_int_eq2.1 <- _prim_int_eq ccp.4.0 idr_Prelude.Show.primNumShow7.32.13.arity.1.0
      ccp.0.1 <- case idris_int_eq2.1 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.15 <- pure (CGrInt ccp.0.1)
      idr_Prelude.Show.primNumShow6_val_68.0 <- pure v.15
      case idr_Prelude.Show.primNumShow6_val_68.0 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0.0 of
            0 ->
              v.16 <- pure (Cidr_Prelude.Bool.False)
              pure v.16
            #default ->
              v.17 <- pure (Cidr_Prelude.Bool.True)
              pure v.17
  idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_63.0 of
    (Cidr_Prelude.Bool.False) ->
      v.18 <- pure (Cidr_Prelude.Bool.False)
      pure v.18
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_80.32.14.arity.1.0 <- pure #""
      (CGrString idr_Prelude.Show.primNumShow4.40.12.arity.1.0) <- pure idr_Prelude.Show.primNumShow4_val.0
      idris_str_eq3.0 <- _prim_string_eq idr_Prelude.Show.primNumShow4.40.12.arity.1.0 idr_Prelude.Show.primNumShow6_80.32.14.arity.1.0
      ccp.2.0 <- case idris_str_eq3.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.19 <- pure (CGrInt ccp.2.0)
      idr_Prelude.Show.primNumShow6_val_78.0 <- pure v.19
      idr_Prelude.Show.primNumShow6_val_77.0 <- case idr_Prelude.Show.primNumShow6_val_78.0 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_83.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0_83.0 of
            0 ->
              v.20 <- pure (Cidr_Prelude.Bool.True)
              pure v.20
            #default ->
              v.21 <- pure (Cidr_Prelude.Bool.False)
              pure v.21
      idr_Prelude.Show.primNumShow6_84.0 <- store idr_Prelude.Show.primNumShow6_val_77.0
      v.22 <- pure (Cidr_Prelude.Bool.True)
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" <- pure v.22
      idr_Prelude.Show.primNumShow6_val_76.0 <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.0" <- fetch idr_Prelude.Show.primNumShow6_84.0
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.0" of
            (Cidr_Prelude.Bool.False) ->
              v.23 <- pure (Cidr_Prelude.Basics.No)
              pure v.23
            (Cidr_Prelude.Bool.True) ->
              v.24 <- pure (Cidr_Prelude.Basics.Yes)
              pure v.24
      case idr_Prelude.Show.primNumShow6_val_76.0 of
        (Cidr_Prelude.Basics.No) ->
          v.25 <- pure (Cidr_Prelude.Bool.False)
          pure v.25
        (Cidr_Prelude.Basics.Yes) ->
          (CGrString idr_Prelude.Show.primNumShow4.40.13.arity.1.0) <- pure idr_Prelude.Show.primNumShow4_val.0
          idris_str_head2.0 <- _prim_string_head idr_Prelude.Show.primNumShow4.40.13.arity.1.0
          idr_Prelude.Show.primNumShow8.32.16.arity.1.0 <- pure 45
          idris_int_eq2.2 <- _prim_int_eq idris_str_head2.0 idr_Prelude.Show.primNumShow8.32.16.arity.1.0
          ccp.0.2 <- case idris_int_eq2.2 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.26 <- pure (CGrInt ccp.0.2)
          idr_Prelude.Show.primNumShow7_val_89.0 <- pure v.26
          case idr_Prelude.Show.primNumShow7_val_89.0 of
            (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_94.0) ->
              case idr_Prelude.Show.primNumShow_cpat_LInt64_0_94.0 of
                0 ->
                  v.27 <- pure (Cidr_Prelude.Bool.False)
                  pure v.27
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
  unboxed.CGrString.6.0 <- case idr_Prelude.Show.primNumShow5_val.0 of
    (Cidr_Prelude.Bool.False) ->
      (CGrString unboxed.CGrString.5.0) <- pure idr_Prelude.Show.primNumShow4_val.0
      pure unboxed.CGrString.5.0
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow7_101.32.17.arity.1.0 <- pure #")"
      (CGrString idr_Prelude.Show.primNumShow4.40.15.arity.1.0) <- pure idr_Prelude.Show.primNumShow4_val.0
      idris_str_concat3.0 <- _prim_string_concat idr_Prelude.Show.primNumShow4.40.15.arity.1.0 idr_Prelude.Show.primNumShow7_101.32.17.arity.1.0
      idr_Prelude.Show.primNumShow6_98.40.16.arity.1.0 <- pure #"("
      idris_str_concat3.1 <- _prim_string_concat idr_Prelude.Show.primNumShow6_98.40.16.arity.1.0 idris_str_concat3.0
      pure idris_str_concat3.1
  idr_Main.main3_56.32.9.arity.1.0 <- pure #"\n"
  idris_str_concat3.2 <- _prim_string_concat unboxed.CGrString.6.0 idr_Main.main3_56.32.9.arity.1.0
  idr_Main.main1.40.8.arity.1.0 <- pure #"The average word length is: "
  idris_str_concat3.3 <- _prim_string_concat idr_Main.main1.40.8.arity.1.0 idris_str_concat3.2
  idr_Main.main2_60.32.11.arity.1.0 <- pure #"\n"
  idris_str_concat3.4 <- _prim_string_concat idris_str_concat3.3 idr_Main.main2_60.32.11.arity.1.0
  _prim_string_print idris_str_concat3.4 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_float1_0.1) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_float1_0.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.average0.48.0.arity.1.0)

idr_Prelude.List.dropWhile idr_Prelude.List.dropWhile1 idr_Prelude.List.dropWhile2 =
  idr_Prelude.List.dropWhile2_val <- fetch idr_Prelude.List.dropWhile2
  case idr_Prelude.List.dropWhile2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4) ->
      "idr_{APPLY_0}0_val.0" <- fetch idr_Prelude.List.dropWhile1
      idr_Prelude.List.dropWhile5_val <- case "idr_{APPLY_0}0_val.0" of
        (C"idr_{U_Prelude.Chars.isSpace_1}") ->
          (CGrInt "idr_{APPLY_0}1.0.48.2.arity.1") <- fetch idr_Prelude.List.dropWhile3
          idr_Prelude.Chars.isSpace1.32.1.arity.1.0 <- pure 32
          idris_int_eq2.3.0 <- _prim_int_eq "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace1.32.1.arity.1.0
          ccp.0.3.0 <- case idris_int_eq2.3.0 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.28 <- pure (CGrInt ccp.0.3.0)
          idr_Prelude.Chars.isSpace1_val.0 <- pure v.28
          case idr_Prelude.Chars.isSpace1_val.0 of
            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0.0) ->
              case idr_Prelude.Chars.isSpace_cpat_LInt64_0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace2.32.2.arity.1.0 <- pure 9
                  idris_int_eq2.4.0 <- _prim_int_eq "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace2.32.2.arity.1.0
                  ccp.0.4.0 <- case idris_int_eq2.4.0 of
                    #False ->
                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                    #True ->
                      pure 1
                  v.29 <- pure (CGrInt ccp.0.4.0)
                  idr_Prelude.Chars.isSpace2_val.0 <- pure v.29
                  case idr_Prelude.Chars.isSpace2_val.0 of
                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_24.0) ->
                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_24.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace3.32.3.arity.1.0 <- pure 13
                          idris_int_eq2.5.0 <- _prim_int_eq "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace3.32.3.arity.1.0
                          ccp.0.5.0 <- case idris_int_eq2.5.0 of
                            #False ->
                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                            #True ->
                              pure 1
                          v.30 <- pure (CGrInt ccp.0.5.0)
                          idr_Prelude.Chars.isSpace3_val.0 <- pure v.30
                          case idr_Prelude.Chars.isSpace3_val.0 of
                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_28.0) ->
                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_28.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.32.4.arity.1.0 <- pure 10
                                  idris_int_eq2.6.0 <- _prim_int_eq "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace4.32.4.arity.1.0
                                  ccp.0.6.0 <- case idris_int_eq2.6.0 of
                                    #False ->
                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                    #True ->
                                      pure 1
                                  v.31 <- pure (CGrInt ccp.0.6.0)
                                  idr_Prelude.Chars.isSpace4_val.0 <- pure v.31
                                  case idr_Prelude.Chars.isSpace4_val.0 of
                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_32.0) ->
                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_32.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace5.32.5.arity.1.0 <- pure 12
                                          idris_int_eq2.7.0 <- _prim_int_eq "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace5.32.5.arity.1.0
                                          ccp.0.7.0 <- case idris_int_eq2.7.0 of
                                            #False ->
                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                            #True ->
                                              pure 1
                                          v.32 <- pure (CGrInt ccp.0.7.0)
                                          idr_Prelude.Chars.isSpace5_val.0 <- pure v.32
                                          case idr_Prelude.Chars.isSpace5_val.0 of
                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_36.0) ->
                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_36.0 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace6.32.6.arity.1.0 <- pure 11
                                                  idris_int_eq2.8.0 <- _prim_int_eq "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace6.32.6.arity.1.0
                                                  ccp.0.8.0 <- case idris_int_eq2.8.0 of
                                                    #False ->
                                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                                    #True ->
                                                      pure 1
                                                  v.33 <- pure (CGrInt ccp.0.8.0)
                                                  idr_Prelude.Chars.isSpace6_val.0 <- pure v.33
                                                  case idr_Prelude.Chars.isSpace6_val.0 of
                                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_40.0) ->
                                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_40.0 of
                                                        0 ->
                                                          idr_Prelude.Chars.isSpace7.32.7.arity.1.0 <- pure 160
                                                          idris_int_eq2.9.0 <- _prim_int_eq "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace7.32.7.arity.1.0
                                                          ccp.0.9.0 <- case idris_int_eq2.9.0 of
                                                            #False ->
                                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.0
                                                            #True ->
                                                              pure 1
                                                          v.34 <- pure (CGrInt ccp.0.9.0)
                                                          idr_Prelude.Chars.isSpace7_val.0 <- pure v.34
                                                          case idr_Prelude.Chars.isSpace7_val.0 of
                                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_44.0) ->
                                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_44.0 of
                                                                0 ->
                                                                  v.35 <- pure (Cidr_Prelude.Bool.False)
                                                                  pure v.35
                                                                #default ->
                                                                  v.36 <- pure (Cidr_Prelude.Bool.True)
                                                                  pure v.36
                                                        #default ->
                                                          v.37 <- pure (Cidr_Prelude.Bool.True)
                                                          pure v.37
                                                #default ->
                                                  v.38 <- pure (Cidr_Prelude.Bool.True)
                                                  pure v.38
                                        #default ->
                                          v.39 <- pure (Cidr_Prelude.Bool.True)
                                          pure v.39
                                #default ->
                                  v.40 <- pure (Cidr_Prelude.Bool.True)
                                  pure v.40
                        #default ->
                          v.41 <- pure (Cidr_Prelude.Bool.True)
                          pure v.41
                #default ->
                  v.42 <- pure (Cidr_Prelude.Bool.True)
                  pure v.42 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_{APPLY_0}1.0.48.2.arity.1")
      case idr_Prelude.List.dropWhile5_val of
        (Cidr_Prelude.Bool.False) ->
          v.43 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4)
          pure v.43
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.dropWhile idr_Prelude.List.dropWhile1 idr_Prelude.List.dropWhile4
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.List.dropWhile2_val

idr_Prelude.List.length.unboxed idr_Prelude.List.length1 =
  idr_Prelude.List.length1_val <- fetch idr_Prelude.List.length1
  case idr_Prelude.List.length1_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.length2 idr_Prelude.List.length3) ->
      unboxed.CGrInt.9 <- idr_Prelude.List.length.unboxed idr_Prelude.List.length3
      v.44 <- pure (CGrInt unboxed.CGrInt.9)
      idr_Prelude.List.length4_val <- pure v.44
      idr_Prelude.List.length4_46 <- store idr_Prelude.List.length4_val
      v.45 <- pure (CGrInt 1)
      idr_Prelude.List.length5_val <- pure v.45
      idr_Prelude.List.length5 <- store idr_Prelude.List.length5_val
      (CGrInt idris_int_add0_1.0) <- fetch idr_Prelude.List.length4_46
      (CGrInt idris_int_add1_1.0) <- fetch idr_Prelude.List.length5
      idris_int_add2.0 <- _prim_int_add idris_int_add0_1.0 idris_int_add1_1.0
      pure idris_int_add2.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_add1_1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_add0_1.0)
    (Cidr_Prelude.List.Nil) ->
      pure 0

idr_Prelude.List.span idr_Prelude.List.span1 idr_Prelude.List.span2 =
  idr_Prelude.List.span2_val <- fetch idr_Prelude.List.span2
  case idr_Prelude.List.span2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4) ->
      "idr_{APPLY_0}0_val.2" <- fetch idr_Prelude.List.span1
      idr_Prelude.List.span5_val <- case "idr_{APPLY_0}0_val.2" of
        (C"idr_{U_Prelude.Strings.{words'_3}_1}") ->
          (CGrInt "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1") <- fetch idr_Prelude.List.span3
          idr_Prelude.Chars.isSpace1.32.1.arity.1.1 <- pure 32
          idris_int_eq2.3.1 <- _prim_int_eq "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace1.32.1.arity.1.1
          ccp.0.3.1 <- case idris_int_eq2.3.1 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.46 <- pure (CGrInt ccp.0.3.1)
          idr_Prelude.Chars.isSpace1_val.1 <- pure v.46
          "idr_Prelude.Strings.{words'_3}1_val.0" <- case idr_Prelude.Chars.isSpace1_val.1 of
            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0.1) ->
              case idr_Prelude.Chars.isSpace_cpat_LInt64_0.1 of
                0 ->
                  idr_Prelude.Chars.isSpace2.32.2.arity.1.1 <- pure 9
                  idris_int_eq2.4.1 <- _prim_int_eq "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace2.32.2.arity.1.1
                  ccp.0.4.1 <- case idris_int_eq2.4.1 of
                    #False ->
                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                    #True ->
                      pure 1
                  v.47 <- pure (CGrInt ccp.0.4.1)
                  idr_Prelude.Chars.isSpace2_val.1 <- pure v.47
                  case idr_Prelude.Chars.isSpace2_val.1 of
                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_24.1) ->
                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_24.1 of
                        0 ->
                          idr_Prelude.Chars.isSpace3.32.3.arity.1.1 <- pure 13
                          idris_int_eq2.5.1 <- _prim_int_eq "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace3.32.3.arity.1.1
                          ccp.0.5.1 <- case idris_int_eq2.5.1 of
                            #False ->
                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                            #True ->
                              pure 1
                          v.48 <- pure (CGrInt ccp.0.5.1)
                          idr_Prelude.Chars.isSpace3_val.1 <- pure v.48
                          case idr_Prelude.Chars.isSpace3_val.1 of
                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_28.1) ->
                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_28.1 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.32.4.arity.1.1 <- pure 10
                                  idris_int_eq2.6.1 <- _prim_int_eq "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace4.32.4.arity.1.1
                                  ccp.0.6.1 <- case idris_int_eq2.6.1 of
                                    #False ->
                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                    #True ->
                                      pure 1
                                  v.49 <- pure (CGrInt ccp.0.6.1)
                                  idr_Prelude.Chars.isSpace4_val.1 <- pure v.49
                                  case idr_Prelude.Chars.isSpace4_val.1 of
                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_32.1) ->
                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_32.1 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace5.32.5.arity.1.1 <- pure 12
                                          idris_int_eq2.7.1 <- _prim_int_eq "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace5.32.5.arity.1.1
                                          ccp.0.7.1 <- case idris_int_eq2.7.1 of
                                            #False ->
                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                            #True ->
                                              pure 1
                                          v.50 <- pure (CGrInt ccp.0.7.1)
                                          idr_Prelude.Chars.isSpace5_val.1 <- pure v.50
                                          case idr_Prelude.Chars.isSpace5_val.1 of
                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_36.1) ->
                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_36.1 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace6.32.6.arity.1.1 <- pure 11
                                                  idris_int_eq2.8.1 <- _prim_int_eq "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace6.32.6.arity.1.1
                                                  ccp.0.8.1 <- case idris_int_eq2.8.1 of
                                                    #False ->
                                                      pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                                    #True ->
                                                      pure 1
                                                  v.51 <- pure (CGrInt ccp.0.8.1)
                                                  idr_Prelude.Chars.isSpace6_val.1 <- pure v.51
                                                  case idr_Prelude.Chars.isSpace6_val.1 of
                                                    (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_40.1) ->
                                                      case idr_Prelude.Chars.isSpace_cpat_LInt64_0_40.1 of
                                                        0 ->
                                                          idr_Prelude.Chars.isSpace7.32.7.arity.1.1 <- pure 160
                                                          idris_int_eq2.9.1 <- _prim_int_eq "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace7.32.7.arity.1.1
                                                          ccp.0.9.1 <- case idris_int_eq2.9.1 of
                                                            #False ->
                                                              pure idr_Prelude.Chars.isSpace_cpat_LInt64_0.1
                                                            #True ->
                                                              pure 1
                                                          v.52 <- pure (CGrInt ccp.0.9.1)
                                                          idr_Prelude.Chars.isSpace7_val.1 <- pure v.52
                                                          case idr_Prelude.Chars.isSpace7_val.1 of
                                                            (CGrInt idr_Prelude.Chars.isSpace_cpat_LInt64_0_44.1) ->
                                                              case idr_Prelude.Chars.isSpace_cpat_LInt64_0_44.1 of
                                                                0 ->
                                                                  v.53 <- pure (Cidr_Prelude.Bool.False)
                                                                  pure v.53
                                                                #default ->
                                                                  v.54 <- pure (Cidr_Prelude.Bool.True)
                                                                  pure v.54
                                                        #default ->
                                                          v.55 <- pure (Cidr_Prelude.Bool.True)
                                                          pure v.55
                                                #default ->
                                                  v.56 <- pure (Cidr_Prelude.Bool.True)
                                                  pure v.56
                                        #default ->
                                          v.57 <- pure (Cidr_Prelude.Bool.True)
                                          pure v.57
                                #default ->
                                  v.58 <- pure (Cidr_Prelude.Bool.True)
                                  pure v.58
                        #default ->
                          v.59 <- pure (Cidr_Prelude.Bool.True)
                          pure v.59
                #default ->
                  v.60 <- pure (Cidr_Prelude.Bool.True)
                  pure v.60
          case "idr_Prelude.Strings.{words'_3}1_val.0" of
            (Cidr_Prelude.Bool.False) ->
              v.61 <- pure (Cidr_Prelude.Bool.True)
              pure v.61
            (Cidr_Prelude.Bool.True) ->
              v.62 <- pure (Cidr_Prelude.Bool.False)
              pure v.62 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1")
      case idr_Prelude.List.span5_val of
        (Cidr_Prelude.Bool.False) ->
          v.63 <- pure (Cidr_Prelude.List.Nil)
          idr_Prelude.List.span6_val <- pure v.63
          idr_Prelude.List.span6 <- store idr_Prelude.List.span6_val
          v.64 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4)
          idr_Prelude.List.span7_val <- pure v.64
          idr_Prelude.List.span7 <- store idr_Prelude.List.span7_val
          v.65 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span6 idr_Prelude.List.span7)
          pure v.65
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.span6_val_106 <- idr_Prelude.List.span idr_Prelude.List.span1 idr_Prelude.List.span4
          (Cidr_Builtins.MkPair idr_Prelude.List.span7_111 idr_Prelude.List.span8) <- pure idr_Prelude.List.span6_val_106
          v.66 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span7_111)
          idr_Prelude.List.span9_val <- pure v.66
          idr_Prelude.List.span9 <- store idr_Prelude.List.span9_val
          v.67 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span9 idr_Prelude.List.span8)
          pure v.67
    (Cidr_Prelude.List.Nil) ->
      v.68 <- pure (Cidr_Prelude.List.Nil)
      idr_Prelude.List.span3_val <- pure v.68
      idr_Prelude.List.span3_112 <- store idr_Prelude.List.span3_val
      idr_Prelude.List.span4_113 <- store idr_Prelude.List.span3_val
      v.69 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span3_112 idr_Prelude.List.span4_113)
      pure v.69

idr_Prelude.Strings.words idr_Prelude.Strings.words0.48.arity.1 =
  v.70 <- pure (C"idr_{U_Prelude.Strings.{words_2}_1}")
  idr_Prelude.Strings.words3_val <- pure v.70
  idr_Prelude.Strings.words3 <- store idr_Prelude.Strings.words3_val
  idr_Prelude.Strings.words4.32.20.arity.1 <- pure #""
  idris_str_eq3.1 <- _prim_string_eq idr_Prelude.Strings.words0.48.arity.1 idr_Prelude.Strings.words4.32.20.arity.1
  ccp.2.1 <- case idris_str_eq3.1 of
    #False ->
      pure 0
    #True ->
      pure 1
  v.71 <- pure (CGrInt ccp.2.1)
  idr_Prelude.Strings.words4_val_129 <- pure v.71
  idr_Prelude.Strings.words4_val_128 <- case idr_Prelude.Strings.words4_val_129 of
    (CGrInt idr_Prelude.Strings.words_cpat_LInt64_0) ->
      case idr_Prelude.Strings.words_cpat_LInt64_0 of
        0 ->
          v.72 <- pure (Cidr_Prelude.Bool.True)
          pure v.72
        #default ->
          v.73 <- pure (Cidr_Prelude.Bool.False)
          pure v.73
  idr_Prelude.Strings.words4_133 <- store idr_Prelude.Strings.words4_val_128
  v.74 <- pure (Cidr_Prelude.Bool.True)
  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.1" <- pure v.74
  idr_Prelude.Strings.words4_val_127 <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.1" of
    (Cidr_Prelude.Bool.True) ->
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.1" <- fetch idr_Prelude.Strings.words4_133
      case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.1" of
        (Cidr_Prelude.Bool.False) ->
          v.75 <- pure (Cidr_Prelude.Basics.No)
          pure v.75
        (Cidr_Prelude.Bool.True) ->
          v.76 <- pure (Cidr_Prelude.Basics.Yes)
          pure v.76
  idr_Prelude.Strings.words4_val_126 <- case idr_Prelude.Strings.words4_val_127 of
    (Cidr_Prelude.Basics.No) ->
      v.77 <- pure (Cidr_Prelude.List.Nil)
      pure v.77
    (Cidr_Prelude.Basics.Yes) ->
      idris_str_head2.1 <- _prim_string_head idr_Prelude.Strings.words0.48.arity.1
      v.78 <- pure (CGrInt idris_str_head2.1)
      idr_Prelude.Strings.words5_val_136 <- pure v.78
      idr_Prelude.Strings.words5_137 <- store idr_Prelude.Strings.words5_val_136
      idris_str_tail2.0 <- _prim_string_tail idr_Prelude.Strings.words0.48.arity.1
      idr_Prelude.Strings.words8.32.23.arity.1 <- pure #""
      idris_str_eq3.2 <- _prim_string_eq idris_str_tail2.0 idr_Prelude.Strings.words8.32.23.arity.1
      ccp.2.2 <- case idris_str_eq3.2 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.79 <- pure (CGrInt ccp.2.2)
      idr_Prelude.Strings.words7_val_141 <- pure v.79
      idr_Prelude.Strings.words7_val_140 <- case idr_Prelude.Strings.words7_val_141 of
        (CGrInt idr_Prelude.Strings.words_cpat_LInt64_0_145) ->
          case idr_Prelude.Strings.words_cpat_LInt64_0_145 of
            0 ->
              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.1"
            #default ->
              v.80 <- pure (Cidr_Prelude.Bool.False)
              pure v.80
      idr_Prelude.Strings.words7_146 <- store idr_Prelude.Strings.words7_val_140
      idr_Prelude.Strings.words7_val_139 <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.1" of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.2" <- fetch idr_Prelude.Strings.words7_146
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.2" of
            (Cidr_Prelude.Bool.False) ->
              v.81 <- pure (Cidr_Prelude.Basics.No)
              pure v.81
            (Cidr_Prelude.Bool.True) ->
              v.82 <- pure (Cidr_Prelude.Basics.Yes)
              pure v.82
      idr_Prelude.Strings.words7_val <- case idr_Prelude.Strings.words7_val_139 of
        (Cidr_Prelude.Basics.No) ->
          v.83 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.83
        (Cidr_Prelude.Basics.Yes) ->
          idris_str_tail2.1 <- _prim_string_tail idr_Prelude.Strings.words0.48.arity.1
          idris_str_head2.2 <- _prim_string_head idris_str_tail2.1
          v.84 <- pure (CGrInt idris_str_head2.2)
          idr_Prelude.Strings.words8_val_151 <- pure v.84
          idr_Prelude.Strings.words8_154 <- store idr_Prelude.Strings.words8_val_151
          idris_str_tail2.2 <- _prim_string_tail idr_Prelude.Strings.words0.48.arity.1
          idris_str_tail2.3 <- _prim_string_tail idris_str_tail2.2
          v.85 <- pure (CGrString idris_str_tail2.3)
          idr_Prelude.Strings.words9_val <- pure v.85
          idr_Prelude.Strings.words9_156 <- store idr_Prelude.Strings.words9_val
          v.86 <- pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.words8_154 idr_Prelude.Strings.words9_156)
          pure v.86
      idr_Prelude.Strings.words7_157 <- store idr_Prelude.Strings.words7_val
      idr_Prelude.Strings.words6_val <- idr__Prelude.Strings.unpack_with_36 idr_Prelude.Strings.words7_157
      idr_Prelude.Strings.words6_158 <- store idr_Prelude.Strings.words6_val
      v.87 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words5_137 idr_Prelude.Strings.words6_158)
      pure v.87
  idr_Prelude.Strings.words4_159 <- store idr_Prelude.Strings.words4_val_126
  idr_Prelude.Strings.words4_val <- idr_Prelude.Strings.words' idr_Prelude.Strings.words4_159
  idr_Prelude.Strings.words4_160 <- store idr_Prelude.Strings.words4_val
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" idr_Prelude.Strings.words3 idr_Prelude.Strings.words4_160

idr_Prelude.Strings.words' idr_Prelude.Strings.words'0 =
  v.88 <- pure (C"idr_{U_Prelude.Chars.isSpace_1}")
  idr_Prelude.Strings.words'2_val <- pure v.88
  idr_Prelude.Strings.words'2 <- store idr_Prelude.Strings.words'2_val
  idr_Prelude.Strings.words'1_val <- idr_Prelude.List.dropWhile idr_Prelude.Strings.words'2 idr_Prelude.Strings.words'0
  case idr_Prelude.Strings.words'1_val of
    (Cidr_Prelude.List.Nil) ->
      v.89 <- pure (Cidr_Prelude.List.Nil)
      pure v.89
    #default ->
      v.90 <- pure (C"idr_{U_Prelude.Strings.{words'_3}_1}")
      idr_Prelude.Strings.words'3_val <- pure v.90
      idr_Prelude.Strings.words'3 <- store idr_Prelude.Strings.words'3_val
      idr_Prelude.Strings.words'5 <- store idr_Prelude.Strings.words'2_val
      idr_Prelude.Strings.words'4_val <- idr_Prelude.List.dropWhile idr_Prelude.Strings.words'5 idr_Prelude.Strings.words'0
      idr_Prelude.Strings.words'4_168 <- store idr_Prelude.Strings.words'4_val
      idr_Prelude.Strings.words'2_val_164 <- idr_Prelude.List.span idr_Prelude.Strings.words'3 idr_Prelude.Strings.words'4_168
      (Cidr_Builtins.MkPair idr_Prelude.Strings.words'3_171 idr_Prelude.Strings.words'4_172) <- pure idr_Prelude.Strings.words'2_val_164
      idr_Prelude.Strings.words'5_val_173 <- idr_Prelude.Strings.words' idr_Prelude.Strings.words'4_172
      idr_Prelude.Strings.words'5_174 <- store idr_Prelude.Strings.words'5_val_173
      v.91 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words'3_171 idr_Prelude.Strings.words'5_174)
      pure v.91

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06") ->
      "idr_{APPLY_0}0_val.3" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" <- case "idr_{APPLY_0}0_val.3" of
        (C"idr_{U_Main.{average_0}_2}") ->
          v.92 <- pure (C"idr_{U_Main.{average_0}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          pure v.92
        (C"idr_{U_prim__strCons_2}") ->
          v.93 <- pure (C"idr_{U_prim__strCons_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          pure v.93
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val" <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_181" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
      "idr_{APPLY_0}0_val.4" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07"
      case "idr_{APPLY_0}0_val.4" of
        (C"idr_{U_Main.{average_0}_1}" "idr_{APPLY_0}2.4") ->
          (CGrInt idris_int_add0_1.1.0) <- fetch "idr_{APPLY_0}2.4"
          (CGrInt idris_int_add1_1.1.0) <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_181"
          idris_int_add2.1.0 <- _prim_int_add idris_int_add0_1.1.0 idris_int_add1_1.1.0
          v.94 <- pure (CGrInt idris_int_add2.1.0)
          pure v.94 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_add1_1.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_add0_1.1.0)
        (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_175.4") ->
          (CGrInt idris_str_cons1_0.0.0) <- fetch "idr_{APPLY_0}2_175.4"
          (CGrString idris_str_cons2_0.0.0) <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_181"
          idris_str_cons3.0.0 <- _prim_string_cons idris_str_cons1_0.0.0 idris_str_cons2_0.0.0
          v.95 <- pure (CGrString idris_str_cons3.0.0)
          pure v.95 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_cons2_0.0.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_str_cons1_0.0.0)
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03"

"idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03" =
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"
  case "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05") ->
      "idr_{APPLY_0}0_val.5" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val" <- case "idr_{APPLY_0}0_val.5" of
        (C"idr_{U_Main.{average_1}_1}") ->
          (CGrString idris_str_len2.0) <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
          idris_str_len3.0 <- _prim_string_len idris_str_len2.0
          v.96 <- pure (CGrInt idris_str_len3.0)
          "idr_Main.{average_1}1_val.0" <- pure v.96
          "idr_Main.{average_1}1.0" <- store "idr_Main.{average_1}1_val.0"
          (CGrInt idr_prim__zextInt_BigInt0.32.19.arity.1.0.0) <- fetch "idr_Main.{average_1}1.0"
          idris_lz_ext3.0 <- _prim_int_add idr_prim__zextInt_BigInt0.32.19.arity.1.0.0 0
          v.97 <- pure (CGrInt idris_lz_ext3.0)
          pure v.97 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idr_prim__zextInt_BigInt0.32.19.arity.1.0.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_len2.0)
        (C"idr_{U_Prelude.Strings.{words_2}_1}") ->
          v.98 <- pure (C"idr_{U_prim__strCons_2}")
          "idr_Prelude.Strings.{words_2}3_val.0" <- pure v.98
          "idr_Prelude.Strings.{words_2}3.0" <- store "idr_Prelude.Strings.{words_2}3_val.0"
          v.99 <- pure (CGrString #"")
          "idr_Prelude.Strings.{words_2}4_val.0" <- pure v.99
          "idr_Prelude.Strings.{words_2}4.0" <- store "idr_Prelude.Strings.{words_2}4_val.0"
          "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Strings.{words_2}3.0" "idr_Prelude.Strings.{words_2}4.0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val" <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_183" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val"
      v.100 <- pure (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_183")
      pure v.100
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val"

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_365.32.30.arity.1 <- pure #""
      (CGrString idr__Prelude.Strings.unpack_with_363.40.22.arity.1) <- fetch idr__Prelude.Strings.unpack_with_363
      idris_str_eq3.3 <- _prim_string_eq idr__Prelude.Strings.unpack_with_363.40.22.arity.1 idr__Prelude.Strings.unpack_with_365.32.30.arity.1
      ccp.2.3 <- case idris_str_eq3.3 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.101 <- pure (CGrInt ccp.2.3)
      idr__Prelude.Strings.unpack_with_365_val_190 <- pure v.101
      idr__Prelude.Strings.unpack_with_365_val_189 <- case idr__Prelude.Strings.unpack_with_365_val_190 of
        (CGrInt idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0) ->
          case idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0 of
            0 ->
              v.102 <- pure (Cidr_Prelude.Bool.True)
              pure v.102
            #default ->
              v.103 <- pure (Cidr_Prelude.Bool.False)
              pure v.103
      idr__Prelude.Strings.unpack_with_365_194 <- store idr__Prelude.Strings.unpack_with_365_val_189
      v.104 <- pure (Cidr_Prelude.Bool.True)
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.3" <- pure v.104
      idr__Prelude.Strings.unpack_with_365_val_188 <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.3" of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.3" <- fetch idr__Prelude.Strings.unpack_with_365_194
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.3" of
            (Cidr_Prelude.Bool.False) ->
              v.105 <- pure (Cidr_Prelude.Basics.No)
              pure v.105
            (Cidr_Prelude.Bool.True) ->
              v.106 <- pure (Cidr_Prelude.Basics.Yes)
              pure v.106
      idr__Prelude.Strings.unpack_with_365_val <- case idr__Prelude.Strings.unpack_with_365_val_188 of
        (Cidr_Prelude.Basics.No) ->
          v.107 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.107
        (Cidr_Prelude.Basics.Yes) ->
          idris_str_head2.3 <- _prim_string_head idr__Prelude.Strings.unpack_with_363.40.22.arity.1
          v.108 <- pure (CGrInt idris_str_head2.3)
          idr__Prelude.Strings.unpack_with_366_val_197 <- pure v.108
          idr__Prelude.Strings.unpack_with_366_198 <- store idr__Prelude.Strings.unpack_with_366_val_197
          idris_str_tail2.4 <- _prim_string_tail idr__Prelude.Strings.unpack_with_363.40.22.arity.1
          v.109 <- pure (CGrString idris_str_tail2.4)
          idr__Prelude.Strings.unpack_with_367_val <- pure v.109
          idr__Prelude.Strings.unpack_with_367 <- store idr__Prelude.Strings.unpack_with_367_val
          v.110 <- pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_198 idr__Prelude.Strings.unpack_with_367)
          pure v.110
      idr__Prelude.Strings.unpack_with_365_199 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_365_199
      idr__Prelude.Strings.unpack_with_364_200 <- store idr__Prelude.Strings.unpack_with_364_val
      v.111 <- pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_200)
      pure v.111 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr__Prelude.Strings.unpack_with_363.40.22.arity.1)
    (Cidr_Prelude.Strings.StrNil) ->
      v.112 <- pure (Cidr_Prelude.List.Nil)
      pure v.112
