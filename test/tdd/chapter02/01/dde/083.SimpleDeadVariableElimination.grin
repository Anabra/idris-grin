primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  v.65 <- pure (C"idr_{U_Main.{average_0}_2}")
  idr_Main.average3.0 <- store v.65
  v.66 <- pure (CGrInt 0)
  idr_Main.average4.0 <- store v.66
  v.67 <- pure (C"idr_{U_Main.{average_1}_1}")
  idr_Main.average7.0 <- store v.67
  idr_Main.average0.48.0.arity.1.0 <- pure #"This is a test sentence!"
  v.68 <- pure (C"idr_{U_Prelude.Strings.{words_2}_1}")
  idr_Prelude.Strings.words3.0 <- store v.68
  idr_Prelude.Strings.words4.32.20.arity.1.0 <- pure #""
  idris_str_eq3.1.0 <- _prim_string_eq $ idr_Main.average0.48.0.arity.1.0 idr_Prelude.Strings.words4.32.20.arity.1.0
  ccp.2.1.0 <- case idris_str_eq3.1.0 of
    #False ->
      pure 0
    #True ->
      pure 1
  idr_Prelude.Strings.words4_val_126.0 <- case ccp.2.1.0 of
    0 ->
      idris_str_head2.1.0.0.0 <- _prim_string_head $ idr_Main.average0.48.0.arity.1.0
      v.72.0 <- pure (CGrInt idris_str_head2.1.0.0.0)
      idr_Prelude.Strings.words5_137.0.0.0 <- store v.72.0
      idris_str_tail2.0.0.0.0 <- _prim_string_tail $ idr_Main.average0.48.0.arity.1.0
      idris_str_eq3.2.0.0.0 <- _prim_string_eq $ idris_str_tail2.0.0.0.0 idr_Prelude.Strings.words4.32.20.arity.1.0
      ccp.2.2.0.0.0 <- case idris_str_eq3.2.0.0.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Prelude.Strings.words7_val.0.0.0 <- case ccp.2.2.0.0.0 of
        0 ->
          idris_str_head2.2.0.0.0.0.0 <- _prim_string_head $ idris_str_tail2.0.0.0.0
          v.73.0 <- pure (CGrInt idris_str_head2.2.0.0.0.0.0)
          idr_Prelude.Strings.words8_154.0.0.0.0.0 <- store v.73.0
          idris_str_tail2.3.0.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.0.0.0.0
          v.74.0 <- pure (CGrString idris_str_tail2.3.0.0.0.0.0)
          idr_Prelude.Strings.words9_156.0.0.0.0.0 <- store v.74.0
          v.75.0 <- pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.words8_154.0.0.0.0.0 idr_Prelude.Strings.words9_156.0.0.0.0.0)
          pure v.75.0
        #default ->
          v.76.0 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.76.0
      idr_Prelude.Strings.words7_157.0.0.0 <- store idr_Prelude.Strings.words7_val.0.0.0
      idr_Prelude.Strings.words6_val.0.0.0 <- idr__Prelude.Strings.unpack_with_36 $ idr_Prelude.Strings.words7_157.0.0.0
      idr_Prelude.Strings.words6_158.0.0.0 <- store idr_Prelude.Strings.words6_val.0.0.0
      v.77.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words5_137.0.0.0 idr_Prelude.Strings.words6_158.0.0.0)
      pure v.77.0
    #default ->
      v.71.0 <- pure (Cidr_Prelude.List.Nil)
      pure v.71.0
  idr_Prelude.Strings.words4_159.0 <- store idr_Prelude.Strings.words4_val_126.0
  idr_Prelude.Strings.words4_val.0 <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words4_159.0
  idr_Prelude.Strings.words4_160.0 <- store idr_Prelude.Strings.words4_val.0
  idr_Main.average8_val.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Prelude.Strings.words3.0 idr_Prelude.Strings.words4_160.0
  idr_Main.average8.0 <- store idr_Main.average8_val.0
  idr_Main.average5_val.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Main.average7.0 idr_Main.average8.0
  idr_Main.average5_4.0 <- store idr_Main.average5_val.0
  idr_Main.average1_val_1.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ idr_Main.average3.0 idr_Main.average4.0 idr_Main.average5_4.0
  (CGrInt idris_int_float1_0.0) <- pure idr_Main.average1_val_1.0
  idris_int_float2.0 <- _prim_int_float $ idris_int_float1_0.0
  unboxed.CGrInt.1.0 <- idr_Prelude.List.length.unboxed $ idr_Main.average8.0
  idris_int_float2.1 <- _prim_int_float $ unboxed.CGrInt.1.0
  idris_float_div2.0 <- _prim_float_div $ idris_int_float2.0 idris_int_float2.1
  idris_float_str2.0.0 <- _prim_float_string $ idris_float_div2.0
  ccp.3.0 <- pure 0
  idr_Prelude.Show.primNumShow6.40.10.arity.1.0 <- pure 5
  idris_int_eq2.0 <- _prim_int_eq $ ccp.3.0 idr_Prelude.Show.primNumShow6.40.10.arity.1.0
  ccp.0.0 <- case idris_int_eq2.0 of
    #False ->
      pure ccp.3.0
    #True ->
      pure 1
  idr_Prelude.Show.primNumShow5_val_64.0 <- case ccp.0.0 of
    0 ->
      idris_int_lt2.0 <- _prim_int_lt $ ccp.3.0 idr_Prelude.Show.primNumShow6.40.10.arity.1.0
      ccp.1.0 <- case idris_int_lt2.0 of
        #False ->
          pure ccp.0.0
        #True ->
          pure 1
      case ccp.1.0 of
        0 ->
          v.78 <- pure (Cidr_Prelude.Interfaces.GT)
          pure v.78
        #default ->
          v.79 <- pure (Cidr_Prelude.Interfaces.LT)
          pure v.79
    #default ->
      v.80 <- pure (Cidr_Prelude.Interfaces.EQ)
      pure v.80
  idr_Prelude.Show.primNumShow5_val_63.0 <- case idr_Prelude.Show.primNumShow5_val_64.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      v.81 <- pure (Cidr_Prelude.Bool.True)
      pure v.81
    #default ->
      ccp.0.1 <- case idris_int_eq2.0 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      case ccp.0.1 of
        0 ->
          v.82 <- pure (Cidr_Prelude.Bool.False)
          pure v.82
        #default ->
          v.83 <- pure (Cidr_Prelude.Bool.True)
          pure v.83
  idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_63.0 of
    (Cidr_Prelude.Bool.False) ->
      v.84 <- pure (Cidr_Prelude.Bool.False)
      pure v.84
    (Cidr_Prelude.Bool.True) ->
      idris_str_eq3.0 <- _prim_string_eq $ idris_float_str2.0.0 idr_Prelude.Strings.words4.32.20.arity.1.0
      ccp.2.0 <- case idris_str_eq3.0 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow6_val_77.0 <- case ccp.2.0 of
        0 ->
          v.85 <- pure (Cidr_Prelude.Bool.True)
          pure v.85
        #default ->
          v.86 <- pure (Cidr_Prelude.Bool.False)
          pure v.86
      v.87 <- pure (Cidr_Prelude.Bool.True)
      case idr_Prelude.Show.primNumShow6_val_77.0 of
        (Cidr_Prelude.Bool.False) ->
          v.88 <- pure (Cidr_Prelude.Bool.False)
          pure v.88
        (Cidr_Prelude.Bool.True) ->
          idris_str_head2.0.0 <- _prim_string_head $ idris_float_str2.0.0
          idr_Prelude.Show.primNumShow8.32.16.arity.1.0.0 <- pure 45
          idris_int_eq2.2.0 <- _prim_int_eq $ idris_str_head2.0.0 idr_Prelude.Show.primNumShow8.32.16.arity.1.0.0
          ccp.0.2.0 <- case idris_int_eq2.2.0 of
            #False ->
              pure ccp.3.0
            #True ->
              pure 1
          case ccp.0.2.0 of
            0 ->
              v.89 <- pure (Cidr_Prelude.Bool.False)
              pure v.89
            #default ->
              pure v.87
  unboxed.CGrString.6.0 <- case idr_Prelude.Show.primNumShow5_val.0 of
    (Cidr_Prelude.Bool.False) ->
      pure idris_float_str2.0.0
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow7_101.32.17.arity.1.0 <- pure #")"
      idris_str_concat3.0 <- _prim_string_concat $ idris_float_str2.0.0 idr_Prelude.Show.primNumShow7_101.32.17.arity.1.0
      idr_Prelude.Show.primNumShow6_98.40.16.arity.1.0 <- pure #"("
      idris_str_concat3.1 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_98.40.16.arity.1.0 idris_str_concat3.0
      pure idris_str_concat3.1
  idr_Main.main3_56.32.9.arity.1.0 <- pure #"\n"
  idris_str_concat3.2 <- _prim_string_concat $ unboxed.CGrString.6.0 idr_Main.main3_56.32.9.arity.1.0
  idr_Main.main1.40.8.arity.1.0 <- pure #"The average word length is: "
  idris_str_concat3.3 <- _prim_string_concat $ idr_Main.main1.40.8.arity.1.0 idris_str_concat3.2
  idris_str_concat3.4 <- _prim_string_concat $ idris_str_concat3.3 idr_Main.main3_56.32.9.arity.1.0
  _prim_string_print $ idris_str_concat3.4

idr_Prelude.List.dropWhile idr_Prelude.List.dropWhile2 =
  idr_Prelude.List.dropWhile2_val <- fetch idr_Prelude.List.dropWhile2
  case idr_Prelude.List.dropWhile2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4) ->
      p.8 <- fetch idr_Prelude.List.dropWhile3
      (CGrInt "idr_{APPLY_0}1.0.48.2.arity.1") <- pure p.8
      idr_Prelude.Chars.isSpace1.32.1.arity.1.0 <- pure 32
      idris_int_eq2.3.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace1.32.1.arity.1.0
      ccp.0.3.0 <- case idris_int_eq2.3.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Prelude.List.dropWhile5_val <- case ccp.0.3.0 of
        0 ->
          idr_Prelude.Chars.isSpace2.32.2.arity.1.0 <- pure 9
          idris_int_eq2.4.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace2.32.2.arity.1.0
          ccp.0.4.0 <- case idris_int_eq2.4.0 of
            #False ->
              pure ccp.0.3.0
            #True ->
              pure 1
          case ccp.0.4.0 of
            0 ->
              idr_Prelude.Chars.isSpace3.32.3.arity.1.0 <- pure 13
              idris_int_eq2.5.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace3.32.3.arity.1.0
              ccp.0.5.0 <- case idris_int_eq2.5.0 of
                #False ->
                  pure ccp.0.3.0
                #True ->
                  pure 1
              case ccp.0.5.0 of
                0 ->
                  idr_Prelude.Chars.isSpace4.32.4.arity.1.0 <- pure 10
                  idris_int_eq2.6.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace4.32.4.arity.1.0
                  ccp.0.6.0 <- case idris_int_eq2.6.0 of
                    #False ->
                      pure ccp.0.3.0
                    #True ->
                      pure 1
                  case ccp.0.6.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.32.5.arity.1.0 <- pure 12
                      idris_int_eq2.7.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace5.32.5.arity.1.0
                      ccp.0.7.0 <- case idris_int_eq2.7.0 of
                        #False ->
                          pure ccp.0.3.0
                        #True ->
                          pure 1
                      case ccp.0.7.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.32.6.arity.1.0 <- pure 11
                          idris_int_eq2.8.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace6.32.6.arity.1.0
                          ccp.0.8.0 <- case idris_int_eq2.8.0 of
                            #False ->
                              pure ccp.0.3.0
                            #True ->
                              pure 1
                          case ccp.0.8.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.32.7.arity.1.0 <- pure 160
                              idris_int_eq2.9.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace7.32.7.arity.1.0
                              ccp.0.9.0 <- case idris_int_eq2.9.0 of
                                #False ->
                                  pure ccp.0.3.0
                                #True ->
                                  pure 1
                              case ccp.0.9.0 of
                                0 ->
                                  v.90 <- pure (Cidr_Prelude.Bool.False)
                                  pure v.90
                                #default ->
                                  v.91 <- pure (Cidr_Prelude.Bool.True)
                                  pure v.91
                            #default ->
                              v.92 <- pure (Cidr_Prelude.Bool.True)
                              pure v.92
                        #default ->
                          v.93 <- pure (Cidr_Prelude.Bool.True)
                          pure v.93
                    #default ->
                      v.94 <- pure (Cidr_Prelude.Bool.True)
                      pure v.94
                #default ->
                  v.95 <- pure (Cidr_Prelude.Bool.True)
                  pure v.95
            #default ->
              v.96 <- pure (Cidr_Prelude.Bool.True)
              pure v.96
        #default ->
          v.97 <- pure (Cidr_Prelude.Bool.True)
          pure v.97
      case idr_Prelude.List.dropWhile5_val of
        (Cidr_Prelude.Bool.False) ->
          v.98 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4)
          pure v.98
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.dropWhile $ idr_Prelude.List.dropWhile4
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.List.dropWhile2_val

idr_Prelude.List.length.unboxed idr_Prelude.List.length1 =
  idr_Prelude.List.length1_val <- fetch idr_Prelude.List.length1
  case idr_Prelude.List.length1_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.length2 idr_Prelude.List.length3) ->
      unboxed.CGrInt.9 <- idr_Prelude.List.length.unboxed $ idr_Prelude.List.length3
      idris_int_add1_1.0 <- pure 1
      idris_int_add2.0 <- _prim_int_add $ unboxed.CGrInt.9 idris_int_add1_1.0
      pure idris_int_add2.0
    (Cidr_Prelude.List.Nil) ->
      pure 0

idr_Prelude.List.span idr_Prelude.List.span2 =
  idr_Prelude.List.span2_val <- fetch idr_Prelude.List.span2
  case idr_Prelude.List.span2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4) ->
      p.11 <- fetch idr_Prelude.List.span3
      (CGrInt "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1") <- pure p.11
      idr_Prelude.Chars.isSpace1.32.1.arity.1.1 <- pure 32
      idris_int_eq2.3.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace1.32.1.arity.1.1
      ccp.0.3.1 <- case idris_int_eq2.3.1 of
        #False ->
          pure 0
        #True ->
          pure 1
      "idr_Prelude.Strings.{words'_3}1_val.0" <- case ccp.0.3.1 of
        0 ->
          idr_Prelude.Chars.isSpace2.32.2.arity.1.1 <- pure 9
          idris_int_eq2.4.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace2.32.2.arity.1.1
          ccp.0.4.1 <- case idris_int_eq2.4.1 of
            #False ->
              pure ccp.0.3.1
            #True ->
              pure 1
          case ccp.0.4.1 of
            0 ->
              idr_Prelude.Chars.isSpace3.32.3.arity.1.1 <- pure 13
              idris_int_eq2.5.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace3.32.3.arity.1.1
              ccp.0.5.1 <- case idris_int_eq2.5.1 of
                #False ->
                  pure ccp.0.3.1
                #True ->
                  pure 1
              case ccp.0.5.1 of
                0 ->
                  idr_Prelude.Chars.isSpace4.32.4.arity.1.1 <- pure 10
                  idris_int_eq2.6.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace4.32.4.arity.1.1
                  ccp.0.6.1 <- case idris_int_eq2.6.1 of
                    #False ->
                      pure ccp.0.3.1
                    #True ->
                      pure 1
                  case ccp.0.6.1 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.32.5.arity.1.1 <- pure 12
                      idris_int_eq2.7.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace5.32.5.arity.1.1
                      ccp.0.7.1 <- case idris_int_eq2.7.1 of
                        #False ->
                          pure ccp.0.3.1
                        #True ->
                          pure 1
                      case ccp.0.7.1 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.32.6.arity.1.1 <- pure 11
                          idris_int_eq2.8.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace6.32.6.arity.1.1
                          ccp.0.8.1 <- case idris_int_eq2.8.1 of
                            #False ->
                              pure ccp.0.3.1
                            #True ->
                              pure 1
                          case ccp.0.8.1 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.32.7.arity.1.1 <- pure 160
                              idris_int_eq2.9.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace7.32.7.arity.1.1
                              ccp.0.9.1 <- case idris_int_eq2.9.1 of
                                #False ->
                                  pure ccp.0.3.1
                                #True ->
                                  pure 1
                              case ccp.0.9.1 of
                                0 ->
                                  v.99 <- pure (Cidr_Prelude.Bool.False)
                                  pure v.99
                                #default ->
                                  v.100 <- pure (Cidr_Prelude.Bool.True)
                                  pure v.100
                            #default ->
                              v.101 <- pure (Cidr_Prelude.Bool.True)
                              pure v.101
                        #default ->
                          v.102 <- pure (Cidr_Prelude.Bool.True)
                          pure v.102
                    #default ->
                      v.103 <- pure (Cidr_Prelude.Bool.True)
                      pure v.103
                #default ->
                  v.104 <- pure (Cidr_Prelude.Bool.True)
                  pure v.104
            #default ->
              v.105 <- pure (Cidr_Prelude.Bool.True)
              pure v.105
        #default ->
          v.106 <- pure (Cidr_Prelude.Bool.True)
          pure v.106
      case "idr_Prelude.Strings.{words'_3}1_val.0" of
        (Cidr_Prelude.Bool.False) ->
          idr_Prelude.List.span6_val_106.0 <- idr_Prelude.List.span $ idr_Prelude.List.span4
          (Cidr_Builtins.MkPair idr_Prelude.List.span7_111.0 idr_Prelude.List.span8.0) <- pure idr_Prelude.List.span6_val_106.0
          v.107 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span7_111.0)
          idr_Prelude.List.span9.0 <- store v.107
          v.108 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span9.0 idr_Prelude.List.span8.0)
          pure v.108
        (Cidr_Prelude.Bool.True) ->
          v.109 <- pure (Cidr_Prelude.List.Nil)
          idr_Prelude.List.span6.0 <- store v.109
          v.110 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4)
          idr_Prelude.List.span7.0 <- store v.110
          v.111 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span6.0 idr_Prelude.List.span7.0)
          pure v.111
    (Cidr_Prelude.List.Nil) ->
      v.112 <- pure (Cidr_Prelude.List.Nil)
      idr_Prelude.List.span3_112 <- store v.112
      v.113 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span3_112 idr_Prelude.List.span3_112)
      pure v.113

idr_Prelude.Strings.words' idr_Prelude.Strings.words'0 =
  idr_Prelude.Strings.words'1_val <- idr_Prelude.List.dropWhile $ idr_Prelude.Strings.words'0
  case idr_Prelude.Strings.words'1_val of
    (Cidr_Prelude.List.Nil) ->
      v.114 <- pure (Cidr_Prelude.List.Nil)
      pure v.114
    #default ->
      idr_Prelude.Strings.words'4_168 <- store idr_Prelude.Strings.words'1_val
      idr_Prelude.Strings.words'2_val_164 <- idr_Prelude.List.span $ idr_Prelude.Strings.words'4_168
      (Cidr_Builtins.MkPair idr_Prelude.Strings.words'3_171 idr_Prelude.Strings.words'4_172) <- pure idr_Prelude.Strings.words'2_val_164
      idr_Prelude.Strings.words'5_val_173 <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words'4_172
      idr_Prelude.Strings.words'5_174 <- store idr_Prelude.Strings.words'5_val_173
      v.115 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words'3_171 idr_Prelude.Strings.words'5_174)
      pure v.115

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06") ->
      "idr_{APPLY_0}0_val.3" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" <- case "idr_{APPLY_0}0_val.3" of
        (C"idr_{U_Main.{average_0}_2}") ->
          v.116 <- pure (C"idr_{U_Main.{average_0}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          pure v.116
        (C"idr_{U_prim__strCons_2}") ->
          v.117 <- pure (C"idr_{U_prim__strCons_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          pure v.117
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val" <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06"
      case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" of
        (C"idr_{U_Main.{average_0}_1}" "idr_{APPLY_0}2.4") ->
          p.15 <- fetch "idr_{APPLY_0}2.4"
          (CGrInt idris_int_add0_1.1.0) <- pure p.15
          (CGrInt idris_int_add1_1.1.0) <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
          idris_int_add2.1.0 <- _prim_int_add $ idris_int_add0_1.1.0 idris_int_add1_1.1.0
          v.118 <- pure (CGrInt idris_int_add2.1.0)
          pure v.118
        (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_175.4") ->
          p.17 <- fetch "idr_{APPLY_0}2_175.4"
          (CGrInt idris_str_cons1_0.0.0) <- pure p.17
          (CGrString idris_str_cons2_0.0.0) <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
          idris_str_cons3.0.0 <- _prim_string_cons $ idris_str_cons1_0.0.0 idris_str_cons2_0.0.0
          v.119 <- pure (CGrString idris_str_cons3.0.0)
          pure v.119
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03"

"idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03" =
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"
  case "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05") ->
      "idr_{APPLY_0}0_val.5" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val" <- case "idr_{APPLY_0}0_val.5" of
        (C"idr_{U_Main.{average_1}_1}") ->
          p.19 <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
          (CGrString idris_str_len2.0) <- pure p.19
          idris_str_len3.0 <- _prim_string_len $ idris_str_len2.0
          idris_lz_ext3.0 <- _prim_int_add $ idris_str_len3.0 0
          v.120 <- pure (CGrInt idris_lz_ext3.0)
          pure v.120
        (C"idr_{U_Prelude.Strings.{words_2}_1}") ->
          v.121 <- pure (C"idr_{U_prim__strCons_2}")
          "idr_Prelude.Strings.{words_2}3.0" <- store v.121
          v.122 <- pure (CGrString #"")
          "idr_Prelude.Strings.{words_2}4.0" <- store v.122
          "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Strings.{words_2}3.0" "idr_Prelude.Strings.{words_2}4.0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val" <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_183" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val"
      v.123 <- pure (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_183")
      pure v.123
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val"

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_365.32.30.arity.1 <- pure #""
      p.20 <- fetch idr__Prelude.Strings.unpack_with_363
      (CGrString idr__Prelude.Strings.unpack_with_363.40.22.arity.1) <- pure p.20
      idris_str_eq3.3 <- _prim_string_eq $ idr__Prelude.Strings.unpack_with_363.40.22.arity.1 idr__Prelude.Strings.unpack_with_365.32.30.arity.1
      ccp.2.3 <- case idris_str_eq3.3 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr__Prelude.Strings.unpack_with_365_val <- case ccp.2.3 of
        0 ->
          idris_str_head2.3.0.0 <- _prim_string_head $ idr__Prelude.Strings.unpack_with_363.40.22.arity.1
          v.124 <- pure (CGrInt idris_str_head2.3.0.0)
          idr__Prelude.Strings.unpack_with_366_198.0.0 <- store v.124
          idris_str_tail2.4.0.0 <- _prim_string_tail $ idr__Prelude.Strings.unpack_with_363.40.22.arity.1
          v.125 <- pure (CGrString idris_str_tail2.4.0.0)
          idr__Prelude.Strings.unpack_with_367.0.0 <- store v.125
          v.126 <- pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_198.0.0 idr__Prelude.Strings.unpack_with_367.0.0)
          pure v.126
        #default ->
          v.127 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.127
      idr__Prelude.Strings.unpack_with_365_199 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 $ idr__Prelude.Strings.unpack_with_365_199
      idr__Prelude.Strings.unpack_with_364_200 <- store idr__Prelude.Strings.unpack_with_364_val
      v.128 <- pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_200)
      pure v.128
    (Cidr_Prelude.Strings.StrNil) ->
      v.129 <- pure (Cidr_Prelude.List.Nil)
      pure v.129
