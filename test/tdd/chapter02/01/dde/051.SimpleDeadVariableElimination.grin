primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  v.114 <- pure (CGrString #"This is a test sentence!")
  v.115 <- pure (C"idr_{U_Main.{average_0}_2}")
  idr_Main.average3.0 <- store v.115
  v.116 <- pure (CGrInt 0)
  idr_Main.average4.0 <- store v.116
  v.117 <- pure (C"idr_{U_Main.{average_1}_1}")
  idr_Main.average7.0 <- store v.117
  p.7 <- pure v.114
  (CGrString idr_Main.average0.48.0.arity.1.0) <- pure p.7
  idr_Main.average8_val.0 <- idr_Prelude.Strings.words $ idr_Main.average0.48.0.arity.1.0
  idr_Main.average8.0 <- store idr_Main.average8_val.0
  idr_Main.average5_val.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Main.average7.0 idr_Main.average8.0
  idr_Main.average5_4.0 <- store idr_Main.average5_val.0
  idr_Main.average1_val_1.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ idr_Main.average3.0 idr_Main.average4.0 idr_Main.average5_4.0
  p.6 <- pure idr_Main.average1_val_1.0
  (CGrInt idris_int_float1_0.0) <- pure p.6
  idris_int_float2.0 <- _prim_int_float $ idris_int_float1_0.0
  idr_Main.average3_val_11.0 <- pure idr_Main.average8_val.0
  idr_Main.average3_12.0 <- store idr_Main.average3_val_11.0
  unboxed.CGrInt.1.0 <- idr_Prelude.List.length.unboxed $ idr_Main.average3_12.0
  v.118 <- pure (CGrInt unboxed.CGrInt.1.0)
  p.5 <- pure v.118
  (CGrInt idris_int_float1_0.1) <- pure p.5
  idris_int_float2.1 <- _prim_int_float $ idris_int_float1_0.1
  idris_float_div2.0 <- _prim_float_div $ idris_int_float2.0 idris_int_float2.1
  v.119 <- pure (CGrFloat idris_float_div2.0)
  p.0 <- pure v.119
  (CGrFloat idris_float_str1_0.0.0) <- pure p.0
  idris_float_str2.0.0 <- _prim_float_string $ idris_float_str1_0.0.0
  ccp.3.0 <- pure 0
  idr_Prelude.Show.primNumShow6.40.10.arity.1.0 <- pure 5
  idris_int_eq2.0 <- _prim_int_eq $ ccp.3.0 idr_Prelude.Show.primNumShow6.40.10.arity.1.0
  ccp.0.0 <- case idris_int_eq2.0 of
    #False ->
      pure ccp.3.0
    #True ->
      pure 1
  idr_Prelude.Show.primNumShow5_val_64.0 <- case ccp.0.0 of
    0 ->
      idris_int_lt2.0 <- _prim_int_lt $ ccp.3.0 idr_Prelude.Show.primNumShow6.40.10.arity.1.0
      ccp.1.0 <- case idris_int_lt2.0 of
        #False ->
          pure ccp.0.0
        #True ->
          pure 1
      case ccp.1.0 of
        0 ->
          v.124 <- pure (Cidr_Prelude.Interfaces.GT)
          pure v.124
        #default ->
          v.125 <- pure (Cidr_Prelude.Interfaces.LT)
          pure v.125
    #default ->
      v.126 <- pure (Cidr_Prelude.Interfaces.EQ)
      pure v.126
  idr_Prelude.Show.primNumShow5_val_63.0 <- case idr_Prelude.Show.primNumShow5_val_64.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      v.127 <- pure (Cidr_Prelude.Bool.True)
      pure v.127
    #default ->
      ccp.4.0 <- pure ccp.3.0
      idr_Prelude.Show.primNumShow7.32.13.arity.1.0 <- pure idr_Prelude.Show.primNumShow6.40.10.arity.1.0
      idris_int_eq2.1 <- _prim_int_eq $ ccp.4.0 idr_Prelude.Show.primNumShow7.32.13.arity.1.0
      ccp.0.1 <- case idris_int_eq2.1 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      case ccp.0.1 of
        0 ->
          v.129 <- pure (Cidr_Prelude.Bool.False)
          pure v.129
        #default ->
          v.130 <- pure (Cidr_Prelude.Bool.True)
          pure v.130
  idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_63.0 of
    (Cidr_Prelude.Bool.False) ->
      v.131 <- pure (Cidr_Prelude.Bool.False)
      pure v.131
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_80.32.14.arity.1.0 <- pure #""
      idris_str_eq3.0 <- _prim_string_eq $ idris_float_str2.0.0 idr_Prelude.Show.primNumShow6_80.32.14.arity.1.0
      ccp.2.0 <- case idris_str_eq3.0 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow6_val_77.0 <- case ccp.2.0 of
        0 ->
          v.133 <- pure (Cidr_Prelude.Bool.True)
          pure v.133
        #default ->
          v.134 <- pure (Cidr_Prelude.Bool.False)
          pure v.134
      v.135 <- pure (Cidr_Prelude.Bool.True)
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.0" <- pure idr_Prelude.Show.primNumShow6_val_77.0
      case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.0" of
        (Cidr_Prelude.Bool.False) ->
          v.138.0 <- pure (Cidr_Prelude.Bool.False)
          pure v.138.0
        (Cidr_Prelude.Bool.True) ->
          idris_str_head2.0.0 <- _prim_string_head $ idris_float_str2.0.0
          idr_Prelude.Show.primNumShow8.32.16.arity.1.0.0 <- pure 45
          idris_int_eq2.2.0 <- _prim_int_eq $ idris_str_head2.0.0 idr_Prelude.Show.primNumShow8.32.16.arity.1.0.0
          ccp.0.2.0 <- case idris_int_eq2.2.0 of
            #False ->
              pure ccp.3.0
            #True ->
              pure 1
          case ccp.0.2.0 of
            0 ->
              v.140.0 <- pure (Cidr_Prelude.Bool.False)
              pure v.140.0
            #default ->
              pure v.135
  unboxed.CGrString.6.0 <- case idr_Prelude.Show.primNumShow5_val.0 of
    (Cidr_Prelude.Bool.False) ->
      pure idris_float_str2.0.0
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow7_101.32.17.arity.1.0 <- pure #")"
      idris_str_concat3.0 <- _prim_string_concat $ idris_float_str2.0.0 idr_Prelude.Show.primNumShow7_101.32.17.arity.1.0
      idr_Prelude.Show.primNumShow6_98.40.16.arity.1.0 <- pure #"("
      idris_str_concat3.1 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_98.40.16.arity.1.0 idris_str_concat3.0
      pure idris_str_concat3.1
  idr_Main.main3_56.32.9.arity.1.0 <- pure #"\n"
  idris_str_concat3.2 <- _prim_string_concat $ unboxed.CGrString.6.0 idr_Main.main3_56.32.9.arity.1.0
  idr_Main.main1.40.8.arity.1.0 <- pure #"The average word length is: "
  idris_str_concat3.3 <- _prim_string_concat $ idr_Main.main1.40.8.arity.1.0 idris_str_concat3.2
  idr_Main.main2_60.32.11.arity.1.0 <- pure idr_Main.main3_56.32.9.arity.1.0
  idris_str_concat3.4 <- _prim_string_concat $ idris_str_concat3.3 idr_Main.main2_60.32.11.arity.1.0
  _prim_string_print $ idris_str_concat3.4

idr_Prelude.List.dropWhile idr_Prelude.List.dropWhile2 =
  idr_Prelude.List.dropWhile2_val <- fetch idr_Prelude.List.dropWhile2
  case idr_Prelude.List.dropWhile2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4) ->
      p.8 <- fetch idr_Prelude.List.dropWhile3
      (CGrInt "idr_{APPLY_0}1.0.48.2.arity.1") <- pure p.8
      idr_Prelude.Chars.isSpace1.32.1.arity.1.0 <- pure 32
      idris_int_eq2.3.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace1.32.1.arity.1.0
      ccp.0.3.0 <- case idris_int_eq2.3.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Prelude.List.dropWhile5_val <- case ccp.0.3.0 of
        0 ->
          idr_Prelude.Chars.isSpace2.32.2.arity.1.0 <- pure 9
          idris_int_eq2.4.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace2.32.2.arity.1.0
          ccp.0.4.0 <- case idris_int_eq2.4.0 of
            #False ->
              pure ccp.0.3.0
            #True ->
              pure 1
          case ccp.0.4.0 of
            0 ->
              idr_Prelude.Chars.isSpace3.32.3.arity.1.0 <- pure 13
              idris_int_eq2.5.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace3.32.3.arity.1.0
              ccp.0.5.0 <- case idris_int_eq2.5.0 of
                #False ->
                  pure ccp.0.3.0
                #True ->
                  pure 1
              case ccp.0.5.0 of
                0 ->
                  idr_Prelude.Chars.isSpace4.32.4.arity.1.0 <- pure 10
                  idris_int_eq2.6.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace4.32.4.arity.1.0
                  ccp.0.6.0 <- case idris_int_eq2.6.0 of
                    #False ->
                      pure ccp.0.3.0
                    #True ->
                      pure 1
                  case ccp.0.6.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.32.5.arity.1.0 <- pure 12
                      idris_int_eq2.7.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace5.32.5.arity.1.0
                      ccp.0.7.0 <- case idris_int_eq2.7.0 of
                        #False ->
                          pure ccp.0.3.0
                        #True ->
                          pure 1
                      case ccp.0.7.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.32.6.arity.1.0 <- pure 11
                          idris_int_eq2.8.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace6.32.6.arity.1.0
                          ccp.0.8.0 <- case idris_int_eq2.8.0 of
                            #False ->
                              pure ccp.0.3.0
                            #True ->
                              pure 1
                          case ccp.0.8.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.32.7.arity.1.0 <- pure 160
                              idris_int_eq2.9.0 <- _prim_int_eq $ "idr_{APPLY_0}1.0.48.2.arity.1" idr_Prelude.Chars.isSpace7.32.7.arity.1.0
                              ccp.0.9.0 <- case idris_int_eq2.9.0 of
                                #False ->
                                  pure ccp.0.3.0
                                #True ->
                                  pure 1
                              case ccp.0.9.0 of
                                0 ->
                                  v.148 <- pure (Cidr_Prelude.Bool.False)
                                  pure v.148
                                #default ->
                                  v.149 <- pure (Cidr_Prelude.Bool.True)
                                  pure v.149
                            #default ->
                              v.150 <- pure (Cidr_Prelude.Bool.True)
                              pure v.150
                        #default ->
                          v.151 <- pure (Cidr_Prelude.Bool.True)
                          pure v.151
                    #default ->
                      v.152 <- pure (Cidr_Prelude.Bool.True)
                      pure v.152
                #default ->
                  v.153 <- pure (Cidr_Prelude.Bool.True)
                  pure v.153
            #default ->
              v.154 <- pure (Cidr_Prelude.Bool.True)
              pure v.154
        #default ->
          v.155 <- pure (Cidr_Prelude.Bool.True)
          pure v.155
      case idr_Prelude.List.dropWhile5_val of
        (Cidr_Prelude.Bool.False) ->
          v.156 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.dropWhile3 idr_Prelude.List.dropWhile4)
          pure v.156
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.List.dropWhile $ idr_Prelude.List.dropWhile4
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.List.dropWhile2_val

idr_Prelude.List.length.unboxed idr_Prelude.List.length1 =
  idr_Prelude.List.length1_val <- fetch idr_Prelude.List.length1
  case idr_Prelude.List.length1_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.length2 idr_Prelude.List.length3) ->
      unboxed.CGrInt.9 <- idr_Prelude.List.length.unboxed $ idr_Prelude.List.length3
      v.157 <- pure (CGrInt unboxed.CGrInt.9)
      v.158 <- pure (CGrInt 1)
      p.10 <- pure v.157
      (CGrInt idris_int_add0_1.0) <- pure p.10
      p.9 <- pure v.158
      (CGrInt idris_int_add1_1.0) <- pure p.9
      idris_int_add2.0 <- _prim_int_add $ idris_int_add0_1.0 idris_int_add1_1.0
      pure idris_int_add2.0
    (Cidr_Prelude.List.Nil) ->
      pure 0

idr_Prelude.List.span idr_Prelude.List.span2 =
  idr_Prelude.List.span2_val <- fetch idr_Prelude.List.span2
  case idr_Prelude.List.span2_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4) ->
      p.11 <- fetch idr_Prelude.List.span3
      (CGrInt "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1") <- pure p.11
      idr_Prelude.Chars.isSpace1.32.1.arity.1.1 <- pure 32
      idris_int_eq2.3.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace1.32.1.arity.1.1
      ccp.0.3.1 <- case idris_int_eq2.3.1 of
        #False ->
          pure 0
        #True ->
          pure 1
      "idr_Prelude.Strings.{words'_3}1_val.0" <- case ccp.0.3.1 of
        0 ->
          idr_Prelude.Chars.isSpace2.32.2.arity.1.1 <- pure 9
          idris_int_eq2.4.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace2.32.2.arity.1.1
          ccp.0.4.1 <- case idris_int_eq2.4.1 of
            #False ->
              pure ccp.0.3.1
            #True ->
              pure 1
          case ccp.0.4.1 of
            0 ->
              idr_Prelude.Chars.isSpace3.32.3.arity.1.1 <- pure 13
              idris_int_eq2.5.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace3.32.3.arity.1.1
              ccp.0.5.1 <- case idris_int_eq2.5.1 of
                #False ->
                  pure ccp.0.3.1
                #True ->
                  pure 1
              case ccp.0.5.1 of
                0 ->
                  idr_Prelude.Chars.isSpace4.32.4.arity.1.1 <- pure 10
                  idris_int_eq2.6.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace4.32.4.arity.1.1
                  ccp.0.6.1 <- case idris_int_eq2.6.1 of
                    #False ->
                      pure ccp.0.3.1
                    #True ->
                      pure 1
                  case ccp.0.6.1 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.32.5.arity.1.1 <- pure 12
                      idris_int_eq2.7.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace5.32.5.arity.1.1
                      ccp.0.7.1 <- case idris_int_eq2.7.1 of
                        #False ->
                          pure ccp.0.3.1
                        #True ->
                          pure 1
                      case ccp.0.7.1 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.32.6.arity.1.1 <- pure 11
                          idris_int_eq2.8.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace6.32.6.arity.1.1
                          ccp.0.8.1 <- case idris_int_eq2.8.1 of
                            #False ->
                              pure ccp.0.3.1
                            #True ->
                              pure 1
                          case ccp.0.8.1 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.32.7.arity.1.1 <- pure 160
                              idris_int_eq2.9.1 <- _prim_int_eq $ "idr_Prelude.Strings.{words'_3}0.0.48.4.arity.1" idr_Prelude.Chars.isSpace7.32.7.arity.1.1
                              ccp.0.9.1 <- case idris_int_eq2.9.1 of
                                #False ->
                                  pure ccp.0.3.1
                                #True ->
                                  pure 1
                              case ccp.0.9.1 of
                                0 ->
                                  v.166 <- pure (Cidr_Prelude.Bool.False)
                                  pure v.166
                                #default ->
                                  v.167 <- pure (Cidr_Prelude.Bool.True)
                                  pure v.167
                            #default ->
                              v.168 <- pure (Cidr_Prelude.Bool.True)
                              pure v.168
                        #default ->
                          v.169 <- pure (Cidr_Prelude.Bool.True)
                          pure v.169
                    #default ->
                      v.170 <- pure (Cidr_Prelude.Bool.True)
                      pure v.170
                #default ->
                  v.171 <- pure (Cidr_Prelude.Bool.True)
                  pure v.171
            #default ->
              v.172 <- pure (Cidr_Prelude.Bool.True)
              pure v.172
        #default ->
          v.173 <- pure (Cidr_Prelude.Bool.True)
          pure v.173
      case "idr_Prelude.Strings.{words'_3}1_val.0" of
        (Cidr_Prelude.Bool.False) ->
          idr_Prelude.List.span6_val_106.0 <- idr_Prelude.List.span $ idr_Prelude.List.span4
          (Cidr_Builtins.MkPair idr_Prelude.List.span7_111.0 idr_Prelude.List.span8.0) <- pure idr_Prelude.List.span6_val_106.0
          v.179.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span7_111.0)
          idr_Prelude.List.span9.0 <- store v.179.0
          v.180.0 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span9.0 idr_Prelude.List.span8.0)
          pure v.180.0
        (Cidr_Prelude.Bool.True) ->
          v.176.0 <- pure (Cidr_Prelude.List.Nil)
          idr_Prelude.List.span6.0 <- store v.176.0
          v.177.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.span3 idr_Prelude.List.span4)
          idr_Prelude.List.span7.0 <- store v.177.0
          v.178.0 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span6.0 idr_Prelude.List.span7.0)
          pure v.178.0
    (Cidr_Prelude.List.Nil) ->
      v.181 <- pure (Cidr_Prelude.List.Nil)
      idr_Prelude.List.span3_112 <- store v.181
      idr_Prelude.List.span4_113 <- pure idr_Prelude.List.span3_112
      v.182 <- pure (Cidr_Builtins.MkPair idr_Prelude.List.span3_112 idr_Prelude.List.span4_113)
      pure v.182

idr_Prelude.Strings.words idr_Prelude.Strings.words0.48.arity.1 =
  v.183 <- pure (C"idr_{U_Prelude.Strings.{words_2}_1}")
  idr_Prelude.Strings.words3 <- store v.183
  idr_Prelude.Strings.words4.32.20.arity.1 <- pure #""
  idris_str_eq3.1 <- _prim_string_eq $ idr_Prelude.Strings.words0.48.arity.1 idr_Prelude.Strings.words4.32.20.arity.1
  ccp.2.1 <- case idris_str_eq3.1 of
    #False ->
      pure 0
    #True ->
      pure 1
  idr_Prelude.Strings.words4_val_128 <- case ccp.2.1 of
    0 ->
      v.185 <- pure (Cidr_Prelude.Bool.True)
      pure v.185
    #default ->
      v.186 <- pure (Cidr_Prelude.Bool.False)
      pure v.186
  v.187 <- pure (Cidr_Prelude.Bool.True)
  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.1" <- pure idr_Prelude.Strings.words4_val_128
  idr_Prelude.Strings.words4_val_126 <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.1" of
    (Cidr_Prelude.Bool.False) ->
      v.190.0 <- pure (Cidr_Prelude.List.Nil)
      pure v.190.0
    (Cidr_Prelude.Bool.True) ->
      idris_str_head2.1.0 <- _prim_string_head $ idr_Prelude.Strings.words0.48.arity.1
      v.191.0 <- pure (CGrInt idris_str_head2.1.0)
      idr_Prelude.Strings.words5_137.0 <- store v.191.0
      idris_str_tail2.0.0 <- _prim_string_tail $ idr_Prelude.Strings.words0.48.arity.1
      idr_Prelude.Strings.words8.32.23.arity.1.0 <- pure idr_Prelude.Strings.words4.32.20.arity.1
      idris_str_eq3.2.0 <- _prim_string_eq $ idris_str_tail2.0.0 idr_Prelude.Strings.words8.32.23.arity.1.0
      ccp.2.2.0 <- case idris_str_eq3.2.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Prelude.Strings.words7_val_140.0 <- case ccp.2.2.0 of
        0 ->
          pure v.187
        #default ->
          v.193.0 <- pure (Cidr_Prelude.Bool.False)
          pure v.193.0
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.2.0" <- pure idr_Prelude.Strings.words7_val_140.0
      idr_Prelude.Strings.words7_val.0 <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.2.0" of
        (Cidr_Prelude.Bool.False) ->
          v.196.0.0 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.196.0.0
        (Cidr_Prelude.Bool.True) ->
          idris_str_tail2.1.0.0 <- pure idris_str_tail2.0.0
          idris_str_head2.2.0.0 <- _prim_string_head $ idris_str_tail2.1.0.0
          v.197.0.0 <- pure (CGrInt idris_str_head2.2.0.0)
          idr_Prelude.Strings.words8_154.0.0 <- store v.197.0.0
          idris_str_tail2.2.0.0 <- pure idris_str_tail2.0.0
          idris_str_tail2.3.0.0 <- _prim_string_tail $ idris_str_tail2.2.0.0
          v.198.0.0 <- pure (CGrString idris_str_tail2.3.0.0)
          idr_Prelude.Strings.words9_156.0.0 <- store v.198.0.0
          v.199.0.0 <- pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.words8_154.0.0 idr_Prelude.Strings.words9_156.0.0)
          pure v.199.0.0
      idr_Prelude.Strings.words7_157.0 <- store idr_Prelude.Strings.words7_val.0
      idr_Prelude.Strings.words6_val.0 <- idr__Prelude.Strings.unpack_with_36 $ idr_Prelude.Strings.words7_157.0
      idr_Prelude.Strings.words6_158.0 <- store idr_Prelude.Strings.words6_val.0
      v.200.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words5_137.0 idr_Prelude.Strings.words6_158.0)
      pure v.200.0
  idr_Prelude.Strings.words4_159 <- store idr_Prelude.Strings.words4_val_126
  idr_Prelude.Strings.words4_val <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words4_159
  idr_Prelude.Strings.words4_160 <- store idr_Prelude.Strings.words4_val
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Prelude.Strings.words3 idr_Prelude.Strings.words4_160

idr_Prelude.Strings.words' idr_Prelude.Strings.words'0 =
  idr_Prelude.Strings.words'1_val <- idr_Prelude.List.dropWhile $ idr_Prelude.Strings.words'0
  case idr_Prelude.Strings.words'1_val of
    (Cidr_Prelude.List.Nil) ->
      v.202 <- pure (Cidr_Prelude.List.Nil)
      pure v.202
    #default ->
      idr_Prelude.Strings.words'4_val <- pure idr_Prelude.Strings.words'1_val
      idr_Prelude.Strings.words'4_168 <- store idr_Prelude.Strings.words'4_val
      idr_Prelude.Strings.words'2_val_164 <- idr_Prelude.List.span $ idr_Prelude.Strings.words'4_168
      (Cidr_Builtins.MkPair idr_Prelude.Strings.words'3_171 idr_Prelude.Strings.words'4_172) <- pure idr_Prelude.Strings.words'2_val_164
      idr_Prelude.Strings.words'5_val_173 <- idr_Prelude.Strings.words' $ idr_Prelude.Strings.words'4_172
      idr_Prelude.Strings.words'5_174 <- store idr_Prelude.Strings.words'5_val_173
      v.204 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.words'3_171 idr_Prelude.Strings.words'5_174)
      pure v.204

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06") ->
      "idr_{APPLY_0}0_val.3" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" <- case "idr_{APPLY_0}0_val.3" of
        (C"idr_{U_Main.{average_0}_2}") ->
          v.205 <- pure (C"idr_{U_Main.{average_0}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          pure v.205
        (C"idr_{U_prim__strCons_2}") ->
          v.206 <- pure (C"idr_{U_prim__strCons_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          pure v.206
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val" <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06"
      "idr_{APPLY_0}0_val.4" <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val"
      case "idr_{APPLY_0}0_val.4" of
        (C"idr_{U_Main.{average_0}_1}" "idr_{APPLY_0}2.4") ->
          p.15 <- fetch "idr_{APPLY_0}2.4"
          (CGrInt idris_int_add0_1.1.0) <- pure p.15
          p.14 <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
          (CGrInt idris_int_add1_1.1.0) <- pure p.14
          idris_int_add2.1.0 <- _prim_int_add $ idris_int_add0_1.1.0 idris_int_add1_1.1.0
          v.207 <- pure (CGrInt idris_int_add2.1.0)
          pure v.207
        (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_175.4") ->
          p.17 <- fetch "idr_{APPLY_0}2_175.4"
          (CGrInt idris_str_cons1_0.0.0) <- pure p.17
          p.16 <- pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_val"
          (CGrString idris_str_cons2_0.0.0) <- pure p.16
          idris_str_cons3.0.0 <- _prim_string_cons $ idris_str_cons1_0.0.0 idris_str_cons2_0.0.0
          v.208 <- pure (CGrString idris_str_cons3.0.0)
          pure v.208
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03"

"idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03" =
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"
  case "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05") ->
      "idr_{APPLY_0}0_val.5" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val" <- case "idr_{APPLY_0}0_val.5" of
        (C"idr_{U_Main.{average_1}_1}") ->
          p.19 <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
          (CGrString idris_str_len2.0) <- pure p.19
          idris_str_len3.0 <- _prim_string_len $ idris_str_len2.0
          v.209 <- pure (CGrInt idris_str_len3.0)
          p.18 <- pure v.209
          (CGrInt idr_prim__zextInt_BigInt0.32.19.arity.1.0.0) <- pure p.18
          idris_lz_ext3.0 <- _prim_int_add $ idr_prim__zextInt_BigInt0.32.19.arity.1.0.0 0
          v.210 <- pure (CGrInt idris_lz_ext3.0)
          pure v.210
        (C"idr_{U_Prelude.Strings.{words_2}_1}") ->
          v.211 <- pure (C"idr_{U_prim__strCons_2}")
          "idr_Prelude.Strings.{words_2}3.0" <- store v.211
          v.212 <- pure (CGrString #"")
          "idr_Prelude.Strings.{words_2}4.0" <- store v.212
          "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0" $ "idr_Prelude.Strings.{words_2}3.0" "idr_Prelude.Strings.{words_2}4.0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val" <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_183" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val"
      v.213 <- pure (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_183")
      pure v.213
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val"

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_365.32.30.arity.1 <- pure #""
      p.20 <- fetch idr__Prelude.Strings.unpack_with_363
      (CGrString idr__Prelude.Strings.unpack_with_363.40.22.arity.1) <- pure p.20
      idris_str_eq3.3 <- _prim_string_eq $ idr__Prelude.Strings.unpack_with_363.40.22.arity.1 idr__Prelude.Strings.unpack_with_365.32.30.arity.1
      ccp.2.3 <- case idris_str_eq3.3 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr__Prelude.Strings.unpack_with_365_val_189 <- case ccp.2.3 of
        0 ->
          v.215 <- pure (Cidr_Prelude.Bool.True)
          pure v.215
        #default ->
          v.216 <- pure (Cidr_Prelude.Bool.False)
          pure v.216
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.3" <- pure idr__Prelude.Strings.unpack_with_365_val_189
      idr__Prelude.Strings.unpack_with_365_val <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_179.3" of
        (Cidr_Prelude.Bool.False) ->
          v.220.0 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.220.0
        (Cidr_Prelude.Bool.True) ->
          idris_str_head2.3.0 <- _prim_string_head $ idr__Prelude.Strings.unpack_with_363.40.22.arity.1
          v.221.0 <- pure (CGrInt idris_str_head2.3.0)
          idr__Prelude.Strings.unpack_with_366_198.0 <- store v.221.0
          idris_str_tail2.4.0 <- _prim_string_tail $ idr__Prelude.Strings.unpack_with_363.40.22.arity.1
          v.222.0 <- pure (CGrString idris_str_tail2.4.0)
          idr__Prelude.Strings.unpack_with_367.0 <- store v.222.0
          v.223.0 <- pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_198.0 idr__Prelude.Strings.unpack_with_367.0)
          pure v.223.0
      idr__Prelude.Strings.unpack_with_365_199 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 $ idr__Prelude.Strings.unpack_with_365_199
      idr__Prelude.Strings.unpack_with_364_200 <- store idr__Prelude.Strings.unpack_with_364_val
      v.224 <- pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_200)
      pure v.224
    (Cidr_Prelude.Strings.StrNil) ->
      v.225 <- pure (Cidr_Prelude.List.Nil)
      pure v.225
