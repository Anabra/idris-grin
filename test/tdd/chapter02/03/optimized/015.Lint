idris_str_len.unboxed idris_str_len1.32.arity.1 =
  (CGrString idris_str_len2) <- pure (CGrString idris_str_len1.32.arity.1) -- LINT: Syntax error - expected SimpleExp without nodes
  idris_str_len3 <- _prim_string_len idris_str_len2
  pure idris_str_len3

idris_lz_ext.unboxed idris_lz_ext1.32.arity.1 =
  (CGrInt idris_lz_ext2) <- pure (CGrInt idris_lz_ext1.32.arity.1) -- LINT: Syntax error - expected SimpleExp without nodes
  idris_lz_ext3 <- _prim_int_add idris_lz_ext2 0
  pure idris_lz_ext3

grinMain =
  "idr_{runMain_0}0_val_28.0" <- pure (CErased)
  "idr_{runMain_0}0.0" <- store "idr_{runMain_0}0_val_28.0"
  idr_Main.main1_val_9.0 <- pure (CGrString #"12\n")
  idr_Main.main1.0 <- store idr_Main.main1_val_9.0
  (CGrString idr_Main.main1.32.4.arity.1.0) <- fetch idr_Main.main1.0
  idris_write_str2.32.arity.1.0 <- pure idr_Main.main1.32.4.arity.1.0
  (CGrString idris_write_str2_0.0) <- pure (CGrString idris_write_str2.32.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
  _prim_string_print idris_write_str2_0.0
  idr_Main.main1_val_8.0 <- pure (CUnit)
  idr_Main.main1_10.0 <- store idr_Main.main1_val_8.0
  idr_Main.main1_val.0 <- pure (Cidr_MkUnit)
  idr_Main.main1_11.0 <- store idr_Main.main1_val.0
  idr_Main.main2_val_16.0 <- pure (CGrString #"Hello")
  idr_Main.main2.0 <- store idr_Main.main2_val_16.0
  idr_Main.main3_val.0 <- pure (CGrString #"World!")
  idr_Main.main3.0 <- store idr_Main.main3_val.0
  (CGrString idr_Main.main2.40.1.arity.1.0) <- fetch idr_Main.main2.0
  (CGrString idr_Main.main3.40.1.arity.1.0) <- fetch idr_Main.main3.0
  idr_Main.longer0.40.arity.1.0 <- pure idr_Main.main2.40.1.arity.1.0
  idr_Main.longer1.40.arity.1.0 <- pure idr_Main.main3.40.1.arity.1.0
  (CGrString idr_Main.longer0.32.0.arity.1.0) <- pure (CGrString idr_Main.longer0.40.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
  unboxed.CGrInt.2.0 <- idris_str_len.unboxed idr_Main.longer0.32.0.arity.1.0
  idr_Main.longer2_val_3.0 <- pure (CGrInt unboxed.CGrInt.2.0)
  idr_Main.longer2.0 <- store idr_Main.longer2_val_3.0
  (CGrInt idr_Main.longer2.32.1.arity.1.0) <- fetch idr_Main.longer2.0
  unboxed.CGrInt.3.0 <- idris_lz_ext.unboxed idr_Main.longer2.32.1.arity.1.0
  idr_Main.longer2_val.0 <- pure (CGrInt unboxed.CGrInt.3.0)
  idr_Main.longer2_4.0 <- store idr_Main.longer2_val.0
  (CGrString idr_Main.longer1.32.2.arity.1.0) <- pure (CGrString idr_Main.longer1.40.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
  unboxed.CGrInt.4.0 <- idris_str_len.unboxed idr_Main.longer1.32.2.arity.1.0
  idr_Main.longer3_val_5.0 <- pure (CGrInt unboxed.CGrInt.4.0)
  idr_Main.longer3.0 <- store idr_Main.longer3_val_5.0
  (CGrInt idr_Main.longer3.32.3.arity.1.0) <- fetch idr_Main.longer3.0
  unboxed.CGrInt.5.0 <- idris_lz_ext.unboxed idr_Main.longer3.32.3.arity.1.0
  idr_Main.longer3_val.0 <- pure (CGrInt unboxed.CGrInt.5.0)
  idr_Main.longer3_6.0 <- store idr_Main.longer3_val.0
  (CGrInt idr_Main.longer2_4.40.0.arity.1.0) <- fetch idr_Main.longer2_4.0
  (CGrInt idr_Main.longer3_6.40.0.arity.1.0) <- fetch idr_Main.longer3_6.0
  idr_Main.longer4_val.0 <- "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" idr_Main.longer2_4.40.0.arity.1.0 idr_Main.longer3_6.40.0.arity.1.0
  idr_Main.longer4.0 <- store idr_Main.longer4_val.0
  idr_Main.longer4_val_7.0 <- fetch idr_Main.longer4.0
  unboxed.CGrInt.6.0 <- case idr_Main.longer4_val_7.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      (CGrInt unboxed.CGrInt.0.0) <- fetch idr_Main.longer2_4.0
      pure unboxed.CGrInt.0.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt unboxed.CGrInt.0.0)
    #default ->
      (CGrInt unboxed.CGrInt.1.0) <- fetch idr_Main.longer3_6.0
      pure unboxed.CGrInt.1.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt unboxed.CGrInt.1.0)
  idr_Main.main2_val_15.0 <- pure (CGrInt unboxed.CGrInt.6.0)
  idr_Main.main2_17.0 <- store idr_Main.main2_val_15.0
  (CGrInt idr_Main.main2_17.32.5.arity.1.0) <- fetch idr_Main.main2_17.0
  idris_int_str1.32.arity.1.0 <- pure idr_Main.main2_17.32.5.arity.1.0
  (CGrInt idris_int_str1_0.0) <- pure (CGrInt idris_int_str1.32.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
  idris_int_str2.0 <- _prim_int_str idris_int_str1_0.0
  unboxed.CGrString.0.0 <- pure idris_int_str2.0
  idr_Main.main2_val_14.0 <- pure (CGrString unboxed.CGrString.0.0)
  idr_Main.main2_18.0 <- store idr_Main.main2_val_14.0
  idr_Main.main3_val_19.0 <- pure (CGrString #"\n")
  idr_Main.main3_20.0 <- store idr_Main.main3_val_19.0
  (CGrString idr_Main.main2_18.32.6.arity.1.0) <- fetch idr_Main.main2_18.0
  (CGrString idr_Main.main3_20.32.6.arity.1.0) <- fetch idr_Main.main3_20.0
  idris_str_concat1.32.arity.1.0 <- pure idr_Main.main2_18.32.6.arity.1.0
  idris_str_concat2.32.arity.1.0 <- pure idr_Main.main3_20.32.6.arity.1.0
  (CGrString idris_str_concat1_0.0) <- pure (CGrString idris_str_concat1.32.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
  (CGrString idris_str_concat2_0.0) <- pure (CGrString idris_str_concat2.32.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
  idris_str_concat3.0 <- _prim_string_concat idris_str_concat1_0.0 idris_str_concat2_0.0
  unboxed.CGrString.1.0 <- pure idris_str_concat3.0
  idr_Main.main2_val_13.0 <- pure (CGrString unboxed.CGrString.1.0)
  idr_Main.main2_21.0 <- store idr_Main.main2_val_13.0
  (CGrString idr_Main.main2_21.32.7.arity.1.0) <- fetch idr_Main.main2_21.0
  idris_write_str2.32.arity.1.1 <- pure idr_Main.main2_21.32.7.arity.1.0
  (CGrString idris_write_str2_0.1) <- pure (CGrString idris_write_str2.32.arity.1.1) -- LINT: Syntax error - expected SimpleExp without nodes
  _prim_string_print idris_write_str2_0.1
  idr_Main.main2_val_12.0 <- pure (CUnit)
  idr_Main.main2_22.0 <- store idr_Main.main2_val_12.0
  idr_Main.main2_val.0 <- pure (Cidr_MkUnit)
  idr_Main.main2_23.0 <- store idr_Main.main2_val.0
  idr_Main.main3_val_25.0 <- pure (CGrString #"3.1622776601683795\n")
  idr_Main.main3_26.0 <- store idr_Main.main3_val_25.0
  (CGrString idr_Main.main3_26.32.8.arity.1.0) <- fetch idr_Main.main3_26.0
  idris_write_str2.32.arity.1.2 <- pure idr_Main.main3_26.32.8.arity.1.0
  (CGrString idris_write_str2_0.2) <- pure (CGrString idris_write_str2.32.arity.1.2) -- LINT: Syntax error - expected SimpleExp without nodes
  _prim_string_print idris_write_str2_0.2
  idr_Main.main3_val_24.0 <- pure (CUnit)
  idr_Main.main3_27.0 <- store idr_Main.main3_val_24.0
  "idr_{runMain_0}0_val.0" <- pure (Cidr_MkUnit)
  "idr_{runMain_0}0_29.0" <- store "idr_{runMain_0}0_val.0"
  "idr_{EVAL_0}0.0.0" <- pure "idr_{runMain_0}0_29.0"
  "idr_{EVAL_0}0_val.0.0" <- fetch "idr_{EVAL_0}0.0.0"
  r <- fetch "idr_{EVAL_0}0.0.0"
  pure () -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.main3_26.32.8.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.main2_21.32.7.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.main3_20.32.6.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.main2_18.32.6.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idr_Main.main2_17.32.5.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idr_Main.longer3_6.40.0.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idr_Main.longer2_4.40.0.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idr_Main.longer3.32.3.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idr_Main.longer2.32.1.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.main3.40.1.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.main2.40.1.arity.1.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.main1.32.4.arity.1.0)

"idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.40.arity.1" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.40.arity.1" =
  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01_val" <- pure (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.40.arity.1")
  case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01_val" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0" of
        0 ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val" <- pure (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.40.arity.1")
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_30") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_30" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
                #default ->
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_31" <- pure (CGrInt 1)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_31"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.9.arity.1") <- pure (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.40.arity.1") -- LINT: Syntax error - expected SimpleExp without nodes
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02.32.9.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02"
                  idris_int_sub0.32.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.9.arity.1"
                  idris_int_sub1.32.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02.32.9.arity.1"
                  (CGrInt idris_int_sub0_1.0) <- pure (CGrInt idris_int_sub0.32.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
                  (CGrInt idris_int_sub1_1.0) <- pure (CGrInt idris_int_sub1.32.arity.1.0) -- LINT: Syntax error - expected SimpleExp without nodes
                  idris_int_sub2.0 <- _prim_int_sub idris_int_sub0_1.0 idris_int_sub1_1.0
                  unboxed.CGrInt.7 <- pure idris_int_sub2.0
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val" <- pure (CGrInt unboxed.CGrInt.7)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_32" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val"
                  pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02.32.9.arity.1")
        #default ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_38" <- pure (CGrInt 1)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_38"
          (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.32.10.arity.1") <- pure (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.40.arity.1") -- LINT: Syntax error - expected SimpleExp without nodes
          (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39.32.10.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39"
          idris_int_sub0.32.arity.1.1 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.32.10.arity.1"
          idris_int_sub1.32.arity.1.1 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39.32.10.arity.1"
          (CGrInt idris_int_sub0_1.1) <- pure (CGrInt idris_int_sub0.32.arity.1.1) -- LINT: Syntax error - expected SimpleExp without nodes
          (CGrInt idris_int_sub1_1.1) <- pure (CGrInt idris_int_sub1.32.arity.1.1) -- LINT: Syntax error - expected SimpleExp without nodes
          idris_int_sub2.1 <- _prim_int_sub idris_int_sub0_1.1 idris_int_sub1_1.1
          unboxed.CGrInt.8 <- pure idris_int_sub2.1
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_37" <- pure (CGrInt unboxed.CGrInt.8)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_40" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_37"
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val_41" <- pure (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.40.arity.1")
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val_41" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_42") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_42" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val_43" <- pure (CGrInt 1)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val_43"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.11.arity.1") <- pure (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.40.arity.1") -- LINT: Syntax error - expected SimpleExp without nodes
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.11.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03"
                  idris_int_sub0.32.arity.1.2 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.11.arity.1"
                  idris_int_sub1.32.arity.1.2 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.11.arity.1"
                  (CGrInt idris_int_sub0_1.2) <- pure (CGrInt idris_int_sub0.32.arity.1.2) -- LINT: Syntax error - expected SimpleExp without nodes
                  (CGrInt idris_int_sub1_1.2) <- pure (CGrInt idris_int_sub1.32.arity.1.2) -- LINT: Syntax error - expected SimpleExp without nodes
                  idris_int_sub2.2 <- _prim_int_sub idris_int_sub0_1.2 idris_int_sub1_1.2
                  unboxed.CGrInt.9 <- pure idris_int_sub2.2
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val" <- pure (CGrInt unboxed.CGrInt.9)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_44" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_44.40.2.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_44"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_40.40.2.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_40"
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_44.40.2.arity.1" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_40.40.2.arity.1" -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_40.40.2.arity.1") -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_44.40.2.arity.1") -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.11.arity.1") -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39.32.10.arity.1")
