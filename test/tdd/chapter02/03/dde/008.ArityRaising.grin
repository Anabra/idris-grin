primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
idris_int_sub.unboxed idris_int_sub0.32.arity.1 idris_int_sub1.32.arity.1 =
  (CGrInt idris_int_sub0_1) <- pure (CGrInt idris_int_sub0.32.arity.1)
  (CGrInt idris_int_sub1_1) <- pure (CGrInt idris_int_sub1.32.arity.1)
  idris_int_sub2 <- _prim_int_sub $ idris_int_sub0_1 idris_int_sub1_1
  pure idris_int_sub2

idris_write_str idris_write_str2.32.arity.1 =
  (CGrString idris_write_str2_0) <- pure (CGrString idris_write_str2.32.arity.1)
  _prim_string_print $ idris_write_str2_0
  pure (CUnit)

idris_str_concat.unboxed idris_str_concat1.32.arity.1 idris_str_concat2.32.arity.1 =
  (CGrString idris_str_concat1_0) <- pure (CGrString idris_str_concat1.32.arity.1)
  (CGrString idris_str_concat2_0) <- pure (CGrString idris_str_concat2.32.arity.1)
  idris_str_concat3 <- _prim_string_concat $ idris_str_concat1_0 idris_str_concat2_0
  pure idris_str_concat3

idris_str_len.unboxed idris_str_len1.32.arity.1 =
  (CGrString idris_str_len2) <- pure (CGrString idris_str_len1.32.arity.1)
  idris_str_len3 <- _prim_string_len $ idris_str_len2
  pure idris_str_len3

idris_int_str.unboxed idris_int_str1.32.arity.1 =
  (CGrInt idris_int_str1_0) <- pure (CGrInt idris_int_str1.32.arity.1)
  idris_int_str2 <- _prim_int_str $ idris_int_str1_0
  pure idris_int_str2

idris_lz_ext.unboxed idris_lz_ext1.32.arity.1 =
  (CGrInt idris_lz_ext2) <- pure (CGrInt idris_lz_ext1.32.arity.1)
  idris_lz_ext3 <- _prim_int_add $ idris_lz_ext2 0
  pure idris_lz_ext3

grinMain =
  r <- "idr_{runMain_0}" $
  pure ()

idr_Main.longer.unboxed idr_Main.longer0 idr_Main.longer1 =
  idr_Main.longer2_val_3 <- do
    unboxed.CGrInt.2 <- do
      (CGrString idr_Main.longer0.32.0.arity.1) <- fetch idr_Main.longer0
      idris_str_len.unboxed $ idr_Main.longer0.32.0.arity.1
    pure (CGrInt unboxed.CGrInt.2)
  idr_Main.longer2 <- store idr_Main.longer2_val_3
  idr_Main.longer2_val <- do
    unboxed.CGrInt.3 <- do
      (CGrInt idr_Main.longer2.32.1.arity.1) <- fetch idr_Main.longer2
      idris_lz_ext.unboxed $ idr_Main.longer2.32.1.arity.1
    pure (CGrInt unboxed.CGrInt.3)
  idr_Main.longer2_4 <- store idr_Main.longer2_val
  idr_Main.longer3_val_5 <- do
    unboxed.CGrInt.4 <- do
      (CGrString idr_Main.longer1.32.2.arity.1) <- fetch idr_Main.longer1
      idris_str_len.unboxed $ idr_Main.longer1.32.2.arity.1
    pure (CGrInt unboxed.CGrInt.4)
  idr_Main.longer3 <- store idr_Main.longer3_val_5
  idr_Main.longer3_val <- do
    unboxed.CGrInt.5 <- do
      (CGrInt idr_Main.longer3.32.3.arity.1) <- fetch idr_Main.longer3
      idris_lz_ext.unboxed $ idr_Main.longer3.32.3.arity.1
    pure (CGrInt unboxed.CGrInt.5)
  idr_Main.longer3_6 <- store idr_Main.longer3_val
  idr_Main.longer4_val <- "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" $ idr_Main.longer2_4 idr_Main.longer3_6
  idr_Main.longer4 <- store idr_Main.longer4_val
  idr_Main.longer4_val_7 <- fetch idr_Main.longer4
  case idr_Main.longer4_val_7 of
    (Cidr_Prelude.Interfaces.GT) ->
      do
        (CGrInt unboxed.CGrInt.0) <- fetch idr_Main.longer2_4
        pure unboxed.CGrInt.0
    #default ->
      do
        (CGrInt unboxed.CGrInt.1) <- fetch idr_Main.longer3_6
        pure unboxed.CGrInt.1

idr_Main.main =
  idr_Main.main1_val_9 <- pure (CGrString #"12\n")
  idr_Main.main1 <- store idr_Main.main1_val_9
  idr_Main.main1_val_8 <- do
    (CGrString idr_Main.main1.32.4.arity.1) <- fetch idr_Main.main1
    idris_write_str $ idr_Main.main1.32.4.arity.1
  idr_Main.main1_10 <- store idr_Main.main1_val_8
  idr_Main.main1_val <- pure (Cidr_MkUnit)
  idr_Main.main1_11 <- store idr_Main.main1_val
  idr_Main.main2_val_16 <- pure (CGrString #"Hello")
  idr_Main.main2 <- store idr_Main.main2_val_16
  idr_Main.main3_val <- pure (CGrString #"World!")
  idr_Main.main3 <- store idr_Main.main3_val
  idr_Main.main2_val_15 <- do
    unboxed.CGrInt.6 <- idr_Main.longer.unboxed $ idr_Main.main2 idr_Main.main3
    pure (CGrInt unboxed.CGrInt.6)
  idr_Main.main2_17 <- store idr_Main.main2_val_15
  idr_Main.main2_val_14 <- do
    unboxed.CGrString.0 <- do
      (CGrInt idr_Main.main2_17.32.5.arity.1) <- fetch idr_Main.main2_17
      idris_int_str.unboxed $ idr_Main.main2_17.32.5.arity.1
    pure (CGrString unboxed.CGrString.0)
  idr_Main.main2_18 <- store idr_Main.main2_val_14
  idr_Main.main3_val_19 <- pure (CGrString #"\n")
  idr_Main.main3_20 <- store idr_Main.main3_val_19
  idr_Main.main2_val_13 <- do
    unboxed.CGrString.1 <- do
      (CGrString idr_Main.main2_18.32.6.arity.1) <- fetch idr_Main.main2_18
      (CGrString idr_Main.main3_20.32.6.arity.1) <- fetch idr_Main.main3_20
      idris_str_concat.unboxed $ idr_Main.main2_18.32.6.arity.1 idr_Main.main3_20.32.6.arity.1
    pure (CGrString unboxed.CGrString.1)
  idr_Main.main2_21 <- store idr_Main.main2_val_13
  idr_Main.main2_val_12 <- do
    (CGrString idr_Main.main2_21.32.7.arity.1) <- fetch idr_Main.main2_21
    idris_write_str $ idr_Main.main2_21.32.7.arity.1
  idr_Main.main2_22 <- store idr_Main.main2_val_12
  idr_Main.main2_val <- pure (Cidr_MkUnit)
  idr_Main.main2_23 <- store idr_Main.main2_val
  idr_Main.main3_val_25 <- pure (CGrString #"3.1622776601683795\n")
  idr_Main.main3_26 <- store idr_Main.main3_val_25
  idr_Main.main3_val_24 <- do
    (CGrString idr_Main.main3_26.32.8.arity.1) <- fetch idr_Main.main3_26
    idris_write_str $ idr_Main.main3_26.32.8.arity.1
  idr_Main.main3_27 <- store idr_Main.main3_val_24
  pure (Cidr_MkUnit)

"idr_{runMain_0}" =
  "idr_{runMain_0}0_val_28" <- pure (CErased)
  "idr_{runMain_0}0" <- store "idr_{runMain_0}0_val_28"
  "idr_{runMain_0}0_val" <- idr_Main.main $
  "idr_{runMain_0}0_29" <- store "idr_{runMain_0}0_val"
  do
    "idr_{EVAL_0}0.0" <- pure "idr_{runMain_0}0_29"
    "idr_{EVAL_0}0_val.0" <- fetch "idr_{EVAL_0}0.0"
    fetch "idr_{EVAL_0}0.0"

"idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01" =
  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01_val" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01"
  case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01_val" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0" of
        0 ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_30") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_30" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.EQ)
                #default ->
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_31" <- pure (CGrInt 1)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_31"
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val" <- do
                    unboxed.CGrInt.7 <- do
                      (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.9.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
                      (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02.32.9.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02"
                      idris_int_sub.unboxed $ "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.9.arity.1" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02.32.9.arity.1"
                    pure (CGrInt unboxed.CGrInt.7)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_32" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val"
                  pure (Cidr_Prelude.Interfaces.GT)
        #default ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_38" <- pure (CGrInt 1)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_38"
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_37" <- do
            unboxed.CGrInt.8 <- do
              (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.32.10.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01"
              (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39.32.10.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39"
              idris_int_sub.unboxed $ "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.32.10.arity.1" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_39.32.10.arity.1"
            pure (CGrInt unboxed.CGrInt.8)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_40" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_37"
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val_41" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val_41" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_42") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_42" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val_43" <- pure (CGrInt 1)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val_43"
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val" <- do
                    unboxed.CGrInt.9 <- do
                      (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.11.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
                      (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.11.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03"
                      idris_int_sub.unboxed $ "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.11.arity.1" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.11.arity.1"
                    pure (CGrInt unboxed.CGrInt.9)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_44" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val"
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" $ "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_44" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_40"
