primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  v.30 <- pure (CGrInt 0)
  "idr_{runMain_0}1.0" <- store v.30
  v.163 <- pure (Cidr_Data.Vect.Nil)
  "idr_{runMain_0}2.0" <- store v.163
  v.164 <- pure (Cidr_Main.MkData "idr_{runMain_0}1.0" "idr_{runMain_0}2.0")
  "idr_{runMain_0}1_656.0" <- store v.164
  v.165 <- pure (C"idr_{U_Main.processInput_2}")
  "idr_{runMain_0}3.0" <- store v.165
  v.166 <- pure (CErased)
  "idr_{runMain_0}4.0" <- store v.166
  "idr_{runMain_0}2_658.0.228.0.arity.1" <- pure #"Command: "
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.replWith $ "idr_{runMain_0}1_656.0" "idr_{runMain_0}2_658.0.228.0.arity.1" "idr_{runMain_0}3.0" "idr_{runMain_0}4.0"
  pure ()

idr_Data.Fin.finToInteger.unboxed idr_Data.Fin.finToInteger1 =
  idr_Data.Fin.finToInteger1_val <- fetch idr_Data.Fin.finToInteger1
  case idr_Data.Fin.finToInteger1_val of
    (Cidr_Data.Fin.FS idr_Data.Fin.finToInteger2) ->
      unboxed.CGrInt.2 <- idr_Data.Fin.finToInteger.unboxed $ idr_Data.Fin.finToInteger2
      idr_Data.Fin.finToInteger3.32.1.arity.1 <- pure 1
      idris_int_add2.0 <- _prim_int_add $ idr_Data.Fin.finToInteger3.32.1.arity.1 unboxed.CGrInt.2
      pure idris_int_add2.0
    (Cidr_Data.Fin.FZ) ->
      pure 0

idr_Data.Vect.foldrImpl.unboxed idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4.159.arity.1 idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl6 =
  idr_Data.Vect.foldrImpl6_val <- fetch idr_Data.Vect.foldrImpl6
  case idr_Data.Vect.foldrImpl6_val of
    (Cidr_Data.Vect.:: idr_Data.Vect.foldrImpl7 idr_Data.Vect.foldrImpl8) ->
      v.167 <- pure (C"idr_{U_Data.Vect.{foldrImpl_2}_1}" idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl7)
      idr_Data.Vect.foldrImpl12 <- store v.167
      idr_Data.Vect.foldrImpl.unboxed $ idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4.159.arity.1 idr_Data.Vect.foldrImpl12 idr_Data.Vect.foldrImpl8
    (Cidr_Data.Vect.Nil) ->
      "idr_{APPLY_0}0_val.0" <- fetch idr_Data.Vect.foldrImpl5
      case "idr_{APPLY_0}0_val.0" of
        (C"idr_{U_Data.Vect.{foldrImpl_2}_1}" "idr_{APPLY_0}2.0" "idr_{APPLY_0}3.0" "idr_{APPLY_0}4.0") ->
          p.0 <- fetch "idr_{APPLY_0}3.0"
          (C"idr_{U_Main.{search_8}_2}" "idr_{APPLY_0}3.0.151.0.arity.1") <- pure p.0
          p.3 <- fetch "idr_{APPLY_0}3.0.151.0.arity.1"
          (CGrString "idr_{APPLY_0}3.0.151.0.arity.1.228.1.arity.1") <- pure p.3
          p.1 <- fetch "idr_{APPLY_0}4.0"
          (Cidr_Builtins.MkPair "idr_{APPLY_0}4.0.228.1.arity.1" "idr_{APPLY_0}4.0.228.1.arity.2") <- pure p.1
          (CGrString "idr_{APPLY_0}4.0.228.1.arity.2.297.0.arity.1") <- fetch "idr_{APPLY_0}4.0.228.1.arity.2"
          "idr_Data.Vect.{foldrImpl_2}.unboxed" $ "idr_{APPLY_0}2.0" "idr_{APPLY_0}3.0.151.0.arity.1.228.1.arity.1" "idr_{APPLY_0}4.0.228.1.arity.1" "idr_{APPLY_0}4.0.228.1.arity.2.297.0.arity.1" idr_Data.Vect.foldrImpl4.159.arity.1
        (C"idr_{U_Main.{search_9}_1}") ->
          pure idr_Data.Vect.foldrImpl4.159.arity.1

idr_Data.Vect.index.unboxed idr_Data.Vect.index2 idr_Data.Vect.index3 =
  idr_Data.Vect.index2_val <- fetch idr_Data.Vect.index2
  case idr_Data.Vect.index2_val of
    (Cidr_Data.Fin.FS idr_Data.Vect.index4) ->
      idr_Data.Vect.index3_val <- fetch idr_Data.Vect.index3
      (Cidr_Data.Vect.:: idr_Data.Vect.index5 idr_Data.Vect.index6) <- pure idr_Data.Vect.index3_val
      idr_Data.Vect.index.unboxed $ idr_Data.Vect.index4 idr_Data.Vect.index6
    (Cidr_Data.Fin.FZ) ->
      idr_Data.Vect.index3_val_62 <- fetch idr_Data.Vect.index3
      (Cidr_Data.Vect.:: idr_Data.Vect.index4_63 idr_Data.Vect.index5_64) <- pure idr_Data.Vect.index3_val_62
      p.2 <- fetch idr_Data.Vect.index4_63
      (CGrString unboxed.CGrString.0) <- pure p.2
      pure unboxed.CGrString.0

idr_Prelude.List.isPrefixOfBy idr_Prelude.List.isPrefixOfBy2 idr_Prelude.List.isPrefixOfBy3 =
  idr_Prelude.List.isPrefixOfBy2_val <- fetch idr_Prelude.List.isPrefixOfBy2
  case idr_Prelude.List.isPrefixOfBy2_val of
    (Cidr_Prelude.List.Nil) ->
      v.168 <- pure (Cidr_Prelude.Bool.True)
      pure v.168
    #default ->
      idr_Prelude.List.isPrefixOfBy3_val <- fetch idr_Prelude.List.isPrefixOfBy3
      case idr_Prelude.List.isPrefixOfBy3_val of
        (Cidr_Prelude.List.:: idr_Prelude.List.isPrefixOfBy4 idr_Prelude.List.isPrefixOfBy5) ->
          (Cidr_Prelude.List.:: idr_Prelude.List.isPrefixOfBy6 idr_Prelude.List.isPrefixOfBy7) <- pure idr_Prelude.List.isPrefixOfBy2_val
          p.5 <- fetch idr_Prelude.List.isPrefixOfBy4
          (CGrInt "idr_{PE_isInfixOf_22f242c8_0}1.40.64.arity.1.0") <- pure p.5
          p.4 <- fetch idr_Prelude.List.isPrefixOfBy6
          (CGrInt idris_int_eq0_1.0) <- pure p.4
          idris_int_eq2.0 <- _prim_int_eq $ idris_int_eq0_1.0 "idr_{PE_isInfixOf_22f242c8_0}1.40.64.arity.1.0"
          ccp.0.0 <- case idris_int_eq2.0 of
            #False ->
              pure 0
            #True ->
              pure 1
          case ccp.0.0 of
            0 ->
              v.169 <- pure (Cidr_Prelude.Bool.False)
              pure v.169
            #default ->
              idr_Prelude.List.isPrefixOfBy $ idr_Prelude.List.isPrefixOfBy7 idr_Prelude.List.isPrefixOfBy5
        (Cidr_Prelude.List.Nil) ->
          v.170 <- pure (Cidr_Prelude.Bool.False)
          pure v.170

idr_Data.Fin.natToFin idr_Data.Fin.natToFin0.40.arity.1 idr_Data.Fin.natToFin1.40.arity.1 =
  case idr_Data.Fin.natToFin0.40.arity.1 of
    0 ->
      case idr_Data.Fin.natToFin1.40.arity.1 of
        0 ->
          v.171 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.171
        #default ->
          v.172 <- pure (Cidr_Data.Fin.FZ)
          idr_Data.Fin.natToFin3 <- store v.172
          v.173 <- pure (Cidr_Prelude.Maybe.Just idr_Data.Fin.natToFin3)
          pure v.173
    #default ->
      idr_Data.Fin.natToFin2_205.32.20.arity.1 <- pure 1
      idris_int_sub2.1 <- _prim_int_sub $ idr_Data.Fin.natToFin0.40.arity.1 idr_Data.Fin.natToFin2_205.32.20.arity.1
      case idr_Data.Fin.natToFin1.40.arity.1 of
        0 ->
          v.174 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.174
        #default ->
          idris_int_sub2.2 <- _prim_int_sub $ idr_Data.Fin.natToFin1.40.arity.1 idr_Data.Fin.natToFin2_205.32.20.arity.1
          idr_Data.Fin.natToFin4_val <- idr_Data.Fin.natToFin $ idris_int_sub2.1 idris_int_sub2.2
          case idr_Data.Fin.natToFin4_val of
            (Cidr_Prelude.Maybe.Just idr_Data.Fin.natToFin5) ->
              v.175 <- pure (Cidr_Data.Fin.FS idr_Data.Fin.natToFin5)
              idr_Data.Fin.natToFin6 <- store v.175
              v.176 <- pure (Cidr_Prelude.Maybe.Just idr_Data.Fin.natToFin6)
              pure v.176
            (Cidr_Prelude.Maybe.Nothing) ->
              v.177 <- pure (Cidr_Prelude.Maybe.Nothing)
              pure v.177

idr_Data.Vect.range idr_Data.Vect.range0.40.arity.1 =
  case idr_Data.Vect.range0.40.arity.1 of
    0 ->
      v.178 <- pure (Cidr_Data.Vect.Nil)
      pure v.178
    #default ->
      idr_Data.Vect.range1.32.44.arity.1 <- pure 1
      idris_int_sub2.3 <- _prim_int_sub $ idr_Data.Vect.range0.40.arity.1 idr_Data.Vect.range1.32.44.arity.1
      v.179 <- pure (Cidr_Data.Fin.FZ)
      idr_Data.Vect.range2 <- store v.179
      idr_Data.Vect.range7_val <- idr_Data.Vect.range $ idris_int_sub2.3
      idr_Data.Vect.range7 <- store idr_Data.Vect.range7_val
      idr_Data.Vect.range3_val <- "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:0" $ idr_Data.Vect.range7
      idr_Data.Vect.range3_545 <- store idr_Data.Vect.range3_val
      v.180 <- pure (Cidr_Data.Vect.:: idr_Data.Vect.range2 idr_Data.Vect.range3_545)
      pure v.180

idr_Prelude.Interactive.replWith idr_Prelude.Interactive.replWith1 idr_Prelude.Interactive.replWith2.228.arity.1 idr_Prelude.Interactive.replWith3 idr_Prelude.Interactive.replWith4 =
  unboxed.CGrInt.45 <- pure 0
  idris_ffi_file_eof2.0 <- _prim_ffi_file_eof $ unboxed.CGrInt.45
  v.181 <- pure (#undefined :: T_Int64)
  case v.181 of
    0 ->
      v.182 <- pure (Cidr_MkUnit)
      pure v.182
    #default ->
      _prim_string_print $ idr_Prelude.Interactive.replWith2.228.arity.1
      idris_read_str1.0.0 <- _prim_read_string $
      idris_str_rev2.0.0 <- _prim_string_reverse $ idris_read_str1.0.0
      v.183 <- pure (CGrString #"")
      idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0 <- pure #""
      idris_str_eq3.0.0 <- _prim_string_eq $ idris_str_rev2.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
      ccp.2.0.0 <- case idris_str_eq3.0.0 of
        #False ->
          pure unboxed.CGrInt.45
        #True ->
          pure 1
      idr_Prelude.Interactive.getLine'3_val_32.0.0 <- case ccp.2.0.0 of
        0 ->
          v.184 <- pure (Cidr_Prelude.Bool.True)
          pure v.184
        #default ->
          v.185 <- pure (Cidr_Prelude.Bool.False)
          pure v.185
      v.186 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Interactive.getLine'3_val.0.0 <- case idr_Prelude.Interactive.getLine'3_val_32.0.0 of
        (Cidr_Prelude.Bool.False) ->
          pure v.183
        (Cidr_Prelude.Bool.True) ->
          idris_str_head2.0.0.0 <- _prim_string_head $ idris_str_rev2.0.0
          case idris_str_head2.0.0.0 of
            10 ->
              idris_str_tail2.0.0.0 <- _prim_string_tail $ idris_str_rev2.0.0
              v.187 <- pure (CGrString idris_str_tail2.0.0.0)
              pure v.187
            #default ->
              idris_str_tail2.1.0.0 <- _prim_string_tail $ idris_str_rev2.0.0
              idris_str_cons3.0.0.0 <- _prim_string_cons $ idris_str_head2.0.0.0 idris_str_tail2.1.0.0
              v.188 <- pure (CGrString idris_str_cons3.0.0.0)
              pure v.188
      (CGrString idr_Prelude.Interactive.getLine'3_61.32.10.arity.1.0.0) <- pure idr_Prelude.Interactive.getLine'3_val.0.0
      idris_str_rev2.5.0 <- _prim_string_reverse $ idr_Prelude.Interactive.getLine'3_61.32.10.arity.1.0.0
      idris_str_eq3.1.0 <- _prim_string_eq $ idris_str_rev2.5.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
      ccp.2.1.0 <- case idris_str_eq3.1.0 of
        #False ->
          pure unboxed.CGrInt.45
        #True ->
          pure 1
      idr_Main.parse1_val.0.0.0 <- case ccp.2.1.0 of
        0 ->
          idris_str_head2.2.0.0.0 <- _prim_string_head $ idris_str_rev2.5.0
          idr_Main.parse3_265.0.40.21.arity.1.0.0.0.0 <- pure 32
          idris_int_eq2.2.0.0.0 <- _prim_int_eq $ idris_str_head2.2.0.0.0 idr_Main.parse3_265.0.40.21.arity.1.0.0.0.0
          ccp.0.2.0.0.0 <- case idris_int_eq2.2.0.0.0 of
            #False ->
              pure unboxed.CGrInt.45
            #True ->
              pure 1
          case ccp.0.2.0.0.0 of
            0 ->
              idris_str_tail2.2.0.0.0 <- _prim_string_tail $ idris_str_rev2.5.0
              idris_str_eq3.2.0.0.0 <- _prim_string_eq $ idris_str_tail2.2.0.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
              ccp.2.2.0.0.0 <- case idris_str_eq3.2.0.0.0 of
                #False ->
                  pure unboxed.CGrInt.45
                #True ->
                  pure 1
              idr_Main.parse3_val_269.0.0.0.0.0 <- case ccp.2.2.0.0.0 of
                0 ->
                  idris_str_head2.3.0.0.0.0.0 <- _prim_string_head $ idris_str_tail2.2.0.0.0
                  idris_int_eq2.3.0.0.0.0.0 <- _prim_int_eq $ idris_str_head2.3.0.0.0.0.0 idr_Main.parse3_265.0.40.21.arity.1.0.0.0.0
                  ccp.0.3.0.0.0.0.0 <- case idris_int_eq2.3.0.0.0.0.0 of
                    #False ->
                      pure unboxed.CGrInt.45
                    #True ->
                      pure 1
                  case ccp.0.3.0.0.0.0.0 of
                    0 ->
                      idris_str_tail2.5.0.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.2.0.0.0
                      idris_str_eq3.3.0.0.0.0.0 <- _prim_string_eq $ idris_str_tail2.5.0.0.0.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
                      ccp.2.3.0.0.0.0.0 <- case idris_str_eq3.3.0.0.0.0.0 of
                        #False ->
                          pure unboxed.CGrInt.45
                        #True ->
                          pure 1
                      idr_Main.parse7_val.0.0.0.0.0.0.0 <- case ccp.2.3.0.0.0.0.0 of
                        0 ->
                          idris_str_head2.4.0.0.0.0.0.0.0 <- _prim_string_head $ idris_str_tail2.5.0.0.0.0.0
                          v.189 <- pure (CGrInt idris_str_head2.4.0.0.0.0.0.0.0)
                          idr_Main.parse8_317.0.0.0.0.0.0.0.0.0 <- store v.189
                          idris_str_tail2.10.0.0.0.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.5.0.0.0.0.0
                          v.190 <- pure (CGrString idris_str_tail2.10.0.0.0.0.0.0.0)
                          idr_Main.parse9_321.0.0.0.0.0.0.0.0.0 <- store v.190
                          v.191 <- pure (Cidr_Prelude.Strings.StrCons idr_Main.parse8_317.0.0.0.0.0.0.0.0.0 idr_Main.parse9_321.0.0.0.0.0.0.0.0.0)
                          pure v.191
                        #default ->
                          v.192 <- pure (Cidr_Prelude.Strings.StrNil)
                          pure v.192
                      idr_Main.parse7_322.0.0.0.0.0.0.0 <- store idr_Main.parse7_val.0.0.0.0.0.0.0
                      idr_Main.parse5_val_295.0.0.0.0.0.0.0 <- idr__Prelude.Strings.span_with_50 $ idr_Main.parse7_322.0.0.0.0.0.0.0
                      (Cidr_Builtins.MkPair idr_Main.parse6_325.0.0.0.0.0.0.0 idr_Main.parse7_326.0.0.0.0.0.0.0) <- pure idr_Main.parse5_val_295.0.0.0.0.0.0.0
                      p.7.0.0.0.0.0 <- fetch idr_Main.parse6_325.0.0.0.0.0.0.0
                      (CGrString idr_Main.parse6_325.32.28.arity.1.0.0.0.0.0.0.0) <- pure p.7.0.0.0.0.0
                      idris_str_cons3.1.0.0.0.0.0 <- _prim_string_cons $ idris_str_head2.3.0.0.0.0.0 idr_Main.parse6_325.32.28.arity.1.0.0.0.0.0.0.0
                      v.193 <- pure (CGrString idris_str_cons3.1.0.0.0.0.0)
                      idr_Main.parse8_332.0.0.0.0.0.0.0 <- store v.193
                      v.194 <- pure (Cidr_Builtins.MkPair idr_Main.parse8_332.0.0.0.0.0.0.0 idr_Main.parse7_326.0.0.0.0.0.0.0)
                      pure v.194
                    #default ->
                      idr_Main.parse5_334.0.0.0.0.0.0.0 <- store v.183
                      idris_str_tail2.14.0.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.2.0.0.0
                      idris_str_cons3.2.0.0.0.0.0 <- _prim_string_cons $ idris_str_head2.3.0.0.0.0.0 idris_str_tail2.14.0.0.0.0.0
                      v.195 <- pure (CGrString idris_str_cons3.2.0.0.0.0.0)
                      idr_Main.parse6_344.0.0.0.0.0.0.0 <- store v.195
                      v.196 <- pure (Cidr_Builtins.MkPair idr_Main.parse5_334.0.0.0.0.0.0.0 idr_Main.parse6_344.0.0.0.0.0.0.0)
                      pure v.196
                #default ->
                  idr_Main.parse4_284.0.0.0.0.0.0.0 <- store v.183
                  v.197 <- pure (Cidr_Builtins.MkPair idr_Main.parse4_284.0.0.0.0.0.0.0 idr_Main.parse4_284.0.0.0.0.0.0.0)
                  pure v.197
              (Cidr_Builtins.MkPair idr_Main.parse4_359.0.0.0.0.0 idr_Main.parse5_360.0.0.0.0.0) <- pure idr_Main.parse3_val_269.0.0.0.0.0
              p.10.0.0.0 <- fetch idr_Main.parse4_359.0.0.0.0.0
              (CGrString idr_Main.parse4_359.32.30.arity.1.0.0.0.0.0) <- pure p.10.0.0.0
              idris_str_cons3.3.0.0.0 <- _prim_string_cons $ idris_str_head2.2.0.0.0 idr_Main.parse4_359.32.30.arity.1.0.0.0.0.0
              v.198 <- pure (CGrString idris_str_cons3.3.0.0.0)
              idr_Main.parse6_364.0.0.0.0.0 <- store v.198
              v.199 <- pure (Cidr_Builtins.MkPair idr_Main.parse6_364.0.0.0.0.0 idr_Main.parse5_360.0.0.0.0.0)
              pure v.199
            #default ->
              idr_Main.parse3_366.0.0.0.0.0 <- store v.183
              idris_str_tail2.15.0.0.0 <- _prim_string_tail $ idris_str_rev2.5.0
              idris_str_cons3.4.0.0.0 <- _prim_string_cons $ idris_str_head2.2.0.0.0 idris_str_tail2.15.0.0.0
              v.200 <- pure (CGrString idris_str_cons3.4.0.0.0)
              idr_Main.parse4_372.0.0.0.0.0 <- store v.200
              v.201 <- pure (Cidr_Builtins.MkPair idr_Main.parse3_366.0.0.0.0.0 idr_Main.parse4_372.0.0.0.0.0)
              pure v.201
        #default ->
          idr_Main.parse2_260.0.0.0.0.0 <- store v.183
          v.202 <- pure (Cidr_Builtins.MkPair idr_Main.parse2_260.0.0.0.0.0 idr_Main.parse2_260.0.0.0.0.0)
          pure v.202
      (Cidr_Builtins.MkPair idr_Main.parse2_383.0.0.0 idr_Main.parse3_384.0.0.0) <- pure idr_Main.parse1_val.0.0.0
      p.38.0 <- fetch idr_Main.parse2_383.0.0.0
      (CGrString idr_Main.parse2_383.32.32.arity.1.0.0.0) <- pure p.38.0
      idr_Main.processInput2_val.0.0 <- case idr_Main.parse2_383.32.32.arity.1.0.0.0 of
        #"add" ->
          v.203 <- pure (Cidr_Main.Add idr_Main.parse3_384.0.0.0)
          idr_Main.parseCommand2.0.0 <- store v.203
          v.204 <- pure (Cidr_Prelude.Maybe.Just idr_Main.parseCommand2.0.0)
          pure v.204
        #"get" ->
          v.205 <- pure (C"idr_{U_Main.{parseCommand_4}_2}")
          idr_Main.parseCommand4.0.0 <- store v.205
          idr_Main.parseCommand5.0.0 <- store v.186
          p.13.0 <- fetch idr_Main.parse3_384.0.0.0
          (CGrString idr_Main.parseCommand1.40.4.arity.1.0.0) <- pure p.13.0
          idris_str_eq3.4.0 <- _prim_string_eq $ idr_Main.parseCommand1.40.4.arity.1.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
          ccp.2.4.0 <- case idris_str_eq3.4.0 of
            #False ->
              pure unboxed.CGrInt.45
            #True ->
              pure 1
          idr_Main.parseCommand6_val.0.0 <- case ccp.2.4.0 of
            0 ->
              idris_str_head2.9.0.0.0 <- _prim_string_head $ idr_Main.parseCommand1.40.4.arity.1.0.0
              v.206 <- pure (CGrInt idris_str_head2.9.0.0.0)
              idr_Main.parseCommand7_398.0.0.0.0 <- store v.206
              idris_str_tail2.16.0.0.0 <- _prim_string_tail $ idr_Main.parseCommand1.40.4.arity.1.0.0
              idris_str_eq3.5.0.0.0 <- _prim_string_eq $ idris_str_tail2.16.0.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
              ccp.2.5.0.0.0 <- case idris_str_eq3.5.0.0.0 of
                #False ->
                  pure unboxed.CGrInt.45
                #True ->
                  pure 1
              idr_Main.parseCommand8_val.0.0.0.0 <- case ccp.2.5.0.0.0 of
                0 ->
                  idris_str_head2.10.0.0.0.0.0 <- _prim_string_head $ idris_str_tail2.16.0.0.0
                  v.207 <- pure (CGrInt idris_str_head2.10.0.0.0.0.0)
                  idr_Main.parseCommand9_414.0.0.0.0.0.0 <- store v.207
                  idris_str_tail2.19.0.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.16.0.0.0
                  idris_str_eq3.6.0.0.0.0.0 <- _prim_string_eq $ idris_str_tail2.19.0.0.0.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
                  ccp.2.6.0.0.0.0.0 <- case idris_str_eq3.6.0.0.0.0.0 of
                    #False ->
                      pure unboxed.CGrInt.45
                    #True ->
                      pure 1
                  idr_Main.parseCommand11_val.0.0.0.0.0.0 <- case ccp.2.6.0.0.0.0.0 of
                    0 ->
                      idris_str_head2.11.0.0.0.0.0.0.0 <- _prim_string_head $ idris_str_tail2.19.0.0.0.0.0
                      v.208 <- pure (CGrInt idris_str_head2.11.0.0.0.0.0.0.0)
                      idr_Main.parseCommand12_435.0.0.0.0.0.0.0.0 <- store v.208
                      idris_str_tail2.24.0.0.0.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.19.0.0.0.0.0
                      v.209 <- pure (CGrString idris_str_tail2.24.0.0.0.0.0.0.0)
                      idr_Main.parseCommand13_439.0.0.0.0.0.0.0.0 <- store v.209
                      v.210 <- pure (Cidr_Prelude.Strings.StrCons idr_Main.parseCommand12_435.0.0.0.0.0.0.0.0 idr_Main.parseCommand13_439.0.0.0.0.0.0.0.0)
                      pure v.210
                    #default ->
                      v.211 <- pure (Cidr_Prelude.Strings.StrNil)
                      pure v.211
                  idr_Main.parseCommand11_440.0.0.0.0.0.0 <- store idr_Main.parseCommand11_val.0.0.0.0.0.0
                  idr_Main.parseCommand10_val.0.0.0.0.0.0 <- idr__Prelude.Strings.unpack_with_36 $ idr_Main.parseCommand11_440.0.0.0.0.0.0
                  idr_Main.parseCommand10_441.0.0.0.0.0.0 <- store idr_Main.parseCommand10_val.0.0.0.0.0.0
                  v.212 <- pure (Cidr_Prelude.List.:: idr_Main.parseCommand9_414.0.0.0.0.0.0 idr_Main.parseCommand10_441.0.0.0.0.0.0)
                  pure v.212
                #default ->
                  v.213 <- pure (Cidr_Prelude.List.Nil)
                  pure v.213
              idr_Main.parseCommand8_442.0.0.0.0 <- store idr_Main.parseCommand8_val.0.0.0.0
              v.214 <- pure (Cidr_Prelude.List.:: idr_Main.parseCommand7_398.0.0.0.0 idr_Main.parseCommand8_442.0.0.0.0)
              pure v.214
            #default ->
              v.215 <- pure (Cidr_Prelude.List.Nil)
              pure v.215
          idr_Main.parseCommand6_443.0.0 <- store idr_Main.parseCommand6_val.0.0
          idr_Main.parseCommand2_val_385.0.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:0" $ idr_Main.parseCommand4.0.0 idr_Main.parseCommand5.0.0 idr_Main.parseCommand6_443.0.0
          case idr_Main.parseCommand2_val_385.0.0 of
            (Cidr_Prelude.Bool.False) ->
              v.216 <- pure (Cidr_Prelude.Maybe.Nothing)
              pure v.216
            (Cidr_Prelude.Bool.True) ->
              idris_str_int2.0.0 <- _prim_str_int $ idr_Main.parseCommand1.40.4.arity.1.0.0
              v.217 <- pure (CGrInt idris_str_int2.0.0)
              idr_Main.parseCommand3_448.0.0 <- store v.217
              v.218 <- pure (Cidr_Main.Get idr_Main.parseCommand3_448.0.0)
              idr_Main.parseCommand3_449.0.0 <- store v.218
              v.219 <- pure (Cidr_Prelude.Maybe.Just idr_Main.parseCommand3_449.0.0)
              pure v.219
        #"quit" ->
          idr_Main.parseCommand1_val.0.0 <- fetch idr_Main.parse3_384.0.0.0
          (CGrString "idr_Main.parseCommand_cpat_LString_\"\".0.0") <- pure idr_Main.parseCommand1_val.0.0
          case "idr_Main.parseCommand_cpat_LString_\"\".0.0" of
            #"" ->
              v.220 <- pure (Cidr_Main.Quit)
              idr_Main.parseCommand2_451.0.0 <- store v.220
              v.221 <- pure (Cidr_Prelude.Maybe.Just idr_Main.parseCommand2_451.0.0)
              pure v.221
            #default ->
              v.222 <- pure (Cidr_Prelude.Maybe.Nothing)
              pure v.222
        #"search" ->
          v.223 <- pure (Cidr_Main.Search idr_Main.parse3_384.0.0.0)
          idr_Main.parseCommand2_453.0.0 <- store v.223
          v.224 <- pure (Cidr_Prelude.Maybe.Just idr_Main.parseCommand2_453.0.0)
          pure v.224
        #"size" ->
          idr_Main.parseCommand1_val_454.0.0 <- fetch idr_Main.parse3_384.0.0.0
          (CGrString "idr_Main.parseCommand_cpat_LString_\"\"_455.0.0") <- pure idr_Main.parseCommand1_val_454.0.0
          case "idr_Main.parseCommand_cpat_LString_\"\"_455.0.0" of
            #"" ->
              v.225 <- pure (Cidr_Main.Size)
              idr_Main.parseCommand2_457.0.0 <- store v.225
              v.226 <- pure (Cidr_Prelude.Maybe.Just idr_Main.parseCommand2_457.0.0)
              pure v.226
            #default ->
              v.227 <- pure (Cidr_Prelude.Maybe.Nothing)
              pure v.227
        #default ->
          v.228 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.228
      idr_Prelude.Interactive.replWith8_val.0 <- case idr_Main.processInput2_val.0.0 of
        (Cidr_Prelude.Maybe.Just idr_Main.processInput3.0.0) ->
          idr_Main.processInput3_val.0.0 <- fetch idr_Main.processInput3.0.0
          case idr_Main.processInput3_val.0.0 of
            (Cidr_Main.Add idr_Main.processInput4.0.0) ->
              idr_Main.processInput0_val.0.0 <- fetch idr_Prelude.Interactive.replWith1
              (Cidr_Main.MkData idr_Main.processInput9.0.0 idr_Main.processInput10.0.0) <- pure idr_Main.processInput0_val.0.0
              idr_Main.processInput9_val.0.0 <- fetch idr_Main.processInput9.0.0
              (CGrInt idris_int_str1_0.0.0.0) <- pure idr_Main.processInput9_val.0.0
              idris_int_str2.0.0.0 <- _prim_int_str $ idris_int_str1_0.0.0.0
              v.229 <- pure (CGrString idris_int_str2.0.0.0)
              idr_Prelude.Show.primNumShow6.0.0.48.1.arity.1.0 <- pure 5
              idris_int_eq2.10.0.0 <- _prim_int_eq $ unboxed.CGrInt.45 idr_Prelude.Show.primNumShow6.0.0.48.1.arity.1.0
              ccp.0.10.0.0 <- case idris_int_eq2.10.0.0 of
                #False ->
                  pure unboxed.CGrInt.45
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_459.0.0.0 <- case ccp.0.10.0.0 of
                0 ->
                  idris_int_lt2.1.0.0 <- _prim_int_lt $ unboxed.CGrInt.45 idr_Prelude.Show.primNumShow6.0.0.48.1.arity.1.0
                  ccp.1.1.0.0 <- case idris_int_lt2.1.0.0 of
                    #False ->
                      pure unboxed.CGrInt.45
                    #True ->
                      pure 1
                  case ccp.1.1.0.0 of
                    0 ->
                      v.230 <- pure (Cidr_Prelude.Interfaces.GT)
                      pure v.230
                    #default ->
                      v.231 <- pure (Cidr_Prelude.Interfaces.LT)
                      pure v.231
                #default ->
                  v.232 <- pure (Cidr_Prelude.Interfaces.EQ)
                  pure v.232
              idr_Prelude.Show.primNumShow5_val_458.0.0.0 <- case idr_Prelude.Show.primNumShow5_val_459.0.0.0 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure v.186
                #default ->
                  ccp.0.4.0 <- case idris_int_eq2.10.0.0 of
                    #False ->
                      pure unboxed.CGrInt.45
                    #True ->
                      pure 1
                  case ccp.0.4.0 of
                    0 ->
                      v.233 <- pure (Cidr_Prelude.Bool.False)
                      pure v.233
                    #default ->
                      pure v.186
              idr_Prelude.Show.primNumShow5_val.0.0.0 <- case idr_Prelude.Show.primNumShow5_val_458.0.0.0 of
                (Cidr_Prelude.Bool.False) ->
                  v.234 <- pure (Cidr_Prelude.Bool.False)
                  pure v.234
                (Cidr_Prelude.Bool.True) ->
                  idris_str_eq3.7.0 <- _prim_string_eq $ idris_int_str2.0.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0
                  ccp.2.7.0 <- case idris_str_eq3.7.0 of
                    #False ->
                      pure unboxed.CGrInt.45
                    #True ->
                      pure 1
                  case ccp.2.7.0 of
                    0 ->
                      idris_str_head2.12.0.0.0 <- _prim_string_head $ idris_int_str2.0.0.0
                      idr_Prelude.Show.primNumShow8.0.40.48.arity.1.0.0.0.0 <- pure 45
                      idris_int_eq2.5.0.0.0 <- _prim_int_eq $ idris_str_head2.12.0.0.0 idr_Prelude.Show.primNumShow8.0.40.48.arity.1.0.0.0.0
                      ccp.0.5.0.0.0 <- case idris_int_eq2.5.0.0.0 of
                        #False ->
                          pure unboxed.CGrInt.45
                        #True ->
                          pure 1
                      case ccp.0.5.0.0.0 of
                        0 ->
                          v.235 <- pure (Cidr_Prelude.Bool.False)
                          pure v.235
                        #default ->
                          pure v.186
                    #default ->
                      v.236 <- pure (Cidr_Prelude.Bool.False)
                      pure v.236
              idr_Main.processInput6_val_501.0.0 <- case idr_Prelude.Show.primNumShow5_val.0.0.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure v.229
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow7_496.0.40.49.arity.1.0.0 <- pure #")"
                  idris_str_concat3.0.0 <- _prim_string_concat $ idris_int_str2.0.0.0 idr_Prelude.Show.primNumShow7_496.0.40.49.arity.1.0.0
                  idr_Prelude.Show.primNumShow6_493.0.40.50.arity.1.0.0 <- pure #"("
                  idris_str_concat3.1.0 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_493.0.40.50.arity.1.0.0 idris_str_concat3.0.0
                  v.237 <- pure (CGrString idris_str_concat3.1.0)
                  pure v.237
              (CGrString idr_Main.processInput6_504.40.51.arity.1.0.0) <- pure idr_Main.processInput6_val_501.0.0
              idr_Main.processInput7_506.40.51.arity.1.0.0 <- pure #"\n"
              idris_str_concat3.2.0 <- _prim_string_concat $ idr_Main.processInput6_504.40.51.arity.1.0.0 idr_Main.processInput7_506.40.51.arity.1.0.0
              idr_Main.processInput5.40.52.arity.1.0.0 <- pure #"ID "
              idris_str_concat3.3.0 <- _prim_string_concat $ idr_Main.processInput5.40.52.arity.1.0.0 idris_str_concat3.2.0
              v.238 <- pure (CGrString idris_str_concat3.3.0)
              idr_Main.processInput5_508.0.0 <- store v.238
              (Cidr_Main.MkData idr_Main.processInput6_511.0.0 idr_Main.processInput7_512.0.0) <- pure idr_Main.processInput0_val.0.0
              p.21.0 <- fetch idr_Main.processInput6_511.0.0
              (CGrInt idr_Main.processInput6_511.32.43.arity.1.0.0) <- pure p.21.0
              idr_Main.processInput8_515.32.43.arity.1.0.0 <- pure 1
              idris_int_add2.1.0.0 <- _prim_int_add $ idr_Main.processInput6_511.32.43.arity.1.0.0 idr_Main.processInput8_515.32.43.arity.1.0.0
              v.239 <- pure (CGrInt idris_int_add2.1.0.0)
              idr_Main.processInput8_516.0.0 <- store v.239
              idr_Main.processInput9_val_517.0.0 <- idr_Main.addToStore:addToData:0 $ idr_Main.processInput4.0.0 idr_Main.processInput7_512.0.0
              idr_Main.processInput9_521.0.0 <- store idr_Main.processInput9_val_517.0.0
              v.240 <- pure (Cidr_Main.MkData idr_Main.processInput8_516.0.0 idr_Main.processInput9_521.0.0)
              idr_Main.processInput6_522.0.0 <- store v.240
              v.241 <- pure (Cidr_Builtins.MkPair idr_Main.processInput5_508.0.0 idr_Main.processInput6_522.0.0)
              idr_Main.processInput5_523.0.0 <- store v.241
              v.242 <- pure (Cidr_Prelude.Maybe.Just idr_Main.processInput5_523.0.0)
              pure v.242
            (Cidr_Main.Get idr_Main.processInput4_524.0.0) ->
              idr_Main.getEntry1_val.0.0.0 <- fetch idr_Prelude.Interactive.replWith1
              (Cidr_Main.MkData idr_Main.getEntry2.0.0.0 idr_Main.getEntry3.0.0.0) <- pure idr_Main.getEntry1_val.0.0.0
              idr_Main.getEntry2_val_13.0.0.0 <- fetch idr_Main.getEntry2.0.0.0
              (CGrInt idr_Main.getEntry2_14.0.0.48.2.arity.1.0) <- pure idr_Main.getEntry2_val_13.0.0.0
              idr_Main.getEntry2_val.0.0.0 <- case idr_Main.getEntry2_14.0.0.48.2.arity.1.0 of
                0 ->
                  v.243 <- pure (Cidr_Prelude.Maybe.Nothing)
                  pure v.243
                #default ->
                  p.29.0 <- fetch idr_Main.processInput4_524.0.0
                  (CGrInt idris_int_eq0_1.10.1.0) <- pure p.29.0
                  idris_int_eq2.10.1.0 <- _prim_int_eq $ idris_int_eq0_1.10.1.0 unboxed.CGrInt.45
                  ccp.0.10.1.0 <- case idris_int_eq2.10.1.0 of
                    #False ->
                      pure unboxed.CGrInt.45
                    #True ->
                      pure 1
                  idr_Data.Fin.integerToFin2_val_65.0.0 <- case ccp.0.10.1.0 of
                    0 ->
                      (CGrInt idris_int_lt0_1.1.1.0) <- pure p.29.0
                      idris_int_lt2.1.1.0 <- _prim_int_lt $ idris_int_lt0_1.1.1.0 unboxed.CGrInt.45
                      ccp.1.1.1.0 <- case idris_int_lt2.1.1.0 of
                        #False ->
                          pure unboxed.CGrInt.45
                        #True ->
                          pure 1
                      case ccp.1.1.1.0 of
                        0 ->
                          v.244 <- pure (Cidr_Prelude.Interfaces.GT)
                          pure v.244
                        #default ->
                          v.245 <- pure (Cidr_Prelude.Interfaces.LT)
                          pure v.245
                    #default ->
                      v.246 <- pure (Cidr_Prelude.Interfaces.EQ)
                      pure v.246
                  idr_Data.Fin.integerToFin2_val.0.0 <- case idr_Data.Fin.integerToFin2_val_65.0.0 of
                    (Cidr_Prelude.Interfaces.GT) ->
                      pure v.186
                    #default ->
                      (CGrInt idris_int_eq0_1.6.0) <- pure p.29.0
                      idris_int_eq2.6.0 <- _prim_int_eq $ idris_int_eq0_1.6.0 unboxed.CGrInt.45
                      ccp.0.6.0 <- case idris_int_eq2.6.0 of
                        #False ->
                          pure unboxed.CGrInt.45
                        #True ->
                          pure 1
                      case ccp.0.6.0 of
                        0 ->
                          v.247 <- pure (Cidr_Prelude.Bool.False)
                          pure v.247
                        #default ->
                          pure v.186
                  case idr_Data.Fin.integerToFin2_val.0.0 of
                    (Cidr_Prelude.Bool.False) ->
                      v.248 <- pure (Cidr_Prelude.Maybe.Nothing)
                      pure v.248
                    (Cidr_Prelude.Bool.True) ->
                      (CGrInt idr_Data.Fin.integerToFin0.40.2.arity.1.0.0) <- pure p.29.0
                      idr_Data.Fin.natToFin $ idr_Data.Fin.integerToFin0.40.2.arity.1.0.0 idr_Main.getEntry2_14.0.0.48.2.arity.1.0
              ccp.3.0.0.0 <- case idr_Main.getEntry2_val.0.0.0 of
                (Cidr_Prelude.Maybe.Just idr_Main.getEntry3_17.0.0.0) ->
                  (Cidr_Main.MkData idr_Main.getEntry6.0.0.0 idr_Main.getEntry7.0.0.0) <- pure idr_Main.getEntry1_val.0.0.0
                  idr_Main.getEntry6_val.0.0.0 <- fetch idr_Main.getEntry7.0.0.0
                  idr_Main.getEntry6_22.0.0.0 <- store idr_Main.getEntry6_val.0.0.0
                  unboxed.CGrString.1.0.0.0 <- idr_Data.Vect.index.unboxed $ idr_Main.getEntry3_17.0.0.0 idr_Main.getEntry6_22.0.0.0
                  idr_Main.getEntry5_25.0.40.53.arity.1.0.0 <- pure #"\n"
                  idris_str_concat3.4.0 <- _prim_string_concat $ unboxed.CGrString.1.0.0.0 idr_Main.getEntry5_25.0.40.53.arity.1.0.0
                  v.249 <- pure (CGrString idris_str_concat3.4.0)
                  idr_Main.getEntry4_26.0.0.0 <- store v.249
                  v.250 <- pure (Cidr_Builtins.MkPair idr_Main.getEntry4_26.0.0.0 idr_Prelude.Interactive.replWith1)
                  idr_Main.getEntry4_27.0.0.0 <- store v.250
                  pure idr_Main.getEntry4_27.0.0.0
                (Cidr_Prelude.Maybe.Nothing) ->
                  v.251 <- pure (CGrString #"Out of range\n")
                  idr_Main.getEntry3_29.0.0.0 <- store v.251
                  v.252 <- pure (Cidr_Builtins.MkPair idr_Main.getEntry3_29.0.0.0 idr_Prelude.Interactive.replWith1)
                  idr_Main.getEntry3_30.0.0.0 <- store v.252
                  pure idr_Main.getEntry3_30.0.0.0
              v.253 <- pure (Cidr_Prelude.Maybe.Just ccp.3.0.0.0)
              pure v.253
            (Cidr_Main.Quit) ->
              v.254 <- pure (Cidr_Prelude.Maybe.Nothing)
              pure v.254
            (Cidr_Main.Search idr_Main.processInput4_525.0.0) ->
              idr_Main.search0_val.0.0.0 <- fetch idr_Prelude.Interactive.replWith1
              (Cidr_Main.MkData idr_Main.search2.0.0.0 idr_Main.search3.0.0.0) <- pure idr_Main.search0_val.0.0.0
              idr_Main.search2_val.0.0.0 <- fetch idr_Main.search3.0.0.0
              idr_Main.search2_574.0.0.0 <- store idr_Main.search2_val.0.0.0
              v.255 <- pure (C"idr_{U_Main.{search_8}_2}" idr_Main.processInput4_525.0.0)
              idr_Main.search6.0.0.0 <- store v.255
              v.256 <- pure (C"idr_{U_Main.{search_9}_1}")
              idr_Main.search8.0.0.0 <- store v.256
              (Cidr_Main.MkData idr_Main.search14.0.0.0 idr_Main.search15.0.0.0) <- pure idr_Main.search0_val.0.0.0
              idr_Main.search14_val_579.0.0.0 <- fetch idr_Main.search14.0.0.0
              (CGrInt idr_Main.search14_581.0.40.54.arity.1.0.0) <- pure idr_Main.search14_val_579.0.0.0
              idr_Main.search14_val.0.0.0 <- idr_Data.Vect.range $ idr_Main.search14_581.0.40.54.arity.1.0.0
              idr_Main.search14_582.0.0.0 <- store idr_Main.search14_val.0.0.0
              idr_Main.search9_val.0.0.0 <- idr_Data.Vect.zipWith $ idr_Main.search14_582.0.0.0 idr_Main.search2_574.0.0.0
              idr_Main.search9_583.0.0.0 <- store idr_Main.search9_val.0.0.0
              unboxed.CGrString.9.1.0 <- idr_Data.Vect.foldrImpl.unboxed $ idr_Main.search6.0.0.0 idr_Prelude.Interactive.getLine'4.32.3.arity.1.0.0 idr_Main.search8.0.0.0 idr_Main.search9_583.0.0.0
              v.257 <- pure (CGrString unboxed.CGrString.9.1.0)
              idr_Main.search3_584.0.0.0 <- store v.257
              v.258 <- pure (Cidr_Builtins.MkPair idr_Main.search3_584.0.0.0 idr_Prelude.Interactive.replWith1)
              idr_Main.search3_585.0.0.0 <- store v.258
              v.259 <- pure (Cidr_Prelude.Maybe.Just idr_Main.search3_585.0.0.0)
              pure v.259
            (Cidr_Main.Size) ->
              idr_Main.processInput0_val_531.0.0 <- fetch idr_Prelude.Interactive.replWith1
              (Cidr_Main.MkData idr_Main.processInput5_532.0.0 idr_Main.processInput6_533.0.0) <- pure idr_Main.processInput0_val_531.0.0
              idr_Main.processInput5_val_530.0.0 <- fetch idr_Main.processInput5_532.0.0
              (CGrInt idris_int_str1_0.1.0.0) <- pure idr_Main.processInput5_val_530.0.0
              idris_int_str2.1.0.0 <- _prim_int_str $ idris_int_str1_0.1.0.0
              idr_Main.processInput4_528.40.55.arity.1.0.0 <- pure #"Size of store: "
              idris_str_concat3.5.0 <- _prim_string_concat $ idr_Main.processInput4_528.40.55.arity.1.0.0 idris_int_str2.1.0.0
              v.260 <- pure (CGrString idris_str_concat3.5.0)
              idr_Main.processInput4_536.0.0 <- store v.260
              v.261 <- pure (Cidr_Builtins.MkPair idr_Main.processInput4_536.0.0 idr_Prelude.Interactive.replWith1)
              idr_Main.processInput4_537.0.0 <- store v.261
              v.262 <- pure (Cidr_Prelude.Maybe.Just idr_Main.processInput4_537.0.0)
              pure v.262
        (Cidr_Prelude.Maybe.Nothing) ->
          v.263 <- pure (CGrString #"Invalid command\n")
          idr_Main.processInput3_540.0.0 <- store v.263
          v.264 <- pure (Cidr_Builtins.MkPair idr_Main.processInput3_540.0.0 idr_Prelude.Interactive.replWith1)
          idr_Main.processInput3_541.0.0 <- store v.264
          v.265 <- pure (Cidr_Prelude.Maybe.Just idr_Main.processInput3_541.0.0)
          pure v.265
      case idr_Prelude.Interactive.replWith8_val.0 of
        (Cidr_Prelude.Maybe.Just idr_Prelude.Interactive.replWith9.0) ->
          idr_Prelude.Interactive.replWith9_val.0 <- fetch idr_Prelude.Interactive.replWith9.0
          (Cidr_Builtins.MkPair idr_Prelude.Interactive.replWith10.0 idr_Prelude.Interactive.replWith11.0) <- pure idr_Prelude.Interactive.replWith9_val.0
          p.42.0 <- fetch idr_Prelude.Interactive.replWith10.0
          (CGrString idris_write_str2_0.1.0.0) <- pure p.42.0
          _prim_string_print $ idris_write_str2_0.1.0.0
          idr_Prelude.Interactive.replWith $ idr_Prelude.Interactive.replWith11.0 idr_Prelude.Interactive.replWith2.228.arity.1 idr_Prelude.Interactive.replWith3 idr_Prelude.Interactive.replWith4
        (Cidr_Prelude.Maybe.Nothing) ->
          v.266 <- pure (Cidr_MkUnit)
          pure v.266

idr_Prelude.List.tails idr_Prelude.List.tails1 =
  idr_Prelude.List.tails1_val <- fetch idr_Prelude.List.tails1
  idr_Prelude.List.tails2_val <- case idr_Prelude.List.tails1_val of
    (Cidr_Prelude.List.:: idr_Prelude.List.tails2 idr_Prelude.List.tails3) ->
      idr_Prelude.List.tails $ idr_Prelude.List.tails3
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.List.tails1_val
  idr_Prelude.List.tails2_616 <- store idr_Prelude.List.tails2_val
  v.267 <- pure (Cidr_Prelude.List.:: idr_Prelude.List.tails1 idr_Prelude.List.tails2_616)
  pure v.267

idr_Data.Vect.zipWith idr_Data.Vect.zipWith5 idr_Data.Vect.zipWith6 =
  idr_Data.Vect.zipWith6_val <- fetch idr_Data.Vect.zipWith6
  case idr_Data.Vect.zipWith6_val of
    (Cidr_Data.Vect.:: idr_Data.Vect.zipWith7 idr_Data.Vect.zipWith8) ->
      idr_Data.Vect.zipWith5_val <- fetch idr_Data.Vect.zipWith5
      (Cidr_Data.Vect.:: idr_Data.Vect.zipWith9 idr_Data.Vect.zipWith10) <- pure idr_Data.Vect.zipWith5_val
      v.268 <- pure (Cidr_Builtins.MkPair idr_Data.Vect.zipWith9 idr_Data.Vect.zipWith7)
      idr_Data.Vect.zipWith11_630 <- store v.268
      idr_Data.Vect.zipWith12_val <- idr_Data.Vect.zipWith $ idr_Data.Vect.zipWith10 idr_Data.Vect.zipWith8
      idr_Data.Vect.zipWith12_632 <- store idr_Data.Vect.zipWith12_val
      v.269 <- pure (Cidr_Data.Vect.:: idr_Data.Vect.zipWith11_630 idr_Data.Vect.zipWith12_632)
      pure v.269
    (Cidr_Data.Vect.Nil) ->
      pure idr_Data.Vect.zipWith6_val

"idr_Data.Vect.{foldrImpl_2}.unboxed" "idr_Data.Vect.{foldrImpl_2}0" "idr_Data.Vect.{foldrImpl_2}1.151.arity.1.228.arity.1" "idr_Data.Vect.{foldrImpl_2}2.228.arity.1" "idr_Data.Vect.{foldrImpl_2}2.228.arity.2.297.arity.1" "idr_Data.Vect.{foldrImpl_2}3.151.arity.1" =
  idr_Prelude.Strings.isInfixOf2.32.11.arity.1.0.0 <- pure #""
  idris_str_eq3.8 <- _prim_string_eq $ "idr_Data.Vect.{foldrImpl_2}1.151.arity.1.228.arity.1" idr_Prelude.Strings.isInfixOf2.32.11.arity.1.0.0
  ccp.2.8 <- case idris_str_eq3.8 of
    #False ->
      pure 0
    #True ->
      pure 1
  idr_Prelude.Strings.isInfixOf2_val.0.0 <- case ccp.2.8 of
    0 ->
      v.270 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Strings.isInfixOf2_val_110.0.0.0 <- pure v.270
      (Cidr_Prelude.Bool.True) <- pure idr_Prelude.Strings.isInfixOf2_val_110.0.0.0
      idris_str_head2.13.0.0 <- _prim_string_head $ "idr_Data.Vect.{foldrImpl_2}1.151.arity.1.228.arity.1"
      v.273.0 <- pure (CGrInt idris_str_head2.13.0.0)
      idr_Prelude.Strings.isInfixOf3_119.0.0.0.0 <- store v.273.0
      idris_str_tail2.25.0.0 <- _prim_string_tail $ "idr_Data.Vect.{foldrImpl_2}1.151.arity.1.228.arity.1"
      idris_str_eq3.9.0.0 <- _prim_string_eq $ idris_str_tail2.25.0.0 idr_Prelude.Strings.isInfixOf2.32.11.arity.1.0.0
      ccp.2.9.0.0 <- case idris_str_eq3.9.0.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Prelude.Strings.isInfixOf5_val.0.0.0.0 <- case ccp.2.9.0.0 of
        0 ->
          idris_str_head2.14.0.0.0.0 <- _prim_string_head $ idris_str_tail2.25.0.0
          v.274.0 <- pure (CGrInt idris_str_head2.14.0.0.0.0)
          idr_Prelude.Strings.isInfixOf6_136.0.0.0.0.0.0 <- store v.274.0
          idris_str_tail2.28.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.25.0.0
          v.275.0 <- pure (CGrString idris_str_tail2.28.0.0.0.0)
          idr_Prelude.Strings.isInfixOf7_138.0.0.0.0.0.0 <- store v.275.0
          v.276.0 <- pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.isInfixOf6_136.0.0.0.0.0.0 idr_Prelude.Strings.isInfixOf7_138.0.0.0.0.0.0)
          pure v.276.0
        #default ->
          v.277.0 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.277.0
      idr_Prelude.Strings.isInfixOf5_139.0.0.0.0 <- store idr_Prelude.Strings.isInfixOf5_val.0.0.0.0
      idr_Prelude.Strings.isInfixOf4_val.0.0.0.0 <- idr__Prelude.Strings.unpack_with_36 $ idr_Prelude.Strings.isInfixOf5_139.0.0.0.0
      idr_Prelude.Strings.isInfixOf4_140.0.0.0.0 <- store idr_Prelude.Strings.isInfixOf4_val.0.0.0.0
      v.278.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.isInfixOf3_119.0.0.0.0 idr_Prelude.Strings.isInfixOf4_140.0.0.0.0)
      pure v.278.0
    #default ->
      v.271 <- pure (Cidr_Prelude.Bool.False)
      idr_Prelude.Strings.isInfixOf2_val_110.0.0.1 <- pure v.271
      (Cidr_Prelude.Bool.False) <- pure idr_Prelude.Strings.isInfixOf2_val_110.0.0.1
      v.272.0 <- pure (Cidr_Prelude.List.Nil)
      pure v.272.0
  idr_Prelude.Strings.isInfixOf2_141.0.0 <- store idr_Prelude.Strings.isInfixOf2_val.0.0
  p.54 <- pure (CGrString "idr_Data.Vect.{foldrImpl_2}2.228.arity.2.297.arity.1")
  (CGrString idr_Prelude.Strings.isInfixOf1.0.40.77.arity.1.0) <- pure p.54
  idris_str_eq3.10 <- _prim_string_eq $ idr_Prelude.Strings.isInfixOf1.0.40.77.arity.1.0 idr_Prelude.Strings.isInfixOf2.32.11.arity.1.0.0
  ccp.2.10 <- case idris_str_eq3.10 of
    #False ->
      pure 0
    #True ->
      pure 1
  idr_Prelude.Strings.isInfixOf3_val_142.0.0 <- case ccp.2.10 of
    0 ->
      idris_str_head2.15.0.0 <- _prim_string_head $ idr_Prelude.Strings.isInfixOf1.0.40.77.arity.1.0
      v.279 <- pure (CGrInt idris_str_head2.15.0.0)
      idr_Prelude.Strings.isInfixOf4_157.0.0.0.0 <- store v.279
      idris_str_tail2.29.0.0 <- _prim_string_tail $ idr_Prelude.Strings.isInfixOf1.0.40.77.arity.1.0
      idris_str_eq3.11.0.0 <- _prim_string_eq $ idris_str_tail2.29.0.0 idr_Prelude.Strings.isInfixOf2.32.11.arity.1.0.0
      ccp.2.11.0.0 <- case idris_str_eq3.11.0.0 of
        #False ->
          pure ccp.2.10
        #True ->
          pure 1
      idr_Prelude.Strings.isInfixOf6_val_161.0.0.0.0 <- case ccp.2.11.0.0 of
        0 ->
          idris_str_head2.16.0.0.0.0 <- _prim_string_head $ idris_str_tail2.29.0.0
          v.280 <- pure (CGrInt idris_str_head2.16.0.0.0.0)
          idr_Prelude.Strings.isInfixOf7_180.0.0.0.0.0.0 <- store v.280
          idris_str_tail2.32.0.0.0.0 <- _prim_string_tail $ idris_str_tail2.29.0.0
          v.281 <- pure (CGrString idris_str_tail2.32.0.0.0.0)
          idr_Prelude.Strings.isInfixOf8_182.0.0.0.0.0.0 <- store v.281
          v.282 <- pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.isInfixOf7_180.0.0.0.0.0.0 idr_Prelude.Strings.isInfixOf8_182.0.0.0.0.0.0)
          pure v.282
        #default ->
          v.283 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.283
      idr_Prelude.Strings.isInfixOf6_183.0.0.0.0 <- store idr_Prelude.Strings.isInfixOf6_val_161.0.0.0.0
      idr_Prelude.Strings.isInfixOf5_val_158.0.0.0.0 <- idr__Prelude.Strings.unpack_with_36 $ idr_Prelude.Strings.isInfixOf6_183.0.0.0.0
      idr_Prelude.Strings.isInfixOf5_184.0.0.0.0 <- store idr_Prelude.Strings.isInfixOf5_val_158.0.0.0.0
      v.284 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.isInfixOf4_157.0.0.0.0 idr_Prelude.Strings.isInfixOf5_184.0.0.0.0)
      pure v.284
    #default ->
      v.285 <- pure (Cidr_Prelude.List.Nil)
      pure v.285
  idr_Prelude.Strings.isInfixOf3_185.0.0 <- store idr_Prelude.Strings.isInfixOf3_val_142.0.0
  v.286 <- pure (C"idr_{U_{PE_isInfixOf_22f242c8_1}_2}" idr_Prelude.Strings.isInfixOf2_141.0.0)
  idr_PE_isInfixOf_22f242c84.0 <- store v.286
  v.287 <- pure (Cidr_Prelude.Bool.False)
  idr_PE_isInfixOf_22f242c85.0 <- store v.287
  idr_PE_isInfixOf_22f242c86_val_1.0 <- case idr_Prelude.Strings.isInfixOf3_val_142.0.0 of
    (Cidr_Prelude.List.:: idr_PE_isInfixOf_22f242c86.0 idr_PE_isInfixOf_22f242c87.0) ->
      idr_Prelude.List.tails $ idr_PE_isInfixOf_22f242c87.0
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.Strings.isInfixOf3_val_142.0.0
  idr_PE_isInfixOf_22f242c86_2.0 <- store idr_PE_isInfixOf_22f242c86_val_1.0
  v.288 <- pure (Cidr_Prelude.List.:: idr_Prelude.Strings.isInfixOf3_185.0.0 idr_PE_isInfixOf_22f242c86_2.0)
  idr_PE_isInfixOf_22f242c86_3.0 <- store v.288
  "idr_Main.{search_8}5_val.0" <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:0" $ idr_PE_isInfixOf_22f242c84.0 idr_PE_isInfixOf_22f242c85.0 idr_PE_isInfixOf_22f242c86_3.0
  unboxed.CGrString.11 <- case "idr_Main.{search_8}5_val.0" of
    (Cidr_Prelude.Bool.False) ->
      pure "idr_Data.Vect.{foldrImpl_2}3.151.arity.1"
    (Cidr_Prelude.Bool.True) ->
      unboxed.CGrInt.48.0 <- idr_Data.Fin.finToInteger.unboxed $ "idr_Data.Vect.{foldrImpl_2}2.228.arity.1"
      idris_int_str2.2.0 <- _prim_int_str $ unboxed.CGrInt.48.0
      "idr_Main.{search_8}8.40.85.arity.1.0" <- pure #"\n"
      idris_str_concat3.6 <- _prim_string_concat $ "idr_Main.{search_8}8.40.85.arity.1.0" "idr_Data.Vect.{foldrImpl_2}3.151.arity.1"
      (CGrString "idr_Main.{search_8}4.40.86.arity.1.0") <- pure p.54
      idris_str_concat3.7 <- _prim_string_concat $ "idr_Main.{search_8}4.40.86.arity.1.0" idris_str_concat3.6
      "idr_Main.{search_8}7.40.87.arity.1.0" <- pure #": "
      idris_str_concat3.8 <- _prim_string_concat $ "idr_Main.{search_8}7.40.87.arity.1.0" idris_str_concat3.7
      idris_str_concat3.9 <- _prim_string_concat $ idris_int_str2.2.0 idris_str_concat3.8
      pure idris_str_concat3.9
  "idr_{APPLY_0}0_val.13" <- fetch "idr_Data.Vect.{foldrImpl_2}0"
  case "idr_{APPLY_0}0_val.13" of
    (C"idr_{U_Data.Vect.{foldrImpl_2}_1}" "idr_{APPLY_0}2.13" "idr_{APPLY_0}3.13" "idr_{APPLY_0}4.13") ->
      p.44 <- fetch "idr_{APPLY_0}3.13"
      (C"idr_{U_Main.{search_8}_2}" "idr_{APPLY_0}3.13.151.6.arity.1") <- pure p.44
      p.48 <- fetch "idr_{APPLY_0}3.13.151.6.arity.1"
      (CGrString "idr_{APPLY_0}3.13.151.6.arity.1.228.3.arity.1") <- pure p.48
      p.47 <- fetch "idr_{APPLY_0}4.13"
      (Cidr_Builtins.MkPair "idr_{APPLY_0}4.13.228.3.arity.1" "idr_{APPLY_0}4.13.228.3.arity.2") <- pure p.47
      (CGrString "idr_{APPLY_0}4.13.228.3.arity.2.297.1.arity.1") <- fetch "idr_{APPLY_0}4.13.228.3.arity.2"
      "idr_Data.Vect.{foldrImpl_2}.unboxed" $ "idr_{APPLY_0}2.13" "idr_{APPLY_0}3.13.151.6.arity.1.228.3.arity.1" "idr_{APPLY_0}4.13.228.3.arity.1" "idr_{APPLY_0}4.13.228.3.arity.2.297.1.arity.1" unboxed.CGrString.11
    (C"idr_{U_Main.{search_9}_1}") ->
      pure unboxed.CGrString.11

idr_Main.addToStore:addToData:0 idr_Main.addToStore:addToData:03 idr_Main.addToStore:addToData:04 =
  idr_Main.addToStore:addToData:04_val <- fetch idr_Main.addToStore:addToData:04
  case idr_Main.addToStore:addToData:04_val of
    (Cidr_Data.Vect.:: idr_Main.addToStore:addToData:05 idr_Main.addToStore:addToData:06) ->
      idr_Main.addToStore:addToData:07_val <- idr_Main.addToStore:addToData:0 $ idr_Main.addToStore:addToData:03 idr_Main.addToStore:addToData:06
      idr_Main.addToStore:addToData:07_677 <- store idr_Main.addToStore:addToData:07_val
      v.289 <- pure (Cidr_Data.Vect.:: idr_Main.addToStore:addToData:05 idr_Main.addToStore:addToData:07_677)
      pure v.289
    (Cidr_Data.Vect.Nil) ->
      v.290 <- pure (Cidr_Data.Vect.Nil)
      idr_Main.addToStore:addToData:05_678 <- store v.290
      v.291 <- pure (Cidr_Data.Vect.:: idr_Main.addToStore:addToData:03 idr_Main.addToStore:addToData:05_678)
      pure v.291

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:0" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:03" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:06") ->
      "idr_{APPLY_0}0_val.14" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:02"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:09_val" <- case "idr_{APPLY_0}0_val.14" of
        (C"idr_{U_Main.{parseCommand_4}_2}") ->
          "idr_Main.{parseCommand_4}0_val.0.0" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:03"
          case "idr_Main.{parseCommand_4}0_val.0.0" of
            (Cidr_Prelude.Bool.False) ->
              pure "idr_Main.{parseCommand_4}0_val.0.0"
            (Cidr_Prelude.Bool.True) ->
              idr_Prelude.Chars.isDigit1.0.0.48.3.arity.1.0 <- pure 48
              p.63.0 <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:05"
              (CGrInt idris_int_eq0_1.9.0.0) <- pure p.63.0
              idris_int_eq2.9.0.0 <- _prim_int_eq $ idris_int_eq0_1.9.0.0 idr_Prelude.Chars.isDigit1.0.0.48.3.arity.1.0
              ccp.0.9.0.0 <- case idris_int_eq2.9.0.0 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              idr_Prelude.Chars.isDigit1_val_91.0.0.0 <- case ccp.0.9.0.0 of
                0 ->
                  (CGrInt idris_int_lt0_1.0.0.0) <- pure p.63.0
                  idris_int_lt2.0.0.0 <- _prim_int_lt $ idris_int_lt0_1.0.0.0 idr_Prelude.Chars.isDigit1.0.0.48.3.arity.1.0
                  ccp.1.0.0.0 <- case idris_int_lt2.0.0.0 of
                    #False ->
                      pure ccp.0.9.0.0
                    #True ->
                      pure 1
                  case ccp.1.0.0.0 of
                    0 ->
                      v.292 <- pure (Cidr_Prelude.Interfaces.GT)
                      pure v.292
                    #default ->
                      v.293 <- pure (Cidr_Prelude.Interfaces.LT)
                      pure v.293
                #default ->
                  v.294 <- pure (Cidr_Prelude.Interfaces.EQ)
                  pure v.294
              idr_Prelude.Chars.isDigit1_val.0.0.0 <- case idr_Prelude.Chars.isDigit1_val_91.0.0.0 of
                (Cidr_Prelude.Interfaces.GT) ->
                  v.295 <- pure (Cidr_Prelude.Bool.True)
                  pure v.295
                #default ->
                  (CGrInt idris_int_eq0_1.7.0) <- pure p.63.0
                  idris_int_eq2.7.0 <- _prim_int_eq $ idris_int_eq0_1.7.0 idr_Prelude.Chars.isDigit1.0.0.48.3.arity.1.0
                  ccp.0.7.0 <- case idris_int_eq2.7.0 of
                    #False ->
                      pure 0
                    #True ->
                      pure 1
                  case ccp.0.7.0 of
                    0 ->
                      v.296 <- pure (Cidr_Prelude.Bool.False)
                      pure v.296
                    #default ->
                      v.297 <- pure (Cidr_Prelude.Bool.True)
                      pure v.297
              case idr_Prelude.Chars.isDigit1_val.0.0.0 of
                (Cidr_Prelude.Bool.False) ->
                  v.298 <- pure (Cidr_Prelude.Bool.False)
                  pure v.298
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Chars.isDigit2_102.0.0.48.4.arity.1.0 <- pure 57
                  (CGrInt idris_int_eq0_1.9.1.0) <- pure p.63.0
                  idris_int_eq2.9.1.0 <- _prim_int_eq $ idris_int_eq0_1.9.1.0 idr_Prelude.Chars.isDigit2_102.0.0.48.4.arity.1.0
                  ccp.0.9.1.0 <- case idris_int_eq2.9.1.0 of
                    #False ->
                      pure 0
                    #True ->
                      pure 1
                  idr_Prelude.Chars.isDigit2_val_100.0.0.0 <- case ccp.0.9.1.0 of
                    0 ->
                      (CGrInt idris_int_lt0_1.0.1.0) <- pure p.63.0
                      idris_int_lt2.0.1.0 <- _prim_int_lt $ idris_int_lt0_1.0.1.0 idr_Prelude.Chars.isDigit2_102.0.0.48.4.arity.1.0
                      ccp.1.0.1.0 <- case idris_int_lt2.0.1.0 of
                        #False ->
                          pure ccp.0.9.1.0
                        #True ->
                          pure 1
                      case ccp.1.0.1.0 of
                        0 ->
                          v.299 <- pure (Cidr_Prelude.Interfaces.GT)
                          pure v.299
                        #default ->
                          v.300 <- pure (Cidr_Prelude.Interfaces.LT)
                          pure v.300
                    #default ->
                      v.301 <- pure (Cidr_Prelude.Interfaces.EQ)
                      pure v.301
                  case idr_Prelude.Chars.isDigit2_val_100.0.0.0 of
                    (Cidr_Prelude.Interfaces.LT) ->
                      v.302 <- pure (Cidr_Prelude.Bool.True)
                      pure v.302
                    #default ->
                      (CGrInt idris_int_eq0_1.8.0) <- pure p.63.0
                      idris_int_eq2.8.0 <- _prim_int_eq $ idris_int_eq0_1.8.0 idr_Prelude.Chars.isDigit2_102.0.0.48.4.arity.1.0
                      ccp.0.8.0 <- case idris_int_eq2.8.0 of
                        #False ->
                          pure 0
                        #True ->
                          pure 1
                      case ccp.0.8.0 of
                        0 ->
                          v.303 <- pure (Cidr_Prelude.Bool.False)
                          pure v.303
                        #default ->
                          v.304 <- pure (Cidr_Prelude.Bool.True)
                          pure v.304
        (C"idr_{U_{PE_isInfixOf_22f242c8_1}_2}" "idr_{APPLY_0}2_650.14") ->
          "idr_{PE_isInfixOf_22f242c8_1}1_val.0.0" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:03"
          case "idr_{PE_isInfixOf_22f242c8_1}1_val.0.0" of
            (Cidr_Prelude.Bool.False) ->
              idr_Prelude.List.isPrefixOfBy $ "idr_{APPLY_0}2_650.14" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:05"
            (Cidr_Prelude.Bool.True) ->
              pure "idr_{PE_isInfixOf_22f242c8_1}1_val.0.0"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:09_681" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:09_val"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:0" $ "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:09_681" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:06"
    (Cidr_Prelude.List.Nil) ->
      fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldl:03"

"idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:0" "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:04" =
  "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:04_val" <- fetch "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:04"
  case "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:04_val" of
    (Cidr_Data.Vect.:: "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:05" "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:06") ->
      v.305 <- pure (Cidr_Data.Fin.FS "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:05")
      "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:07" <- store v.305
      "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:08_val" <- "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:0" $ "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:06"
      "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:08_683" <- store "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:08_val"
      v.306 <- pure (Cidr_Data.Vect.:: "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:07" "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:08_683")
      pure v.306
    (Cidr_Data.Vect.Nil) ->
      pure "idr_Prelude.Functor.Data.Vect.@Prelude.Functor.Functor$Vect n:!map:04_val"

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_365.32.47.arity.1 <- pure #""
      p.64 <- fetch idr__Prelude.Strings.unpack_with_363
      (CGrString idr__Prelude.Strings.unpack_with_363.40.91.arity.1) <- pure p.64
      idris_str_eq3.12 <- _prim_string_eq $ idr__Prelude.Strings.unpack_with_363.40.91.arity.1 idr__Prelude.Strings.unpack_with_365.32.47.arity.1
      ccp.2.12 <- case idris_str_eq3.12 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr__Prelude.Strings.unpack_with_365_val <- case ccp.2.12 of
        0 ->
          idris_str_head2.17.0.0 <- _prim_string_head $ idr__Prelude.Strings.unpack_with_363.40.91.arity.1
          v.307 <- pure (CGrInt idris_str_head2.17.0.0)
          idr__Prelude.Strings.unpack_with_366_701.0.0 <- store v.307
          idris_str_tail2.33.0.0 <- _prim_string_tail $ idr__Prelude.Strings.unpack_with_363.40.91.arity.1
          v.308 <- pure (CGrString idris_str_tail2.33.0.0)
          idr__Prelude.Strings.unpack_with_367.0.0 <- store v.308
          v.309 <- pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_701.0.0 idr__Prelude.Strings.unpack_with_367.0.0)
          pure v.309
        #default ->
          v.310 <- pure (Cidr_Prelude.Strings.StrNil)
          pure v.310
      idr__Prelude.Strings.unpack_with_365_702 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 $ idr__Prelude.Strings.unpack_with_365_702
      idr__Prelude.Strings.unpack_with_364_703 <- store idr__Prelude.Strings.unpack_with_364_val
      v.311 <- pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_703)
      pure v.311
    (Cidr_Prelude.Strings.StrNil) ->
      v.312 <- pure (Cidr_Prelude.List.Nil)
      pure v.312

idr__Prelude.Strings.span_with_50 idr__Prelude.Strings.span_with_502 =
  idr__Prelude.Strings.span_with_502_val <- fetch idr__Prelude.Strings.span_with_502
  case idr__Prelude.Strings.span_with_502_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.span_with_503 idr__Prelude.Strings.span_with_504) ->
      "idr_Main.{parse_3}1.40.66.arity.1.0" <- pure 32
      p.65 <- fetch idr__Prelude.Strings.span_with_503
      (CGrInt idris_int_eq0_1.11) <- pure p.65
      idris_int_eq2.11 <- _prim_int_eq $ idris_int_eq0_1.11 "idr_Main.{parse_3}1.40.66.arity.1.0"
      ccp.0.11 <- case idris_int_eq2.11 of
        #False ->
          pure 0
        #True ->
          pure 1
      case ccp.0.11 of
        0 ->
          idr__Prelude.Strings.span_with_507_713.32.50.arity.1.0 <- pure #""
          p.71.0 <- fetch idr__Prelude.Strings.span_with_504
          (CGrString idr__Prelude.Strings.span_with_504.40.94.arity.1.0) <- pure p.71.0
          idris_str_eq3.13.0 <- _prim_string_eq $ idr__Prelude.Strings.span_with_504.40.94.arity.1.0 idr__Prelude.Strings.span_with_507_713.32.50.arity.1.0
          ccp.2.13.0 <- case idris_str_eq3.13.0 of
            #False ->
              pure ccp.0.11
            #True ->
              pure 1
          idr__Prelude.Strings.span_with_507_val_708.0 <- case ccp.2.13.0 of
            0 ->
              idris_str_head2.18.0.0.0 <- _prim_string_head $ idr__Prelude.Strings.span_with_504.40.94.arity.1.0
              v.313 <- pure (CGrInt idris_str_head2.18.0.0.0)
              idr__Prelude.Strings.span_with_508_720.0.0.0 <- store v.313
              idris_str_tail2.34.0.0.0 <- _prim_string_tail $ idr__Prelude.Strings.span_with_504.40.94.arity.1.0
              v.314 <- pure (CGrString idris_str_tail2.34.0.0.0)
              idr__Prelude.Strings.span_with_509.0.0.0 <- store v.314
              v.315 <- pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.span_with_508_720.0.0.0 idr__Prelude.Strings.span_with_509.0.0.0)
              pure v.315
            #default ->
              v.316 <- pure (Cidr_Prelude.Strings.StrNil)
              pure v.316
          idr__Prelude.Strings.span_with_507_721.0 <- store idr__Prelude.Strings.span_with_507_val_708.0
          idr__Prelude.Strings.span_with_506_val_705.0 <- idr__Prelude.Strings.span_with_50 $ idr__Prelude.Strings.span_with_507_721.0
          (Cidr_Builtins.MkPair idr__Prelude.Strings.span_with_507_724.0 idr__Prelude.Strings.span_with_508_725.0) <- pure idr__Prelude.Strings.span_with_506_val_705.0
          (CGrInt idr__Prelude.Strings.span_with_503.32.52.arity.1.0) <- pure p.65
          p.68.0 <- fetch idr__Prelude.Strings.span_with_507_724.0
          (CGrString idr__Prelude.Strings.span_with_507_724.32.52.arity.1.0) <- pure p.68.0
          idris_str_cons3.6.0 <- _prim_string_cons $ idr__Prelude.Strings.span_with_503.32.52.arity.1.0 idr__Prelude.Strings.span_with_507_724.32.52.arity.1.0
          v.317 <- pure (CGrString idris_str_cons3.6.0)
          idr__Prelude.Strings.span_with_509_727.0 <- store v.317
          v.318 <- pure (Cidr_Builtins.MkPair idr__Prelude.Strings.span_with_509_727.0 idr__Prelude.Strings.span_with_508_725.0)
          pure v.318
        #default ->
          v.319 <- pure (CGrString #"")
          idr__Prelude.Strings.span_with_506.0 <- store v.319
          (CGrInt idr__Prelude.Strings.span_with_503.32.49.arity.1.0) <- pure p.65
          p.66.0 <- fetch idr__Prelude.Strings.span_with_504
          (CGrString idr__Prelude.Strings.span_with_504.32.49.arity.1.0) <- pure p.66.0
          idris_str_cons3.5.0 <- _prim_string_cons $ idr__Prelude.Strings.span_with_503.32.49.arity.1.0 idr__Prelude.Strings.span_with_504.32.49.arity.1.0
          v.320 <- pure (CGrString idris_str_cons3.5.0)
          idr__Prelude.Strings.span_with_507.0 <- store v.320
          v.321 <- pure (Cidr_Builtins.MkPair idr__Prelude.Strings.span_with_506.0 idr__Prelude.Strings.span_with_507.0)
          pure v.321
    (Cidr_Prelude.Strings.StrNil) ->
      v.322 <- pure (CGrString #"")
      idr__Prelude.Strings.span_with_503_728 <- store v.322
      v.323 <- pure (Cidr_Builtins.MkPair idr__Prelude.Strings.span_with_503_728 idr__Prelude.Strings.span_with_503_728)
      pure v.323
