primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  idr_Main.main1.41.5.arity.1.0 <- pure #"Expr\n"
  _prim_string_print $ idr_Main.main1.41.5.arity.1.0
  v.115 <- pure (C"idr_{U_Main.{main_1}_1}")
  v.0 <- pure v.115
  idr_Main.main4.0 <- store v.0
  v.116 <- pure (C"idr_{U_Main.{main_2}_1}")
  v.1 <- pure v.116
  idr_Main.main6.0 <- store v.1
  v.117 <- pure (C"idr_{U_Main.{main_3}_2}")
  v.2 <- pure v.117
  idr_Main.main7.0 <- store v.2
  v.118 <- pure (C"idr_{U_Main.{main_4}_2}")
  v.3 <- pure v.118
  idr_Main.main8.0 <- store v.3
  v.119 <- pure (C"idr_{U_Main.{main_5}_2}")
  v.4 <- pure v.119
  idr_Main.main9.0 <- store v.4
  v.120 <- pure (Cidr_Prelude.Interfaces.Num_ictor idr_Main.main8.0 idr_Main.main9.0)
  v.5 <- pure v.120
  idr_Main.main8_122.0 <- store v.5
  v.121 <- pure (C"idr_{U_Main.{main_6}_2}")
  v.6 <- pure v.121
  idr_Main.main9_124.0 <- store v.6
  v.122 <- pure (CGrInt 6)
  v.7 <- pure v.122
  idr_Main.main9_129.0 <- store v.7
  v.123 <- pure (Cidr_Main.Val idr_Main.main9_129.0)
  v.8 <- pure v.123
  idr_Main.main9_130.0 <- store v.8
  v.124 <- pure (CGrInt 3)
  v.9 <- pure v.124
  idr_Main.main10.0 <- store v.9
  v.125 <- pure (Cidr_Main.Val idr_Main.main10.0)
  v.10 <- pure v.125
  idr_Main.main10_133.0 <- store v.10
  v.126 <- pure (CGrInt 12)
  v.11 <- pure v.126
  idr_Main.main11.0 <- store v.11
  v.127 <- pure (Cidr_Main.Val idr_Main.main11.0)
  v.12 <- pure v.127
  idr_Main.main11_135.0 <- store v.12
  v.128 <- pure (Cidr_Main.Mul idr_Main.main10_133.0 idr_Main.main11_135.0)
  v.13 <- pure v.128
  idr_Main.main10_136.0 <- store v.13
  v.129 <- pure (Cidr_Main.Add idr_Main.main9_130.0 idr_Main.main10_136.0)
  v.14 <- pure v.129
  idr_Main.main9_137.0 <- store v.14
  unboxed.CGrInt.15.0 <- idr_Main.eval.unboxed $ idr_Main.main6.0 idr_Main.main7.0 idr_Main.main8_122.0 idr_Main.main9_124.0 idr_Main.main9_137.0
  v.130 <- pure (CGrInt unboxed.CGrInt.15.0)
  v.15 <- pure v.130
  idr_Main.main5_138.0 <- store v.15
  idr_Main.main2_val.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main4.0 idr_Main.main5_138.0
  idr_Main.main5_146.0 <- store v.0
  idr_Main.main7_151.0 <- store v.1
  idr_Main.main8_153.0 <- store v.2
  idr_Main.main9_157.0 <- store v.3
  idr_Main.main10_159.0 <- store v.4
  v.131 <- pure (Cidr_Prelude.Interfaces.Num_ictor idr_Main.main9_157.0 idr_Main.main10_159.0)
  v.16 <- pure v.131
  idr_Main.main9_160.0 <- store v.16
  idr_Main.main10_162.0 <- store v.6
  idr_Main.main10_167.0 <- store v.7
  v.132 <- pure (Cidr_Main.Val idr_Main.main10_167.0)
  v.17 <- pure v.132
  idr_Main.main10_168.0 <- store v.17
  idr_Main.main11_172.0 <- store v.9
  v.133 <- pure (Cidr_Main.Val idr_Main.main11_172.0)
  v.18 <- pure v.133
  idr_Main.main11_173.0 <- store v.18
  idr_Main.main12.0 <- store v.11
  v.134 <- pure (Cidr_Main.Val idr_Main.main12.0)
  v.19 <- pure v.134
  idr_Main.main12_175.0 <- store v.19
  v.135 <- pure (Cidr_Main.Mul idr_Main.main11_173.0 idr_Main.main12_175.0)
  v.20 <- pure v.135
  idr_Main.main11_176.0 <- store v.20
  v.136 <- pure (Cidr_Main.Add idr_Main.main10_168.0 idr_Main.main11_176.0)
  v.21 <- pure v.136
  idr_Main.main10_177.0 <- store v.21
  unboxed.CGrInt.16.0 <- idr_Main.eval.unboxed $ idr_Main.main7_151.0 idr_Main.main8_153.0 idr_Main.main9_160.0 idr_Main.main10_162.0 idr_Main.main10_177.0
  v.137 <- pure (CGrInt unboxed.CGrInt.16.0)
  v.22 <- pure v.137
  idr_Main.main6_178.0 <- store v.22
  idr_Main.main3_val_140.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main5_146.0 idr_Main.main6_178.0
  v.138 <- pure (C"idr_{U_Main.{main_14}_1}")
  v.23 <- pure v.138
  idr_Main.main6_186.0 <- store v.23
  idr_Main.main7_190.0 <- store v.7
  v.139 <- pure (Cidr_Main.Val idr_Main.main7_190.0)
  v.24 <- pure v.139
  idr_Main.main7_191.0 <- store v.24
  idr_Main.main8_195.0 <- store v.9
  v.140 <- pure (Cidr_Main.Val idr_Main.main8_195.0)
  v.25 <- pure v.140
  idr_Main.main8_196.0 <- store v.25
  idr_Main.main9_199.0 <- store v.11
  v.141 <- pure (Cidr_Main.Val idr_Main.main9_199.0)
  v.26 <- pure v.141
  idr_Main.main9_200.0 <- store v.26
  v.142 <- pure (Cidr_Main.Mul idr_Main.main8_196.0 idr_Main.main9_200.0)
  v.27 <- pure v.142
  idr_Main.main8_201.0 <- store v.27
  v.143 <- pure (Cidr_Main.Add idr_Main.main7_191.0 idr_Main.main8_201.0)
  v.28 <- pure v.143
  idr_Main.main7_202.0 <- store v.28
  idr_Main.main4_val_180.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main6_186.0 idr_Main.main7_202.0
  idr_Main.main7_210.0 <- store v.0
  idr_Main.main9_217.0 <- store v.3
  v.144 <- pure (Cidr_Prelude.Interfaces.Num_ictor.1 idr_Main.main9_217.0)
  v.29 <- pure v.144
  idr_Main.main9_220.0 <- store v.29
  idr_Main.main10_223.0 <- store v.7
  v.145 <- pure (Cidr_Main.Val' idr_Main.main10_223.0)
  v.30 <- pure v.145
  idr_Main.main10_224.0 <- store v.30
  idr_Main.main12_230.0 <- store v.4
  v.146 <- pure (Cidr_Prelude.Interfaces.Num_ictor.0 idr_Main.main12_230.0)
  v.31 <- pure v.146
  idr_Main.main11_231.0 <- store v.31
  idr_Main.main12_234.0 <- store v.9
  v.147 <- pure (Cidr_Main.Val' idr_Main.main12_234.0)
  v.32 <- pure v.147
  idr_Main.main12_235.0 <- store v.32
  idr_Main.main13.0 <- store v.11
  v.148 <- pure (Cidr_Main.Val' idr_Main.main13.0)
  v.33 <- pure v.148
  idr_Main.main13_237.0 <- store v.33
  v.149 <- pure (Cidr_Main.Mul' idr_Main.main11_231.0 idr_Main.main12_235.0 idr_Main.main13_237.0)
  v.34 <- pure v.149
  idr_Main.main11_238.0 <- store v.34
  v.150 <- pure (Cidr_Main.Add' idr_Main.main9_220.0 idr_Main.main10_224.0 idr_Main.main11_238.0)
  v.35 <- pure v.150
  idr_Main.main9_239.0 <- store v.35
  unboxed.CGrInt.17.0 <- idr_Main.eval'.unboxed $ idr_Main.main9_239.0
  v.151 <- pure (CGrInt unboxed.CGrInt.17.0)
  v.36 <- pure v.151
  idr_Main.main8_240.0 <- store v.36
  idr_Main.main5_val_204.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main7_210.0 idr_Main.main8_240.0
  v.152 <- pure (C"idr_{U_Main.{main_21}_1}")
  v.37 <- pure v.152
  idr_Main.main8_248.0 <- store v.37
  v.153 <- pure (C"idr_{U_Main.{main_22}_1}")
  v.38 <- pure v.153
  idr_Main.main11_255.0 <- store v.38
  v.154 <- pure (CGrInt 1)
  v.39 <- pure v.154
  idr_Main.main12_258.0 <- store v.39
  v.155 <- pure (CGrInt 2)
  v.40 <- pure v.155
  idr_Main.main13_261.0 <- store v.40
  idr_Main.main14.0 <- store v.9
  v.156 <- pure (CGrInt 4)
  v.41 <- pure v.156
  idr_Main.main15.0 <- store v.41
  v.157 <- pure (Cidr_Prelude.List.Nil)
  v.42 <- pure v.157
  idr_Main.main16.0 <- store v.42
  v.158 <- pure (Cidr_Prelude.List.:: idr_Main.main15.0 idr_Main.main16.0)
  v.43 <- pure v.158
  idr_Main.main15_264.0 <- store v.43
  v.159 <- pure (Cidr_Prelude.List.:: idr_Main.main14.0 idr_Main.main15_264.0)
  v.44 <- pure v.159
  idr_Main.main14_265.0 <- store v.44
  v.160 <- pure (Cidr_Prelude.List.:: idr_Main.main13_261.0 idr_Main.main14_265.0)
  v.45 <- pure v.160
  idr_Main.main13_266.0 <- store v.45
  v.161 <- pure (Cidr_Prelude.List.:: idr_Main.main12_258.0 idr_Main.main13_266.0)
  v.46 <- pure v.161
  idr_Main.main12_267.0 <- store v.46
  idr_Main.main9_val_249.0 <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ idr_Main.main11_255.0 idr_Main.main12_267.0
  idr_Main.main9_268.0 <- store idr_Main.main9_val_249.0
  idr_Main.main6_val_242.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main8_248.0 idr_Main.main9_268.0
  idr_Main.main9_276.0 <- store v.0
  idr_Main.main12_283.0 <- store v.3
  idr_Main.main14_288.0 <- store v.39
  idr_Main.main15_291.0 <- store v.40
  idr_Main.main16_294.0 <- store v.9
  idr_Main.main17.0 <- store v.41
  idr_Main.main18.0 <- store v.42
  v.162 <- pure (Cidr_Prelude.List.:: idr_Main.main17.0 idr_Main.main18.0)
  v.47 <- pure v.162
  idr_Main.main17_296.0 <- store v.47
  v.163 <- pure (Cidr_Prelude.List.:: idr_Main.main16_294.0 idr_Main.main17_296.0)
  v.48 <- pure v.163
  idr_Main.main16_297.0 <- store v.48
  v.164 <- pure (Cidr_Prelude.List.:: idr_Main.main15_291.0 idr_Main.main16_297.0)
  v.49 <- pure v.164
  idr_Main.main15_298.0 <- store v.49
  v.165 <- pure (Cidr_Prelude.List.:: idr_Main.main14_288.0 idr_Main.main15_298.0)
  v.50 <- pure v.165
  idr_Main.main14_299.0 <- store v.50
  idr_Main.main13_285.41.8.arity.1.0 <- pure 0
  unboxed.CGrInt.18.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0.unboxed" $ idr_Main.main12_283.0 idr_Main.main13_285.41.8.arity.1.0 idr_Main.main14_299.0
  v.166 <- pure (CGrInt unboxed.CGrInt.18.0)
  v.51 <- pure v.166
  idr_Main.main10_300.0 <- store v.51
  idr_Main.main7_val_270.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main9_276.0 idr_Main.main10_300.0
  idr_Main.main10_308.0 <- store v.0
  idr_Main.main13_315.0 <- store v.4
  idr_Main.main15_320.0 <- store v.39
  idr_Main.main16_323.0 <- store v.40
  idr_Main.main17_326.0 <- store v.9
  idr_Main.main18_329.0 <- store v.41
  idr_Main.main19.0 <- store v.42
  v.167 <- pure (Cidr_Prelude.List.:: idr_Main.main18_329.0 idr_Main.main19.0)
  v.52 <- pure v.167
  idr_Main.main18_330.0 <- store v.52
  v.168 <- pure (Cidr_Prelude.List.:: idr_Main.main17_326.0 idr_Main.main18_330.0)
  v.53 <- pure v.168
  idr_Main.main17_331.0 <- store v.53
  v.169 <- pure (Cidr_Prelude.List.:: idr_Main.main16_323.0 idr_Main.main17_331.0)
  v.54 <- pure v.169
  idr_Main.main16_332.0 <- store v.54
  v.170 <- pure (Cidr_Prelude.List.:: idr_Main.main15_320.0 idr_Main.main16_332.0)
  v.55 <- pure v.170
  idr_Main.main15_333.0 <- store v.55
  idr_Main.main14_317.41.9.arity.1.0 <- pure 1
  unboxed.CGrInt.19.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0.unboxed" $ idr_Main.main13_315.0 idr_Main.main14_317.41.9.arity.1.0 idr_Main.main15_333.0
  v.171 <- pure (CGrInt unboxed.CGrInt.19.0)
  v.56 <- pure v.171
  idr_Main.main11_334.0 <- store v.56
  idr_Main.main8_val_302.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main10_308.0 idr_Main.main11_334.0
  idr_Main.main11_341.0 <- store v.0
  v.172 <- pure (C"idr_{U_Main.{main_28}_2}")
  v.57 <- pure v.172
  idr_Main.main14_348.0 <- store v.57
  v.173 <- pure (CGrString #"One")
  v.58 <- pure v.173
  idr_Main.main16_353.0 <- store v.58
  v.174 <- pure (CGrString #"Two")
  v.59 <- pure v.174
  idr_Main.main17_356.0 <- store v.59
  v.175 <- pure (CGrString #"Three")
  v.60 <- pure v.175
  idr_Main.main18_359.0 <- store v.60
  idr_Main.main19_361.0 <- store v.42
  v.176 <- pure (Cidr_Prelude.List.:: idr_Main.main18_359.0 idr_Main.main19_361.0)
  v.61 <- pure v.176
  idr_Main.main18_362.0 <- store v.61
  v.177 <- pure (Cidr_Prelude.List.:: idr_Main.main17_356.0 idr_Main.main18_362.0)
  v.62 <- pure v.177
  idr_Main.main17_363.0 <- store v.62
  v.178 <- pure (Cidr_Prelude.List.:: idr_Main.main16_353.0 idr_Main.main17_363.0)
  v.63 <- pure v.178
  idr_Main.main16_364.0 <- store v.63
  idr_Main.main15_350.41.10.arity.1.0 <- pure 0
  unboxed.CGrInt.20.0 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0.unboxed" $ idr_Main.main14_348.0 idr_Main.main15_350.41.10.arity.1.0 idr_Main.main16_364.0
  v.179 <- pure (CGrInt unboxed.CGrInt.20.0)
  v.64 <- pure v.179
  idr_Main.main12_365.0 <- store v.64
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.printLn' $ idr_Main.main11_341.0 idr_Main.main12_365.0
  pure ()

idr_Main.eval.unboxed idr_Main.eval1 idr_Main.eval2 idr_Main.eval3.41.arity.1 idr_Main.eval3.41.arity.2 idr_Main.eval4 =
  idr_Main.eval4_val <- fetch idr_Main.eval4
  case idr_Main.eval4_val of
    (Cidr_Main.Add idr_Main.eval5_6 idr_Main.eval6_7) ->
      idr_Main.eval7_val <- fetch idr_Main.eval3.41.arity.1
      (Cidr_Prelude.Interfaces.Num_ictor idr_Main.eval9 idr_Main.eval10) <- pure idr_Main.eval7_val
      unboxed.CGrInt.3 <- idr_Main.eval.unboxed $ idr_Main.eval1 idr_Main.eval2 idr_Main.eval3.41.arity.1 idr_Main.eval3.41.arity.2 idr_Main.eval5_6
      v.180 <- pure (CGrInt unboxed.CGrInt.3)
      v.65 <- pure v.180
      idr_Main.eval11_10 <- store v.65
      "idr_{APPLY_0}0_val.0" <- fetch idr_Main.eval9
      idr_Main.eval11_val <- case "idr_{APPLY_0}0_val.0" of
        (C"idr_{U_Main.{main_4}_2}") ->
          v.181 <- pure (C"idr_{U_Main.{main_4}_1}" idr_Main.eval11_10)
          v.66 <- pure v.181
          pure v.66
      idr_Main.eval11_11 <- store idr_Main.eval11_val
      unboxed.CGrInt.4 <- idr_Main.eval.unboxed $ idr_Main.eval1 idr_Main.eval2 idr_Main.eval3.41.arity.1 idr_Main.eval3.41.arity.2 idr_Main.eval6_7
      v.182 <- pure (CGrInt unboxed.CGrInt.4)
      v.67 <- pure v.182
      idr_Main.eval12_13 <- store v.67
      "idr_{APPLY_0}0_val.1" <- fetch idr_Main.eval11_11
      case "idr_{APPLY_0}0_val.1" of
        (C"idr_{U_Main.{main_4}_1}" "idr_{APPLY_0}2_413.1") ->
          p.2 <- fetch "idr_{APPLY_0}2_413.1"
          (CGrInt idris_int_add0_1.0.0) <- pure p.2
          p.1 <- fetch idr_Main.eval12_13
          (CGrInt idris_int_add1_1.0.0) <- pure p.1
          idris_int_add2.0.0 <- _prim_int_add $ idris_int_add0_1.0.0 idris_int_add1_1.0.0
          pure idris_int_add2.0.0
    (Cidr_Main.Mul idr_Main.eval5_27 idr_Main.eval6_28) ->
      idr_Main.eval7_val_32 <- fetch idr_Main.eval3.41.arity.1
      (Cidr_Prelude.Interfaces.Num_ictor idr_Main.eval9_33 idr_Main.eval10_34) <- pure idr_Main.eval7_val_32
      unboxed.CGrInt.5 <- idr_Main.eval.unboxed $ idr_Main.eval1 idr_Main.eval2 idr_Main.eval3.41.arity.1 idr_Main.eval3.41.arity.2 idr_Main.eval5_27
      v.183 <- pure (CGrInt unboxed.CGrInt.5)
      v.68 <- pure v.183
      idr_Main.eval11_39 <- store v.68
      "idr_{APPLY_0}0_val.2" <- fetch idr_Main.eval10_34
      idr_Main.eval11_val_35 <- case "idr_{APPLY_0}0_val.2" of
        (C"idr_{U_Main.{main_5}_2}") ->
          v.184 <- pure (C"idr_{U_Main.{main_5}_1}" idr_Main.eval11_39)
          v.69 <- pure v.184
          pure v.69
      idr_Main.eval11_40 <- store idr_Main.eval11_val_35
      unboxed.CGrInt.10 <- idr_Main.eval.unboxed $ idr_Main.eval1 idr_Main.eval2 idr_Main.eval3.41.arity.1 idr_Main.eval3.41.arity.2 idr_Main.eval6_28
      v.185 <- pure (CGrInt unboxed.CGrInt.10)
      v.70 <- pure v.185
      idr_Main.eval12_44 <- store v.70
      "idr_{APPLY_0}0_val.3" <- fetch idr_Main.eval11_40
      case "idr_{APPLY_0}0_val.3" of
        (C"idr_{U_Main.{main_5}_1}" "idr_{APPLY_0}2_414.3") ->
          p.5 <- fetch "idr_{APPLY_0}2_414.3"
          (CGrInt idris_int_mul0_1.0.0) <- pure p.5
          p.4 <- fetch idr_Main.eval12_44
          (CGrInt idris_int_mul1_1.0.0) <- pure p.4
          idris_int_mul2.0.0 <- _prim_int_mul $ idris_int_mul0_1.0.0 idris_int_mul1_1.0.0
          pure idris_int_mul2.0.0
    (Cidr_Main.Val idr_Main.eval5_56) ->
      p.7 <- fetch idr_Main.eval5_56
      (CGrInt unboxed.CGrInt.1) <- pure p.7
      pure unboxed.CGrInt.1

idr_Main.eval'.unboxed idr_Main.eval'1 =
  idr_Main.eval'1_val <- fetch idr_Main.eval'1
  case idr_Main.eval'1_val of
    (Cidr_Main.Add' idr_Main.eval'2_59 idr_Main.eval'3_60 idr_Main.eval'4_61) ->
      idr_Main.eval'2_val <- fetch idr_Main.eval'2_59
      (Cidr_Prelude.Interfaces.Num_ictor.1 idr_Main.eval'5) <- pure idr_Main.eval'2_val
      unboxed.CGrInt.11 <- idr_Main.eval'.unboxed $ idr_Main.eval'3_60
      v.186 <- pure (CGrInt unboxed.CGrInt.11)
      v.71 <- pure v.186
      idr_Main.eval'7_64 <- store v.71
      "idr_{APPLY_0}0_val.4" <- fetch idr_Main.eval'5
      idr_Main.eval'7_val <- case "idr_{APPLY_0}0_val.4" of
        (C"idr_{U_Main.{main_4}_2}") ->
          v.187 <- pure (C"idr_{U_Main.{main_4}_1}" idr_Main.eval'7_64)
          v.72 <- pure v.187
          pure v.72
      idr_Main.eval'7_65 <- store idr_Main.eval'7_val
      unboxed.CGrInt.12 <- idr_Main.eval'.unboxed $ idr_Main.eval'4_61
      v.188 <- pure (CGrInt unboxed.CGrInt.12)
      v.73 <- pure v.188
      idr_Main.eval'8_67 <- store v.73
      "idr_{APPLY_0}0_val.5" <- fetch idr_Main.eval'7_65
      case "idr_{APPLY_0}0_val.5" of
        (C"idr_{U_Main.{main_4}_1}" "idr_{APPLY_0}2_413.5") ->
          p.9 <- fetch "idr_{APPLY_0}2_413.5"
          (CGrInt idris_int_add0_1.0.1) <- pure p.9
          p.8 <- fetch idr_Main.eval'8_67
          (CGrInt idris_int_add1_1.0.1) <- pure p.8
          idris_int_add2.0.1 <- _prim_int_add $ idris_int_add0_1.0.1 idris_int_add1_1.0.1
          pure idris_int_add2.0.1
    (Cidr_Main.Mul' idr_Main.eval'2_84 idr_Main.eval'3_85 idr_Main.eval'4_86) ->
      idr_Main.eval'2_val_87 <- fetch idr_Main.eval'2_84
      (Cidr_Prelude.Interfaces.Num_ictor.0 idr_Main.eval'6_89) <- pure idr_Main.eval'2_val_87
      unboxed.CGrInt.13 <- idr_Main.eval'.unboxed $ idr_Main.eval'3_85
      v.189 <- pure (CGrInt unboxed.CGrInt.13)
      v.74 <- pure v.189
      idr_Main.eval'7_94 <- store v.74
      "idr_{APPLY_0}0_val.6" <- fetch idr_Main.eval'6_89
      idr_Main.eval'7_val_90 <- case "idr_{APPLY_0}0_val.6" of
        (C"idr_{U_Main.{main_5}_2}") ->
          v.190 <- pure (C"idr_{U_Main.{main_5}_1}" idr_Main.eval'7_94)
          v.75 <- pure v.190
          pure v.75
      idr_Main.eval'7_95 <- store idr_Main.eval'7_val_90
      unboxed.CGrInt.14 <- idr_Main.eval'.unboxed $ idr_Main.eval'4_86
      v.191 <- pure (CGrInt unboxed.CGrInt.14)
      v.76 <- pure v.191
      idr_Main.eval'8_99 <- store v.76
      "idr_{APPLY_0}0_val.7" <- fetch idr_Main.eval'7_95
      case "idr_{APPLY_0}0_val.7" of
        (C"idr_{U_Main.{main_5}_1}" "idr_{APPLY_0}2_414.7") ->
          p.12 <- fetch "idr_{APPLY_0}2_414.7"
          (CGrInt idris_int_mul0_1.0.1) <- pure p.12
          p.11 <- fetch idr_Main.eval'8_99
          (CGrInt idris_int_mul1_1.0.1) <- pure p.11
          idris_int_mul2.0.1 <- _prim_int_mul $ idris_int_mul0_1.0.1 idris_int_mul1_1.0.1
          pure idris_int_mul2.0.1
    (Cidr_Main.Val' idr_Main.eval'2_111) ->
      p.14 <- fetch idr_Main.eval'2_111
      (CGrInt unboxed.CGrInt.2) <- pure p.14
      pure unboxed.CGrInt.2

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0_val.9" <- fetch idr_Prelude.Interactive.printLn'2
  idr_Prelude.Interactive.printLn'5_val_407 <- case "idr_{APPLY_0}0_val.9" of
    (C"idr_{U_Main.{main_14}_1}") ->
      v.192 <- pure (C"idr_{U_Main.{main_1}_1}")
      v.77 <- pure v.192
      "idr_Main.{main_14}2.0" <- store v.77
      unboxed.CGrString.4 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:0.unboxed" $ "idr_Main.{main_14}2.0" idr_Prelude.Interactive.printLn'3
      v.193 <- pure (CGrString unboxed.CGrString.4)
      v.78 <- pure v.193
      pure v.78
    (C"idr_{U_Main.{main_1}_1}") ->
      unboxed.CGrString.5 <- "idr_Main.{main_1}.unboxed" $ idr_Prelude.Interactive.printLn'3
      v.194 <- pure (CGrString unboxed.CGrString.5)
      v.79 <- pure v.194
      pure v.79
    (C"idr_{U_Main.{main_21}_1}") ->
      v.195 <- pure (C"idr_{U_Main.{main_1}_1}")
      v.80 <- pure v.195
      "idr_Main.{main_21}4.0" <- store v.80
      "idr_Main.{main_21}5.0.57.0.arity.1" <- pure #""
      unboxed.CGrString.2.0 <- "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" $ "idr_Main.{main_21}4.0" "idr_Main.{main_21}5.0.57.0.arity.1" idr_Prelude.Interactive.printLn'3
      "idr_Main.{main_21}3_426.49.7.arity.1.0" <- pure #"]"
      idris_str_concat3.0 <- _prim_string_concat $ unboxed.CGrString.2.0 "idr_Main.{main_21}3_426.49.7.arity.1.0"
      "idr_Main.{main_21}1.49.8.arity.1.0" <- pure #"["
      idris_str_concat3.1 <- _prim_string_concat $ "idr_Main.{main_21}1.49.8.arity.1.0" idris_str_concat3.0
      v.196 <- pure (CGrString idris_str_concat3.1)
      v.81 <- pure v.196
      pure v.81
  (CGrString idr_Prelude.Interactive.printLn'5.49.0.arity.1) <- pure idr_Prelude.Interactive.printLn'5_val_407
  idr_Prelude.Interactive.printLn'6.49.0.arity.1 <- pure #"\n"
  idris_str_concat3.2 <- _prim_string_concat $ idr_Prelude.Interactive.printLn'5.49.0.arity.1 idr_Prelude.Interactive.printLn'6.49.0.arity.1
  _prim_string_print $ idris_str_concat3.2
  v.197 <- pure (Cidr_MkUnit)
  v.82 <- pure v.197
  pure v.82

"idr_Main.{main_1}.unboxed" "idr_Main.{main_1}0" =
  v.198 <- pure (C"idr_{U_prim__toStrBigInt_1}")
  v.83 <- pure v.198
  "idr_Main.{main_1}2" <- store v.83
  "idr_{APPLY_0}0_val.8.0" <- fetch "idr_Main.{main_1}2"
  idr_Prelude.Show.primNumShow4_val.0 <- case "idr_{APPLY_0}0_val.8.0" of
    (C"idr_{U_prim__toStrBigInt_1}") ->
      p.17 <- fetch "idr_Main.{main_1}0"
      (CGrInt idris_int_str1_0.0.0) <- pure p.17
      idris_int_str2.0.0 <- _prim_int_str $ idris_int_str1_0.0.0
      v.199 <- pure (CGrString idris_int_str2.0.0)
      v.84 <- pure v.199
      pure v.84
  v.200 <- pure (Cidr_Prelude.Show.Open)
  v.85 <- pure v.200
  ccp.3.0 <- case v.85 of
    (Cidr_Prelude.Show.Open) ->
      pure 0
  idr_Prelude.Show.primNumShow6.0.49.1.arity.1 <- pure 5
  idris_int_eq2.3.0 <- _prim_int_eq $ ccp.3.0 idr_Prelude.Show.primNumShow6.0.49.1.arity.1
  ccp.0.3.0 <- case idris_int_eq2.3.0 of
    #False ->
      pure 0
    #True ->
      pure 1
  v.201 <- pure (CGrInt ccp.0.3.0)
  v.86 <- pure v.201
  idr_Prelude.Show.primNumShow5_val_367.0 <- case v.86 of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0") ->
      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0" of
        0 ->
          idris_int_lt2.0.0 <- _prim_int_lt $ ccp.3.0 idr_Prelude.Show.primNumShow6.0.49.1.arity.1
          ccp.1.0.0 <- case idris_int_lt2.0.0 of
            #False ->
              pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0"
            #True ->
              pure 1
          v.202 <- pure (CGrInt ccp.1.0.0)
          v.87 <- pure v.202
          case v.87 of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_443.0") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_443.0" of
                0 ->
                  v.203 <- pure (Cidr_Prelude.Interfaces.GT)
                  v.88 <- pure v.203
                  pure v.88
                #default ->
                  v.204 <- pure (Cidr_Prelude.Interfaces.LT)
                  v.89 <- pure v.204
                  pure v.89
        #default ->
          v.205 <- pure (Cidr_Prelude.Interfaces.EQ)
          v.90 <- pure v.205
          pure v.90
  idr_Prelude.Show.primNumShow5_val_366.0 <- case idr_Prelude.Show.primNumShow5_val_367.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      v.206 <- pure (Cidr_Prelude.Bool.True)
      v.91 <- pure v.206
      pure v.91
    #default ->
      ccp.4.0 <- case v.85 of
        (Cidr_Prelude.Show.Open) ->
          pure 0
      idr_Prelude.Show.primNumShow7.41.11.arity.1.0 <- pure 5
      idris_int_eq2.0 <- _prim_int_eq $ ccp.4.0 idr_Prelude.Show.primNumShow7.41.11.arity.1.0
      ccp.0.0 <- case idris_int_eq2.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.207 <- pure (CGrInt ccp.0.0)
      v.92 <- pure v.207
      case v.92 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0.0 of
            0 ->
              v.208 <- pure (Cidr_Prelude.Bool.False)
              v.93 <- pure v.208
              pure v.93
            #default ->
              v.209 <- pure (Cidr_Prelude.Bool.True)
              v.94 <- pure v.209
              pure v.94
  idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_366.0 of
    (Cidr_Prelude.Bool.False) ->
      v.210 <- pure (Cidr_Prelude.Bool.False)
      v.95 <- pure v.210
      pure v.95
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_383.41.12.arity.1.0 <- pure #""
      (CGrString idr_Prelude.Show.primNumShow4.0.49.2.arity.1) <- pure idr_Prelude.Show.primNumShow4_val.0
      idris_str_eq3.0 <- _prim_string_eq $ idr_Prelude.Show.primNumShow4.0.49.2.arity.1 idr_Prelude.Show.primNumShow6_383.41.12.arity.1.0
      ccp.2.0 <- case idris_str_eq3.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.211 <- pure (CGrInt ccp.2.0)
      v.96 <- pure v.211
      idr_Prelude.Show.primNumShow6_val_380.0 <- case v.96 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_386.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0_386.0 of
            0 ->
              v.212 <- pure (Cidr_Prelude.Bool.True)
              v.97 <- pure v.212
              pure v.97
            #default ->
              v.213 <- pure (Cidr_Prelude.Bool.False)
              v.98 <- pure v.213
              pure v.98
      idr_Prelude.Show.primNumShow6_387.0 <- store idr_Prelude.Show.primNumShow6_val_380.0
      v.214 <- pure (Cidr_Prelude.Bool.True)
      v.99 <- pure v.214
      idr_Prelude.Show.primNumShow6_val_379.0 <- case v.99 of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_436.0" <- fetch idr_Prelude.Show.primNumShow6_387.0
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_436.0" of
            (Cidr_Prelude.Bool.False) ->
              v.215 <- pure (Cidr_Prelude.Basics.No)
              v.100 <- pure v.215
              pure v.100
            (Cidr_Prelude.Bool.True) ->
              v.216 <- pure (Cidr_Prelude.Basics.Yes)
              v.101 <- pure v.216
              pure v.101
      case idr_Prelude.Show.primNumShow6_val_379.0 of
        (Cidr_Prelude.Basics.No) ->
          v.217 <- pure (Cidr_Prelude.Bool.False)
          v.102 <- pure v.217
          pure v.102
        (Cidr_Prelude.Basics.Yes) ->
          (CGrString idr_Prelude.Show.primNumShow4.0.49.3.arity.1) <- pure idr_Prelude.Show.primNumShow4_val.0
          idris_str_head2.0 <- _prim_string_head $ idr_Prelude.Show.primNumShow4.0.49.3.arity.1
          idr_Prelude.Show.primNumShow8.41.14.arity.1.0 <- pure 45
          idris_int_eq2.1 <- _prim_int_eq $ idris_str_head2.0 idr_Prelude.Show.primNumShow8.41.14.arity.1.0
          ccp.0.1 <- case idris_int_eq2.1 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.218 <- pure (CGrInt ccp.0.1)
          v.103 <- pure v.218
          case v.103 of
            (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_397.0) ->
              case idr_Prelude.Show.primNumShow_cpat_LInt64_0_397.0 of
                0 ->
                  v.219 <- pure (Cidr_Prelude.Bool.False)
                  v.104 <- pure v.219
                  pure v.104
                #default ->
                  pure v.99
  case idr_Prelude.Show.primNumShow5_val.0 of
    (Cidr_Prelude.Bool.False) ->
      (CGrString unboxed.CGrString.3) <- pure idr_Prelude.Show.primNumShow4_val.0
      pure unboxed.CGrString.3
    (Cidr_Prelude.Bool.True) ->
      (CGrString idr_Prelude.Show.primNumShow4.0.49.4.arity.1) <- pure idr_Prelude.Show.primNumShow4_val.0
      idr_Prelude.Show.primNumShow7_404.0.49.4.arity.1 <- pure #")"
      idris_str_concat3.3 <- _prim_string_concat $ idr_Prelude.Show.primNumShow4.0.49.4.arity.1 idr_Prelude.Show.primNumShow7_404.0.49.4.arity.1
      idr_Prelude.Show.primNumShow6_401.0.49.5.arity.1 <- pure #"("
      idris_str_concat3.4 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_401.0.49.5.arity.1 idris_str_concat3.3
      pure idris_str_concat3.4

"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" =
  "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04"
  case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06") ->
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
      case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" of
        (Cidr_Prelude.List.Nil) ->
          "idr_{APPLY_0}0_val.10" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val" <- case "idr_{APPLY_0}0_val.10" of
            (C"idr_{U_Main.{main_1}_1}") ->
              unboxed.CGrString.11 <- "idr_Main.{main_1}.unboxed" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
              v.220 <- pure (CGrString unboxed.CGrString.11)
              v.105 <- pure v.220
              pure v.105
          (CGrString "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07.49.9.arity.1") <- pure "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val"
          idris_str_concat3.5 <- _prim_string_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07.49.9.arity.1"
          pure idris_str_concat3.5
        #default ->
          "idr_{APPLY_0}0_val.11" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_433" <- case "idr_{APPLY_0}0_val.11" of
            (C"idr_{U_Main.{main_1}_1}") ->
              unboxed.CGrString.13 <- "idr_Main.{main_1}.unboxed" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
              v.221 <- pure (CGrString unboxed.CGrString.13)
              v.106 <- pure v.221
              pure v.106
          (CGrString "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09.49.10.arity.1") <- pure "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_433"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010.49.10.arity.1" <- pure #", "
          idris_str_concat3.6 <- _prim_string_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09.49.10.arity.1" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010.49.10.arity.1"
          idris_str_concat3.7 <- _prim_string_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1" idris_str_concat3.6
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" idris_str_concat3.7 "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1"

"idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0.unboxed" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03.41.arity.1" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04" =
  "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04"
  case "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06") ->
      "idr_{APPLY_0}0_val.12" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02"
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val" <- case "idr_{APPLY_0}0_val.12" of
        (C"idr_{U_Main.{main_28}_2}") ->
          v.222 <- pure (C"idr_{U_Main.{main_28}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          v.107 <- pure v.222
          pure v.107
        (C"idr_{U_Main.{main_4}_2}") ->
          v.223 <- pure (C"idr_{U_Main.{main_4}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          v.108 <- pure v.223
          pure v.108
        (C"idr_{U_Main.{main_5}_2}") ->
          v.224 <- pure (C"idr_{U_Main.{main_5}_1}" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:05")
          v.109 <- pure v.224
          pure v.109
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07" <- store "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07_val"
      unboxed.CGrInt.21 <- "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:0.unboxed" $ "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:02" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03.41.arity.1" "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:06"
      v.225 <- pure (CGrInt unboxed.CGrInt.21)
      v.110 <- pure v.225
      "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_438" <- store v.110
      "idr_{APPLY_0}0_val.13" <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:07"
      case "idr_{APPLY_0}0_val.13" of
        (C"idr_{U_Main.{main_28}_1}" "idr_{APPLY_0}2.13") ->
          p.26 <- fetch "idr_{APPLY_0}2.13"
          (CGrString idris_str_len2.0.0) <- pure p.26
          idris_str_len3.0.0 <- _prim_string_len $ idris_str_len2.0.0
          idris_lz_ext3.0.0 <- _prim_int_add $ idris_str_len3.0.0 0
          v.226 <- pure (CGrInt idris_lz_ext3.0.0)
          v.111 <- pure v.226
          "idr_Main.{main_28}2_429.0" <- store v.111
          p.25 <- fetch "idr_Main.{main_28}2_429.0"
          (CGrInt idris_int_add0_1.1.0) <- pure p.25
          p.24 <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_438"
          (CGrInt idris_int_add1_1.1.0) <- pure p.24
          idris_int_add2.1.0 <- _prim_int_add $ idris_int_add0_1.1.0 idris_int_add1_1.1.0
          pure idris_int_add2.1.0
        (C"idr_{U_Main.{main_4}_1}" "idr_{APPLY_0}2_413.13") ->
          p.28 <- fetch "idr_{APPLY_0}2_413.13"
          (CGrInt idris_int_add0_1.0.2) <- pure p.28
          p.27 <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_438"
          (CGrInt idris_int_add1_1.0.2) <- pure p.27
          idris_int_add2.0.2 <- _prim_int_add $ idris_int_add0_1.0.2 idris_int_add1_1.0.2
          pure idris_int_add2.0.2
        (C"idr_{U_Main.{main_5}_1}" "idr_{APPLY_0}2_414.13") ->
          p.30 <- fetch "idr_{APPLY_0}2_414.13"
          (CGrInt idris_int_mul0_1.0.2) <- pure p.30
          p.29 <- fetch "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:08_438"
          (CGrInt idris_int_mul1_1.0.2) <- pure p.29
          idris_int_mul2.0.2 <- _prim_int_mul $ idris_int_mul0_1.0.2 idris_int_mul1_1.0.2
          pure idris_int_mul2.0.2
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Foldable.Prelude.List.@Prelude.Foldable.Foldable$List:!foldr:03.41.arity.1"

"idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03" =
  "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03"
  case "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05") ->
      "idr_{APPLY_0}0_val.14" <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val" <- case "idr_{APPLY_0}0_val.14" of
        (C"idr_{U_Main.{main_22}_1}") ->
          v.227 <- pure (CGrInt 2)
          v.112 <- pure v.227
          "idr_Main.{main_22}1.0" <- store v.112
          p.32 <- fetch "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:04"
          (CGrInt idris_int_mul0_1.1.0) <- pure p.32
          p.31 <- fetch "idr_Main.{main_22}1.0"
          (CGrInt idris_int_mul1_1.1.0) <- pure p.31
          idris_int_mul2.1.0 <- _prim_int_mul $ idris_int_mul0_1.1.0 idris_int_mul1_1.1.0
          v.228 <- pure (CGrInt idris_int_mul2.1.0)
          v.113 <- pure v.228
          pure v.113
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06_val"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val" <- "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:0" $ "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:02" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:05"
      "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_440" <- store "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_val"
      v.229 <- pure (Cidr_Prelude.List.:: "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:06" "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:07_440")
      v.114 <- pure v.229
      pure v.114
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Functor.Prelude.List.@Prelude.Functor.Functor$List:!map:03_val"

"idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:0.unboxed" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:01" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:02" =
  "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:02_val" <- fetch "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:02"
  case "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:02_val" of
    (Cidr_Main.Add "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:03_448" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:04_449") ->
      unboxed.CGrString.16 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:0.unboxed" $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:01" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:03_448"
      unboxed.CGrString.17 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:0.unboxed" $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:01" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:04_449"
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:09.49.12.arity.1" <- pure #")"
      idris_str_concat3.8 <- _prim_string_concat $ unboxed.CGrString.17 "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:09.49.12.arity.1"
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:07.49.13.arity.1" <- pure #" + "
      idris_str_concat3.9 <- _prim_string_concat $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:07.49.13.arity.1" idris_str_concat3.8
      idris_str_concat3.10 <- _prim_string_concat $ unboxed.CGrString.16 idris_str_concat3.9
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:05_451.49.15.arity.1" <- pure #"("
      idris_str_concat3.11 <- _prim_string_concat $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:05_451.49.15.arity.1" idris_str_concat3.10
      pure idris_str_concat3.11
    (Cidr_Main.Mul "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:03_486" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:04_487") ->
      unboxed.CGrString.21 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:0.unboxed" $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:01" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:03_486"
      unboxed.CGrString.22 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:0.unboxed" $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:01" "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:04_487"
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:09_504.49.16.arity.1" <- pure #")"
      idris_str_concat3.12 <- _prim_string_concat $ unboxed.CGrString.22 "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:09_504.49.16.arity.1"
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:07_497.49.17.arity.1" <- pure #" * "
      idris_str_concat3.13 <- _prim_string_concat $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:07_497.49.17.arity.1" idris_str_concat3.12
      idris_str_concat3.14 <- _prim_string_concat $ unboxed.CGrString.21 idris_str_concat3.13
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:05_489.49.19.arity.1" <- pure #"("
      idris_str_concat3.15 <- _prim_string_concat $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:05_489.49.19.arity.1" idris_str_concat3.14
      pure idris_str_concat3.15
    (Cidr_Main.Val "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:03_530") ->
      "idr_{APPLY_0}0_val.15" <- fetch "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:01"
      case "idr_{APPLY_0}0_val.15" of
        (C"idr_{U_Main.{main_1}_1}") ->
          "idr_Main.{main_1}.unboxed" $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Expr ty:!show:03_530"
