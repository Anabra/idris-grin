primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  v.5 <- pure (C"idr_{U_Main.{main_1}_1}")
  idr_Main.main3.0 <- store v.5
  v.16 <- pure (Cidr_Main.Same)
  idr_Main.main4.0 <- store v.16
  idr_Main.main1_val.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main3.0 idr_Main.main4.0
  v.21 <- pure (C"idr_{U_Main.{main_2}_1}")
  idr_Main.main4_126.0 <- store v.21
  idr_Main.main5.0 <- store v.16
  idr_Main.main2_val_120.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main4_126.0 idr_Main.main5.0
  v.26 <- pure (C"idr_{U_Main.{main_3}_1}")
  idr_Main.main5_134.0 <- store v.26
  idr_Main.main6.0 <- store v.16
  idr_Main.main3_val_128.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main5_134.0 idr_Main.main6.0
  idr_Main.main6_142.0 <- store v.5
  idr_Main.main7.0 <- store v.16
  idr_Main.main4_val_136.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main6_142.0 idr_Main.main7.0
  v.31 <- pure (C"idr_{U_Main.{main_5}_1}")
  idr_Main.main7_150.0 <- store v.31
  idr_Main.main9.0.57.0.arity.1 <- pure 2
  idr_Main.main10.0.57.0.arity.1 <- pure 2
  idr_Main.exactLength4_val.0 <- idr_Main.checkEqNat $ idr_Main.main9.0.57.0.arity.1 idr_Main.main10.0.57.0.arity.1
  idr_Main.main8_val.0 <- case idr_Main.exactLength4_val.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      idr_Main.main8_val_151.0.0 <- do
        v.32 <- pure (Cidr_Prelude.Maybe.Just.0)
        pure v.32
      (Cidr_Prelude.Maybe.Just.0) <- pure idr_Main.main8_val_151.0.0
      v.79.0 <- pure (Cidr_Prelude.Bool.True)
      pure v.79.0
    (Cidr_Prelude.Maybe.Nothing) ->
      idr_Main.main8_val_151.0.1 <- do
        v.78 <- pure (Cidr_Prelude.Maybe.Nothing)
        pure v.78
      (Cidr_Prelude.Maybe.Nothing) <- pure idr_Main.main8_val_151.0.1
      v.80.0 <- pure (Cidr_Prelude.Bool.False)
      pure v.80.0
  idr_Main.main8_156.0 <- store idr_Main.main8_val.0
  idr_Main.main5_val_144.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main7_150.0 idr_Main.main8_156.0
  idr_Main.main8_164.0 <- store v.31
  idr_Main.main9_168.49.3.arity.1.0 <- pure 10
  idr_Main.main10_170.49.3.arity.1.0 <- pure 10
  idr_Main.main9_val_166.0 <- idr_Main.checkEqNat2 $ idr_Main.main9_168.49.3.arity.1.0 idr_Main.main10_170.49.3.arity.1.0
  idr_Main.main9_val_165.0 <- case idr_Main.main9_val_166.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.81 <- pure (Cidr_Prelude.Bool.True)
      pure v.81
    (Cidr_Prelude.Maybe.Nothing) ->
      v.82 <- pure (Cidr_Prelude.Bool.False)
      pure v.82
  idr_Main.main9_174.0 <- store idr_Main.main9_val_165.0
  idr_Main.main6_val_158.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main8_164.0 idr_Main.main9_174.0
  idr_Main.main9_181.0 <- store v.31
  idr_Main.main10_185.49.4.arity.1.0 <- pure 10
  idr_Main.main11_187.49.4.arity.1.0 <- pure 9
  idr_Main.main10_val_183.0 <- idr_Main.checkEqNat2 $ idr_Main.main10_185.49.4.arity.1.0 idr_Main.main11_187.49.4.arity.1.0
  idr_Main.main10_val_182.0 <- case idr_Main.main10_val_183.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.83 <- pure (Cidr_Prelude.Bool.False)
      pure v.83
    (Cidr_Prelude.Maybe.Nothing) ->
      v.84 <- pure (Cidr_Prelude.Bool.True)
      pure v.84
  idr_Main.main10_191.0 <- store idr_Main.main10_val_182.0
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.printLn' $ idr_Main.main9_181.0 idr_Main.main10_191.0
  pure ()

idr_Main.checkEqNat idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat1.49.arity.1 =
  v.85 <- pure (CGrInt idr_Main.checkEqNat1.49.arity.1)
  idr_Main.checkEqNat_cpat_LInt64_0 <- pure idr_Main.checkEqNat1.49.arity.1
  case idr_Main.checkEqNat1.49.arity.1 of
    0 ->
      v.86 <- pure (CGrInt idr_Main.checkEqNat0.49.arity.1)
      idr_Main.checkEqNat_cpat_LInt64_0_1 <- pure idr_Main.checkEqNat0.49.arity.1
      case idr_Main.checkEqNat0.49.arity.1 of
        0 ->
          v.87 <- pure (Cidr_Prelude.Maybe.Just.0)
          pure v.87
        #default ->
          v.88 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.88
    #default ->
      idr_Main.checkEqNat2_13.41.1.arity.1 <- pure 1
      idris_int_sub2.1 <- _prim_int_sub $ idr_Main.checkEqNat1.49.arity.1 idr_Main.checkEqNat2_13.41.1.arity.1
      v.89 <- pure (CGrInt idr_Main.checkEqNat0.49.arity.1)
      idr_Main.checkEqNat_cpat_LInt64_0_16 <- pure idr_Main.checkEqNat0.49.arity.1
      case idr_Main.checkEqNat0.49.arity.1 of
        0 ->
          v.90 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.90
        #default ->
          idr_Main.checkEqNat3.41.2.arity.1 <- pure 1
          idris_int_sub2.2 <- _prim_int_sub $ idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat3.41.2.arity.1
          idr_Main.checkEqNat4_val <- idr_Main.checkEqNat $ idris_int_sub2.2 idris_int_sub2.1
          case idr_Main.checkEqNat4_val of
            (Cidr_Prelude.Maybe.Just.0) ->
              v.91 <- pure (Cidr_Prelude.Maybe.Just.0)
              pure v.91
            (Cidr_Prelude.Maybe.Nothing) ->
              v.92 <- pure (Cidr_Prelude.Maybe.Nothing)
              pure v.92

idr_Main.checkEqNat2 idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat21.49.arity.1 =
  v.93 <- pure (CGrInt idr_Main.checkEqNat21.49.arity.1)
  idr_Main.checkEqNat2_cpat_LInt64_0 <- pure idr_Main.checkEqNat21.49.arity.1
  case idr_Main.checkEqNat21.49.arity.1 of
    0 ->
      v.94 <- pure (CGrInt idr_Main.checkEqNat20.49.arity.1)
      idr_Main.checkEqNat2_cpat_LInt64_0_56 <- pure idr_Main.checkEqNat20.49.arity.1
      case idr_Main.checkEqNat20.49.arity.1 of
        0 ->
          v.95 <- pure (Cidr_Prelude.Maybe.Just.0)
          pure v.95
        #default ->
          v.96 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.96
    #default ->
      idr_Main.checkEqNat22_67.41.4.arity.1 <- pure 1
      idris_int_sub2.4 <- _prim_int_sub $ idr_Main.checkEqNat21.49.arity.1 idr_Main.checkEqNat22_67.41.4.arity.1
      v.97 <- pure (CGrInt idr_Main.checkEqNat20.49.arity.1)
      idr_Main.checkEqNat2_cpat_LInt64_0_70 <- pure idr_Main.checkEqNat20.49.arity.1
      case idr_Main.checkEqNat20.49.arity.1 of
        0 ->
          v.98 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.98
        #default ->
          idr_Main.checkEqNat23.41.5.arity.1 <- pure 1
          idris_int_sub2.5 <- _prim_int_sub $ idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat23.41.5.arity.1
          idr_Main.checkEqNat27_val <- idr_Main.checkEqNat2 $ idris_int_sub2.5 idris_int_sub2.4
          idr_Main.checkEqNat27 <- store idr_Main.checkEqNat27_val
          "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0" <- fetch idr_Main.checkEqNat27
          case "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0" of
            (Cidr_Prelude.Maybe.Just.0) ->
              v.99 <- pure (Cidr_Prelude.Maybe.Just.0)
              pure v.99
            (Cidr_Prelude.Maybe.Nothing) ->
              pure "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0"

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0_val.1" <- fetch idr_Prelude.Interactive.printLn'2
  idr_Prelude.Interactive.printLn'5_val_233 <- case "idr_{APPLY_0}0_val.1" of
    (C"idr_{U_Main.{main_1}_1}") ->
      v.126 <- pure (CGrString #"Same ")
      "idr_Main.{main_1}1.0" <- store v.126
      v.127 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      "idr_Main.{main_1}3.0" <- store v.127
      v.128 <- pure (CGrInt 4)
      "idr_Main.{main_1}5.0" <- store v.128
      unboxed.CGrString.6.0 <- do
        (C"idr_{U_prim__toStrBigInt_1}") <- fetch "idr_Main.{main_1}3.0"
        (CGrInt "idr_Main.{main_1}5.0.144.0.arity.1") <- fetch "idr_Main.{main_1}5.0"
        do
          idr_Prelude.Show.primNumShow3.144.arity.1.0 <- pure "idr_Main.{main_1}5.0.144.0.arity.1"
          "idr_{APPLY_0}0_val.0.0" <- pure (C"idr_{U_prim__toStrBigInt_1}")
          (C"idr_{U_prim__toStrBigInt_1}") <- pure "idr_{APPLY_0}0_val.0.0"
          p.0.0 <- pure (CGrInt idr_Prelude.Show.primNumShow3.144.arity.1.0)
          (CGrInt idris_int_str1_0.0.0.0) <- pure p.0.0
          idris_int_str2.0.0.0 <- _prim_int_str $ idris_int_str1_0.0.0.0
          v.100.0 <- pure (CGrString idris_int_str2.0.0.0)
          idr_Prelude.Show.primNumShow4_val.0 <- pure v.100.0
          idr_Prelude.Show.primNumShow4.0 <- store v.100.0
          v.101.0 <- pure (Cidr_Prelude.Show.Open)
          ccp.3.0 <- pure 0
          v.102.0 <- pure (CGrInt ccp.3.0)
          idr_Prelude.Show.primNumShow5.0 <- store v.102.0
          v.103.0 <- pure (CGrInt 5)
          idr_Prelude.Show.primNumShow6.0 <- store v.103.0
          p.9.0 <- fetch idr_Prelude.Show.primNumShow5.0
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.0") <- pure p.9.0
          p.8.0 <- fetch idr_Prelude.Show.primNumShow6.0
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.0") <- pure p.8.0
          idris_int_eq2.0.0 <- _prim_int_eq $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.0"
          ccp.0.0.0 <- case idris_int_eq2.0.0 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.104.0 <- pure (CGrInt ccp.0.0.0)
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0.0" <- pure ccp.0.0.0
          idr_Prelude.Show.primNumShow5_val_193.0 <- case ccp.0.0.0 of
            0 ->
              idris_int_lt2.0.0 <- _prim_int_lt $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.0"
              ccp.1.0.0 <- case idris_int_lt2.0.0 of
                #False ->
                  pure ccp.0.0.0
                #True ->
                  pure 1
              v.105.0 <- pure (CGrInt ccp.1.0.0)
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_249.0.0" <- pure ccp.1.0.0
              case ccp.1.0.0 of
                0 ->
                  v.106.0 <- pure (Cidr_Prelude.Interfaces.GT)
                  pure v.106.0
                #default ->
                  v.107.0 <- pure (Cidr_Prelude.Interfaces.LT)
                  pure v.107.0
            #default ->
              v.108.0 <- pure (Cidr_Prelude.Interfaces.EQ)
              pure v.108.0
          idr_Prelude.Show.primNumShow5_val_192.0 <- case idr_Prelude.Show.primNumShow5_val_193.0 of
            (Cidr_Prelude.Interfaces.GT) ->
              v.109.0 <- pure (Cidr_Prelude.Bool.True)
              pure v.109.0
            #default ->
              ccp.4.0 <- pure 0
              idr_Prelude.Show.primNumShow7.41.6.arity.1.0 <- pure 5
              idris_int_eq2.1.0 <- _prim_int_eq $ ccp.4.0 idr_Prelude.Show.primNumShow7.41.6.arity.1.0
              ccp.0.1.0 <- case idris_int_eq2.1.0 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              v.110.0 <- pure (CGrInt ccp.0.1.0)
              idr_Prelude.Show.primNumShow_cpat_LInt64_0.0 <- pure ccp.0.1.0
              case ccp.0.1.0 of
                0 ->
                  v.111.0 <- pure (Cidr_Prelude.Bool.False)
                  pure v.111.0
                #default ->
                  v.112.0 <- pure (Cidr_Prelude.Bool.True)
                  pure v.112.0
          idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_192.0 of
            (Cidr_Prelude.Bool.False) ->
              v.113.0 <- pure (Cidr_Prelude.Bool.False)
              pure v.113.0
            (Cidr_Prelude.Bool.True) ->
              idr_Prelude.Show.primNumShow6_209.41.7.arity.1.0 <- pure #""
              p.2.0 <- fetch idr_Prelude.Show.primNumShow4.0
              (CGrString idris_str_eq1_0.0.0) <- pure p.2.0
              idris_str_eq3.0.0 <- _prim_string_eq $ idris_str_eq1_0.0.0 idr_Prelude.Show.primNumShow6_209.41.7.arity.1.0
              ccp.2.0.0 <- case idris_str_eq3.0.0 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              v.114.0 <- pure (CGrInt ccp.2.0.0)
              idr_Prelude.Show.primNumShow_cpat_LInt64_0_212.0 <- pure ccp.2.0.0
              idr_Prelude.Show.primNumShow6_val_206.0 <- case ccp.2.0.0 of
                0 ->
                  v.115.0 <- pure (Cidr_Prelude.Bool.True)
                  pure v.115.0
                #default ->
                  v.116.0 <- pure (Cidr_Prelude.Bool.False)
                  pure v.116.0
              idr_Prelude.Show.primNumShow6_213.0 <- store idr_Prelude.Show.primNumShow6_val_206.0
              v.117.0 <- pure (Cidr_Prelude.Bool.True)
              "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0.0" <- fetch idr_Prelude.Show.primNumShow6_213.0
              case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0.0" of
                (Cidr_Prelude.Bool.False) ->
                  idr_Prelude.Show.primNumShow6_val_205.0.0 <- do
                    v.118.0 <- pure (Cidr_Prelude.Basics.No)
                    pure v.118.0
                  (Cidr_Prelude.Basics.No) <- pure idr_Prelude.Show.primNumShow6_val_205.0.0
                  v.120.0.0 <- pure (Cidr_Prelude.Bool.False)
                  pure v.120.0.0
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_val_205.1.0 <- do
                    v.119.0 <- pure (Cidr_Prelude.Basics.Yes)
                    pure v.119.0
                  (Cidr_Prelude.Basics.Yes) <- pure idr_Prelude.Show.primNumShow6_val_205.1.0
                  p.1.0.0 <- fetch idr_Prelude.Show.primNumShow4.0
                  (CGrString idris_str_head1_0.0.0.0) <- pure p.1.0.0
                  idris_str_head2.0.0.0 <- _prim_string_head $ idris_str_head1_0.0.0.0
                  idr_Prelude.Show.primNumShow8.41.9.arity.1.0.0 <- pure 45
                  idris_int_eq2.2.0.0 <- _prim_int_eq $ idris_str_head2.0.0.0 idr_Prelude.Show.primNumShow8.41.9.arity.1.0.0
                  ccp.0.2.0.0 <- case idris_int_eq2.2.0.0 of
                    #False ->
                      pure 0
                    #True ->
                      pure 1
                  v.121.0.0 <- pure (CGrInt ccp.0.2.0.0)
                  idr_Prelude.Show.primNumShow_cpat_LInt64_0_223.0.0 <- pure ccp.0.2.0.0
                  case ccp.0.2.0.0 of
                    0 ->
                      v.122.0.0 <- pure (Cidr_Prelude.Bool.False)
                      pure v.122.0.0
                    #default ->
                      pure v.117.0
          case idr_Prelude.Show.primNumShow5_val.0 of
            (Cidr_Prelude.Bool.False) ->
              unboxed.CGrString.0.0 <- pure idris_int_str2.0.0.0
              pure idris_int_str2.0.0.0
            (Cidr_Prelude.Bool.True) ->
              v.123.0 <- pure (CGrString #"(")
              idr_Prelude.Show.primNumShow6_227.0 <- store v.123.0
              v.124.0 <- pure (CGrString #")")
              idr_Prelude.Show.primNumShow7_230.0 <- store v.124.0
              p.7.0 <- fetch idr_Prelude.Show.primNumShow4.0
              (CGrString idris_str_concat1_0.0.0) <- pure p.7.0
              p.6.0 <- fetch idr_Prelude.Show.primNumShow7_230.0
              (CGrString idris_str_concat2_0.0.0) <- pure p.6.0
              idris_str_concat3.0.0 <- _prim_string_concat $ idris_str_concat1_0.0.0 idris_str_concat2_0.0.0
              v.125.0 <- pure (CGrString idris_str_concat3.0.0)
              idr_Prelude.Show.primNumShow7_231.0 <- store v.125.0
              p.5.0 <- fetch idr_Prelude.Show.primNumShow6_227.0
              (CGrString idris_str_concat1_0.1.0) <- pure p.5.0
              p.4.0 <- fetch idr_Prelude.Show.primNumShow7_231.0
              (CGrString idris_str_concat2_0.1.0) <- pure p.4.0
              idris_str_concat3.1.0 <- _prim_string_concat $ idris_str_concat1_0.1.0 idris_str_concat2_0.1.0
              pure idris_str_concat3.1.0
      v.129 <- pure (CGrString unboxed.CGrString.6.0)
      "idr_Main.{main_1}2_241.0" <- store v.129
      p.11 <- fetch "idr_Main.{main_1}1.0"
      (CGrString idris_str_concat1_0.3.0) <- pure p.11
      p.10 <- fetch "idr_Main.{main_1}2_241.0"
      (CGrString idris_str_concat2_0.3.0) <- pure p.10
      idris_str_concat3.3.0 <- _prim_string_concat $ idris_str_concat1_0.3.0 idris_str_concat2_0.3.0
      v.130 <- pure (CGrString idris_str_concat3.3.0)
      pure v.130
    (C"idr_{U_Main.{main_2}_1}") ->
      v.131 <- pure (CGrString #"Same ")
      "idr_Main.{main_2}1.0" <- store v.131
      v.132 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      "idr_Main.{main_2}3.0" <- store v.132
      v.133 <- pure (CGrInt 5)
      "idr_Main.{main_2}5.0" <- store v.133
      unboxed.CGrString.7.0 <- do
        (C"idr_{U_prim__toStrBigInt_1}") <- fetch "idr_Main.{main_2}3.0"
        (CGrInt "idr_Main.{main_2}5.0.144.1.arity.1") <- fetch "idr_Main.{main_2}5.0"
        do
          idr_Prelude.Show.primNumShow3.144.arity.1.1 <- pure "idr_Main.{main_2}5.0.144.1.arity.1"
          "idr_{APPLY_0}0_val.0.1" <- pure (C"idr_{U_prim__toStrBigInt_1}")
          (C"idr_{U_prim__toStrBigInt_1}") <- pure "idr_{APPLY_0}0_val.0.1"
          p.0.1 <- pure (CGrInt idr_Prelude.Show.primNumShow3.144.arity.1.1)
          (CGrInt idris_int_str1_0.0.0.1) <- pure p.0.1
          idris_int_str2.0.0.1 <- _prim_int_str $ idris_int_str1_0.0.0.1
          v.100.1 <- pure (CGrString idris_int_str2.0.0.1)
          idr_Prelude.Show.primNumShow4_val.1 <- pure v.100.1
          idr_Prelude.Show.primNumShow4.1 <- store v.100.1
          v.101.1 <- pure (Cidr_Prelude.Show.Open)
          ccp.3.1 <- pure 0
          v.102.1 <- pure (CGrInt ccp.3.1)
          idr_Prelude.Show.primNumShow5.1 <- store v.102.1
          v.103.1 <- pure (CGrInt 5)
          idr_Prelude.Show.primNumShow6.1 <- store v.103.1
          p.9.1 <- fetch idr_Prelude.Show.primNumShow5.1
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.1") <- pure p.9.1
          p.8.1 <- fetch idr_Prelude.Show.primNumShow6.1
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.1") <- pure p.8.1
          idris_int_eq2.0.1 <- _prim_int_eq $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.1" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.1"
          ccp.0.0.1 <- case idris_int_eq2.0.1 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.104.1 <- pure (CGrInt ccp.0.0.1)
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0.1" <- pure ccp.0.0.1
          idr_Prelude.Show.primNumShow5_val_193.1 <- case ccp.0.0.1 of
            0 ->
              idris_int_lt2.0.1 <- _prim_int_lt $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.1" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.1"
              ccp.1.0.1 <- case idris_int_lt2.0.1 of
                #False ->
                  pure ccp.0.0.1
                #True ->
                  pure 1
              v.105.1 <- pure (CGrInt ccp.1.0.1)
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_249.0.1" <- pure ccp.1.0.1
              case ccp.1.0.1 of
                0 ->
                  v.106.1 <- pure (Cidr_Prelude.Interfaces.GT)
                  pure v.106.1
                #default ->
                  v.107.1 <- pure (Cidr_Prelude.Interfaces.LT)
                  pure v.107.1
            #default ->
              v.108.1 <- pure (Cidr_Prelude.Interfaces.EQ)
              pure v.108.1
          idr_Prelude.Show.primNumShow5_val_192.1 <- case idr_Prelude.Show.primNumShow5_val_193.1 of
            (Cidr_Prelude.Interfaces.GT) ->
              v.109.1 <- pure (Cidr_Prelude.Bool.True)
              pure v.109.1
            #default ->
              ccp.4.1 <- pure 0
              idr_Prelude.Show.primNumShow7.41.6.arity.1.1 <- pure 5
              idris_int_eq2.1.1 <- _prim_int_eq $ ccp.4.1 idr_Prelude.Show.primNumShow7.41.6.arity.1.1
              ccp.0.1.1 <- case idris_int_eq2.1.1 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              v.110.1 <- pure (CGrInt ccp.0.1.1)
              idr_Prelude.Show.primNumShow_cpat_LInt64_0.1 <- pure ccp.0.1.1
              case ccp.0.1.1 of
                0 ->
                  v.111.1 <- pure (Cidr_Prelude.Bool.False)
                  pure v.111.1
                #default ->
                  v.112.1 <- pure (Cidr_Prelude.Bool.True)
                  pure v.112.1
          idr_Prelude.Show.primNumShow5_val.1 <- case idr_Prelude.Show.primNumShow5_val_192.1 of
            (Cidr_Prelude.Bool.False) ->
              v.113.1 <- pure (Cidr_Prelude.Bool.False)
              pure v.113.1
            (Cidr_Prelude.Bool.True) ->
              idr_Prelude.Show.primNumShow6_209.41.7.arity.1.1 <- pure #""
              p.2.1 <- fetch idr_Prelude.Show.primNumShow4.1
              (CGrString idris_str_eq1_0.0.1) <- pure p.2.1
              idris_str_eq3.0.1 <- _prim_string_eq $ idris_str_eq1_0.0.1 idr_Prelude.Show.primNumShow6_209.41.7.arity.1.1
              ccp.2.0.1 <- case idris_str_eq3.0.1 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              v.114.1 <- pure (CGrInt ccp.2.0.1)
              idr_Prelude.Show.primNumShow_cpat_LInt64_0_212.1 <- pure ccp.2.0.1
              idr_Prelude.Show.primNumShow6_val_206.1 <- case ccp.2.0.1 of
                0 ->
                  v.115.1 <- pure (Cidr_Prelude.Bool.True)
                  pure v.115.1
                #default ->
                  v.116.1 <- pure (Cidr_Prelude.Bool.False)
                  pure v.116.1
              idr_Prelude.Show.primNumShow6_213.1 <- store idr_Prelude.Show.primNumShow6_val_206.1
              v.117.1 <- pure (Cidr_Prelude.Bool.True)
              "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0.1" <- fetch idr_Prelude.Show.primNumShow6_213.1
              case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0.1" of
                (Cidr_Prelude.Bool.False) ->
                  idr_Prelude.Show.primNumShow6_val_205.0.1 <- do
                    v.118.1 <- pure (Cidr_Prelude.Basics.No)
                    pure v.118.1
                  (Cidr_Prelude.Basics.No) <- pure idr_Prelude.Show.primNumShow6_val_205.0.1
                  v.120.0.1 <- pure (Cidr_Prelude.Bool.False)
                  pure v.120.0.1
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_val_205.1.1 <- do
                    v.119.1 <- pure (Cidr_Prelude.Basics.Yes)
                    pure v.119.1
                  (Cidr_Prelude.Basics.Yes) <- pure idr_Prelude.Show.primNumShow6_val_205.1.1
                  p.1.0.1 <- fetch idr_Prelude.Show.primNumShow4.1
                  (CGrString idris_str_head1_0.0.0.1) <- pure p.1.0.1
                  idris_str_head2.0.0.1 <- _prim_string_head $ idris_str_head1_0.0.0.1
                  idr_Prelude.Show.primNumShow8.41.9.arity.1.0.1 <- pure 45
                  idris_int_eq2.2.0.1 <- _prim_int_eq $ idris_str_head2.0.0.1 idr_Prelude.Show.primNumShow8.41.9.arity.1.0.1
                  ccp.0.2.0.1 <- case idris_int_eq2.2.0.1 of
                    #False ->
                      pure 0
                    #True ->
                      pure 1
                  v.121.0.1 <- pure (CGrInt ccp.0.2.0.1)
                  idr_Prelude.Show.primNumShow_cpat_LInt64_0_223.0.1 <- pure ccp.0.2.0.1
                  case ccp.0.2.0.1 of
                    0 ->
                      v.122.0.1 <- pure (Cidr_Prelude.Bool.False)
                      pure v.122.0.1
                    #default ->
                      pure v.117.1
          case idr_Prelude.Show.primNumShow5_val.1 of
            (Cidr_Prelude.Bool.False) ->
              unboxed.CGrString.0.1 <- pure idris_int_str2.0.0.1
              pure idris_int_str2.0.0.1
            (Cidr_Prelude.Bool.True) ->
              v.123.1 <- pure (CGrString #"(")
              idr_Prelude.Show.primNumShow6_227.1 <- store v.123.1
              v.124.1 <- pure (CGrString #")")
              idr_Prelude.Show.primNumShow7_230.1 <- store v.124.1
              p.7.1 <- fetch idr_Prelude.Show.primNumShow4.1
              (CGrString idris_str_concat1_0.0.1) <- pure p.7.1
              p.6.1 <- fetch idr_Prelude.Show.primNumShow7_230.1
              (CGrString idris_str_concat2_0.0.1) <- pure p.6.1
              idris_str_concat3.0.1 <- _prim_string_concat $ idris_str_concat1_0.0.1 idris_str_concat2_0.0.1
              v.125.1 <- pure (CGrString idris_str_concat3.0.1)
              idr_Prelude.Show.primNumShow7_231.1 <- store v.125.1
              p.5.1 <- fetch idr_Prelude.Show.primNumShow6_227.1
              (CGrString idris_str_concat1_0.1.1) <- pure p.5.1
              p.4.1 <- fetch idr_Prelude.Show.primNumShow7_231.1
              (CGrString idris_str_concat2_0.1.1) <- pure p.4.1
              idris_str_concat3.1.1 <- _prim_string_concat $ idris_str_concat1_0.1.1 idris_str_concat2_0.1.1
              pure idris_str_concat3.1.1
      v.134 <- pure (CGrString unboxed.CGrString.7.0)
      "idr_Main.{main_2}2_243.0" <- store v.134
      p.13 <- fetch "idr_Main.{main_2}1.0"
      (CGrString idris_str_concat1_0.4.0) <- pure p.13
      p.12 <- fetch "idr_Main.{main_2}2_243.0"
      (CGrString idris_str_concat2_0.4.0) <- pure p.12
      idris_str_concat3.4.0 <- _prim_string_concat $ idris_str_concat1_0.4.0 idris_str_concat2_0.4.0
      v.135 <- pure (CGrString idris_str_concat3.4.0)
      pure v.135
    (C"idr_{U_Main.{main_3}_1}") ->
      v.136 <- pure (CGrString #"Same ")
      "idr_Main.{main_3}1.0" <- store v.136
      v.137 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      "idr_Main.{main_3}3.0" <- store v.137
      v.138 <- pure (CGrInt 3)
      "idr_Main.{main_3}5.0" <- store v.138
      unboxed.CGrString.8.0 <- do
        (C"idr_{U_prim__toStrBigInt_1}") <- fetch "idr_Main.{main_3}3.0"
        (CGrInt "idr_Main.{main_3}5.0.144.2.arity.1") <- fetch "idr_Main.{main_3}5.0"
        do
          idr_Prelude.Show.primNumShow3.144.arity.1.2 <- pure "idr_Main.{main_3}5.0.144.2.arity.1"
          "idr_{APPLY_0}0_val.0.2" <- pure (C"idr_{U_prim__toStrBigInt_1}")
          (C"idr_{U_prim__toStrBigInt_1}") <- pure "idr_{APPLY_0}0_val.0.2"
          p.0.2 <- pure (CGrInt idr_Prelude.Show.primNumShow3.144.arity.1.2)
          (CGrInt idris_int_str1_0.0.0.2) <- pure p.0.2
          idris_int_str2.0.0.2 <- _prim_int_str $ idris_int_str1_0.0.0.2
          v.100.2 <- pure (CGrString idris_int_str2.0.0.2)
          idr_Prelude.Show.primNumShow4_val.2 <- pure v.100.2
          idr_Prelude.Show.primNumShow4.2 <- store v.100.2
          v.101.2 <- pure (Cidr_Prelude.Show.Open)
          ccp.3.2 <- pure 0
          v.102.2 <- pure (CGrInt ccp.3.2)
          idr_Prelude.Show.primNumShow5.2 <- store v.102.2
          v.103.2 <- pure (CGrInt 5)
          idr_Prelude.Show.primNumShow6.2 <- store v.103.2
          p.9.2 <- fetch idr_Prelude.Show.primNumShow5.2
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.2") <- pure p.9.2
          p.8.2 <- fetch idr_Prelude.Show.primNumShow6.2
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.2") <- pure p.8.2
          idris_int_eq2.0.2 <- _prim_int_eq $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.2" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.2"
          ccp.0.0.2 <- case idris_int_eq2.0.2 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.104.2 <- pure (CGrInt ccp.0.0.2)
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0.2" <- pure ccp.0.0.2
          idr_Prelude.Show.primNumShow5_val_193.2 <- case ccp.0.0.2 of
            0 ->
              idris_int_lt2.0.2 <- _prim_int_lt $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0.2" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.2"
              ccp.1.0.2 <- case idris_int_lt2.0.2 of
                #False ->
                  pure ccp.0.0.2
                #True ->
                  pure 1
              v.105.2 <- pure (CGrInt ccp.1.0.2)
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_249.0.2" <- pure ccp.1.0.2
              case ccp.1.0.2 of
                0 ->
                  v.106.2 <- pure (Cidr_Prelude.Interfaces.GT)
                  pure v.106.2
                #default ->
                  v.107.2 <- pure (Cidr_Prelude.Interfaces.LT)
                  pure v.107.2
            #default ->
              v.108.2 <- pure (Cidr_Prelude.Interfaces.EQ)
              pure v.108.2
          idr_Prelude.Show.primNumShow5_val_192.2 <- case idr_Prelude.Show.primNumShow5_val_193.2 of
            (Cidr_Prelude.Interfaces.GT) ->
              v.109.2 <- pure (Cidr_Prelude.Bool.True)
              pure v.109.2
            #default ->
              ccp.4.2 <- pure 0
              idr_Prelude.Show.primNumShow7.41.6.arity.1.2 <- pure 5
              idris_int_eq2.1.2 <- _prim_int_eq $ ccp.4.2 idr_Prelude.Show.primNumShow7.41.6.arity.1.2
              ccp.0.1.2 <- case idris_int_eq2.1.2 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              v.110.2 <- pure (CGrInt ccp.0.1.2)
              idr_Prelude.Show.primNumShow_cpat_LInt64_0.2 <- pure ccp.0.1.2
              case ccp.0.1.2 of
                0 ->
                  v.111.2 <- pure (Cidr_Prelude.Bool.False)
                  pure v.111.2
                #default ->
                  v.112.2 <- pure (Cidr_Prelude.Bool.True)
                  pure v.112.2
          idr_Prelude.Show.primNumShow5_val.2 <- case idr_Prelude.Show.primNumShow5_val_192.2 of
            (Cidr_Prelude.Bool.False) ->
              v.113.2 <- pure (Cidr_Prelude.Bool.False)
              pure v.113.2
            (Cidr_Prelude.Bool.True) ->
              idr_Prelude.Show.primNumShow6_209.41.7.arity.1.2 <- pure #""
              p.2.2 <- fetch idr_Prelude.Show.primNumShow4.2
              (CGrString idris_str_eq1_0.0.2) <- pure p.2.2
              idris_str_eq3.0.2 <- _prim_string_eq $ idris_str_eq1_0.0.2 idr_Prelude.Show.primNumShow6_209.41.7.arity.1.2
              ccp.2.0.2 <- case idris_str_eq3.0.2 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              v.114.2 <- pure (CGrInt ccp.2.0.2)
              idr_Prelude.Show.primNumShow_cpat_LInt64_0_212.2 <- pure ccp.2.0.2
              idr_Prelude.Show.primNumShow6_val_206.2 <- case ccp.2.0.2 of
                0 ->
                  v.115.2 <- pure (Cidr_Prelude.Bool.True)
                  pure v.115.2
                #default ->
                  v.116.2 <- pure (Cidr_Prelude.Bool.False)
                  pure v.116.2
              idr_Prelude.Show.primNumShow6_213.2 <- store idr_Prelude.Show.primNumShow6_val_206.2
              v.117.2 <- pure (Cidr_Prelude.Bool.True)
              "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0.2" <- fetch idr_Prelude.Show.primNumShow6_213.2
              case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0.2" of
                (Cidr_Prelude.Bool.False) ->
                  idr_Prelude.Show.primNumShow6_val_205.0.2 <- do
                    v.118.2 <- pure (Cidr_Prelude.Basics.No)
                    pure v.118.2
                  (Cidr_Prelude.Basics.No) <- pure idr_Prelude.Show.primNumShow6_val_205.0.2
                  v.120.0.2 <- pure (Cidr_Prelude.Bool.False)
                  pure v.120.0.2
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_val_205.1.2 <- do
                    v.119.2 <- pure (Cidr_Prelude.Basics.Yes)
                    pure v.119.2
                  (Cidr_Prelude.Basics.Yes) <- pure idr_Prelude.Show.primNumShow6_val_205.1.2
                  p.1.0.2 <- fetch idr_Prelude.Show.primNumShow4.2
                  (CGrString idris_str_head1_0.0.0.2) <- pure p.1.0.2
                  idris_str_head2.0.0.2 <- _prim_string_head $ idris_str_head1_0.0.0.2
                  idr_Prelude.Show.primNumShow8.41.9.arity.1.0.2 <- pure 45
                  idris_int_eq2.2.0.2 <- _prim_int_eq $ idris_str_head2.0.0.2 idr_Prelude.Show.primNumShow8.41.9.arity.1.0.2
                  ccp.0.2.0.2 <- case idris_int_eq2.2.0.2 of
                    #False ->
                      pure 0
                    #True ->
                      pure 1
                  v.121.0.2 <- pure (CGrInt ccp.0.2.0.2)
                  idr_Prelude.Show.primNumShow_cpat_LInt64_0_223.0.2 <- pure ccp.0.2.0.2
                  case ccp.0.2.0.2 of
                    0 ->
                      v.122.0.2 <- pure (Cidr_Prelude.Bool.False)
                      pure v.122.0.2
                    #default ->
                      pure v.117.2
          case idr_Prelude.Show.primNumShow5_val.2 of
            (Cidr_Prelude.Bool.False) ->
              unboxed.CGrString.0.2 <- pure idris_int_str2.0.0.2
              pure idris_int_str2.0.0.2
            (Cidr_Prelude.Bool.True) ->
              v.123.2 <- pure (CGrString #"(")
              idr_Prelude.Show.primNumShow6_227.2 <- store v.123.2
              v.124.2 <- pure (CGrString #")")
              idr_Prelude.Show.primNumShow7_230.2 <- store v.124.2
              p.7.2 <- fetch idr_Prelude.Show.primNumShow4.2
              (CGrString idris_str_concat1_0.0.2) <- pure p.7.2
              p.6.2 <- fetch idr_Prelude.Show.primNumShow7_230.2
              (CGrString idris_str_concat2_0.0.2) <- pure p.6.2
              idris_str_concat3.0.2 <- _prim_string_concat $ idris_str_concat1_0.0.2 idris_str_concat2_0.0.2
              v.125.2 <- pure (CGrString idris_str_concat3.0.2)
              idr_Prelude.Show.primNumShow7_231.2 <- store v.125.2
              p.5.2 <- fetch idr_Prelude.Show.primNumShow6_227.2
              (CGrString idris_str_concat1_0.1.2) <- pure p.5.2
              p.4.2 <- fetch idr_Prelude.Show.primNumShow7_231.2
              (CGrString idris_str_concat2_0.1.2) <- pure p.4.2
              idris_str_concat3.1.2 <- _prim_string_concat $ idris_str_concat1_0.1.2 idris_str_concat2_0.1.2
              pure idris_str_concat3.1.2
      v.139 <- pure (CGrString unboxed.CGrString.8.0)
      "idr_Main.{main_3}2_245.0" <- store v.139
      p.15 <- fetch "idr_Main.{main_3}1.0"
      (CGrString idris_str_concat1_0.5.0) <- pure p.15
      p.14 <- fetch "idr_Main.{main_3}2_245.0"
      (CGrString idris_str_concat2_0.5.0) <- pure p.14
      idris_str_concat3.5.0 <- _prim_string_concat $ idris_str_concat1_0.5.0 idris_str_concat2_0.5.0
      v.140 <- pure (CGrString idris_str_concat3.5.0)
      pure v.140
    (C"idr_{U_Main.{main_5}_1}") ->
      "idr_Main.{main_5}0_val.0" <- fetch idr_Prelude.Interactive.printLn'3
      ccp.5.0 <- case "idr_Main.{main_5}0_val.0" of
        (Cidr_Prelude.Bool.False) ->
          pure #"False"
        (Cidr_Prelude.Bool.True) ->
          pure #"True"
      v.141 <- pure (CGrString ccp.5.0)
      pure v.141
  idr_Prelude.Interactive.printLn'5 <- store idr_Prelude.Interactive.printLn'5_val_233
  v.142 <- pure (CGrString #"\n")
  idr_Prelude.Interactive.printLn'6 <- store v.142
  p.18 <- fetch idr_Prelude.Interactive.printLn'5
  (CGrString idris_str_concat1_0.2) <- pure p.18
  p.17 <- fetch idr_Prelude.Interactive.printLn'6
  (CGrString idris_str_concat2_0.2) <- pure p.17
  idris_str_concat3.2 <- _prim_string_concat $ idris_str_concat1_0.2 idris_str_concat2_0.2
  _prim_string_print $ idris_str_concat3.2
  v.143 <- pure (Cidr_MkUnit)
  pure v.143
