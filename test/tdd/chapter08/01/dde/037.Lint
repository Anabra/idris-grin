grinMain =
  v.5 <- pure (C"idr_{U_Main.{main_1}_1}")
  v.0 <- pure v.5
  idr_Main.main3.0 <- store v.0
  v.16 <- pure (Cidr_Main.Same)
  v.1 <- pure v.16
  idr_Main.main4.0 <- store v.1
  idr_Main.main1_val.0 <- idr_Prelude.Interactive.printLn' idr_Main.main3.0 idr_Main.main4.0
  v.21 <- pure (C"idr_{U_Main.{main_2}_1}")
  v.2 <- pure v.21
  idr_Main.main4_126.0 <- store v.2
  idr_Main.main5.0 <- store v.1
  idr_Main.main2_val_120.0 <- idr_Prelude.Interactive.printLn' idr_Main.main4_126.0 idr_Main.main5.0
  v.26 <- pure (C"idr_{U_Main.{main_3}_1}")
  v.3 <- pure v.26
  idr_Main.main5_134.0 <- store v.3
  idr_Main.main6.0 <- store v.1
  idr_Main.main3_val_128.0 <- idr_Prelude.Interactive.printLn' idr_Main.main5_134.0 idr_Main.main6.0
  idr_Main.main6_142.0 <- store v.0
  idr_Main.main7.0 <- store v.1
  idr_Main.main4_val_136.0 <- idr_Prelude.Interactive.printLn' idr_Main.main6_142.0 idr_Main.main7.0
  v.31 <- pure (C"idr_{U_Main.{main_5}_1}")
  v.4 <- pure v.31
  idr_Main.main7_150.0 <- store v.4
  idr_Main.main9.0.57.0.arity.1 <- pure 2
  idr_Main.main10.0.57.0.arity.1 <- pure 2
  idr_Main.exactLength4_val.0 <- idr_Main.checkEqNat idr_Main.main9.0.57.0.arity.1 idr_Main.main10.0.57.0.arity.1
  idr_Main.main8_val_151.0 <- case idr_Main.exactLength4_val.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.32 <- pure (Cidr_Prelude.Maybe.Just.0)
      v.6 <- pure v.32
      pure v.6
    (Cidr_Prelude.Maybe.Nothing) ->
      v.78 <- pure (Cidr_Prelude.Maybe.Nothing)
      v.7 <- pure v.78
      pure v.7
  idr_Main.main8_val.0 <- case idr_Main.main8_val_151.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.79 <- pure (Cidr_Prelude.Bool.True)
      v.8 <- pure v.79
      pure v.8
    (Cidr_Prelude.Maybe.Nothing) ->
      v.80 <- pure (Cidr_Prelude.Bool.False)
      v.9 <- pure v.80
      pure v.9
  idr_Main.main8_156.0 <- store idr_Main.main8_val.0
  idr_Main.main5_val_144.0 <- idr_Prelude.Interactive.printLn' idr_Main.main7_150.0 idr_Main.main8_156.0
  idr_Main.main8_164.0 <- store v.4
  idr_Main.main9_168.49.3.arity.1.0 <- pure 10
  idr_Main.main10_170.49.3.arity.1.0 <- pure 10
  idr_Main.main9_val_166.0 <- idr_Main.checkEqNat2 idr_Main.main9_168.49.3.arity.1.0 idr_Main.main10_170.49.3.arity.1.0
  idr_Main.main9_val_165.0 <- case idr_Main.main9_val_166.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.81 <- pure (Cidr_Prelude.Bool.True)
      v.10 <- pure v.81
      pure v.10
    (Cidr_Prelude.Maybe.Nothing) ->
      v.82 <- pure (Cidr_Prelude.Bool.False)
      v.11 <- pure v.82
      pure v.11
  idr_Main.main9_174.0 <- store idr_Main.main9_val_165.0
  idr_Main.main6_val_158.0 <- idr_Prelude.Interactive.printLn' idr_Main.main8_164.0 idr_Main.main9_174.0
  idr_Main.main9_181.0 <- store v.4
  idr_Main.main10_185.49.4.arity.1.0 <- pure 10
  idr_Main.main11_187.49.4.arity.1.0 <- pure 9
  idr_Main.main10_val_183.0 <- idr_Main.checkEqNat2 idr_Main.main10_185.49.4.arity.1.0 idr_Main.main11_187.49.4.arity.1.0
  idr_Main.main10_val_182.0 <- case idr_Main.main10_val_183.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.83 <- pure (Cidr_Prelude.Bool.False)
      v.12 <- pure v.83
      pure v.12
    (Cidr_Prelude.Maybe.Nothing) ->
      v.84 <- pure (Cidr_Prelude.Bool.True)
      v.13 <- pure v.84
      pure v.13
  idr_Main.main10_191.0 <- store idr_Main.main10_val_182.0
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.printLn' idr_Main.main9_181.0 idr_Main.main10_191.0
  pure ()

idr_Main.checkEqNat idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat1.49.arity.1 =
  v.85 <- pure (CGrInt idr_Main.checkEqNat1.49.arity.1)
  v.14 <- pure v.85
  case v.14 of
    (CGrInt idr_Main.checkEqNat_cpat_LInt64_0) ->
      case idr_Main.checkEqNat_cpat_LInt64_0 of
        0 ->
          v.86 <- pure (CGrInt idr_Main.checkEqNat0.49.arity.1)
          v.15 <- pure v.86
          case v.15 of
            (CGrInt idr_Main.checkEqNat_cpat_LInt64_0_1) ->
              case idr_Main.checkEqNat_cpat_LInt64_0_1 of
                0 ->
                  v.87 <- pure (Cidr_Prelude.Maybe.Just.0)
                  v.17 <- pure v.87
                  pure v.17
                #default ->
                  v.88 <- pure (Cidr_Prelude.Maybe.Nothing)
                  v.18 <- pure v.88
                  pure v.18
        #default ->
          idr_Main.checkEqNat2_13.41.1.arity.1 <- pure 1
          idris_int_sub2.1 <- _prim_int_sub idr_Main.checkEqNat1.49.arity.1 idr_Main.checkEqNat2_13.41.1.arity.1
          v.89 <- pure (CGrInt idr_Main.checkEqNat0.49.arity.1)
          v.19 <- pure v.89
          case v.19 of
            (CGrInt idr_Main.checkEqNat_cpat_LInt64_0_16) ->
              case idr_Main.checkEqNat_cpat_LInt64_0_16 of
                0 ->
                  v.90 <- pure (Cidr_Prelude.Maybe.Nothing)
                  v.20 <- pure v.90
                  pure v.20
                #default ->
                  idr_Main.checkEqNat3.41.2.arity.1 <- pure 1
                  idris_int_sub2.2 <- _prim_int_sub idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat3.41.2.arity.1
                  idr_Main.checkEqNat4_val <- idr_Main.checkEqNat idris_int_sub2.2 idris_int_sub2.1
                  case idr_Main.checkEqNat4_val of
                    (Cidr_Prelude.Maybe.Just.0) ->
                      v.91 <- pure (Cidr_Prelude.Maybe.Just.0)
                      v.22 <- pure v.91
                      pure v.22
                    (Cidr_Prelude.Maybe.Nothing) ->
                      v.92 <- pure (Cidr_Prelude.Maybe.Nothing)
                      v.23 <- pure v.92
                      pure v.23

idr_Main.checkEqNat2 idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat21.49.arity.1 =
  v.93 <- pure (CGrInt idr_Main.checkEqNat21.49.arity.1)
  v.24 <- pure v.93
  case v.24 of
    (CGrInt idr_Main.checkEqNat2_cpat_LInt64_0) ->
      case idr_Main.checkEqNat2_cpat_LInt64_0 of
        0 ->
          v.94 <- pure (CGrInt idr_Main.checkEqNat20.49.arity.1)
          v.25 <- pure v.94
          case v.25 of
            (CGrInt idr_Main.checkEqNat2_cpat_LInt64_0_56) ->
              case idr_Main.checkEqNat2_cpat_LInt64_0_56 of
                0 ->
                  v.95 <- pure (Cidr_Prelude.Maybe.Just.0)
                  v.27 <- pure v.95
                  pure v.27
                #default ->
                  v.96 <- pure (Cidr_Prelude.Maybe.Nothing)
                  v.28 <- pure v.96
                  pure v.28
        #default ->
          idr_Main.checkEqNat22_67.41.4.arity.1 <- pure 1
          idris_int_sub2.4 <- _prim_int_sub idr_Main.checkEqNat21.49.arity.1 idr_Main.checkEqNat22_67.41.4.arity.1
          v.97 <- pure (CGrInt idr_Main.checkEqNat20.49.arity.1)
          v.29 <- pure v.97
          case v.29 of
            (CGrInt idr_Main.checkEqNat2_cpat_LInt64_0_70) ->
              case idr_Main.checkEqNat2_cpat_LInt64_0_70 of
                0 ->
                  v.98 <- pure (Cidr_Prelude.Maybe.Nothing)
                  v.30 <- pure v.98
                  pure v.30
                #default ->
                  idr_Main.checkEqNat23.41.5.arity.1 <- pure 1
                  idris_int_sub2.5 <- _prim_int_sub idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat23.41.5.arity.1
                  idr_Main.checkEqNat27_val <- idr_Main.checkEqNat2 idris_int_sub2.5 idris_int_sub2.4
                  idr_Main.checkEqNat27 <- store idr_Main.checkEqNat27_val
                  "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0" <- fetch idr_Main.checkEqNat27
                  case "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0" of
                    (Cidr_Prelude.Maybe.Just.0) ->
                      v.99 <- pure (Cidr_Prelude.Maybe.Just.0)
                      v.33 <- pure v.99
                      pure v.33
                    (Cidr_Prelude.Maybe.Nothing) ->
                      pure "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0"

idr_Prelude.Show.primNumShow.unboxed idr_Prelude.Show.primNumShow1 idr_Prelude.Show.primNumShow3 =
  "idr_{APPLY_0}0_val.0" <- fetch idr_Prelude.Show.primNumShow1
  idr_Prelude.Show.primNumShow4_val <- case "idr_{APPLY_0}0_val.0" of
    (C"idr_{U_prim__toStrBigInt_1}") ->
      p.0 <- fetch idr_Prelude.Show.primNumShow3
      p.3 <- pure p.0
      (CGrInt idris_int_str1_0.0.0) <- pure p.3
      idris_int_str2.0.0 <- _prim_int_str idris_int_str1_0.0.0
      v.100 <- pure (CGrString idris_int_str2.0.0)
      v.34 <- pure v.100
      pure v.34
  idr_Prelude.Show.primNumShow4 <- store idr_Prelude.Show.primNumShow4_val
  v.101 <- pure (Cidr_Prelude.Show.Open)
  v.35 <- pure v.101
  ccp.3 <- case v.35 of
    (Cidr_Prelude.Show.Open) ->
      pure 0
  v.102 <- pure (CGrInt ccp.3)
  v.36 <- pure v.102
  idr_Prelude.Show.primNumShow5 <- store v.36
  v.103 <- pure (CGrInt 5)
  v.37 <- pure v.103
  idr_Prelude.Show.primNumShow6 <- store v.37
  p.9 <- fetch idr_Prelude.Show.primNumShow5
  p.26 <- pure p.9
  (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0") <- pure p.26
  p.8 <- fetch idr_Prelude.Show.primNumShow6
  p.25 <- pure p.8
  (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0") <- pure p.25
  idris_int_eq2.0 <- _prim_int_eq "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
  ccp.0.0 <- case idris_int_eq2.0 of
    #False ->
      pure 0
    #True ->
      pure 1
  v.104 <- pure (CGrInt ccp.0.0)
  v.38 <- pure v.104
  idr_Prelude.Show.primNumShow5_val_193 <- case v.38 of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0") ->
      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0" of
        0 ->
          idris_int_lt2.0 <- _prim_int_lt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
          ccp.1.0 <- case idris_int_lt2.0 of
            #False ->
              pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0"
            #True ->
              pure 1
          v.105 <- pure (CGrInt ccp.1.0)
          v.39 <- pure v.105
          case v.39 of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_249.0") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_249.0" of
                0 ->
                  v.106 <- pure (Cidr_Prelude.Interfaces.GT)
                  v.40 <- pure v.106
                  pure v.40
                #default ->
                  v.107 <- pure (Cidr_Prelude.Interfaces.LT)
                  v.41 <- pure v.107
                  pure v.41
        #default ->
          v.108 <- pure (Cidr_Prelude.Interfaces.EQ)
          v.42 <- pure v.108
          pure v.42
  idr_Prelude.Show.primNumShow5_val_192 <- case idr_Prelude.Show.primNumShow5_val_193 of
    (Cidr_Prelude.Interfaces.GT) ->
      v.109 <- pure (Cidr_Prelude.Bool.True)
      v.43 <- pure v.109
      pure v.43
    #default ->
      ccp.4 <- case v.35 of
        (Cidr_Prelude.Show.Open) ->
          pure 0
      idr_Prelude.Show.primNumShow7.41.6.arity.1 <- pure 5
      idris_int_eq2.1 <- _prim_int_eq ccp.4 idr_Prelude.Show.primNumShow7.41.6.arity.1
      ccp.0.1 <- case idris_int_eq2.1 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.110 <- pure (CGrInt ccp.0.1)
      v.44 <- pure v.110
      case v.44 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0 of
            0 ->
              v.111 <- pure (Cidr_Prelude.Bool.False)
              v.45 <- pure v.111
              pure v.45
            #default ->
              v.112 <- pure (Cidr_Prelude.Bool.True)
              v.46 <- pure v.112
              pure v.46
  idr_Prelude.Show.primNumShow5_val <- case idr_Prelude.Show.primNumShow5_val_192 of
    (Cidr_Prelude.Bool.False) ->
      v.113 <- pure (Cidr_Prelude.Bool.False)
      v.47 <- pure v.113
      pure v.47
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_209.41.7.arity.1 <- pure #""
      p.2 <- fetch idr_Prelude.Show.primNumShow4
      p.19 <- pure p.2
      (CGrString idris_str_eq1_0.0) <- pure p.19
      idris_str_eq3.0 <- _prim_string_eq idris_str_eq1_0.0 idr_Prelude.Show.primNumShow6_209.41.7.arity.1
      ccp.2.0 <- case idris_str_eq3.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      v.114 <- pure (CGrInt ccp.2.0)
      v.48 <- pure v.114
      idr_Prelude.Show.primNumShow6_val_206 <- case v.48 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_212) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0_212 of
            0 ->
              v.115 <- pure (Cidr_Prelude.Bool.True)
              v.49 <- pure v.115
              pure v.49
            #default ->
              v.116 <- pure (Cidr_Prelude.Bool.False)
              v.50 <- pure v.116
              pure v.50
      idr_Prelude.Show.primNumShow6_213 <- store idr_Prelude.Show.primNumShow6_val_206
      v.117 <- pure (Cidr_Prelude.Bool.True)
      v.51 <- pure v.117
      idr_Prelude.Show.primNumShow6_val_205 <- case v.51 of
        (Cidr_Prelude.Bool.True) ->
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0" <- fetch idr_Prelude.Show.primNumShow6_213
          case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0" of
            (Cidr_Prelude.Bool.False) ->
              v.118 <- pure (Cidr_Prelude.Basics.No)
              v.52 <- pure v.118
              pure v.52
            (Cidr_Prelude.Bool.True) ->
              v.119 <- pure (Cidr_Prelude.Basics.Yes)
              v.53 <- pure v.119
              pure v.53
      case idr_Prelude.Show.primNumShow6_val_205 of
        (Cidr_Prelude.Basics.No) ->
          v.120 <- pure (Cidr_Prelude.Bool.False)
          v.54 <- pure v.120
          pure v.54
        (Cidr_Prelude.Basics.Yes) ->
          p.1 <- fetch idr_Prelude.Show.primNumShow4
          p.16 <- pure p.1
          (CGrString idris_str_head1_0.0) <- pure p.16
          idris_str_head2.0 <- _prim_string_head idris_str_head1_0.0
          idr_Prelude.Show.primNumShow8.41.9.arity.1 <- pure 45
          idris_int_eq2.2 <- _prim_int_eq idris_str_head2.0 idr_Prelude.Show.primNumShow8.41.9.arity.1
          ccp.0.2 <- case idris_int_eq2.2 of
            #False ->
              pure 0
            #True ->
              pure 1
          v.121 <- pure (CGrInt ccp.0.2)
          v.55 <- pure v.121
          case v.55 of
            (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_223) ->
              case idr_Prelude.Show.primNumShow_cpat_LInt64_0_223 of
                0 ->
                  v.122 <- pure (Cidr_Prelude.Bool.False)
                  v.56 <- pure v.122
                  pure v.56
                #default ->
                  pure v.51
  case idr_Prelude.Show.primNumShow5_val of
    (Cidr_Prelude.Bool.False) ->
      p.20 <- pure idr_Prelude.Show.primNumShow4_val
      (CGrString unboxed.CGrString.0) <- pure p.20
      pure unboxed.CGrString.0
    (Cidr_Prelude.Bool.True) ->
      v.123 <- pure (CGrString #"(")
      v.57 <- pure v.123
      idr_Prelude.Show.primNumShow6_227 <- store v.57
      v.124 <- pure (CGrString #")")
      v.58 <- pure v.124
      idr_Prelude.Show.primNumShow7_230 <- store v.58
      p.7 <- fetch idr_Prelude.Show.primNumShow4
      p.24 <- pure p.7
      (CGrString idris_str_concat1_0.0) <- pure p.24
      p.6 <- fetch idr_Prelude.Show.primNumShow7_230
      p.23 <- pure p.6
      (CGrString idris_str_concat2_0.0) <- pure p.23
      idris_str_concat3.0 <- _prim_string_concat idris_str_concat1_0.0 idris_str_concat2_0.0
      v.125 <- pure (CGrString idris_str_concat3.0)
      v.59 <- pure v.125
      idr_Prelude.Show.primNumShow7_231 <- store v.59
      p.5 <- fetch idr_Prelude.Show.primNumShow6_227
      p.22 <- pure p.5
      (CGrString idris_str_concat1_0.1) <- pure p.22
      p.4 <- fetch idr_Prelude.Show.primNumShow7_231
      p.21 <- pure p.4
      (CGrString idris_str_concat2_0.1) <- pure p.21
      idris_str_concat3.1 <- _prim_string_concat idris_str_concat1_0.1 idris_str_concat2_0.1
      pure idris_str_concat3.1

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0_val.1" <- fetch idr_Prelude.Interactive.printLn'2
  idr_Prelude.Interactive.printLn'5_val_233 <- case "idr_{APPLY_0}0_val.1" of
    (C"idr_{U_Main.{main_1}_1}") ->
      v.126 <- pure (CGrString #"Same ")
      v.60 <- pure v.126
      "idr_Main.{main_1}1.0" <- store v.60
      v.127 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      v.61 <- pure v.127
      "idr_Main.{main_1}3.0" <- store v.61
      v.128 <- pure (CGrInt 4)
      v.62 <- pure v.128
      "idr_Main.{main_1}5.0" <- store v.62
      unboxed.CGrString.6.0 <- idr_Prelude.Show.primNumShow.unboxed "idr_Main.{main_1}3.0" "idr_Main.{main_1}5.0"
      v.129 <- pure (CGrString unboxed.CGrString.6.0)
      v.63 <- pure v.129
      "idr_Main.{main_1}2_241.0" <- store v.63
      p.11 <- fetch "idr_Main.{main_1}1.0"
      p.28 <- pure p.11
      (CGrString idris_str_concat1_0.3.0) <- pure p.28
      p.10 <- fetch "idr_Main.{main_1}2_241.0"
      p.27 <- pure p.10
      (CGrString idris_str_concat2_0.3.0) <- pure p.27
      idris_str_concat3.3.0 <- _prim_string_concat idris_str_concat1_0.3.0 idris_str_concat2_0.3.0
      v.130 <- pure (CGrString idris_str_concat3.3.0)
      v.64 <- pure v.130
      pure v.64
    (C"idr_{U_Main.{main_2}_1}") ->
      v.131 <- pure (CGrString #"Same ")
      v.65 <- pure v.131
      "idr_Main.{main_2}1.0" <- store v.65
      v.132 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      v.66 <- pure v.132
      "idr_Main.{main_2}3.0" <- store v.66
      v.133 <- pure (CGrInt 5)
      v.67 <- pure v.133
      "idr_Main.{main_2}5.0" <- store v.67
      unboxed.CGrString.7.0 <- idr_Prelude.Show.primNumShow.unboxed "idr_Main.{main_2}3.0" "idr_Main.{main_2}5.0"
      v.134 <- pure (CGrString unboxed.CGrString.7.0)
      v.68 <- pure v.134
      "idr_Main.{main_2}2_243.0" <- store v.68
      p.13 <- fetch "idr_Main.{main_2}1.0"
      p.30 <- pure p.13
      (CGrString idris_str_concat1_0.4.0) <- pure p.30
      p.12 <- fetch "idr_Main.{main_2}2_243.0"
      p.29 <- pure p.12
      (CGrString idris_str_concat2_0.4.0) <- pure p.29
      idris_str_concat3.4.0 <- _prim_string_concat idris_str_concat1_0.4.0 idris_str_concat2_0.4.0
      v.135 <- pure (CGrString idris_str_concat3.4.0)
      v.69 <- pure v.135
      pure v.69
    (C"idr_{U_Main.{main_3}_1}") ->
      v.136 <- pure (CGrString #"Same ")
      v.70 <- pure v.136
      "idr_Main.{main_3}1.0" <- store v.70
      v.137 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      v.71 <- pure v.137
      "idr_Main.{main_3}3.0" <- store v.71
      v.138 <- pure (CGrInt 3)
      v.72 <- pure v.138
      "idr_Main.{main_3}5.0" <- store v.72
      unboxed.CGrString.8.0 <- idr_Prelude.Show.primNumShow.unboxed "idr_Main.{main_3}3.0" "idr_Main.{main_3}5.0"
      v.139 <- pure (CGrString unboxed.CGrString.8.0)
      v.73 <- pure v.139
      "idr_Main.{main_3}2_245.0" <- store v.73
      p.15 <- fetch "idr_Main.{main_3}1.0"
      p.32 <- pure p.15
      (CGrString idris_str_concat1_0.5.0) <- pure p.32
      p.14 <- fetch "idr_Main.{main_3}2_245.0"
      p.31 <- pure p.14
      (CGrString idris_str_concat2_0.5.0) <- pure p.31
      idris_str_concat3.5.0 <- _prim_string_concat idris_str_concat1_0.5.0 idris_str_concat2_0.5.0
      v.140 <- pure (CGrString idris_str_concat3.5.0)
      v.74 <- pure v.140
      pure v.74
    (C"idr_{U_Main.{main_5}_1}") ->
      "idr_Main.{main_5}0_val.0" <- fetch idr_Prelude.Interactive.printLn'3
      ccp.5.0 <- -- LINT: case has non-covered alternative Cidr_Main.Same
      case "idr_Main.{main_5}0_val.0" of
        (Cidr_Prelude.Bool.False) ->
          pure #"False"
        (Cidr_Prelude.Bool.True) ->
          pure #"True"
      v.141 <- pure (CGrString ccp.5.0)
      v.75 <- pure v.141
      pure v.75
  idr_Prelude.Interactive.printLn'5 <- store idr_Prelude.Interactive.printLn'5_val_233
  v.142 <- pure (CGrString #"\n")
  v.76 <- pure v.142
  idr_Prelude.Interactive.printLn'6 <- store v.76
  p.18 <- fetch idr_Prelude.Interactive.printLn'5
  p.35 <- pure p.18
  (CGrString idris_str_concat1_0.2) <- pure p.35
  p.17 <- fetch idr_Prelude.Interactive.printLn'6
  p.34 <- pure p.17
  (CGrString idris_str_concat2_0.2) <- pure p.34
  idris_str_concat3.2 <- _prim_string_concat idris_str_concat1_0.2 idris_str_concat2_0.2
  _prim_string_print idris_str_concat3.2
  pure ()
  v.143 <- pure (Cidr_MkUnit)
  v.77 <- pure v.143
  pure v.77
