primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  v.0 <- do
    v.5 <- pure (C"idr_{U_Main.{main_1}_1}")
    pure v.5
  idr_Main.main3.0 <- store v.0
  v.1 <- do
    v.16 <- pure (Cidr_Main.Same)
    pure v.16
  idr_Main.main4.0 <- store v.1
  idr_Main.main1_val.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main3.0 idr_Main.main4.0
  v.2 <- do
    v.21 <- pure (C"idr_{U_Main.{main_2}_1}")
    pure v.21
  idr_Main.main4_126.0 <- store v.2
  idr_Main.main2_val_120.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main4_126.0 idr_Main.main4.0
  v.3 <- do
    v.26 <- pure (C"idr_{U_Main.{main_3}_1}")
    pure v.26
  idr_Main.main5_134.0 <- store v.3
  idr_Main.main3_val_128.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main5_134.0 idr_Main.main4.0
  idr_Main.main4_val_136.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main3.0 idr_Main.main4.0
  v.4 <- do
    v.31 <- pure (C"idr_{U_Main.{main_5}_1}")
    pure v.31
  idr_Main.main7_150.0 <- store v.4
  idr_Main.main9.0.57.0.arity.1 <- pure 2
  idr_Main.exactLength4_val.0 <- idr_Main.checkEqNat $ idr_Main.main9.0.57.0.arity.1 idr_Main.main9.0.57.0.arity.1
  idr_Main.main8_val.0 <- case idr_Main.exactLength4_val.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.6 <- do
        v.66 <- pure (Cidr_Prelude.Bool.True)
        pure v.66
      pure v.6
    (Cidr_Prelude.Maybe.Nothing) ->
      v.7 <- do
        v.67 <- pure (Cidr_Prelude.Bool.False)
        pure v.67
      pure v.7
  idr_Main.main8_156.0 <- store idr_Main.main8_val.0
  idr_Main.main5_val_144.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main7_150.0 idr_Main.main8_156.0
  idr_Main.main9_168.49.3.arity.1.0 <- pure 10
  idr_Main.main9_val_166.0 <- idr_Main.checkEqNat2 $ idr_Main.main9_168.49.3.arity.1.0 idr_Main.main9_168.49.3.arity.1.0
  idr_Main.main9_val_165.0 <- case idr_Main.main9_val_166.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.8 <- do
        v.68 <- pure (Cidr_Prelude.Bool.True)
        pure v.68
      pure v.8
    (Cidr_Prelude.Maybe.Nothing) ->
      v.9 <- do
        v.69 <- pure (Cidr_Prelude.Bool.False)
        pure v.69
      pure v.9
  idr_Main.main9_174.0 <- store idr_Main.main9_val_165.0
  idr_Main.main6_val_158.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main7_150.0 idr_Main.main9_174.0
  idr_Main.main11_187.49.4.arity.1.0 <- pure 9
  idr_Main.main10_val_183.0 <- idr_Main.checkEqNat2 $ idr_Main.main9_168.49.3.arity.1.0 idr_Main.main11_187.49.4.arity.1.0
  idr_Main.main10_val_182.0 <- case idr_Main.main10_val_183.0 of
    (Cidr_Prelude.Maybe.Just.0) ->
      v.10 <- do
        v.70 <- pure (Cidr_Prelude.Bool.False)
        pure v.70
      pure v.10
    (Cidr_Prelude.Maybe.Nothing) ->
      v.11 <- do
        v.71 <- pure (Cidr_Prelude.Bool.True)
        pure v.71
      pure v.11
  idr_Main.main10_191.0 <- store idr_Main.main10_val_182.0
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.printLn' $ idr_Main.main7_150.0 idr_Main.main10_191.0
  pure ()

idr_Main.checkEqNat idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat1.49.arity.1 =
  case idr_Main.checkEqNat1.49.arity.1 of
    0 ->
      case idr_Main.checkEqNat0.49.arity.1 of
        0 ->
          v.12 <- do
            v.72 <- pure (Cidr_Prelude.Maybe.Just.0)
            pure v.72
          pure v.12
        #default ->
          v.13 <- do
            v.73 <- pure (Cidr_Prelude.Maybe.Nothing)
            pure v.73
          pure v.13
    #default ->
      idr_Main.checkEqNat2_13.41.1.arity.1 <- pure 1
      idris_int_sub2.1 <- _prim_int_sub $ idr_Main.checkEqNat1.49.arity.1 idr_Main.checkEqNat2_13.41.1.arity.1
      case idr_Main.checkEqNat0.49.arity.1 of
        0 ->
          v.14 <- do
            v.74 <- pure (Cidr_Prelude.Maybe.Nothing)
            pure v.74
          pure v.14
        #default ->
          idris_int_sub2.2 <- _prim_int_sub $ idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat2_13.41.1.arity.1
          idr_Main.checkEqNat4_val <- idr_Main.checkEqNat $ idris_int_sub2.2 idris_int_sub2.1
          case idr_Main.checkEqNat4_val of
            (Cidr_Prelude.Maybe.Just.0) ->
              v.15 <- do
                v.75 <- pure (Cidr_Prelude.Maybe.Just.0)
                pure v.75
              pure v.15
            (Cidr_Prelude.Maybe.Nothing) ->
              v.17 <- do
                v.76 <- pure (Cidr_Prelude.Maybe.Nothing)
                pure v.76
              pure v.17

idr_Main.checkEqNat2 idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat21.49.arity.1 =
  case idr_Main.checkEqNat21.49.arity.1 of
    0 ->
      case idr_Main.checkEqNat20.49.arity.1 of
        0 ->
          v.18 <- do
            v.77 <- pure (Cidr_Prelude.Maybe.Just.0)
            pure v.77
          pure v.18
        #default ->
          v.19 <- do
            v.78 <- pure (Cidr_Prelude.Maybe.Nothing)
            pure v.78
          pure v.19
    #default ->
      idr_Main.checkEqNat22_67.41.4.arity.1 <- pure 1
      idris_int_sub2.4 <- _prim_int_sub $ idr_Main.checkEqNat21.49.arity.1 idr_Main.checkEqNat22_67.41.4.arity.1
      case idr_Main.checkEqNat20.49.arity.1 of
        0 ->
          v.20 <- do
            v.79 <- pure (Cidr_Prelude.Maybe.Nothing)
            pure v.79
          pure v.20
        #default ->
          idris_int_sub2.5 <- _prim_int_sub $ idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat22_67.41.4.arity.1
          idr_Main.checkEqNat27_val <- idr_Main.checkEqNat2 $ idris_int_sub2.5 idris_int_sub2.4
          case idr_Main.checkEqNat27_val of
            (Cidr_Prelude.Maybe.Just.0) ->
              v.22 <- do
                v.80 <- pure (Cidr_Prelude.Maybe.Just.0)
                pure v.80
              pure v.22
            (Cidr_Prelude.Maybe.Nothing) ->
              pure idr_Main.checkEqNat27_val

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0_val.1" <- fetch idr_Prelude.Interactive.printLn'2
  idr_Prelude.Interactive.printLn'5_val_233 <- case "idr_{APPLY_0}0_val.1" of
    (C"idr_{U_Main.{main_1}_1}") ->
      "idr_Main.{main_1}5.0.144.0.arity.1" <- pure 4
      idris_int_str2.0.0.0 <- _prim_int_str $ "idr_Main.{main_1}5.0.144.0.arity.1"
      ccp.3.0 <- pure 0
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.0" <- pure 5
      idris_int_eq2.0.0 <- _prim_int_eq $ ccp.3.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.0"
      ccp.0.0.0 <- case idris_int_eq2.0.0 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow5_val_193.0 <- case ccp.0.0.0 of
        0 ->
          idris_int_lt2.0.0 <- _prim_int_lt $ ccp.3.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.0"
          ccp.1.0.0 <- case idris_int_lt2.0.0 of
            #False ->
              pure ccp.0.0.0
            #True ->
              pure 1
          case ccp.1.0.0 of
            0 ->
              v.23 <- do
                v.81 <- pure (Cidr_Prelude.Interfaces.GT)
                pure v.81
              pure v.23
            #default ->
              v.24 <- do
                v.82 <- pure (Cidr_Prelude.Interfaces.LT)
                pure v.82
              pure v.24
        #default ->
          v.25 <- do
            v.83 <- pure (Cidr_Prelude.Interfaces.EQ)
            pure v.83
          pure v.25
      idr_Prelude.Show.primNumShow5_val_192.0 <- case idr_Prelude.Show.primNumShow5_val_193.0 of
        (Cidr_Prelude.Interfaces.GT) ->
          v.27 <- do
            v.84 <- pure (Cidr_Prelude.Bool.True)
            pure v.84
          pure v.27
        #default ->
          idr_Prelude.Show.primNumShow7.41.6.arity.1.0 <- pure 5
          idris_int_eq2.1.0 <- _prim_int_eq $ ccp.3.0 idr_Prelude.Show.primNumShow7.41.6.arity.1.0
          ccp.0.1.0 <- case idris_int_eq2.1.0 of
            #False ->
              pure ccp.3.0
            #True ->
              pure 1
          case ccp.0.1.0 of
            0 ->
              v.28 <- do
                v.85 <- pure (Cidr_Prelude.Bool.False)
                pure v.85
              pure v.28
            #default ->
              v.29 <- do
                v.86 <- pure (Cidr_Prelude.Bool.True)
                pure v.86
              pure v.29
      idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_192.0 of
        (Cidr_Prelude.Bool.False) ->
          v.30 <- do
            v.87 <- pure (Cidr_Prelude.Bool.False)
            pure v.87
          pure v.30
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Show.primNumShow6_209.41.7.arity.1.0 <- pure #""
          idris_str_eq3.0.0 <- _prim_string_eq $ idris_int_str2.0.0.0 idr_Prelude.Show.primNumShow6_209.41.7.arity.1.0
          ccp.2.0.0 <- case idris_str_eq3.0.0 of
            #False ->
              pure ccp.3.0
            #True ->
              pure 1
          idr_Prelude.Show.primNumShow6_val_206.0 <- case ccp.2.0.0 of
            0 ->
              v.32 <- do
                v.88 <- pure (Cidr_Prelude.Bool.True)
                pure v.88
              pure v.32
            #default ->
              v.33 <- do
                v.89 <- pure (Cidr_Prelude.Bool.False)
                pure v.89
              pure v.33
          v.34 <- do
            v.90 <- pure (Cidr_Prelude.Bool.True)
            pure v.90
          case idr_Prelude.Show.primNumShow6_val_206.0 of
            (Cidr_Prelude.Bool.False) ->
              v.35 <- do
                v.91 <- pure (Cidr_Prelude.Bool.False)
                pure v.91
              pure v.35
            (Cidr_Prelude.Bool.True) ->
              idris_str_head2.0.0.0 <- _prim_string_head $ idris_int_str2.0.0.0
              idr_Prelude.Show.primNumShow8.41.9.arity.1.0.0 <- pure 45
              idris_int_eq2.2.0.0 <- _prim_int_eq $ idris_str_head2.0.0.0 idr_Prelude.Show.primNumShow8.41.9.arity.1.0.0
              ccp.0.2.0.0 <- case idris_int_eq2.2.0.0 of
                #False ->
                  pure ccp.3.0
                #True ->
                  pure 1
              case ccp.0.2.0.0 of
                0 ->
                  v.36 <- do
                    v.92 <- pure (Cidr_Prelude.Bool.False)
                    pure v.92
                  pure v.36
                #default ->
                  pure v.34
      unboxed.CGrString.6.0 <- case idr_Prelude.Show.primNumShow5_val.0 of
        (Cidr_Prelude.Bool.False) ->
          pure idris_int_str2.0.0.0
        (Cidr_Prelude.Bool.True) ->
          idris_str_concat2_0.0.0 <- pure #")"
          idris_str_concat3.0.0 <- _prim_string_concat $ idris_int_str2.0.0.0 idris_str_concat2_0.0.0
          idris_str_concat1_0.1.0 <- pure #"("
          idris_str_concat3.1.0 <- _prim_string_concat $ idris_str_concat1_0.1.0 idris_str_concat3.0.0
          pure idris_str_concat3.1.0
      idris_str_concat1_0.3.0 <- pure #"Same "
      idris_str_concat3.3.0 <- _prim_string_concat $ idris_str_concat1_0.3.0 unboxed.CGrString.6.0
      v.37 <- do
        v.93 <- pure (CGrString idris_str_concat3.3.0)
        pure v.93
      pure v.37
    (C"idr_{U_Main.{main_2}_1}") ->
      "idr_Main.{main_2}5.0.144.1.arity.1" <- pure 5
      idris_int_str2.0.0.1 <- _prim_int_str $ "idr_Main.{main_2}5.0.144.1.arity.1"
      ccp.3.1 <- pure 0
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.1" <- pure 5
      idris_int_eq2.0.1 <- _prim_int_eq $ ccp.3.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.1"
      ccp.0.0.1 <- case idris_int_eq2.0.1 of
        #False ->
          pure ccp.3.1
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow5_val_193.1 <- case ccp.0.0.1 of
        0 ->
          idris_int_lt2.0.1 <- _prim_int_lt $ ccp.3.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.1"
          ccp.1.0.1 <- case idris_int_lt2.0.1 of
            #False ->
              pure ccp.0.0.1
            #True ->
              pure 1
          case ccp.1.0.1 of
            0 ->
              v.38 <- do
                v.94 <- pure (Cidr_Prelude.Interfaces.GT)
                pure v.94
              pure v.38
            #default ->
              v.39 <- do
                v.95 <- pure (Cidr_Prelude.Interfaces.LT)
                pure v.95
              pure v.39
        #default ->
          v.40 <- do
            v.96 <- pure (Cidr_Prelude.Interfaces.EQ)
            pure v.96
          pure v.40
      idr_Prelude.Show.primNumShow5_val_192.1 <- case idr_Prelude.Show.primNumShow5_val_193.1 of
        (Cidr_Prelude.Interfaces.GT) ->
          v.41 <- do
            v.97 <- pure (Cidr_Prelude.Bool.True)
            pure v.97
          pure v.41
        #default ->
          idr_Prelude.Show.primNumShow7.41.6.arity.1.1 <- pure 5
          idris_int_eq2.1.1 <- _prim_int_eq $ ccp.3.1 idr_Prelude.Show.primNumShow7.41.6.arity.1.1
          ccp.0.1.1 <- case idris_int_eq2.1.1 of
            #False ->
              pure ccp.3.1
            #True ->
              pure 1
          case ccp.0.1.1 of
            0 ->
              v.42 <- do
                v.98 <- pure (Cidr_Prelude.Bool.False)
                pure v.98
              pure v.42
            #default ->
              v.43 <- do
                v.99 <- pure (Cidr_Prelude.Bool.True)
                pure v.99
              pure v.43
      idr_Prelude.Show.primNumShow5_val.1 <- case idr_Prelude.Show.primNumShow5_val_192.1 of
        (Cidr_Prelude.Bool.False) ->
          v.44 <- do
            v.100 <- pure (Cidr_Prelude.Bool.False)
            pure v.100
          pure v.44
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Show.primNumShow6_209.41.7.arity.1.1 <- pure #""
          idris_str_eq3.0.1 <- _prim_string_eq $ idris_int_str2.0.0.1 idr_Prelude.Show.primNumShow6_209.41.7.arity.1.1
          ccp.2.0.1 <- case idris_str_eq3.0.1 of
            #False ->
              pure ccp.3.1
            #True ->
              pure 1
          idr_Prelude.Show.primNumShow6_val_206.1 <- case ccp.2.0.1 of
            0 ->
              v.45 <- do
                v.101 <- pure (Cidr_Prelude.Bool.True)
                pure v.101
              pure v.45
            #default ->
              v.46 <- do
                v.102 <- pure (Cidr_Prelude.Bool.False)
                pure v.102
              pure v.46
          v.47 <- do
            v.103 <- pure (Cidr_Prelude.Bool.True)
            pure v.103
          case idr_Prelude.Show.primNumShow6_val_206.1 of
            (Cidr_Prelude.Bool.False) ->
              v.48 <- do
                v.104 <- pure (Cidr_Prelude.Bool.False)
                pure v.104
              pure v.48
            (Cidr_Prelude.Bool.True) ->
              idris_str_head2.0.0.1 <- _prim_string_head $ idris_int_str2.0.0.1
              idr_Prelude.Show.primNumShow8.41.9.arity.1.0.1 <- pure 45
              idris_int_eq2.2.0.1 <- _prim_int_eq $ idris_str_head2.0.0.1 idr_Prelude.Show.primNumShow8.41.9.arity.1.0.1
              ccp.0.2.0.1 <- case idris_int_eq2.2.0.1 of
                #False ->
                  pure ccp.3.1
                #True ->
                  pure 1
              case ccp.0.2.0.1 of
                0 ->
                  v.49 <- do
                    v.105 <- pure (Cidr_Prelude.Bool.False)
                    pure v.105
                  pure v.49
                #default ->
                  pure v.47
      unboxed.CGrString.7.0 <- case idr_Prelude.Show.primNumShow5_val.1 of
        (Cidr_Prelude.Bool.False) ->
          pure idris_int_str2.0.0.1
        (Cidr_Prelude.Bool.True) ->
          idris_str_concat2_0.0.1 <- pure #")"
          idris_str_concat3.0.1 <- _prim_string_concat $ idris_int_str2.0.0.1 idris_str_concat2_0.0.1
          idris_str_concat1_0.1.1 <- pure #"("
          idris_str_concat3.1.1 <- _prim_string_concat $ idris_str_concat1_0.1.1 idris_str_concat3.0.1
          pure idris_str_concat3.1.1
      idris_str_concat1_0.4.0 <- pure #"Same "
      idris_str_concat3.4.0 <- _prim_string_concat $ idris_str_concat1_0.4.0 unboxed.CGrString.7.0
      v.50 <- do
        v.106 <- pure (CGrString idris_str_concat3.4.0)
        pure v.106
      pure v.50
    (C"idr_{U_Main.{main_3}_1}") ->
      "idr_Main.{main_3}5.0.144.2.arity.1" <- pure 3
      idris_int_str2.0.0.2 <- _prim_int_str $ "idr_Main.{main_3}5.0.144.2.arity.1"
      ccp.3.2 <- pure 0
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.2" <- pure 5
      idris_int_eq2.0.2 <- _prim_int_eq $ ccp.3.2 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.2"
      ccp.0.0.2 <- case idris_int_eq2.0.2 of
        #False ->
          pure ccp.3.2
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow5_val_193.2 <- case ccp.0.0.2 of
        0 ->
          idris_int_lt2.0.2 <- _prim_int_lt $ ccp.3.2 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0.2"
          ccp.1.0.2 <- case idris_int_lt2.0.2 of
            #False ->
              pure ccp.0.0.2
            #True ->
              pure 1
          case ccp.1.0.2 of
            0 ->
              v.51 <- do
                v.107 <- pure (Cidr_Prelude.Interfaces.GT)
                pure v.107
              pure v.51
            #default ->
              v.52 <- do
                v.108 <- pure (Cidr_Prelude.Interfaces.LT)
                pure v.108
              pure v.52
        #default ->
          v.53 <- do
            v.109 <- pure (Cidr_Prelude.Interfaces.EQ)
            pure v.109
          pure v.53
      idr_Prelude.Show.primNumShow5_val_192.2 <- case idr_Prelude.Show.primNumShow5_val_193.2 of
        (Cidr_Prelude.Interfaces.GT) ->
          v.54 <- do
            v.110 <- pure (Cidr_Prelude.Bool.True)
            pure v.110
          pure v.54
        #default ->
          idr_Prelude.Show.primNumShow7.41.6.arity.1.2 <- pure 5
          idris_int_eq2.1.2 <- _prim_int_eq $ ccp.3.2 idr_Prelude.Show.primNumShow7.41.6.arity.1.2
          ccp.0.1.2 <- case idris_int_eq2.1.2 of
            #False ->
              pure ccp.3.2
            #True ->
              pure 1
          case ccp.0.1.2 of
            0 ->
              v.55 <- do
                v.111 <- pure (Cidr_Prelude.Bool.False)
                pure v.111
              pure v.55
            #default ->
              v.56 <- do
                v.112 <- pure (Cidr_Prelude.Bool.True)
                pure v.112
              pure v.56
      idr_Prelude.Show.primNumShow5_val.2 <- case idr_Prelude.Show.primNumShow5_val_192.2 of
        (Cidr_Prelude.Bool.False) ->
          v.57 <- do
            v.113 <- pure (Cidr_Prelude.Bool.False)
            pure v.113
          pure v.57
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Show.primNumShow6_209.41.7.arity.1.2 <- pure #""
          idris_str_eq3.0.2 <- _prim_string_eq $ idris_int_str2.0.0.2 idr_Prelude.Show.primNumShow6_209.41.7.arity.1.2
          ccp.2.0.2 <- case idris_str_eq3.0.2 of
            #False ->
              pure ccp.3.2
            #True ->
              pure 1
          idr_Prelude.Show.primNumShow6_val_206.2 <- case ccp.2.0.2 of
            0 ->
              v.58 <- do
                v.114 <- pure (Cidr_Prelude.Bool.True)
                pure v.114
              pure v.58
            #default ->
              v.59 <- do
                v.115 <- pure (Cidr_Prelude.Bool.False)
                pure v.115
              pure v.59
          v.60 <- do
            v.116 <- pure (Cidr_Prelude.Bool.True)
            pure v.116
          case idr_Prelude.Show.primNumShow6_val_206.2 of
            (Cidr_Prelude.Bool.False) ->
              v.61 <- do
                v.117 <- pure (Cidr_Prelude.Bool.False)
                pure v.117
              pure v.61
            (Cidr_Prelude.Bool.True) ->
              idris_str_head2.0.0.2 <- _prim_string_head $ idris_int_str2.0.0.2
              idr_Prelude.Show.primNumShow8.41.9.arity.1.0.2 <- pure 45
              idris_int_eq2.2.0.2 <- _prim_int_eq $ idris_str_head2.0.0.2 idr_Prelude.Show.primNumShow8.41.9.arity.1.0.2
              ccp.0.2.0.2 <- case idris_int_eq2.2.0.2 of
                #False ->
                  pure ccp.3.2
                #True ->
                  pure 1
              case ccp.0.2.0.2 of
                0 ->
                  v.62 <- do
                    v.118 <- pure (Cidr_Prelude.Bool.False)
                    pure v.118
                  pure v.62
                #default ->
                  pure v.60
      unboxed.CGrString.8.0 <- case idr_Prelude.Show.primNumShow5_val.2 of
        (Cidr_Prelude.Bool.False) ->
          pure idris_int_str2.0.0.2
        (Cidr_Prelude.Bool.True) ->
          idris_str_concat2_0.0.2 <- pure #")"
          idris_str_concat3.0.2 <- _prim_string_concat $ idris_int_str2.0.0.2 idris_str_concat2_0.0.2
          idris_str_concat1_0.1.2 <- pure #"("
          idris_str_concat3.1.2 <- _prim_string_concat $ idris_str_concat1_0.1.2 idris_str_concat3.0.2
          pure idris_str_concat3.1.2
      idris_str_concat1_0.5.0 <- pure #"Same "
      idris_str_concat3.5.0 <- _prim_string_concat $ idris_str_concat1_0.5.0 unboxed.CGrString.8.0
      v.63 <- do
        v.119 <- pure (CGrString idris_str_concat3.5.0)
        pure v.119
      pure v.63
    (C"idr_{U_Main.{main_5}_1}") ->
      "idr_Main.{main_5}0_val.0" <- fetch idr_Prelude.Interactive.printLn'3
      ccp.5.0 <- case "idr_Main.{main_5}0_val.0" of
        (Cidr_Prelude.Bool.False) ->
          pure #"False"
        (Cidr_Prelude.Bool.True) ->
          pure #"True"
      v.64 <- do
        v.120 <- pure (CGrString ccp.5.0)
        pure v.120
      pure v.64
  (CGrString idris_str_concat1_0.2) <- pure idr_Prelude.Interactive.printLn'5_val_233
  idris_str_concat2_0.2 <- pure #"\n"
  idris_str_concat3.2 <- _prim_string_concat $ idris_str_concat1_0.2 idris_str_concat2_0.2
  _prim_string_print $ idris_str_concat3.2
  v.65 <- do
    v.121 <- pure (Cidr_MkUnit)
    pure v.121
  pure v.65
