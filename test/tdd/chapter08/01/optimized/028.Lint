grinMain =
  v.66.0 <- pure (C"idr_{U_Main.{main_1}_1}")
  idr_Main.main3.0 <- store v.66.0
  v.67.0 <- pure (Cidr_Main.Same)
  idr_Main.main4.0 <- store v.67.0
  idr_Main.main1_val.0 <- idr_Prelude.Interactive.printLn' idr_Main.main3.0 idr_Main.main4.0
  v.70.0 <- pure (C"idr_{U_Main.{main_2}_1}")
  idr_Main.main4_126.0 <- store v.70.0
  v.71.0 <- pure v.67.0
  idr_Main.main5.0 <- store v.67.0
  idr_Main.main2_val_120.0 <- idr_Prelude.Interactive.printLn' idr_Main.main4_126.0 idr_Main.main5.0
  v.74.0 <- pure (C"idr_{U_Main.{main_3}_1}")
  idr_Main.main5_134.0 <- store v.74.0
  v.75.0 <- pure v.67.0
  idr_Main.main6.0 <- store v.67.0
  idr_Main.main3_val_128.0 <- idr_Prelude.Interactive.printLn' idr_Main.main5_134.0 idr_Main.main6.0
  v.78.0 <- pure v.66.0
  idr_Main.main6_142.0 <- store v.66.0
  v.79.0 <- pure v.67.0
  idr_Main.main7.0 <- store v.67.0
  idr_Main.main4_val_136.0 <- idr_Prelude.Interactive.printLn' idr_Main.main6_142.0 idr_Main.main7.0
  v.82.0 <- pure (C"idr_{U_Main.{main_5}_1}")
  idr_Main.main7_150.0 <- store v.82.0
  v.84.0 <- pure (CGrInt 2)
  v.85.0 <- pure v.84.0
  v.86.0 <- pure (Cidr_Main.::)
  idr_Main.main11.0 <- store v.86.0
  idr_Main.main9.0.57.0.arity.1 <- pure 2
  idr_Main.main10.0.57.0.arity.1 <- pure 2
  idr_Main.exactLength1.57.arity.1.0 <- pure idr_Main.main9.0.57.0.arity.1
  idr_Main.exactLength2.57.arity.1.0 <- pure idr_Main.main10.0.57.0.arity.1
  idr_Main.exactLength3.0 <- pure idr_Main.main11.0
  idr_Main.exactLength1.49.2.arity.1.0 <- pure idr_Main.main9.0.57.0.arity.1
  idr_Main.exactLength2.49.2.arity.1.0 <- pure idr_Main.main10.0.57.0.arity.1
  idr_Main.exactLength4_val.0 <- idr_Main.checkEqNat idr_Main.main9.0.57.0.arity.1 idr_Main.main10.0.57.0.arity.1
  idr_Main.exactLength4_val_115.0 <- pure idr_Main.exactLength4_val.0
  idr_Main.main8_val_151.0 <- case idr_Main.exactLength4_val.0 of
    (Cidr_Prelude.Maybe.Just idr_Main.exactLength5.0) ->
      v.62.0 <- pure (Cidr_Prelude.Maybe.Just idr_Main.main11.0)
      pure v.62.0
    (Cidr_Prelude.Maybe.Nothing) ->
      v.63.0 <- pure (Cidr_Prelude.Maybe.Nothing)
      pure v.63.0
  idr_Main.main8_val_154.0 <- pure idr_Main.main8_val_151.0
  idr_Main.main8_val.0 <- case idr_Main.main8_val_151.0 of
    (Cidr_Prelude.Maybe.Just idr_Main.main9_155.0) ->
      v.87.0 <- pure (Cidr_Prelude.Bool.True)
      pure v.87.0
    (Cidr_Prelude.Maybe.Nothing) ->
      v.88.0 <- pure (Cidr_Prelude.Bool.False)
      pure v.88.0
  idr_Main.main8_156.0 <- store idr_Main.main8_val.0
  idr_Main.main5_val_144.0 <- idr_Prelude.Interactive.printLn' idr_Main.main7_150.0 idr_Main.main8_156.0
  v.91.0 <- pure v.82.0
  idr_Main.main8_164.0 <- store v.82.0
  v.92.0 <- pure (CGrInt 10)
  v.93.0 <- pure v.92.0
  idr_Main.main9_168.49.3.arity.1.0 <- pure 10
  idr_Main.main10_170.49.3.arity.1.0 <- pure 10
  idr_Main.main9_val_166.0 <- idr_Main.checkEqNat2 idr_Main.main9_168.49.3.arity.1.0 idr_Main.main10_170.49.3.arity.1.0
  idr_Main.main9_val_172.0 <- pure idr_Main.main9_val_166.0
  idr_Main.main9_val_165.0 <- case idr_Main.main9_val_166.0 of
    (Cidr_Prelude.Maybe.Just idr_Main.main10_173.0) ->
      v.94.0 <- pure (Cidr_Prelude.Bool.True)
      pure v.94.0
    (Cidr_Prelude.Maybe.Nothing) ->
      v.95.0 <- pure (Cidr_Prelude.Bool.False)
      pure v.95.0
  idr_Main.main9_174.0 <- store idr_Main.main9_val_165.0
  idr_Main.main6_val_158.0 <- idr_Prelude.Interactive.printLn' idr_Main.main8_164.0 idr_Main.main9_174.0
  v.98.0 <- pure v.82.0
  idr_Main.main9_181.0 <- store v.82.0
  v.99.0 <- pure v.92.0
  v.100.0 <- pure (CGrInt 9)
  idr_Main.main10_185.49.4.arity.1.0 <- pure 10
  idr_Main.main11_187.49.4.arity.1.0 <- pure 9
  idr_Main.main10_val_183.0 <- idr_Main.checkEqNat2 idr_Main.main10_185.49.4.arity.1.0 idr_Main.main11_187.49.4.arity.1.0
  idr_Main.main10_val_189.0 <- pure idr_Main.main10_val_183.0
  idr_Main.main10_val_182.0 <- case idr_Main.main10_val_183.0 of
    (Cidr_Prelude.Maybe.Just idr_Main.main11_190.0) ->
      v.101.0 <- pure (Cidr_Prelude.Bool.False)
      pure v.101.0
    (Cidr_Prelude.Maybe.Nothing) ->
      v.102.0 <- pure (Cidr_Prelude.Bool.True)
      pure v.102.0
  idr_Main.main10_191.0 <- store idr_Main.main10_val_182.0
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.printLn' idr_Main.main9_181.0 idr_Main.main10_191.0
  pure ()

idr_Main.checkEqNat idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat1.49.arity.1 =
  idr_Main.checkEqNat1_val <- pure (CGrInt idr_Main.checkEqNat1.49.arity.1)
  idr_Main.checkEqNat_cpat_LInt64_0 <- pure idr_Main.checkEqNat1.49.arity.1
  case idr_Main.checkEqNat1.49.arity.1 of
    0 ->
      idr_Main.checkEqNat0_val <- pure (CGrInt idr_Main.checkEqNat0.49.arity.1)
      idr_Main.checkEqNat_cpat_LInt64_0_1 <- pure idr_Main.checkEqNat0.49.arity.1
      case idr_Main.checkEqNat0.49.arity.1 of
        0 ->
          v.10 <- pure (Cidr_Main.Same)
          idr_Main.checkEqNat2_2 <- store v.10
          v.11 <- pure (Cidr_Prelude.Maybe.Just idr_Main.checkEqNat2_2)
          pure v.11
        #default ->
          v.13 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.13
    #default ->
      v.16 <- pure (CGrInt 1)
      idr_Main.checkEqNat1.41.1.arity.1 <- pure idr_Main.checkEqNat1.49.arity.1
      idr_Main.checkEqNat2_13.41.1.arity.1 <- pure 1
      idris_int_sub0.41.arity.1.1 <- pure idr_Main.checkEqNat1.49.arity.1
      idris_int_sub1.41.arity.1.1 <- pure idr_Main.checkEqNat2_13.41.1.arity.1
      idris_int_sub0_1.1 <- pure idr_Main.checkEqNat1.49.arity.1
      idris_int_sub1_1.1 <- pure idr_Main.checkEqNat2_13.41.1.arity.1
      idris_int_sub2.1 <- _prim_int_sub idr_Main.checkEqNat1.49.arity.1 idr_Main.checkEqNat2_13.41.1.arity.1
      v.4.1 <- pure (CGrInt idris_int_sub2.1)
      unboxed.CGrInt.4.1 <- pure idris_int_sub2.1
      unboxed.CGrInt.8 <- pure idris_int_sub2.1
      idr_Main.checkEqNat2_val_11 <- pure (CGrInt idris_int_sub2.1)
      idr_Main.checkEqNat0_val_15 <- pure (CGrInt idr_Main.checkEqNat0.49.arity.1)
      idr_Main.checkEqNat_cpat_LInt64_0_16 <- pure idr_Main.checkEqNat0.49.arity.1
      case idr_Main.checkEqNat0.49.arity.1 of
        0 ->
          v.17 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.17
        #default ->
          v.18 <- pure v.16
          idr_Main.checkEqNat0.41.2.arity.1 <- pure idr_Main.checkEqNat0.49.arity.1
          idr_Main.checkEqNat3.41.2.arity.1 <- pure 1
          idris_int_sub0.41.arity.1.2 <- pure idr_Main.checkEqNat0.49.arity.1
          idris_int_sub1.41.arity.1.2 <- pure idr_Main.checkEqNat3.41.2.arity.1
          idris_int_sub0_1.2 <- pure idr_Main.checkEqNat0.49.arity.1
          idris_int_sub1_1.2 <- pure idr_Main.checkEqNat3.41.2.arity.1
          idris_int_sub2.2 <- _prim_int_sub idr_Main.checkEqNat0.49.arity.1 idr_Main.checkEqNat3.41.2.arity.1
          v.4.2 <- pure (CGrInt idris_int_sub2.2)
          unboxed.CGrInt.4.2 <- pure idris_int_sub2.2
          unboxed.CGrInt.9 <- pure idris_int_sub2.2
          idr_Main.checkEqNat3_val <- pure (CGrInt idris_int_sub2.2)
          idr_Main.checkEqNat3_18.49.0.arity.1 <- pure idris_int_sub2.2
          idr_Main.checkEqNat2_14.49.0.arity.1 <- pure idris_int_sub2.1
          idr_Main.checkEqNat4_val <- idr_Main.checkEqNat idris_int_sub2.2 idris_int_sub2.1
          idr_Main.checkEqNat4_val_19 <- pure idr_Main.checkEqNat4_val
          case idr_Main.checkEqNat4_val of
            (Cidr_Prelude.Maybe.Just idr_Main.checkEqNat5) ->
              v.19 <- pure (Cidr_Main.Same)
              idr_Main.checkEqNat6 <- store v.19
              v.20 <- pure (Cidr_Prelude.Maybe.Just idr_Main.checkEqNat6)
              pure v.20
            (Cidr_Prelude.Maybe.Nothing) ->
              v.21 <- pure (Cidr_Prelude.Maybe.Nothing)
              pure v.21

idr_Main.checkEqNat2 idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat21.49.arity.1 =
  idr_Main.checkEqNat21_val <- pure (CGrInt idr_Main.checkEqNat21.49.arity.1)
  idr_Main.checkEqNat2_cpat_LInt64_0 <- pure idr_Main.checkEqNat21.49.arity.1
  case idr_Main.checkEqNat21.49.arity.1 of
    0 ->
      idr_Main.checkEqNat20_val <- pure (CGrInt idr_Main.checkEqNat20.49.arity.1)
      idr_Main.checkEqNat2_cpat_LInt64_0_56 <- pure idr_Main.checkEqNat20.49.arity.1
      case idr_Main.checkEqNat20.49.arity.1 of
        0 ->
          v.36 <- pure (Cidr_Refl)
          idr_Main.checkEqNat22 <- store v.36
          v.37 <- pure (Cidr_Prelude.Maybe.Just idr_Main.checkEqNat22)
          pure v.37
        #default ->
          v.39 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.39
    #default ->
      v.42 <- pure (CGrInt 1)
      idr_Main.checkEqNat21.41.4.arity.1 <- pure idr_Main.checkEqNat21.49.arity.1
      idr_Main.checkEqNat22_67.41.4.arity.1 <- pure 1
      idris_int_sub0.41.arity.1.4 <- pure idr_Main.checkEqNat21.49.arity.1
      idris_int_sub1.41.arity.1.4 <- pure idr_Main.checkEqNat22_67.41.4.arity.1
      idris_int_sub0_1.4 <- pure idr_Main.checkEqNat21.49.arity.1
      idris_int_sub1_1.4 <- pure idr_Main.checkEqNat22_67.41.4.arity.1
      idris_int_sub2.4 <- _prim_int_sub idr_Main.checkEqNat21.49.arity.1 idr_Main.checkEqNat22_67.41.4.arity.1
      v.4.4 <- pure (CGrInt idris_int_sub2.4)
      unboxed.CGrInt.4.4 <- pure idris_int_sub2.4
      unboxed.CGrInt.11 <- pure idris_int_sub2.4
      idr_Main.checkEqNat22_val_65 <- pure (CGrInt idris_int_sub2.4)
      idr_Main.checkEqNat20_val_69 <- pure (CGrInt idr_Main.checkEqNat20.49.arity.1)
      idr_Main.checkEqNat2_cpat_LInt64_0_70 <- pure idr_Main.checkEqNat20.49.arity.1
      case idr_Main.checkEqNat20.49.arity.1 of
        0 ->
          v.43 <- pure (Cidr_Prelude.Maybe.Nothing)
          pure v.43
        #default ->
          v.44 <- pure v.42
          idr_Main.checkEqNat20.41.5.arity.1 <- pure idr_Main.checkEqNat20.49.arity.1
          idr_Main.checkEqNat23.41.5.arity.1 <- pure 1
          idris_int_sub0.41.arity.1.5 <- pure idr_Main.checkEqNat20.49.arity.1
          idris_int_sub1.41.arity.1.5 <- pure idr_Main.checkEqNat23.41.5.arity.1
          idris_int_sub0_1.5 <- pure idr_Main.checkEqNat20.49.arity.1
          idris_int_sub1_1.5 <- pure idr_Main.checkEqNat23.41.5.arity.1
          idris_int_sub2.5 <- _prim_int_sub idr_Main.checkEqNat20.49.arity.1 idr_Main.checkEqNat23.41.5.arity.1
          v.4.5 <- pure (CGrInt idris_int_sub2.5)
          unboxed.CGrInt.4.5 <- pure idris_int_sub2.5
          unboxed.CGrInt.12 <- pure idris_int_sub2.5
          idr_Main.checkEqNat23_val <- pure (CGrInt idris_int_sub2.5)
          v.47 <- pure (C"idr_{U_Main.{checkEqNat2_0}_1}")
          idr_Main.checkEqNat26 <- store v.47
          idr_Main.checkEqNat23_72.49.1.arity.1 <- pure idris_int_sub2.5
          idr_Main.checkEqNat22_68.49.1.arity.1 <- pure idris_int_sub2.4
          idr_Main.checkEqNat27_val <- idr_Main.checkEqNat2 idris_int_sub2.5 idris_int_sub2.4
          idr_Main.checkEqNat27 <- store idr_Main.checkEqNat27_val
          "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:02.0" <- pure idr_Main.checkEqNat26
          "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03.0" <- pure idr_Main.checkEqNat27
          "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0" <- fetch idr_Main.checkEqNat27
          case "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0" of
            (Cidr_Prelude.Maybe.Just "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:04.0") ->
              "idr_{APPLY_0}0.2.0" <- pure idr_Main.checkEqNat26
              "idr_{APPLY_0}0_val.2.0" <- fetch idr_Main.checkEqNat26
              (C"idr_{U_Main.{checkEqNat2_0}_1}") <- pure "idr_{APPLY_0}0_val.2.0"
              v.139.0 <- pure (Cidr_Refl)
              "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:05_val.0" <- pure v.139.0
              "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:05.0" <- store "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:05_val.0"
              v.162.0 <- pure (Cidr_Prelude.Maybe.Just "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:05.0")
              pure v.162.0
            (Cidr_Prelude.Maybe.Nothing) ->
              pure "idr_Prelude.Functor.Prelude.@Prelude.Functor.Functor$Maybe:!map:03_val.0"

idr_Prelude.Show.primNumShow.unboxed idr_Prelude.Show.primNumShow1 idr_Prelude.Show.primNumShow3 =
  "idr_{APPLY_0}0.0" <- pure idr_Prelude.Show.primNumShow1
  "idr_{APPLY_0}1.0" <- pure idr_Prelude.Show.primNumShow3
  "idr_{APPLY_0}0_val.0" <- fetch idr_Prelude.Show.primNumShow1
  (C"idr_{U_prim__toStrBigInt_1}") <- pure "idr_{APPLY_0}0_val.0"
  idr_prim__toStrBigInt0.0 <- pure idr_Prelude.Show.primNumShow3
  idris_int_str1.0.0 <- pure idr_Prelude.Show.primNumShow3
  (CGrInt idris_int_str1_0.0.0) <- fetch idr_Prelude.Show.primNumShow3
  idris_int_str2.0.0 <- _prim_int_str idris_int_str1_0.0.0
  v.9.0.0 <- pure (CGrString idris_int_str2.0.0)
  unboxed.CGrString.2.0 <- pure idris_int_str2.0.0
  unboxed.CGrString.8 <- pure idris_int_str2.0.0
  idr_Prelude.Show.primNumShow4_val <- pure (CGrString idris_int_str2.0.0)
  idr_Prelude.Show.primNumShow4 <- store idr_Prelude.Show.primNumShow4_val
  idr_Prelude.Show.primNumShow2_val <- pure (Cidr_Prelude.Show.Open)
  v.107 <- pure (CGrInt 0)
  idr_Prelude.Show.primNumShow5_val_194 <- pure v.107
  idr_Prelude.Show.primNumShow5 <- store idr_Prelude.Show.primNumShow5_val_194
  v.110 <- pure (CGrInt 5)
  idr_Prelude.Show.primNumShow6 <- store v.110
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.0" <- pure idr_Prelude.Show.primNumShow5
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.0" <- pure idr_Prelude.Show.primNumShow6
  (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0") <- fetch idr_Prelude.Show.primNumShow5
  (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0") <- fetch idr_Prelude.Show.primNumShow6
  idris_int_eq0.41.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0"
  idris_int_eq1.41.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
  idris_int_eq0_1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0"
  idris_int_eq1_1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
  idris_int_eq2.0 <- _prim_int_eq "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
  unboxed.CGrInt.17.0 <- case idris_int_eq2.0 of
    #False ->
      v.0.0 <- pure (CGrInt 0)
      unboxed.CGrInt.0.0 <- pure 0
      pure unboxed.CGrInt.0.0
    #True ->
      v.1.0 <- pure (CGrInt 1)
      unboxed.CGrInt.1.0 <- pure 1
      pure unboxed.CGrInt.1.0
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val.0" <- pure (CGrInt unboxed.CGrInt.17.0)
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val_247.0" <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val.0"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0.0" <- pure unboxed.CGrInt.17.0
  idr_Prelude.Show.primNumShow5_val_193 <- case unboxed.CGrInt.17.0 of
    0 ->
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.15.arity.1.0" <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0"
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.15.arity.1.0" <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
      idris_int_lt0.41.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0"
      idris_int_lt1.41.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
      idris_int_lt0_1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0"
      idris_int_lt1_1.0 <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
      idris_int_lt2.0 <- _prim_int_lt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0"
      unboxed.CGrInt.18.0 <- case idris_int_lt2.0 of
        #False ->
          v.2.0 <- pure (CGrInt 0)
          unboxed.CGrInt.2.0 <- pure 0
          pure unboxed.CGrInt.2.0
        #True ->
          v.3.0 <- pure (CGrInt 1)
          unboxed.CGrInt.3.0 <- pure 1
          pure unboxed.CGrInt.3.0
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val.0" <- pure (CGrInt unboxed.CGrInt.18.0)
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val_248.0" <- pure "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val.0"
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_249.0" <- pure unboxed.CGrInt.18.0
      case unboxed.CGrInt.18.0 of
        0 ->
          v.163.0 <- pure (Cidr_Prelude.Interfaces.GT)
          pure v.163.0
        #default ->
          v.164.0 <- pure (Cidr_Prelude.Interfaces.LT)
          pure v.164.0
    #default ->
      v.166.0 <- pure (Cidr_Prelude.Interfaces.EQ)
      pure v.166.0
  idr_Prelude.Show.primNumShow5_val_196 <- pure idr_Prelude.Show.primNumShow5_val_193
  idr_Prelude.Show.primNumShow5_val_192 <- case idr_Prelude.Show.primNumShow5_val_193 of
    (Cidr_Prelude.Interfaces.GT) ->
      v.111 <- pure (Cidr_Prelude.Bool.True)
      pure v.111
    #default ->
      idr_Prelude.Show.primNumShow2_val_199 <- pure idr_Prelude.Show.primNumShow2_val
      v.116 <- pure (CGrInt 0)
      idr_Prelude.Show.primNumShow6_val_198 <- pure v.116
      v.119 <- pure v.110
      (CGrInt idr_Prelude.Show.primNumShow6_200.41.6.arity.1) <- pure idr_Prelude.Show.primNumShow6_val_198
      idr_Prelude.Show.primNumShow7.41.6.arity.1 <- pure 5
      idris_int_eq0.41.arity.1.1 <- pure idr_Prelude.Show.primNumShow6_200.41.6.arity.1
      idris_int_eq1.41.arity.1.1 <- pure idr_Prelude.Show.primNumShow7.41.6.arity.1
      idris_int_eq0_1.1 <- pure idr_Prelude.Show.primNumShow6_200.41.6.arity.1
      idris_int_eq1_1.1 <- pure idr_Prelude.Show.primNumShow7.41.6.arity.1
      idris_int_eq2.1 <- _prim_int_eq idr_Prelude.Show.primNumShow6_200.41.6.arity.1 idr_Prelude.Show.primNumShow7.41.6.arity.1
      unboxed.CGrInt.13 <- case idris_int_eq2.1 of
        #False ->
          v.0.1 <- pure (CGrInt 0)
          unboxed.CGrInt.0.1 <- pure 0
          pure unboxed.CGrInt.0.1
        #True ->
          v.1.1 <- pure (CGrInt 1)
          unboxed.CGrInt.1.1 <- pure 1
          pure unboxed.CGrInt.1.1
      idr_Prelude.Show.primNumShow6_val_197 <- pure (CGrInt unboxed.CGrInt.13)
      idr_Prelude.Show.primNumShow6_val_202 <- pure idr_Prelude.Show.primNumShow6_val_197
      idr_Prelude.Show.primNumShow_cpat_LInt64_0 <- pure unboxed.CGrInt.13
      case unboxed.CGrInt.13 of
        0 ->
          v.120 <- pure (Cidr_Prelude.Bool.False)
          pure v.120
        #default ->
          v.121 <- pure (Cidr_Prelude.Bool.True)
          pure v.121
  idr_Prelude.Show.primNumShow5_val_204 <- pure idr_Prelude.Show.primNumShow5_val_192
  idr_Prelude.Show.primNumShow5_val <- case idr_Prelude.Show.primNumShow5_val_192 of
    (Cidr_Prelude.Bool.False) ->
      v.123 <- pure (Cidr_Prelude.Bool.False)
      pure v.123
    (Cidr_Prelude.Bool.True) ->
      v.124 <- pure (CGrString #"")
      idr_Prelude.Show.primNumShow6_209.41.7.arity.1 <- pure #""
      idris_str_eq1.0 <- pure idr_Prelude.Show.primNumShow4
      idris_str_eq2.41.arity.1.0 <- pure idr_Prelude.Show.primNumShow6_209.41.7.arity.1
      (CGrString idris_str_eq1_0.0) <- fetch idr_Prelude.Show.primNumShow4
      idris_str_eq2_0.0 <- pure idr_Prelude.Show.primNumShow6_209.41.7.arity.1
      idris_str_eq3.0 <- _prim_string_eq idris_str_eq1_0.0 idr_Prelude.Show.primNumShow6_209.41.7.arity.1
      v.7.0 <- pure (CGrInt idris_str_eq3.0)
      unboxed.CGrInt.5.0 <- pure idris_str_eq3.0
      unboxed.CGrInt.14 <- pure idris_str_eq3.0
      idr_Prelude.Show.primNumShow6_val_207 <- pure (CGrInt idris_str_eq3.0)
      idr_Prelude.Show.primNumShow6_val_211 <- pure idr_Prelude.Show.primNumShow6_val_207
      idr_Prelude.Show.primNumShow_cpat_LInt64_0_212 <- pure idris_str_eq3.0
      idr_Prelude.Show.primNumShow6_val_206 <- case idris_str_eq3.0 of
        0 ->
          v.125 <- pure (Cidr_Prelude.Bool.True)
          pure v.125
        #default ->
          v.126 <- pure (Cidr_Prelude.Bool.False)
          pure v.126
      idr_Prelude.Show.primNumShow6_213 <- store idr_Prelude.Show.primNumShow6_val_206
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00.0" <- pure idr_Prelude.Show.primNumShow6_213
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" <- pure (Cidr_Prelude.Bool.True)
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0" <- fetch idr_Prelude.Show.primNumShow6_213
      idr_Prelude.Show.primNumShow6_val_205 <- case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_246.0" of
        (Cidr_Prelude.Bool.False) ->
          v.160.0 <- pure (Cidr_Prelude.Basics.No)
          pure v.160.0
        (Cidr_Prelude.Bool.True) ->
          v.161.0 <- pure (Cidr_Prelude.Basics.Yes)
          pure v.161.0
      idr_Prelude.Show.primNumShow6_val_217 <- pure idr_Prelude.Show.primNumShow6_val_205
      case idr_Prelude.Show.primNumShow6_val_205 of
        (Cidr_Prelude.Basics.No) ->
          v.129 <- pure (Cidr_Prelude.Bool.False)
          pure v.129
        (Cidr_Prelude.Basics.Yes) ->
          idris_str_head1.0 <- pure idr_Prelude.Show.primNumShow4
          (CGrString idris_str_head1_0.0) <- fetch idr_Prelude.Show.primNumShow4
          idris_str_head2.0 <- _prim_string_head idris_str_head1_0.0
          v.8.0 <- pure (CGrInt idris_str_head2.0)
          unboxed.CGrInt.6.0 <- pure idris_str_head2.0
          unboxed.CGrInt.15 <- pure idris_str_head2.0
          idr_Prelude.Show.primNumShow7_val_219 <- pure (CGrInt idris_str_head2.0)
          v.130 <- pure (CGrInt 45)
          idr_Prelude.Show.primNumShow7_220.41.9.arity.1 <- pure idris_str_head2.0
          idr_Prelude.Show.primNumShow8.41.9.arity.1 <- pure 45
          idris_int_eq0.41.arity.1.2 <- pure idris_str_head2.0
          idris_int_eq1.41.arity.1.2 <- pure idr_Prelude.Show.primNumShow8.41.9.arity.1
          idris_int_eq0_1.2 <- pure idris_str_head2.0
          idris_int_eq1_1.2 <- pure idr_Prelude.Show.primNumShow8.41.9.arity.1
          idris_int_eq2.2 <- _prim_int_eq idris_str_head2.0 idr_Prelude.Show.primNumShow8.41.9.arity.1
          unboxed.CGrInt.16 <- case idris_int_eq2.2 of
            #False ->
              v.0.2 <- pure (CGrInt 0)
              unboxed.CGrInt.0.2 <- pure 0
              pure unboxed.CGrInt.0.2
            #True ->
              v.1.2 <- pure (CGrInt 1)
              unboxed.CGrInt.1.2 <- pure 1
              pure unboxed.CGrInt.1.2
          idr_Prelude.Show.primNumShow7_val_218 <- pure (CGrInt unboxed.CGrInt.16)
          idr_Prelude.Show.primNumShow7_val_222 <- pure idr_Prelude.Show.primNumShow7_val_218
          idr_Prelude.Show.primNumShow_cpat_LInt64_0_223 <- pure unboxed.CGrInt.16
          case unboxed.CGrInt.16 of
            0 ->
              v.131 <- pure (Cidr_Prelude.Bool.False)
              pure v.131
            #default ->
              v.132 <- pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_head1_0.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_eq1_0.0)
  idr_Prelude.Show.primNumShow5_val_225 <- pure idr_Prelude.Show.primNumShow5_val
  case idr_Prelude.Show.primNumShow5_val of
    (Cidr_Prelude.Bool.False) ->
      (CGrString unboxed.CGrString.0) <- pure idr_Prelude.Show.primNumShow4_val
      pure unboxed.CGrString.0
    (Cidr_Prelude.Bool.True) ->
      v.134 <- pure (CGrString #"(")
      idr_Prelude.Show.primNumShow6_227 <- store v.134
      v.135 <- pure (CGrString #")")
      idr_Prelude.Show.primNumShow7_230 <- store v.135
      idris_str_concat1.0 <- pure idr_Prelude.Show.primNumShow4
      idris_str_concat2.0 <- pure idr_Prelude.Show.primNumShow7_230
      (CGrString idris_str_concat1_0.0) <- fetch idr_Prelude.Show.primNumShow4
      (CGrString idris_str_concat2_0.0) <- fetch idr_Prelude.Show.primNumShow7_230
      idris_str_concat3.0 <- _prim_string_concat idris_str_concat1_0.0 idris_str_concat2_0.0
      v.6.0 <- pure (CGrString idris_str_concat3.0)
      idr_Prelude.Show.primNumShow7_val_228 <- pure v.6.0
      idr_Prelude.Show.primNumShow7_231 <- store v.6.0
      idris_str_concat1.1 <- pure idr_Prelude.Show.primNumShow6_227
      idris_str_concat2.1 <- pure idr_Prelude.Show.primNumShow7_231
      (CGrString idris_str_concat1_0.1) <- fetch idr_Prelude.Show.primNumShow6_227
      (CGrString idris_str_concat2_0.1) <- fetch idr_Prelude.Show.primNumShow7_231
      idris_str_concat3.1 <- _prim_string_concat idris_str_concat1_0.1 idris_str_concat2_0.1
      v.6.1 <- pure (CGrString idris_str_concat3.1)
      unboxed.CGrString.1 <- pure idris_str_concat3.1
      pure idris_str_concat3.1 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.1) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.1) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.14.arity.1.0") -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.41.14.arity.1.0") -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_str1_0.0.0)

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0.1" <- pure idr_Prelude.Interactive.printLn'2
  "idr_{APPLY_0}1.1" <- pure idr_Prelude.Interactive.printLn'3
  "idr_{APPLY_0}0_val.1" <- fetch idr_Prelude.Interactive.printLn'2
  ccp.0 <- case "idr_{APPLY_0}0_val.1" of
    (C"idr_{U_Main.{main_1}_1}") ->
      v.141.0 <- pure (CGrString #"Same ")
      "idr_Main.{main_1}1.0" <- store v.141.0
      v.143.0 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      "idr_Main.{main_1}3.0" <- store v.143.0
      v.145.0 <- pure (CGrInt 4)
      "idr_Main.{main_1}5.0" <- store v.145.0
      unboxed.CGrString.13.0 <- idr_Prelude.Show.primNumShow.unboxed "idr_Main.{main_1}3.0" "idr_Main.{main_1}5.0"
      "idr_Main.{main_1}2_val.0" <- pure (CGrString unboxed.CGrString.13.0)
      "idr_Main.{main_1}2_241.0" <- store "idr_Main.{main_1}2_val.0"
      idris_str_concat1.3.0 <- pure "idr_Main.{main_1}1.0"
      idris_str_concat2.3.0 <- pure "idr_Main.{main_1}2_241.0"
      (CGrString idris_str_concat1_0.3.0) <- fetch "idr_Main.{main_1}1.0"
      (CGrString idris_str_concat2_0.3.0) <- fetch "idr_Main.{main_1}2_241.0"
      idris_str_concat3.3.0 <- _prim_string_concat idris_str_concat1_0.3.0 idris_str_concat2_0.3.0
      v.6.3.0 <- pure (CGrString idris_str_concat3.3.0)
      unboxed.CGrString.3.0 <- pure idris_str_concat3.3.0
      unboxed.CGrString.9 <- pure idris_str_concat3.3.0
      pure idris_str_concat3.3.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.3.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.3.0)
    (C"idr_{U_Main.{main_2}_1}") ->
      v.146.0 <- pure (CGrString #"Same ")
      "idr_Main.{main_2}1.0" <- store v.146.0
      v.148.0 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      "idr_Main.{main_2}3.0" <- store v.148.0
      v.150.0 <- pure (CGrInt 5)
      "idr_Main.{main_2}5.0" <- store v.150.0
      unboxed.CGrString.14.0 <- idr_Prelude.Show.primNumShow.unboxed "idr_Main.{main_2}3.0" "idr_Main.{main_2}5.0"
      "idr_Main.{main_2}2_val.0" <- pure (CGrString unboxed.CGrString.14.0)
      "idr_Main.{main_2}2_243.0" <- store "idr_Main.{main_2}2_val.0"
      idris_str_concat1.4.0 <- pure "idr_Main.{main_2}1.0"
      idris_str_concat2.4.0 <- pure "idr_Main.{main_2}2_243.0"
      (CGrString idris_str_concat1_0.4.0) <- fetch "idr_Main.{main_2}1.0"
      (CGrString idris_str_concat2_0.4.0) <- fetch "idr_Main.{main_2}2_243.0"
      idris_str_concat3.4.0 <- _prim_string_concat idris_str_concat1_0.4.0 idris_str_concat2_0.4.0
      v.6.4.0 <- pure (CGrString idris_str_concat3.4.0)
      unboxed.CGrString.4.0 <- pure idris_str_concat3.4.0
      unboxed.CGrString.10 <- pure idris_str_concat3.4.0
      pure idris_str_concat3.4.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.4.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.4.0)
    (C"idr_{U_Main.{main_3}_1}") ->
      v.151.0 <- pure (CGrString #"Same ")
      "idr_Main.{main_3}1.0" <- store v.151.0
      v.153.0 <- pure (C"idr_{U_prim__toStrBigInt_1}")
      "idr_Main.{main_3}3.0" <- store v.153.0
      v.155.0 <- pure (CGrInt 3)
      "idr_Main.{main_3}5.0" <- store v.155.0
      unboxed.CGrString.15.0 <- idr_Prelude.Show.primNumShow.unboxed "idr_Main.{main_3}3.0" "idr_Main.{main_3}5.0"
      "idr_Main.{main_3}2_val.0" <- pure (CGrString unboxed.CGrString.15.0)
      "idr_Main.{main_3}2_245.0" <- store "idr_Main.{main_3}2_val.0"
      idris_str_concat1.5.0 <- pure "idr_Main.{main_3}1.0"
      idris_str_concat2.5.0 <- pure "idr_Main.{main_3}2_245.0"
      (CGrString idris_str_concat1_0.5.0) <- fetch "idr_Main.{main_3}1.0"
      (CGrString idris_str_concat2_0.5.0) <- fetch "idr_Main.{main_3}2_245.0"
      idris_str_concat3.5.0 <- _prim_string_concat idris_str_concat1_0.5.0 idris_str_concat2_0.5.0
      v.6.5.0 <- pure (CGrString idris_str_concat3.5.0)
      unboxed.CGrString.5.0 <- pure idris_str_concat3.5.0
      unboxed.CGrString.11 <- pure idris_str_concat3.5.0
      pure idris_str_concat3.5.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.5.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.5.0)
    (C"idr_{U_Main.{main_5}_1}") ->
      "idr_Main.{main_5}0.0" <- pure idr_Prelude.Interactive.printLn'3
      "idr_Main.{main_5}0_val.0" <- fetch idr_Prelude.Interactive.printLn'3
      unboxed.CGrString.12 <- case "idr_Main.{main_5}0_val.0" of
        (Cidr_Prelude.Bool.False) ->
          v.156.0 <- pure (CGrString #"False")
          unboxed.CGrString.6.0 <- pure #"False"
          pure unboxed.CGrString.6.0
        (Cidr_Prelude.Bool.True) ->
          v.157.0 <- pure (CGrString #"True")
          unboxed.CGrString.7.0 <- pure #"True"
          pure unboxed.CGrString.7.0
      pure unboxed.CGrString.12
  idr_Prelude.Interactive.printLn'5_val_233 <- pure (CGrString ccp.0)
  idr_Prelude.Interactive.printLn'5 <- store idr_Prelude.Interactive.printLn'5_val_233
  v.136 <- pure (CGrString #"\n")
  idr_Prelude.Interactive.printLn'6 <- store v.136
  idris_str_concat1.2 <- pure idr_Prelude.Interactive.printLn'5
  idris_str_concat2.2 <- pure idr_Prelude.Interactive.printLn'6
  (CGrString idris_str_concat1_0.2) <- fetch idr_Prelude.Interactive.printLn'5
  (CGrString idris_str_concat2_0.2) <- fetch idr_Prelude.Interactive.printLn'6
  idris_str_concat3.2 <- _prim_string_concat idris_str_concat1_0.2 idris_str_concat2_0.2
  v.6.2 <- pure (CGrString idris_str_concat3.2)
  idr_Prelude.Interactive.printLn'5_val_232 <- pure v.6.2
  idr_Prelude.Interactive.printLn'5_234.41.10.arity.1 <- pure idris_str_concat3.2
  idris_write_str2.41.arity.1.0 <- pure idris_str_concat3.2
  idris_write_str2_0.0 <- pure idris_str_concat3.2
  _prim_string_print idris_str_concat3.2
  v.137 <- pure (Cidr_MkUnit)
  pure v.137 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.2) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.2)
