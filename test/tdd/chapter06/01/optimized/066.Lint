grinMain =
  idr_Main.main3_val.0 <- pure (C"idr_{U_Main.{main_3}_1}")
  idr_Main.main3.0 <- store idr_Main.main3_val.0
  idr_Main.tri0_val_488.0 <- pure (CGrFloat 0.0)
  idr_Main.tri0.0 <- store idr_Main.tri0_val_488.0
  idr_Main.tri0_val.0 <- pure (Cidr_Builtins.MkPair idr_Main.tri0.0 idr_Main.tri0.0)
  idr_Main.tri0_489.0 <- store idr_Main.tri0_val.0
  idr_Main.tri1_val_492.0 <- pure (CGrFloat 3.0)
  idr_Main.tri1_493.0 <- store idr_Main.tri1_val_492.0
  idr_Main.tri1_val_491.0 <- pure (Cidr_Builtins.MkPair idr_Main.tri1_493.0 idr_Main.tri0.0)
  idr_Main.tri1_495.0 <- store idr_Main.tri1_val_491.0
  idr_Main.tri3_val.0 <- pure (CGrFloat 4.0)
  idr_Main.tri3.0 <- store idr_Main.tri3_val.0
  idr_Main.tri2_val_497.0 <- pure (Cidr_Builtins.MkPair idr_Main.tri0.0 idr_Main.tri3.0)
  idr_Main.tri2_500.0 <- store idr_Main.tri2_val_497.0
  idr_Main.tri3_val_501.0 <- pure (Cidr_Data.Vect.Nil)
  idr_Main.tri3_502.0 <- store idr_Main.tri3_val_501.0
  idr_Main.tri2_val_496.0 <- pure (Cidr_Data.Vect.:: idr_Main.tri2_500.0 idr_Main.tri3_502.0)
  idr_Main.tri2_503.0 <- store idr_Main.tri2_val_496.0
  idr_Main.tri1_val_490.0 <- pure (Cidr_Data.Vect.:: idr_Main.tri1_495.0 idr_Main.tri2_503.0)
  idr_Main.tri1_504.0 <- store idr_Main.tri1_val_490.0
  idr_Main.main4_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.tri0_489.0 idr_Main.tri1_504.0)
  idr_Main.main4.0 <- store idr_Main.main4_val.0
  idr_Main.main1_val.0 <- idr_Prelude.Interactive.printLn' idr_Main.main3.0 idr_Main.main4.0
  idr_Main.main4_val_76.0 <- pure (C"idr_{U_Main.{main_5}_1}")
  idr_Main.main4_77.0 <- store idr_Main.main4_val_76.0
  idr_Main.tri20_val.0 <- pure (Cidr_Builtins.MkPair idr_Main.tri0.0 idr_Main.tri0.0)
  idr_Main.tri20_506.0 <- store idr_Main.tri20_val.0
  idr_Main.tri21_val_508.0 <- pure (Cidr_Builtins.MkPair idr_Main.tri0.0 idr_Main.tri0.0)
  idr_Main.tri21_511.0 <- store idr_Main.tri21_val_508.0
  idr_Main.tri22_val_513.0 <- pure (Cidr_Builtins.MkPair idr_Main.tri0.0 idr_Main.tri0.0)
  idr_Main.tri22_516.0 <- store idr_Main.tri22_val_513.0
  idr_Main.tri22_val_512.0 <- pure (Cidr_Data.Vect.:: idr_Main.tri22_516.0 idr_Main.tri3_502.0)
  idr_Main.tri22_519.0 <- store idr_Main.tri22_val_512.0
  idr_Main.tri21_val_507.0 <- pure (Cidr_Data.Vect.:: idr_Main.tri21_511.0 idr_Main.tri22_519.0)
  idr_Main.tri21_520.0 <- store idr_Main.tri21_val_507.0
  idr_Main.main5_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.tri20_506.0 idr_Main.tri21_520.0)
  idr_Main.main5.0 <- store idr_Main.main5_val.0
  idr_Main.main2_val_71.0 <- idr_Prelude.Interactive.printLn' idr_Main.main4_77.0 idr_Main.main5.0
  idr_Main.main5_val_84.0 <- pure (C"idr_{U_Main.{main_6}_1}")
  idr_Main.main5_85.0 <- store idr_Main.main5_val_84.0
  idr_Main.main6.49.11.arity.1.0 <- pure #"  string  "
  idris_str_rev2.0 <- _prim_string_reverse idr_Main.main6.49.11.arity.1.0
  idr_Prelude.Strings.trim2_val.0 <- pure (CGrString #"")
  idr_Prelude.Strings.trim2.41.37.arity.1.0 <- pure #""
  idris_str_eq3.0 <- _prim_string_eq idris_str_rev2.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
  ccp.2.0 <- case idris_str_eq3.0 of
    #False ->
      pure 0
    #True ->
      pure 1
  idr_Prelude.Strings.trim1_val_526.0 <- case ccp.2.0 of
    0 ->
      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
    #default ->
      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" <- pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Strings.trim1_val_524.0 <- case idr_Prelude.Strings.trim1_val_526.0 of
    (Cidr_Prelude.Bool.False) ->
      pure idr_Prelude.Strings.trim2_val.0
    (Cidr_Prelude.Bool.True) ->
      idris_str_head2.0.0 <- _prim_string_head idris_str_rev2.0
      idr_Prelude.Chars.isSpace1.41.3.arity.1.0.0 <- pure 32
      idris_int_eq2.0.0.0 <- _prim_int_eq idris_str_head2.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.0.0
      ccp.0.0.0.0 <- case idris_int_eq2.0.0.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Prelude.Strings.trim2_val_536.0.0 <- case ccp.0.0.0.0 of
        0 ->
          idr_Prelude.Chars.isSpace2.41.4.arity.1.0.0 <- pure 9
          idris_int_eq2.1.0.0 <- _prim_int_eq idris_str_head2.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.0.0
          ccp.0.1.0.0 <- case idris_int_eq2.1.0.0 of
            #False ->
              pure ccp.0.0.0.0
            #True ->
              pure 1
          case ccp.0.1.0.0 of
            0 ->
              idr_Prelude.Chars.isSpace3.41.5.arity.1.0.0 <- pure 13
              idris_int_eq2.2.0.0 <- _prim_int_eq idris_str_head2.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.0.0
              ccp.0.2.0.0 <- case idris_int_eq2.2.0.0 of
                #False ->
                  pure ccp.0.0.0.0
                #True ->
                  pure 1
              case ccp.0.2.0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace4.41.6.arity.1.0.0 <- pure 10
                  idris_int_eq2.3.0.0 <- _prim_int_eq idris_str_head2.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.0.0
                  ccp.0.3.0.0 <- case idris_int_eq2.3.0.0 of
                    #False ->
                      pure ccp.0.0.0.0
                    #True ->
                      pure 1
                  case ccp.0.3.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.41.7.arity.1.0.0 <- pure 12
                      idris_int_eq2.4.0.0 <- _prim_int_eq idris_str_head2.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.0.0
                      ccp.0.4.0.0 <- case idris_int_eq2.4.0.0 of
                        #False ->
                          pure ccp.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.4.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.41.8.arity.1.0.0 <- pure 11
                          idris_int_eq2.5.0.0 <- _prim_int_eq idris_str_head2.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.0.0
                          ccp.0.5.0.0 <- case idris_int_eq2.5.0.0 of
                            #False ->
                              pure ccp.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.5.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.41.9.arity.1.0.0 <- pure 160
                              idris_int_eq2.6.0.0 <- _prim_int_eq idris_str_head2.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.0.0
                              ccp.0.6.0.0 <- case idris_int_eq2.6.0.0 of
                                #False ->
                                  pure ccp.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.6.0.0 of
                                0 ->
                                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
            #default ->
              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
        #default ->
          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
      case idr_Prelude.Strings.trim2_val_536.0.0 of
        (Cidr_Prelude.Bool.False) ->
          idris_str_tail2.0.0 <- _prim_string_tail idris_str_rev2.0
          idris_str_cons3.0.0 <- _prim_string_cons idris_str_head2.0.0 idris_str_tail2.0.0
          pure (CGrString idris_str_cons3.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.0.0)
        (Cidr_Prelude.Bool.True) ->
          idris_str_tail2.1.0 <- _prim_string_tail idris_str_rev2.0
          idris_str_eq3.1.0 <- _prim_string_eq idris_str_tail2.1.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
          ccp.2.1.0 <- case idris_str_eq3.1.0 of
            #False ->
              pure 0
            #True ->
              pure 1
          case ccp.2.1.0 of
            0 ->
              idris_str_head2.2.0.0.0 <- _prim_string_head idris_str_tail2.1.0
              idris_int_eq2.0.1.0.0.0 <- _prim_int_eq idris_str_head2.2.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.0.0
              ccp.0.0.1.0.0.0 <- case idris_int_eq2.0.1.0.0.0 of
                #False ->
                  pure ccp.2.1.0
                #True ->
                  pure 1
              idr_Prelude.Strings.trim4_val_564.0.0.0.0 <- case ccp.0.0.1.0.0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace2.41.4.arity.1.1.0.0.0 <- pure 9
                  idris_int_eq2.1.1.0.0.0 <- _prim_int_eq idris_str_head2.2.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.1.0.0.0
                  ccp.0.1.1.0.0.0 <- case idris_int_eq2.1.1.0.0.0 of
                    #False ->
                      pure ccp.0.0.1.0.0.0
                    #True ->
                      pure 1
                  case ccp.0.1.1.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace3.41.5.arity.1.1.0.0.0 <- pure 13
                      idris_int_eq2.2.1.0.0.0 <- _prim_int_eq idris_str_head2.2.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.1.0.0.0
                      ccp.0.2.1.0.0.0 <- case idris_int_eq2.2.1.0.0.0 of
                        #False ->
                          pure ccp.0.0.1.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.2.1.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace4.41.6.arity.1.1.0.0.0 <- pure 10
                          idris_int_eq2.3.1.0.0.0 <- _prim_int_eq idris_str_head2.2.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.1.0.0.0
                          ccp.0.3.1.0.0.0 <- case idris_int_eq2.3.1.0.0.0 of
                            #False ->
                              pure ccp.0.0.1.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.3.1.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace5.41.7.arity.1.1.0.0.0 <- pure 12
                              idris_int_eq2.4.1.0.0.0 <- _prim_int_eq idris_str_head2.2.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.1.0.0.0
                              ccp.0.4.1.0.0.0 <- case idris_int_eq2.4.1.0.0.0 of
                                #False ->
                                  pure ccp.0.0.1.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.4.1.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace6.41.8.arity.1.1.0.0.0 <- pure 11
                                  idris_int_eq2.5.1.0.0.0 <- _prim_int_eq idris_str_head2.2.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.1.0.0.0
                                  ccp.0.5.1.0.0.0 <- case idris_int_eq2.5.1.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.1.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.5.1.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace7.41.9.arity.1.1.0.0.0 <- pure 160
                                      idris_int_eq2.6.1.0.0.0 <- _prim_int_eq idris_str_head2.2.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.1.0.0.0
                                      ccp.0.6.1.0.0.0 <- case idris_int_eq2.6.1.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.1.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.6.1.0.0.0 of
                                        0 ->
                                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
              case idr_Prelude.Strings.trim4_val_564.0.0.0.0 of
                (Cidr_Prelude.Bool.False) ->
                  idris_str_tail2.5.0.0.0 <- _prim_string_tail idris_str_tail2.1.0
                  idris_str_cons3.1.0.0.0 <- _prim_string_cons idris_str_head2.2.0.0.0 idris_str_tail2.5.0.0.0
                  pure (CGrString idris_str_cons3.1.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.1.0.0.0)
                (Cidr_Prelude.Bool.True) ->
                  idris_str_tail2.7.0.0.0 <- _prim_string_tail idris_str_tail2.1.0
                  idris_str_eq3.2.0.0.0 <- _prim_string_eq idris_str_tail2.7.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                  ccp.2.2.0.0.0 <- case idris_str_eq3.2.0.0.0 of
                    #False ->
                      pure ccp.2.1.0
                    #True ->
                      pure 1
                  case ccp.2.2.0.0.0 of
                    0 ->
                      idris_str_head2.4.0.0.0.0.0 <- _prim_string_head idris_str_tail2.7.0.0.0
                      idris_int_eq2.0.2.0.0.0.0.0 <- _prim_int_eq idris_str_head2.4.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.0.0
                      ccp.0.0.2.0.0.0.0.0 <- case idris_int_eq2.0.2.0.0.0.0.0 of
                        #False ->
                          pure ccp.2.1.0
                        #True ->
                          pure 1
                      idr_Prelude.Strings.trim6_val_600.0.0.0.0.0.0 <- case ccp.0.0.2.0.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace2.41.4.arity.1.2.0.0.0.0.0 <- pure 9
                          idris_int_eq2.1.2.0.0.0.0.0 <- _prim_int_eq idris_str_head2.4.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.2.0.0.0.0.0
                          ccp.0.1.2.0.0.0.0.0 <- case idris_int_eq2.1.2.0.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.2.0.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.1.2.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace3.41.5.arity.1.2.0.0.0.0.0 <- pure 13
                              idris_int_eq2.2.2.0.0.0.0.0 <- _prim_int_eq idris_str_head2.4.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.2.0.0.0.0.0
                              ccp.0.2.2.0.0.0.0.0 <- case idris_int_eq2.2.2.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.2.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.2.2.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.41.6.arity.1.2.0.0.0.0.0 <- pure 10
                                  idris_int_eq2.3.2.0.0.0.0.0 <- _prim_int_eq idris_str_head2.4.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.2.0.0.0.0.0
                                  ccp.0.3.2.0.0.0.0.0 <- case idris_int_eq2.3.2.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.2.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.3.2.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace5.41.7.arity.1.2.0.0.0.0.0 <- pure 12
                                      idris_int_eq2.4.2.0.0.0.0.0 <- _prim_int_eq idris_str_head2.4.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.2.0.0.0.0.0
                                      ccp.0.4.2.0.0.0.0.0 <- case idris_int_eq2.4.2.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.2.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.4.2.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace6.41.8.arity.1.2.0.0.0.0.0 <- pure 11
                                          idris_int_eq2.5.2.0.0.0.0.0 <- _prim_int_eq idris_str_head2.4.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.2.0.0.0.0.0
                                          ccp.0.5.2.0.0.0.0.0 <- case idris_int_eq2.5.2.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.2.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.5.2.0.0.0.0.0 of
                                            0 ->
                                              idr_Prelude.Chars.isSpace7.41.9.arity.1.2.0.0.0.0.0 <- pure 160
                                              idris_int_eq2.6.2.0.0.0.0.0 <- _prim_int_eq idris_str_head2.4.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.2.0.0.0.0.0
                                              ccp.0.6.2.0.0.0.0.0 <- case idris_int_eq2.6.2.0.0.0.0.0 of
                                                #False ->
                                                  pure ccp.0.0.2.0.0.0.0.0
                                                #True ->
                                                  pure 1
                                              case ccp.0.6.2.0.0.0.0.0 of
                                                0 ->
                                                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                                #default ->
                                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                      case idr_Prelude.Strings.trim6_val_600.0.0.0.0.0.0 of
                        (Cidr_Prelude.Bool.False) ->
                          idris_str_tail2.14.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.7.0.0.0
                          idris_str_cons3.2.0.0.0.0.0 <- _prim_string_cons idris_str_head2.4.0.0.0.0.0 idris_str_tail2.14.0.0.0.0.0
                          pure (CGrString idris_str_cons3.2.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.2.0.0.0.0.0)
                        (Cidr_Prelude.Bool.True) ->
                          idris_str_tail2.17.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.7.0.0.0
                          idris_str_eq3.3.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.17.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                          ccp.2.3.0.0.0.0.0 <- case idris_str_eq3.3.0.0.0.0.0 of
                            #False ->
                              pure ccp.2.1.0
                            #True ->
                              pure 1
                          case ccp.2.3.0.0.0.0.0 of
                            0 ->
                              idris_str_head2.6.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.17.0.0.0.0.0
                              idris_int_eq2.0.3.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.6.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.0.0
                              ccp.0.0.3.0.0.0.0.0.0.0 <- case idris_int_eq2.0.3.0.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.2.1.0
                                #True ->
                                  pure 1
                              idr_Prelude.Strings.trim8_val_644.0.0.0.0.0.0.0.0 <- case ccp.0.0.3.0.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace2.41.4.arity.1.3.0.0.0.0.0.0.0 <- pure 9
                                  idris_int_eq2.1.3.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.6.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.3.0.0.0.0.0.0.0
                                  ccp.0.1.3.0.0.0.0.0.0.0 <- case idris_int_eq2.1.3.0.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.3.0.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.1.3.0.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace3.41.5.arity.1.3.0.0.0.0.0.0.0 <- pure 13
                                      idris_int_eq2.2.3.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.6.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.3.0.0.0.0.0.0.0
                                      ccp.0.2.3.0.0.0.0.0.0.0 <- case idris_int_eq2.2.3.0.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.3.0.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.2.3.0.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace4.41.6.arity.1.3.0.0.0.0.0.0.0 <- pure 10
                                          idris_int_eq2.3.3.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.6.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.3.0.0.0.0.0.0.0
                                          ccp.0.3.3.0.0.0.0.0.0.0 <- case idris_int_eq2.3.3.0.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.3.0.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.3.3.0.0.0.0.0.0.0 of
                                            0 ->
                                              idr_Prelude.Chars.isSpace5.41.7.arity.1.3.0.0.0.0.0.0.0 <- pure 12
                                              idris_int_eq2.4.3.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.6.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.3.0.0.0.0.0.0.0
                                              ccp.0.4.3.0.0.0.0.0.0.0 <- case idris_int_eq2.4.3.0.0.0.0.0.0.0 of
                                                #False ->
                                                  pure ccp.0.0.3.0.0.0.0.0.0.0
                                                #True ->
                                                  pure 1
                                              case ccp.0.4.3.0.0.0.0.0.0.0 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace6.41.8.arity.1.3.0.0.0.0.0.0.0 <- pure 11
                                                  idris_int_eq2.5.3.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.6.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.3.0.0.0.0.0.0.0
                                                  ccp.0.5.3.0.0.0.0.0.0.0 <- case idris_int_eq2.5.3.0.0.0.0.0.0.0 of
                                                    #False ->
                                                      pure ccp.0.0.3.0.0.0.0.0.0.0
                                                    #True ->
                                                      pure 1
                                                  case ccp.0.5.3.0.0.0.0.0.0.0 of
                                                    0 ->
                                                      idr_Prelude.Chars.isSpace7.41.9.arity.1.3.0.0.0.0.0.0.0 <- pure 160
                                                      idris_int_eq2.6.3.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.6.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.3.0.0.0.0.0.0.0
                                                      ccp.0.6.3.0.0.0.0.0.0.0 <- case idris_int_eq2.6.3.0.0.0.0.0.0.0 of
                                                        #False ->
                                                          pure ccp.0.0.3.0.0.0.0.0.0.0
                                                        #True ->
                                                          pure 1
                                                      case ccp.0.6.3.0.0.0.0.0.0.0 of
                                                        0 ->
                                                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                                        #default ->
                                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                                    #default ->
                                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                                #default ->
                                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                              ccp.0.0.18.0.0.0.0.0 <- case idr_Prelude.Strings.trim8_val_644.0.0.0.0.0.0.0.0 of
                                (Cidr_Prelude.Bool.False) ->
                                  idris_str_head2.7.0.0.0.0.0.0.0 <- pure idris_str_head2.6.0.0.0.0.0.0.0
                                  idris_str_tail2.27.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.17.0.0.0.0.0
                                  idris_str_cons3.3.0.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.7.0.0.0.0.0.0.0 idris_str_tail2.27.0.0.0.0.0.0.0
                                  pure idris_str_cons3.3.0.0.0.0.0.0.0
                                (Cidr_Prelude.Bool.True) ->
                                  idris_str_tail2.31.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.17.0.0.0.0.0
                                  idris_str_eq3.4.0.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.31.0.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                                  ccp.2.4.0.0.0.0.0.0.0 <- case idris_str_eq3.4.0.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.2.1.0
                                    #True ->
                                      pure 1
                                  idr_Prelude.Strings.trim10_val_675.0.0.0.0.0.0.0.0 <- case ccp.2.4.0.0.0.0.0.0.0 of
                                    0 ->
                                      idris_str_tail2.35.0.0.0.0.0.0.0.0.0 <- pure idris_str_tail2.31.0.0.0.0.0.0.0
                                      idris_str_head2.8.0.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.35.0.0.0.0.0.0.0.0.0
                                      idr_Prelude.Strings.trim11_val_697.0.0.0.0.0.0.0.0.0.0 <- pure (CGrInt idris_str_head2.8.0.0.0.0.0.0.0.0.0)
                                      idr_Prelude.Strings.trim11_708.0.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim11_val_697.0.0.0.0.0.0.0.0.0.0
                                      idris_str_tail2.39.0.0.0.0.0.0.0.0.0 <- pure idris_str_tail2.31.0.0.0.0.0.0.0
                                      idris_str_tail2.40.0.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.39.0.0.0.0.0.0.0.0.0
                                      idr_Prelude.Strings.trim12_val.0.0.0.0.0.0.0.0.0.0 <- pure (CGrString idris_str_tail2.40.0.0.0.0.0.0.0.0.0)
                                      idr_Prelude.Strings.trim12_718.0.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim12_val.0.0.0.0.0.0.0.0.0.0
                                      pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim11_708.0.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim12_718.0.0.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim11_708.0.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim12_718.0.0.0.0.0.0.0.0.0.0)
                                    #default ->
                                      pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
                                  idr_Prelude.Strings.trim10_719.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim10_val_675.0.0.0.0.0.0.0.0
                                  unboxed.CGrString.77.0.0.0.0.0.0.0.0 <- idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim10_719.0.0.0.0.0.0.0.0
                                  pure unboxed.CGrString.77.0.0.0.0.0.0.0.0
                              pure (CGrString ccp.0.0.18.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString ccp.0.0.18.0.0.0.0.0)
                            #default ->
                              pure idr_Prelude.Strings.trim2_val.0
                    #default ->
                      pure idr_Prelude.Strings.trim2_val.0
            #default ->
              pure idr_Prelude.Strings.trim2_val.0
  (CGrString idr_Prelude.Strings.trim1_720.41.69.arity.1.0) <- pure idr_Prelude.Strings.trim1_val_524.0
  idris_str_rev2.19 <- _prim_string_reverse idr_Prelude.Strings.trim1_720.41.69.arity.1.0
  idris_str_eq3.5 <- _prim_string_eq idris_str_rev2.19 idr_Prelude.Strings.trim2.41.37.arity.1.0
  ccp.2.5 <- case idris_str_eq3.5 of
    #False ->
      pure 0
    #True ->
      pure 1
  unboxed.CGrString.4.0 <- case ccp.2.5 of
    0 ->
      ccp.2.6.0.0 <- case idris_str_eq3.0 of
        #False ->
          pure ccp.2.5
        #True ->
          pure 1
      idr_Prelude.Strings.trim2_val_735.0.0.0 <- case ccp.2.6.0.0 of
        0 ->
          idris_str_head2.9.0.0.0.0 <- _prim_string_head idris_str_rev2.0
          idr_Prelude.Chars.isSpace1.41.3.arity.1.4.0.0.0.0 <- pure 32
          idris_int_eq2.0.4.0.0.0.0 <- _prim_int_eq idris_str_head2.9.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.4.0.0.0.0
          ccp.0.0.4.0.0.0.0 <- case idris_int_eq2.0.4.0.0.0.0 of
            #False ->
              pure ccp.2.5
            #True ->
              pure 1
          idr_Prelude.Strings.trim3_val_751.0.0.0.0.0 <- case ccp.0.0.4.0.0.0.0 of
            0 ->
              idr_Prelude.Chars.isSpace2.41.4.arity.1.4.0.0.0.0 <- pure 9
              idris_int_eq2.1.4.0.0.0.0 <- _prim_int_eq idris_str_head2.9.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.4.0.0.0.0
              ccp.0.1.4.0.0.0.0 <- case idris_int_eq2.1.4.0.0.0.0 of
                #False ->
                  pure ccp.0.0.4.0.0.0.0
                #True ->
                  pure 1
              case ccp.0.1.4.0.0.0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace3.41.5.arity.1.4.0.0.0.0 <- pure 13
                  idris_int_eq2.2.4.0.0.0.0 <- _prim_int_eq idris_str_head2.9.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.4.0.0.0.0
                  ccp.0.2.4.0.0.0.0 <- case idris_int_eq2.2.4.0.0.0.0 of
                    #False ->
                      pure ccp.0.0.4.0.0.0.0
                    #True ->
                      pure 1
                  case ccp.0.2.4.0.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace4.41.6.arity.1.4.0.0.0.0 <- pure 10
                      idris_int_eq2.3.4.0.0.0.0 <- _prim_int_eq idris_str_head2.9.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.4.0.0.0.0
                      ccp.0.3.4.0.0.0.0 <- case idris_int_eq2.3.4.0.0.0.0 of
                        #False ->
                          pure ccp.0.0.4.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.3.4.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace5.41.7.arity.1.4.0.0.0.0 <- pure 12
                          idris_int_eq2.4.4.0.0.0.0 <- _prim_int_eq idris_str_head2.9.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.4.0.0.0.0
                          ccp.0.4.4.0.0.0.0 <- case idris_int_eq2.4.4.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.4.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.4.4.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace6.41.8.arity.1.4.0.0.0.0 <- pure 11
                              idris_int_eq2.5.4.0.0.0.0 <- _prim_int_eq idris_str_head2.9.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.4.0.0.0.0
                              ccp.0.5.4.0.0.0.0 <- case idris_int_eq2.5.4.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.4.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.5.4.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace7.41.9.arity.1.4.0.0.0.0 <- pure 160
                                  idris_int_eq2.6.4.0.0.0.0 <- _prim_int_eq idris_str_head2.9.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.4.0.0.0.0
                                  ccp.0.6.4.0.0.0.0 <- case idris_int_eq2.6.4.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.4.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.6.4.0.0.0.0 of
                                    0 ->
                                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
            #default ->
              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
          case idr_Prelude.Strings.trim3_val_751.0.0.0.0.0 of
            (Cidr_Prelude.Bool.False) ->
              idris_str_tail2.41.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
              idris_str_cons3.4.0.0.0.0 <- _prim_string_cons idris_str_head2.9.0.0.0.0 idris_str_tail2.41.0.0.0.0
              pure (CGrString idris_str_cons3.4.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.4.0.0.0.0)
            (Cidr_Prelude.Bool.True) ->
              idris_str_tail2.42.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
              idris_str_eq3.7.0.0.0.0 <- _prim_string_eq idris_str_tail2.42.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
              ccp.2.7.0.0.0.0 <- case idris_str_eq3.7.0.0.0.0 of
                #False ->
                  pure ccp.2.5
                #True ->
                  pure 1
              case ccp.2.7.0.0.0.0 of
                0 ->
                  idris_str_head2.11.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.42.0.0.0.0
                  idris_int_eq2.0.5.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.11.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.4.0.0.0.0
                  ccp.0.0.5.0.0.0.0.0.0 <- case idris_int_eq2.0.5.0.0.0.0.0.0 of
                    #False ->
                      pure ccp.2.5
                    #True ->
                      pure 1
                  idr_Prelude.Strings.trim5_val_783.0.0.0.0.0.0.0 <- case ccp.0.0.5.0.0.0.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace2.41.4.arity.1.5.0.0.0.0.0.0 <- pure 9
                      idris_int_eq2.1.5.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.11.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.5.0.0.0.0.0.0
                      ccp.0.1.5.0.0.0.0.0.0 <- case idris_int_eq2.1.5.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.0.0.5.0.0.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.1.5.0.0.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace3.41.5.arity.1.5.0.0.0.0.0.0 <- pure 13
                          idris_int_eq2.2.5.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.11.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.5.0.0.0.0.0.0
                          ccp.0.2.5.0.0.0.0.0.0 <- case idris_int_eq2.2.5.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.5.0.0.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.2.5.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace4.41.6.arity.1.5.0.0.0.0.0.0 <- pure 10
                              idris_int_eq2.3.5.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.11.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.5.0.0.0.0.0.0
                              ccp.0.3.5.0.0.0.0.0.0 <- case idris_int_eq2.3.5.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.5.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.3.5.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace5.41.7.arity.1.5.0.0.0.0.0.0 <- pure 12
                                  idris_int_eq2.4.5.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.11.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.5.0.0.0.0.0.0
                                  ccp.0.4.5.0.0.0.0.0.0 <- case idris_int_eq2.4.5.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.5.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.4.5.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace6.41.8.arity.1.5.0.0.0.0.0.0 <- pure 11
                                      idris_int_eq2.5.5.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.11.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.5.0.0.0.0.0.0
                                      ccp.0.5.5.0.0.0.0.0.0 <- case idris_int_eq2.5.5.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.5.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.5.5.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace7.41.9.arity.1.5.0.0.0.0.0.0 <- pure 160
                                          idris_int_eq2.6.5.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.11.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.5.0.0.0.0.0.0
                                          ccp.0.6.5.0.0.0.0.0.0 <- case idris_int_eq2.6.5.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.5.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.6.5.0.0.0.0.0.0 of
                                            0 ->
                                              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                  ccp.1.1.3.0.0.0.0 <- case idr_Prelude.Strings.trim5_val_783.0.0.0.0.0.0.0 of
                    (Cidr_Prelude.Bool.False) ->
                      idris_str_tail2.46.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.42.0.0.0.0
                      idris_str_cons3.5.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.11.0.0.0.0.0.0 idris_str_tail2.46.0.0.0.0.0.0
                      pure idris_str_cons3.5.0.0.0.0.0.0
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_tail2.48.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.42.0.0.0.0
                      idris_str_eq3.8.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.48.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                      ccp.2.8.0.0.0.0.0.0 <- case idris_str_eq3.8.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.2.5
                        #True ->
                          pure 1
                      idr_Prelude.Strings.trim7_val_806.0.0.0.0.0.0.0 <- case ccp.2.8.0.0.0.0.0.0 of
                        0 ->
                          idris_str_head2.13.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.48.0.0.0.0.0.0
                          idr_Prelude.Strings.trim8_val_826.0.0.0.0.0.0.0.0.0 <- pure (CGrInt idris_str_head2.13.0.0.0.0.0.0.0.0)
                          idr_Prelude.Strings.trim8_833.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim8_val_826.0.0.0.0.0.0.0.0.0
                          idris_str_tail2.53.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.48.0.0.0.0.0.0
                          idr_Prelude.Strings.trim9_val_834.0.0.0.0.0.0.0.0.0 <- pure (CGrString idris_str_tail2.53.0.0.0.0.0.0.0.0)
                          idr_Prelude.Strings.trim9_841.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim9_val_834.0.0.0.0.0.0.0.0.0
                          pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim8_833.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim9_841.0.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim8_833.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim9_841.0.0.0.0.0.0.0.0.0)
                        #default ->
                          pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
                      idr_Prelude.Strings.trim7_842.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim7_val_806.0.0.0.0.0.0.0
                      unboxed.CGrString.103.0.0.0.0.0.0.0 <- idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim7_842.0.0.0.0.0.0.0
                      pure unboxed.CGrString.103.0.0.0.0.0.0.0
                  pure (CGrString ccp.1.1.3.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString ccp.1.1.3.0.0.0.0)
                #default ->
                  pure idr_Prelude.Strings.trim2_val.0
        #default ->
          pure idr_Prelude.Strings.trim2_val.0
      (CGrString idr_Prelude.Strings.trim2_843.41.91.arity.1.0.0.0) <- pure idr_Prelude.Strings.trim2_val_735.0.0.0
      idris_str_rev2.31.0.0 <- _prim_string_reverse idr_Prelude.Strings.trim2_843.41.91.arity.1.0.0.0
      idris_str_head2.14.0.0 <- _prim_string_head idris_str_rev2.31.0.0
      idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0 <- pure 32
      idris_int_eq2.0.6.0.0 <- _prim_int_eq idris_str_head2.14.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
      ccp.0.0.6.0.0 <- case idris_int_eq2.0.6.0.0 of
        #False ->
          pure ccp.2.5
        #True ->
          pure 1
      idr_Prelude.Strings.trim2_val_732.0.0.0 <- case ccp.0.0.6.0.0 of
        0 ->
          idr_Prelude.Chars.isSpace2.41.4.arity.1.6.0.0 <- pure 9
          idris_int_eq2.1.6.0.0 <- _prim_int_eq idris_str_head2.14.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.6.0.0
          ccp.0.1.6.0.0 <- case idris_int_eq2.1.6.0.0 of
            #False ->
              pure ccp.0.0.6.0.0
            #True ->
              pure 1
          case ccp.0.1.6.0.0 of
            0 ->
              idr_Prelude.Chars.isSpace3.41.5.arity.1.6.0.0 <- pure 13
              idris_int_eq2.2.6.0.0 <- _prim_int_eq idris_str_head2.14.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.6.0.0
              ccp.0.2.6.0.0 <- case idris_int_eq2.2.6.0.0 of
                #False ->
                  pure ccp.0.0.6.0.0
                #True ->
                  pure 1
              case ccp.0.2.6.0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace4.41.6.arity.1.6.0.0 <- pure 10
                  idris_int_eq2.3.6.0.0 <- _prim_int_eq idris_str_head2.14.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.6.0.0
                  ccp.0.3.6.0.0 <- case idris_int_eq2.3.6.0.0 of
                    #False ->
                      pure ccp.0.0.6.0.0
                    #True ->
                      pure 1
                  case ccp.0.3.6.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.41.7.arity.1.6.0.0 <- pure 12
                      idris_int_eq2.4.6.0.0 <- _prim_int_eq idris_str_head2.14.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.6.0.0
                      ccp.0.4.6.0.0 <- case idris_int_eq2.4.6.0.0 of
                        #False ->
                          pure ccp.0.0.6.0.0
                        #True ->
                          pure 1
                      case ccp.0.4.6.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.41.8.arity.1.6.0.0 <- pure 11
                          idris_int_eq2.5.6.0.0 <- _prim_int_eq idris_str_head2.14.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.6.0.0
                          ccp.0.5.6.0.0 <- case idris_int_eq2.5.6.0.0 of
                            #False ->
                              pure ccp.0.0.6.0.0
                            #True ->
                              pure 1
                          case ccp.0.5.6.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.41.9.arity.1.6.0.0 <- pure 160
                              idris_int_eq2.6.6.0.0 <- _prim_int_eq idris_str_head2.14.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.6.0.0
                              ccp.0.6.6.0.0 <- case idris_int_eq2.6.6.0.0 of
                                #False ->
                                  pure ccp.0.0.6.0.0
                                #True ->
                                  pure 1
                              case ccp.0.6.6.0.0 of
                                0 ->
                                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
            #default ->
              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
        #default ->
          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
      case idr_Prelude.Strings.trim2_val_732.0.0.0 of
        (Cidr_Prelude.Bool.False) ->
          ccp.2.9.0.0 <- case idris_str_eq3.0 of
            #False ->
              pure ccp.2.5
            #True ->
              pure 1
          idr_Prelude.Strings.trim3_val_850.0.0.0 <- case ccp.2.9.0.0 of
            0 ->
              idris_str_head2.15.0.0.0.0 <- _prim_string_head idris_str_rev2.0
              idris_int_eq2.0.7.0.0.0.0 <- _prim_int_eq idris_str_head2.15.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
              ccp.0.0.7.0.0.0.0 <- case idris_int_eq2.0.7.0.0.0.0 of
                #False ->
                  pure ccp.2.5
                #True ->
                  pure 1
              idr_Prelude.Strings.trim4_val_866.0.0.0.0.0 <- case ccp.0.0.7.0.0.0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace2.41.4.arity.1.7.0.0.0.0 <- pure 9
                  idris_int_eq2.1.7.0.0.0.0 <- _prim_int_eq idris_str_head2.15.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.7.0.0.0.0
                  ccp.0.1.7.0.0.0.0 <- case idris_int_eq2.1.7.0.0.0.0 of
                    #False ->
                      pure ccp.0.0.7.0.0.0.0
                    #True ->
                      pure 1
                  case ccp.0.1.7.0.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace3.41.5.arity.1.7.0.0.0.0 <- pure 13
                      idris_int_eq2.2.7.0.0.0.0 <- _prim_int_eq idris_str_head2.15.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.7.0.0.0.0
                      ccp.0.2.7.0.0.0.0 <- case idris_int_eq2.2.7.0.0.0.0 of
                        #False ->
                          pure ccp.0.0.7.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.2.7.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace4.41.6.arity.1.7.0.0.0.0 <- pure 10
                          idris_int_eq2.3.7.0.0.0.0 <- _prim_int_eq idris_str_head2.15.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.7.0.0.0.0
                          ccp.0.3.7.0.0.0.0 <- case idris_int_eq2.3.7.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.7.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.3.7.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace5.41.7.arity.1.7.0.0.0.0 <- pure 12
                              idris_int_eq2.4.7.0.0.0.0 <- _prim_int_eq idris_str_head2.15.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.7.0.0.0.0
                              ccp.0.4.7.0.0.0.0 <- case idris_int_eq2.4.7.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.7.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.4.7.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace6.41.8.arity.1.7.0.0.0.0 <- pure 11
                                  idris_int_eq2.5.7.0.0.0.0 <- _prim_int_eq idris_str_head2.15.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.7.0.0.0.0
                                  ccp.0.5.7.0.0.0.0 <- case idris_int_eq2.5.7.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.7.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.5.7.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace7.41.9.arity.1.7.0.0.0.0 <- pure 160
                                      idris_int_eq2.6.7.0.0.0.0 <- _prim_int_eq idris_str_head2.15.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.7.0.0.0.0
                                      ccp.0.6.7.0.0.0.0 <- case idris_int_eq2.6.7.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.7.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.6.7.0.0.0.0 of
                                        0 ->
                                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
              case idr_Prelude.Strings.trim4_val_866.0.0.0.0.0 of
                (Cidr_Prelude.Bool.False) ->
                  idris_str_tail2.54.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                  idris_str_cons3.6.0.0.0.0 <- _prim_string_cons idris_str_head2.15.0.0.0.0 idris_str_tail2.54.0.0.0.0
                  pure (CGrString idris_str_cons3.6.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.6.0.0.0.0)
                (Cidr_Prelude.Bool.True) ->
                  idris_str_tail2.55.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                  idris_str_eq3.10.0.0.0.0 <- _prim_string_eq idris_str_tail2.55.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                  ccp.2.10.0.0.0.0 <- case idris_str_eq3.10.0.0.0.0 of
                    #False ->
                      pure ccp.2.5
                    #True ->
                      pure 1
                  case ccp.2.10.0.0.0.0 of
                    0 ->
                      idris_str_head2.17.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.55.0.0.0.0
                      idris_int_eq2.0.8.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.17.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
                      ccp.0.0.8.0.0.0.0.0.0 <- case idris_int_eq2.0.8.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.2.5
                        #True ->
                          pure 1
                      idr_Prelude.Strings.trim6_val_898.0.0.0.0.0.0.0 <- case ccp.0.0.8.0.0.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace2.41.4.arity.1.8.0.0.0.0.0.0 <- pure 9
                          idris_int_eq2.1.8.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.17.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.8.0.0.0.0.0.0
                          ccp.0.1.8.0.0.0.0.0.0 <- case idris_int_eq2.1.8.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.8.0.0.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.1.8.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace3.41.5.arity.1.8.0.0.0.0.0.0 <- pure 13
                              idris_int_eq2.2.8.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.17.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.8.0.0.0.0.0.0
                              ccp.0.2.8.0.0.0.0.0.0 <- case idris_int_eq2.2.8.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.8.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.2.8.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.41.6.arity.1.8.0.0.0.0.0.0 <- pure 10
                                  idris_int_eq2.3.8.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.17.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.8.0.0.0.0.0.0
                                  ccp.0.3.8.0.0.0.0.0.0 <- case idris_int_eq2.3.8.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.8.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.3.8.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace5.41.7.arity.1.8.0.0.0.0.0.0 <- pure 12
                                      idris_int_eq2.4.8.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.17.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.8.0.0.0.0.0.0
                                      ccp.0.4.8.0.0.0.0.0.0 <- case idris_int_eq2.4.8.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.8.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.4.8.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace6.41.8.arity.1.8.0.0.0.0.0.0 <- pure 11
                                          idris_int_eq2.5.8.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.17.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.8.0.0.0.0.0.0
                                          ccp.0.5.8.0.0.0.0.0.0 <- case idris_int_eq2.5.8.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.8.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.5.8.0.0.0.0.0.0 of
                                            0 ->
                                              idr_Prelude.Chars.isSpace7.41.9.arity.1.8.0.0.0.0.0.0 <- pure 160
                                              idris_int_eq2.6.8.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.17.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.8.0.0.0.0.0.0
                                              ccp.0.6.8.0.0.0.0.0.0 <- case idris_int_eq2.6.8.0.0.0.0.0.0 of
                                                #False ->
                                                  pure ccp.0.0.8.0.0.0.0.0.0
                                                #True ->
                                                  pure 1
                                              case ccp.0.6.8.0.0.0.0.0.0 of
                                                0 ->
                                                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                                #default ->
                                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                      ccp.2.34.0.0.0.0.0 <- case idr_Prelude.Strings.trim6_val_898.0.0.0.0.0.0.0 of
                        (Cidr_Prelude.Bool.False) ->
                          idris_str_tail2.59.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.55.0.0.0.0
                          idris_str_cons3.7.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.17.0.0.0.0.0.0 idris_str_tail2.59.0.0.0.0.0.0
                          pure idris_str_cons3.7.0.0.0.0.0.0
                        (Cidr_Prelude.Bool.True) ->
                          idris_str_tail2.61.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.55.0.0.0.0
                          idris_str_eq3.11.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.61.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                          ccp.2.11.0.0.0.0.0.0 <- case idris_str_eq3.11.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.2.5
                            #True ->
                              pure 1
                          idr_Prelude.Strings.trim8_val_921.0.0.0.0.0.0.0 <- case ccp.2.11.0.0.0.0.0.0 of
                            0 ->
                              idris_str_head2.19.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.61.0.0.0.0.0.0
                              idr_Prelude.Strings.trim9_val_941.0.0.0.0.0.0.0.0.0 <- pure (CGrInt idris_str_head2.19.0.0.0.0.0.0.0.0)
                              idr_Prelude.Strings.trim9_948.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim9_val_941.0.0.0.0.0.0.0.0.0
                              idris_str_tail2.66.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.61.0.0.0.0.0.0
                              idr_Prelude.Strings.trim10_val_949.0.0.0.0.0.0.0.0.0 <- pure (CGrString idris_str_tail2.66.0.0.0.0.0.0.0.0)
                              idr_Prelude.Strings.trim10_956.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim10_val_949.0.0.0.0.0.0.0.0.0
                              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim9_948.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim10_956.0.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim9_948.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim10_956.0.0.0.0.0.0.0.0.0)
                            #default ->
                              pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
                          idr_Prelude.Strings.trim8_957.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim8_val_921.0.0.0.0.0.0.0
                          unboxed.CGrString.129.0.0.0.0.0.0.0 <- idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim8_957.0.0.0.0.0.0.0
                          pure unboxed.CGrString.129.0.0.0.0.0.0.0
                      pure (CGrString ccp.2.34.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString ccp.2.34.0.0.0.0.0)
                    #default ->
                      pure idr_Prelude.Strings.trim2_val.0
            #default ->
              pure idr_Prelude.Strings.trim2_val.0
          (CGrString idr_Prelude.Strings.trim3_958.41.111.arity.1.0.0.0) <- pure idr_Prelude.Strings.trim3_val_850.0.0.0
          idris_str_rev2.43.0.0 <- _prim_string_reverse idr_Prelude.Strings.trim3_958.41.111.arity.1.0.0.0
          idris_str_head2.20.0.0 <- _prim_string_head idris_str_rev2.43.0.0
          ccp.2.12.0.0 <- case idris_str_eq3.0 of
            #False ->
              pure ccp.2.5
            #True ->
              pure 1
          idr_Prelude.Strings.trim4_val_963.0.0.0 <- case ccp.2.12.0.0 of
            0 ->
              idris_str_head2.21.0.0.0.0 <- _prim_string_head idris_str_rev2.0
              idris_int_eq2.0.9.0.0.0.0 <- _prim_int_eq idris_str_head2.21.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
              ccp.0.0.9.0.0.0.0 <- case idris_int_eq2.0.9.0.0.0.0 of
                #False ->
                  pure ccp.2.5
                #True ->
                  pure 1
              idr_Prelude.Strings.trim5_val_979.0.0.0.0.0 <- case ccp.0.0.9.0.0.0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace2.41.4.arity.1.9.0.0.0.0 <- pure 9
                  idris_int_eq2.1.9.0.0.0.0 <- _prim_int_eq idris_str_head2.21.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.9.0.0.0.0
                  ccp.0.1.9.0.0.0.0 <- case idris_int_eq2.1.9.0.0.0.0 of
                    #False ->
                      pure ccp.0.0.9.0.0.0.0
                    #True ->
                      pure 1
                  case ccp.0.1.9.0.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace3.41.5.arity.1.9.0.0.0.0 <- pure 13
                      idris_int_eq2.2.9.0.0.0.0 <- _prim_int_eq idris_str_head2.21.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.9.0.0.0.0
                      ccp.0.2.9.0.0.0.0 <- case idris_int_eq2.2.9.0.0.0.0 of
                        #False ->
                          pure ccp.0.0.9.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.2.9.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace4.41.6.arity.1.9.0.0.0.0 <- pure 10
                          idris_int_eq2.3.9.0.0.0.0 <- _prim_int_eq idris_str_head2.21.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.9.0.0.0.0
                          ccp.0.3.9.0.0.0.0 <- case idris_int_eq2.3.9.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.9.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.3.9.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace5.41.7.arity.1.9.0.0.0.0 <- pure 12
                              idris_int_eq2.4.9.0.0.0.0 <- _prim_int_eq idris_str_head2.21.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.9.0.0.0.0
                              ccp.0.4.9.0.0.0.0 <- case idris_int_eq2.4.9.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.9.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.4.9.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace6.41.8.arity.1.9.0.0.0.0 <- pure 11
                                  idris_int_eq2.5.9.0.0.0.0 <- _prim_int_eq idris_str_head2.21.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.9.0.0.0.0
                                  ccp.0.5.9.0.0.0.0 <- case idris_int_eq2.5.9.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.9.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.5.9.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace7.41.9.arity.1.9.0.0.0.0 <- pure 160
                                      idris_int_eq2.6.9.0.0.0.0 <- _prim_int_eq idris_str_head2.21.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.9.0.0.0.0
                                      ccp.0.6.9.0.0.0.0 <- case idris_int_eq2.6.9.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.9.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.6.9.0.0.0.0 of
                                        0 ->
                                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
              case idr_Prelude.Strings.trim5_val_979.0.0.0.0.0 of
                (Cidr_Prelude.Bool.False) ->
                  idris_str_tail2.67.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                  idris_str_cons3.8.0.0.0.0 <- _prim_string_cons idris_str_head2.21.0.0.0.0 idris_str_tail2.67.0.0.0.0
                  pure (CGrString idris_str_cons3.8.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.8.0.0.0.0)
                (Cidr_Prelude.Bool.True) ->
                  idris_str_tail2.68.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                  idris_str_eq3.13.0.0.0.0 <- _prim_string_eq idris_str_tail2.68.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                  ccp.2.13.0.0.0.0 <- case idris_str_eq3.13.0.0.0.0 of
                    #False ->
                      pure ccp.2.5
                    #True ->
                      pure 1
                  case ccp.2.13.0.0.0.0 of
                    0 ->
                      idris_str_head2.23.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.68.0.0.0.0
                      idris_int_eq2.0.10.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.23.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
                      ccp.0.0.10.0.0.0.0.0.0 <- case idris_int_eq2.0.10.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.2.5
                        #True ->
                          pure 1
                      idr_Prelude.Strings.trim7_val_1011.0.0.0.0.0.0.0 <- case ccp.0.0.10.0.0.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace2.41.4.arity.1.10.0.0.0.0.0.0 <- pure 9
                          idris_int_eq2.1.10.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.23.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.10.0.0.0.0.0.0
                          ccp.0.1.10.0.0.0.0.0.0 <- case idris_int_eq2.1.10.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.10.0.0.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.1.10.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace3.41.5.arity.1.10.0.0.0.0.0.0 <- pure 13
                              idris_int_eq2.2.10.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.23.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.10.0.0.0.0.0.0
                              ccp.0.2.10.0.0.0.0.0.0 <- case idris_int_eq2.2.10.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.10.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.2.10.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.41.6.arity.1.10.0.0.0.0.0.0 <- pure 10
                                  idris_int_eq2.3.10.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.23.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.10.0.0.0.0.0.0
                                  ccp.0.3.10.0.0.0.0.0.0 <- case idris_int_eq2.3.10.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.10.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.3.10.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace5.41.7.arity.1.10.0.0.0.0.0.0 <- pure 12
                                      idris_int_eq2.4.10.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.23.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.10.0.0.0.0.0.0
                                      ccp.0.4.10.0.0.0.0.0.0 <- case idris_int_eq2.4.10.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.10.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.4.10.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace6.41.8.arity.1.10.0.0.0.0.0.0 <- pure 11
                                          idris_int_eq2.5.10.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.23.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.10.0.0.0.0.0.0
                                          ccp.0.5.10.0.0.0.0.0.0 <- case idris_int_eq2.5.10.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.10.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.5.10.0.0.0.0.0.0 of
                                            0 ->
                                              idr_Prelude.Chars.isSpace7.41.9.arity.1.10.0.0.0.0.0.0 <- pure 160
                                              idris_int_eq2.6.10.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.23.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.10.0.0.0.0.0.0
                                              ccp.0.6.10.0.0.0.0.0.0 <- case idris_int_eq2.6.10.0.0.0.0.0.0 of
                                                #False ->
                                                  pure ccp.0.0.10.0.0.0.0.0.0
                                                #True ->
                                                  pure 1
                                              case ccp.0.6.10.0.0.0.0.0.0 of
                                                0 ->
                                                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                                #default ->
                                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                      ccp.6.0.0.0.0.0.0 <- case idr_Prelude.Strings.trim7_val_1011.0.0.0.0.0.0.0 of
                        (Cidr_Prelude.Bool.False) ->
                          idris_str_tail2.72.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.68.0.0.0.0
                          idris_str_cons3.9.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.23.0.0.0.0.0.0 idris_str_tail2.72.0.0.0.0.0.0
                          pure idris_str_cons3.9.0.0.0.0.0.0
                        (Cidr_Prelude.Bool.True) ->
                          idris_str_tail2.74.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.68.0.0.0.0
                          idris_str_eq3.14.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.74.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                          ccp.2.14.0.0.0.0.0.0 <- case idris_str_eq3.14.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.2.5
                            #True ->
                              pure 1
                          idr_Prelude.Strings.trim9_val_1034.0.0.0.0.0.0.0 <- case ccp.2.14.0.0.0.0.0.0 of
                            0 ->
                              idris_str_head2.25.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.74.0.0.0.0.0.0
                              idr_Prelude.Strings.trim10_val_1054.0.0.0.0.0.0.0.0.0 <- pure (CGrInt idris_str_head2.25.0.0.0.0.0.0.0.0)
                              idr_Prelude.Strings.trim10_1061.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim10_val_1054.0.0.0.0.0.0.0.0.0
                              idris_str_tail2.79.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.74.0.0.0.0.0.0
                              idr_Prelude.Strings.trim11_val_1062.0.0.0.0.0.0.0.0.0 <- pure (CGrString idris_str_tail2.79.0.0.0.0.0.0.0.0)
                              idr_Prelude.Strings.trim11_1069.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim11_val_1062.0.0.0.0.0.0.0.0.0
                              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim10_1061.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim11_1069.0.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim10_1061.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim11_1069.0.0.0.0.0.0.0.0.0)
                            #default ->
                              pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
                          idr_Prelude.Strings.trim9_1070.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim9_val_1034.0.0.0.0.0.0.0
                          unboxed.CGrString.155.0.0.0.0.0.0.0 <- idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim9_1070.0.0.0.0.0.0.0
                          pure unboxed.CGrString.155.0.0.0.0.0.0.0
                      pure (CGrString ccp.6.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString ccp.6.0.0.0.0.0.0)
                    #default ->
                      pure idr_Prelude.Strings.trim2_val.0
            #default ->
              pure idr_Prelude.Strings.trim2_val.0
          (CGrString idr_Prelude.Strings.trim4_1071.41.131.arity.1.0.0.0) <- pure idr_Prelude.Strings.trim4_val_963.0.0.0
          idris_str_rev2.55.0.0 <- _prim_string_reverse idr_Prelude.Strings.trim4_1071.41.131.arity.1.0.0.0
          idris_str_tail2.80.0.0 <- _prim_string_tail idris_str_rev2.55.0.0
          idris_str_cons3.10.0.0 <- _prim_string_cons idris_str_head2.20.0.0 idris_str_tail2.80.0.0
          pure idris_str_cons3.10.0.0
        (Cidr_Prelude.Bool.True) ->
          ccp.2.15.0.0 <- case idris_str_eq3.0 of
            #False ->
              pure ccp.2.5
            #True ->
              pure 1
          idr_Prelude.Strings.trim4_val_1082.0.0.0 <- case ccp.2.15.0.0 of
            0 ->
              idris_str_head2.26.0.0.0.0 <- _prim_string_head idris_str_rev2.0
              idris_int_eq2.0.11.0.0.0.0 <- _prim_int_eq idris_str_head2.26.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
              ccp.0.0.11.0.0.0.0 <- case idris_int_eq2.0.11.0.0.0.0 of
                #False ->
                  pure ccp.2.5
                #True ->
                  pure 1
              idr_Prelude.Strings.trim5_val_1098.0.0.0.0.0 <- case ccp.0.0.11.0.0.0.0 of
                0 ->
                  idr_Prelude.Chars.isSpace2.41.4.arity.1.11.0.0.0.0 <- pure 9
                  idris_int_eq2.1.11.0.0.0.0 <- _prim_int_eq idris_str_head2.26.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.11.0.0.0.0
                  ccp.0.1.11.0.0.0.0 <- case idris_int_eq2.1.11.0.0.0.0 of
                    #False ->
                      pure ccp.0.0.11.0.0.0.0
                    #True ->
                      pure 1
                  case ccp.0.1.11.0.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace3.41.5.arity.1.11.0.0.0.0 <- pure 13
                      idris_int_eq2.2.11.0.0.0.0 <- _prim_int_eq idris_str_head2.26.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.11.0.0.0.0
                      ccp.0.2.11.0.0.0.0 <- case idris_int_eq2.2.11.0.0.0.0 of
                        #False ->
                          pure ccp.0.0.11.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.2.11.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace4.41.6.arity.1.11.0.0.0.0 <- pure 10
                          idris_int_eq2.3.11.0.0.0.0 <- _prim_int_eq idris_str_head2.26.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.11.0.0.0.0
                          ccp.0.3.11.0.0.0.0 <- case idris_int_eq2.3.11.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.11.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.3.11.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace5.41.7.arity.1.11.0.0.0.0 <- pure 12
                              idris_int_eq2.4.11.0.0.0.0 <- _prim_int_eq idris_str_head2.26.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.11.0.0.0.0
                              ccp.0.4.11.0.0.0.0 <- case idris_int_eq2.4.11.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.11.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.4.11.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace6.41.8.arity.1.11.0.0.0.0 <- pure 11
                                  idris_int_eq2.5.11.0.0.0.0 <- _prim_int_eq idris_str_head2.26.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.11.0.0.0.0
                                  ccp.0.5.11.0.0.0.0 <- case idris_int_eq2.5.11.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.11.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.5.11.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace7.41.9.arity.1.11.0.0.0.0 <- pure 160
                                      idris_int_eq2.6.11.0.0.0.0 <- _prim_int_eq idris_str_head2.26.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.11.0.0.0.0
                                      ccp.0.6.11.0.0.0.0 <- case idris_int_eq2.6.11.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.11.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.6.11.0.0.0.0 of
                                        0 ->
                                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
              case idr_Prelude.Strings.trim5_val_1098.0.0.0.0.0 of
                (Cidr_Prelude.Bool.False) ->
                  idris_str_tail2.81.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                  idris_str_cons3.11.0.0.0.0 <- _prim_string_cons idris_str_head2.26.0.0.0.0 idris_str_tail2.81.0.0.0.0
                  pure (CGrString idris_str_cons3.11.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.11.0.0.0.0)
                (Cidr_Prelude.Bool.True) ->
                  idris_str_tail2.82.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                  idris_str_eq3.16.0.0.0.0 <- _prim_string_eq idris_str_tail2.82.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                  ccp.2.16.0.0.0.0 <- case idris_str_eq3.16.0.0.0.0 of
                    #False ->
                      pure ccp.2.5
                    #True ->
                      pure 1
                  case ccp.2.16.0.0.0.0 of
                    0 ->
                      idris_str_head2.28.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.82.0.0.0.0
                      idris_int_eq2.0.12.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.28.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
                      ccp.0.0.12.0.0.0.0.0.0 <- case idris_int_eq2.0.12.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.2.5
                        #True ->
                          pure 1
                      idr_Prelude.Strings.trim7_val_1130.0.0.0.0.0.0.0 <- case ccp.0.0.12.0.0.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace2.41.4.arity.1.12.0.0.0.0.0.0 <- pure 9
                          idris_int_eq2.1.12.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.28.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.12.0.0.0.0.0.0
                          ccp.0.1.12.0.0.0.0.0.0 <- case idris_int_eq2.1.12.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.12.0.0.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.1.12.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace3.41.5.arity.1.12.0.0.0.0.0.0 <- pure 13
                              idris_int_eq2.2.12.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.28.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.12.0.0.0.0.0.0
                              ccp.0.2.12.0.0.0.0.0.0 <- case idris_int_eq2.2.12.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.12.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.2.12.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace4.41.6.arity.1.12.0.0.0.0.0.0 <- pure 10
                                  idris_int_eq2.3.12.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.28.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.12.0.0.0.0.0.0
                                  ccp.0.3.12.0.0.0.0.0.0 <- case idris_int_eq2.3.12.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.12.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.3.12.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace5.41.7.arity.1.12.0.0.0.0.0.0 <- pure 12
                                      idris_int_eq2.4.12.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.28.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.12.0.0.0.0.0.0
                                      ccp.0.4.12.0.0.0.0.0.0 <- case idris_int_eq2.4.12.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.12.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.4.12.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace6.41.8.arity.1.12.0.0.0.0.0.0 <- pure 11
                                          idris_int_eq2.5.12.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.28.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.12.0.0.0.0.0.0
                                          ccp.0.5.12.0.0.0.0.0.0 <- case idris_int_eq2.5.12.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.12.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.5.12.0.0.0.0.0.0 of
                                            0 ->
                                              idr_Prelude.Chars.isSpace7.41.9.arity.1.12.0.0.0.0.0.0 <- pure 160
                                              idris_int_eq2.6.12.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.28.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.12.0.0.0.0.0.0
                                              ccp.0.6.12.0.0.0.0.0.0 <- case idris_int_eq2.6.12.0.0.0.0.0.0 of
                                                #False ->
                                                  pure ccp.0.0.12.0.0.0.0.0.0
                                                #True ->
                                                  pure 1
                                              case ccp.0.6.12.0.0.0.0.0.0 of
                                                0 ->
                                                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                                #default ->
                                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                      ccp.7.0.0.0.0.0.0 <- case idr_Prelude.Strings.trim7_val_1130.0.0.0.0.0.0.0 of
                        (Cidr_Prelude.Bool.False) ->
                          idris_str_tail2.86.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.82.0.0.0.0
                          idris_str_cons3.12.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.28.0.0.0.0.0.0 idris_str_tail2.86.0.0.0.0.0.0
                          pure idris_str_cons3.12.0.0.0.0.0.0
                        (Cidr_Prelude.Bool.True) ->
                          idris_str_tail2.88.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.82.0.0.0.0
                          idris_str_eq3.17.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.88.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                          ccp.2.17.0.0.0.0.0.0 <- case idris_str_eq3.17.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.2.5
                            #True ->
                              pure 1
                          idr_Prelude.Strings.trim9_val_1153.0.0.0.0.0.0.0 <- case ccp.2.17.0.0.0.0.0.0 of
                            0 ->
                              idris_str_head2.30.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.88.0.0.0.0.0.0
                              idr_Prelude.Strings.trim10_val_1173.0.0.0.0.0.0.0.0.0 <- pure (CGrInt idris_str_head2.30.0.0.0.0.0.0.0.0)
                              idr_Prelude.Strings.trim10_1180.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim10_val_1173.0.0.0.0.0.0.0.0.0
                              idris_str_tail2.93.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.88.0.0.0.0.0.0
                              idr_Prelude.Strings.trim11_val_1181.0.0.0.0.0.0.0.0.0 <- pure (CGrString idris_str_tail2.93.0.0.0.0.0.0.0.0)
                              idr_Prelude.Strings.trim11_1188.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim11_val_1181.0.0.0.0.0.0.0.0.0
                              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim10_1180.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim11_1188.0.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim10_1180.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim11_1188.0.0.0.0.0.0.0.0.0)
                            #default ->
                              pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
                          idr_Prelude.Strings.trim9_1189.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim9_val_1153.0.0.0.0.0.0.0
                          unboxed.CGrString.182.0.0.0.0.0.0.0 <- idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim9_1189.0.0.0.0.0.0.0
                          pure unboxed.CGrString.182.0.0.0.0.0.0.0
                      pure (CGrString ccp.7.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString ccp.7.0.0.0.0.0.0)
                    #default ->
                      pure idr_Prelude.Strings.trim2_val.0
            #default ->
              pure idr_Prelude.Strings.trim2_val.0
          (CGrString idr_Prelude.Strings.trim4_1190.41.152.arity.1.0.0.0) <- pure idr_Prelude.Strings.trim4_val_1082.0.0.0
          idris_str_rev2.67.0.0 <- _prim_string_reverse idr_Prelude.Strings.trim4_1190.41.152.arity.1.0.0.0
          idris_str_tail2.94.0.0 <- _prim_string_tail idris_str_rev2.67.0.0
          idris_str_eq3.18.0.0 <- _prim_string_eq idris_str_tail2.94.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
          ccp.2.18.0.0 <- case idris_str_eq3.18.0.0 of
            #False ->
              pure ccp.2.5
            #True ->
              pure 1
          idr_Prelude.Strings.trim4_val_1076.0.0.0 <- case ccp.2.18.0.0 of
            0 ->
              ccp.2.19.0.0.0.0 <- case idris_str_eq3.0 of
                #False ->
                  pure ccp.2.5
                #True ->
                  pure 1
              idr_Prelude.Strings.trim5_val_1206.0.0.0.0.0 <- case ccp.2.19.0.0.0.0 of
                0 ->
                  idris_str_head2.31.0.0.0.0.0.0 <- _prim_string_head idris_str_rev2.0
                  idris_int_eq2.0.13.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.31.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
                  ccp.0.0.13.0.0.0.0.0.0 <- case idris_int_eq2.0.13.0.0.0.0.0.0 of
                    #False ->
                      pure ccp.2.5
                    #True ->
                      pure 1
                  idr_Prelude.Strings.trim6_val_1222.0.0.0.0.0.0.0 <- case ccp.0.0.13.0.0.0.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace2.41.4.arity.1.13.0.0.0.0.0.0 <- pure 9
                      idris_int_eq2.1.13.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.31.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.13.0.0.0.0.0.0
                      ccp.0.1.13.0.0.0.0.0.0 <- case idris_int_eq2.1.13.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.0.0.13.0.0.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.1.13.0.0.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace3.41.5.arity.1.13.0.0.0.0.0.0 <- pure 13
                          idris_int_eq2.2.13.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.31.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.13.0.0.0.0.0.0
                          ccp.0.2.13.0.0.0.0.0.0 <- case idris_int_eq2.2.13.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.13.0.0.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.2.13.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace4.41.6.arity.1.13.0.0.0.0.0.0 <- pure 10
                              idris_int_eq2.3.13.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.31.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.13.0.0.0.0.0.0
                              ccp.0.3.13.0.0.0.0.0.0 <- case idris_int_eq2.3.13.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.13.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.3.13.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace5.41.7.arity.1.13.0.0.0.0.0.0 <- pure 12
                                  idris_int_eq2.4.13.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.31.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.13.0.0.0.0.0.0
                                  ccp.0.4.13.0.0.0.0.0.0 <- case idris_int_eq2.4.13.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.13.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.4.13.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace6.41.8.arity.1.13.0.0.0.0.0.0 <- pure 11
                                      idris_int_eq2.5.13.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.31.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.13.0.0.0.0.0.0
                                      ccp.0.5.13.0.0.0.0.0.0 <- case idris_int_eq2.5.13.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.13.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.5.13.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace7.41.9.arity.1.13.0.0.0.0.0.0 <- pure 160
                                          idris_int_eq2.6.13.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.31.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.13.0.0.0.0.0.0
                                          ccp.0.6.13.0.0.0.0.0.0 <- case idris_int_eq2.6.13.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.13.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.6.13.0.0.0.0.0.0 of
                                            0 ->
                                              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                  case idr_Prelude.Strings.trim6_val_1222.0.0.0.0.0.0.0 of
                    (Cidr_Prelude.Bool.False) ->
                      idris_str_tail2.95.0.0.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                      idris_str_cons3.13.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.31.0.0.0.0.0.0 idris_str_tail2.95.0.0.0.0.0.0
                      pure (CGrString idris_str_cons3.13.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.13.0.0.0.0.0.0)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_tail2.96.0.0.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                      idris_str_eq3.20.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.96.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                      ccp.2.20.0.0.0.0.0.0 <- case idris_str_eq3.20.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.2.5
                        #True ->
                          pure 1
                      case ccp.2.20.0.0.0.0.0.0 of
                        0 ->
                          idris_str_head2.33.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.96.0.0.0.0.0.0
                          idris_int_eq2.0.14.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.33.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
                          ccp.0.0.14.0.0.0.0.0.0.0.0 <- case idris_int_eq2.0.14.0.0.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.2.5
                            #True ->
                              pure 1
                          idr_Prelude.Strings.trim8_val_1254.0.0.0.0.0.0.0.0.0 <- case ccp.0.0.14.0.0.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace2.41.4.arity.1.14.0.0.0.0.0.0.0.0 <- pure 9
                              idris_int_eq2.1.14.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.33.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.14.0.0.0.0.0.0.0.0
                              ccp.0.1.14.0.0.0.0.0.0.0.0 <- case idris_int_eq2.1.14.0.0.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.14.0.0.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.1.14.0.0.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace3.41.5.arity.1.14.0.0.0.0.0.0.0.0 <- pure 13
                                  idris_int_eq2.2.14.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.33.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.14.0.0.0.0.0.0.0.0
                                  ccp.0.2.14.0.0.0.0.0.0.0.0 <- case idris_int_eq2.2.14.0.0.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.14.0.0.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.2.14.0.0.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace4.41.6.arity.1.14.0.0.0.0.0.0.0.0 <- pure 10
                                      idris_int_eq2.3.14.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.33.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.14.0.0.0.0.0.0.0.0
                                      ccp.0.3.14.0.0.0.0.0.0.0.0 <- case idris_int_eq2.3.14.0.0.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.14.0.0.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.3.14.0.0.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace5.41.7.arity.1.14.0.0.0.0.0.0.0.0 <- pure 12
                                          idris_int_eq2.4.14.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.33.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.14.0.0.0.0.0.0.0.0
                                          ccp.0.4.14.0.0.0.0.0.0.0.0 <- case idris_int_eq2.4.14.0.0.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.14.0.0.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.4.14.0.0.0.0.0.0.0.0 of
                                            0 ->
                                              idr_Prelude.Chars.isSpace6.41.8.arity.1.14.0.0.0.0.0.0.0.0 <- pure 11
                                              idris_int_eq2.5.14.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.33.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.14.0.0.0.0.0.0.0.0
                                              ccp.0.5.14.0.0.0.0.0.0.0.0 <- case idris_int_eq2.5.14.0.0.0.0.0.0.0.0 of
                                                #False ->
                                                  pure ccp.0.0.14.0.0.0.0.0.0.0.0
                                                #True ->
                                                  pure 1
                                              case ccp.0.5.14.0.0.0.0.0.0.0.0 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace7.41.9.arity.1.14.0.0.0.0.0.0.0.0 <- pure 160
                                                  idris_int_eq2.6.14.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.33.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.14.0.0.0.0.0.0.0.0
                                                  ccp.0.6.14.0.0.0.0.0.0.0.0 <- case idris_int_eq2.6.14.0.0.0.0.0.0.0.0 of
                                                    #False ->
                                                      pure ccp.0.0.14.0.0.0.0.0.0.0.0
                                                    #True ->
                                                      pure 1
                                                  case ccp.0.6.14.0.0.0.0.0.0.0.0 of
                                                    0 ->
                                                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                                    #default ->
                                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                                #default ->
                                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                          ccp.8.0.0.0.0.0.0.0.0 <- case idr_Prelude.Strings.trim8_val_1254.0.0.0.0.0.0.0.0.0 of
                            (Cidr_Prelude.Bool.False) ->
                              idris_str_tail2.100.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.96.0.0.0.0.0.0
                              idris_str_cons3.14.0.0.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.33.0.0.0.0.0.0.0.0 idris_str_tail2.100.0.0.0.0.0.0.0.0
                              pure idris_str_cons3.14.0.0.0.0.0.0.0.0
                            (Cidr_Prelude.Bool.True) ->
                              idris_str_tail2.102.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.96.0.0.0.0.0.0
                              idris_str_eq3.21.0.0.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.102.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                              ccp.2.21.0.0.0.0.0.0.0.0 <- case idris_str_eq3.21.0.0.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.2.5
                                #True ->
                                  pure 1
                              idr_Prelude.Strings.trim10_val_1277.0.0.0.0.0.0.0.0.0 <- case ccp.2.21.0.0.0.0.0.0.0.0 of
                                0 ->
                                  idris_str_head2.35.0.0.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.102.0.0.0.0.0.0.0.0
                                  idr_Prelude.Strings.trim11_val_1297.0.0.0.0.0.0.0.0.0.0.0 <- pure (CGrInt idris_str_head2.35.0.0.0.0.0.0.0.0.0.0)
                                  idr_Prelude.Strings.trim11_1304.0.0.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim11_val_1297.0.0.0.0.0.0.0.0.0.0.0
                                  idris_str_tail2.107.0.0.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.102.0.0.0.0.0.0.0.0
                                  idr_Prelude.Strings.trim12_val_1305.0.0.0.0.0.0.0.0.0.0.0 <- pure (CGrString idris_str_tail2.107.0.0.0.0.0.0.0.0.0.0)
                                  idr_Prelude.Strings.trim12_1312.0.0.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim12_val_1305.0.0.0.0.0.0.0.0.0.0.0
                                  pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim11_1304.0.0.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim12_1312.0.0.0.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim11_1304.0.0.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim12_1312.0.0.0.0.0.0.0.0.0.0.0)
                                #default ->
                                  pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
                              idr_Prelude.Strings.trim10_1313.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim10_val_1277.0.0.0.0.0.0.0.0.0
                              unboxed.CGrString.209.0.0.0.0.0.0.0.0.0 <- idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim10_1313.0.0.0.0.0.0.0.0.0
                              pure unboxed.CGrString.209.0.0.0.0.0.0.0.0.0
                          pure (CGrString ccp.8.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString ccp.8.0.0.0.0.0.0.0.0)
                        #default ->
                          pure idr_Prelude.Strings.trim2_val.0
                #default ->
                  pure idr_Prelude.Strings.trim2_val.0
              (CGrString idr_Prelude.Strings.trim5_1314.41.174.arity.1.0.0.0.0.0) <- pure idr_Prelude.Strings.trim5_val_1206.0.0.0.0.0
              idris_str_rev2.79.0.0.0.0 <- _prim_string_reverse idr_Prelude.Strings.trim5_1314.41.174.arity.1.0.0.0.0.0
              idris_str_tail2.108.0.0.0.0 <- _prim_string_tail idris_str_rev2.79.0.0.0.0
              idris_str_head2.36.0.0.0.0 <- _prim_string_head idris_str_tail2.108.0.0.0.0
              idr_Prelude.Strings.trim5_val_1203.0.0.0.0.0 <- pure (CGrInt idris_str_head2.36.0.0.0.0)
              idr_Prelude.Strings.trim5_1317.0.0.0.0.0 <- store idr_Prelude.Strings.trim5_val_1203.0.0.0.0.0
              ccp.2.22.0.0.0.0 <- case idris_str_eq3.0 of
                #False ->
                  pure ccp.2.5
                #True ->
                  pure 1
              idr_Prelude.Strings.trim6_val_1321.0.0.0.0.0 <- case ccp.2.22.0.0.0.0 of
                0 ->
                  idris_str_head2.37.0.0.0.0.0.0 <- _prim_string_head idris_str_rev2.0
                  idris_int_eq2.0.15.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.37.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
                  ccp.0.0.15.0.0.0.0.0.0 <- case idris_int_eq2.0.15.0.0.0.0.0.0 of
                    #False ->
                      pure ccp.2.5
                    #True ->
                      pure 1
                  idr_Prelude.Strings.trim7_val_1337.0.0.0.0.0.0.0 <- case ccp.0.0.15.0.0.0.0.0.0 of
                    0 ->
                      idr_Prelude.Chars.isSpace2.41.4.arity.1.15.0.0.0.0.0.0 <- pure 9
                      idris_int_eq2.1.15.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.37.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.15.0.0.0.0.0.0
                      ccp.0.1.15.0.0.0.0.0.0 <- case idris_int_eq2.1.15.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.0.0.15.0.0.0.0.0.0
                        #True ->
                          pure 1
                      case ccp.0.1.15.0.0.0.0.0.0 of
                        0 ->
                          idr_Prelude.Chars.isSpace3.41.5.arity.1.15.0.0.0.0.0.0 <- pure 13
                          idris_int_eq2.2.15.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.37.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.15.0.0.0.0.0.0
                          ccp.0.2.15.0.0.0.0.0.0 <- case idris_int_eq2.2.15.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.0.0.15.0.0.0.0.0.0
                            #True ->
                              pure 1
                          case ccp.0.2.15.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace4.41.6.arity.1.15.0.0.0.0.0.0 <- pure 10
                              idris_int_eq2.3.15.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.37.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.15.0.0.0.0.0.0
                              ccp.0.3.15.0.0.0.0.0.0 <- case idris_int_eq2.3.15.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.15.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.3.15.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace5.41.7.arity.1.15.0.0.0.0.0.0 <- pure 12
                                  idris_int_eq2.4.15.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.37.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.15.0.0.0.0.0.0
                                  ccp.0.4.15.0.0.0.0.0.0 <- case idris_int_eq2.4.15.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.15.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.4.15.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace6.41.8.arity.1.15.0.0.0.0.0.0 <- pure 11
                                      idris_int_eq2.5.15.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.37.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.15.0.0.0.0.0.0
                                      ccp.0.5.15.0.0.0.0.0.0 <- case idris_int_eq2.5.15.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.15.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.5.15.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace7.41.9.arity.1.15.0.0.0.0.0.0 <- pure 160
                                          idris_int_eq2.6.15.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.37.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.15.0.0.0.0.0.0
                                          ccp.0.6.15.0.0.0.0.0.0 <- case idris_int_eq2.6.15.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.15.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.6.15.0.0.0.0.0.0 of
                                            0 ->
                                              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                  case idr_Prelude.Strings.trim7_val_1337.0.0.0.0.0.0.0 of
                    (Cidr_Prelude.Bool.False) ->
                      idris_str_tail2.109.0.0.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                      idris_str_cons3.15.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.37.0.0.0.0.0.0 idris_str_tail2.109.0.0.0.0.0.0
                      pure (CGrString idris_str_cons3.15.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString idris_str_cons3.15.0.0.0.0.0.0)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_tail2.110.0.0.0.0.0.0 <- _prim_string_tail idris_str_rev2.0
                      idris_str_eq3.23.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.110.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                      ccp.2.23.0.0.0.0.0.0 <- case idris_str_eq3.23.0.0.0.0.0.0 of
                        #False ->
                          pure ccp.2.5
                        #True ->
                          pure 1
                      case ccp.2.23.0.0.0.0.0.0 of
                        0 ->
                          idris_str_head2.39.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.110.0.0.0.0.0.0
                          idris_int_eq2.0.16.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.39.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace1.41.3.arity.1.6.0.0
                          ccp.0.0.16.0.0.0.0.0.0.0.0 <- case idris_int_eq2.0.16.0.0.0.0.0.0.0.0 of
                            #False ->
                              pure ccp.2.5
                            #True ->
                              pure 1
                          idr_Prelude.Strings.trim9_val_1369.0.0.0.0.0.0.0.0.0 <- case ccp.0.0.16.0.0.0.0.0.0.0.0 of
                            0 ->
                              idr_Prelude.Chars.isSpace2.41.4.arity.1.16.0.0.0.0.0.0.0.0 <- pure 9
                              idris_int_eq2.1.16.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.39.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace2.41.4.arity.1.16.0.0.0.0.0.0.0.0
                              ccp.0.1.16.0.0.0.0.0.0.0.0 <- case idris_int_eq2.1.16.0.0.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.0.0.16.0.0.0.0.0.0.0.0
                                #True ->
                                  pure 1
                              case ccp.0.1.16.0.0.0.0.0.0.0.0 of
                                0 ->
                                  idr_Prelude.Chars.isSpace3.41.5.arity.1.16.0.0.0.0.0.0.0.0 <- pure 13
                                  idris_int_eq2.2.16.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.39.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace3.41.5.arity.1.16.0.0.0.0.0.0.0.0
                                  ccp.0.2.16.0.0.0.0.0.0.0.0 <- case idris_int_eq2.2.16.0.0.0.0.0.0.0.0 of
                                    #False ->
                                      pure ccp.0.0.16.0.0.0.0.0.0.0.0
                                    #True ->
                                      pure 1
                                  case ccp.0.2.16.0.0.0.0.0.0.0.0 of
                                    0 ->
                                      idr_Prelude.Chars.isSpace4.41.6.arity.1.16.0.0.0.0.0.0.0.0 <- pure 10
                                      idris_int_eq2.3.16.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.39.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace4.41.6.arity.1.16.0.0.0.0.0.0.0.0
                                      ccp.0.3.16.0.0.0.0.0.0.0.0 <- case idris_int_eq2.3.16.0.0.0.0.0.0.0.0 of
                                        #False ->
                                          pure ccp.0.0.16.0.0.0.0.0.0.0.0
                                        #True ->
                                          pure 1
                                      case ccp.0.3.16.0.0.0.0.0.0.0.0 of
                                        0 ->
                                          idr_Prelude.Chars.isSpace5.41.7.arity.1.16.0.0.0.0.0.0.0.0 <- pure 12
                                          idris_int_eq2.4.16.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.39.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace5.41.7.arity.1.16.0.0.0.0.0.0.0.0
                                          ccp.0.4.16.0.0.0.0.0.0.0.0 <- case idris_int_eq2.4.16.0.0.0.0.0.0.0.0 of
                                            #False ->
                                              pure ccp.0.0.16.0.0.0.0.0.0.0.0
                                            #True ->
                                              pure 1
                                          case ccp.0.4.16.0.0.0.0.0.0.0.0 of
                                            0 ->
                                              idr_Prelude.Chars.isSpace6.41.8.arity.1.16.0.0.0.0.0.0.0.0 <- pure 11
                                              idris_int_eq2.5.16.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.39.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace6.41.8.arity.1.16.0.0.0.0.0.0.0.0
                                              ccp.0.5.16.0.0.0.0.0.0.0.0 <- case idris_int_eq2.5.16.0.0.0.0.0.0.0.0 of
                                                #False ->
                                                  pure ccp.0.0.16.0.0.0.0.0.0.0.0
                                                #True ->
                                                  pure 1
                                              case ccp.0.5.16.0.0.0.0.0.0.0.0 of
                                                0 ->
                                                  idr_Prelude.Chars.isSpace7.41.9.arity.1.16.0.0.0.0.0.0.0.0 <- pure 160
                                                  idris_int_eq2.6.16.0.0.0.0.0.0.0.0 <- _prim_int_eq idris_str_head2.39.0.0.0.0.0.0.0.0 idr_Prelude.Chars.isSpace7.41.9.arity.1.16.0.0.0.0.0.0.0.0
                                                  ccp.0.6.16.0.0.0.0.0.0.0.0 <- case idris_int_eq2.6.16.0.0.0.0.0.0.0.0 of
                                                    #False ->
                                                      pure ccp.0.0.16.0.0.0.0.0.0.0.0
                                                    #True ->
                                                      pure 1
                                                  case ccp.0.6.16.0.0.0.0.0.0.0.0 of
                                                    0 ->
                                                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                                    #default ->
                                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                                #default ->
                                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                            #default ->
                                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                        #default ->
                                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                    #default ->
                                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                                #default ->
                                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
                          ccp.9.0.0.0.0.0.0.0.0 <- case idr_Prelude.Strings.trim9_val_1369.0.0.0.0.0.0.0.0.0 of
                            (Cidr_Prelude.Bool.False) ->
                              idris_str_tail2.114.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.110.0.0.0.0.0.0
                              idris_str_cons3.16.0.0.0.0.0.0.0.0 <- _prim_string_cons idris_str_head2.39.0.0.0.0.0.0.0.0 idris_str_tail2.114.0.0.0.0.0.0.0.0
                              pure idris_str_cons3.16.0.0.0.0.0.0.0.0
                            (Cidr_Prelude.Bool.True) ->
                              idris_str_tail2.116.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.110.0.0.0.0.0.0
                              idris_str_eq3.24.0.0.0.0.0.0.0.0 <- _prim_string_eq idris_str_tail2.116.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim2.41.37.arity.1.0
                              ccp.2.24.0.0.0.0.0.0.0.0 <- case idris_str_eq3.24.0.0.0.0.0.0.0.0 of
                                #False ->
                                  pure ccp.2.5
                                #True ->
                                  pure 1
                              idr_Prelude.Strings.trim11_val_1392.0.0.0.0.0.0.0.0.0 <- case ccp.2.24.0.0.0.0.0.0.0.0 of
                                0 ->
                                  idris_str_head2.41.0.0.0.0.0.0.0.0.0.0 <- _prim_string_head idris_str_tail2.116.0.0.0.0.0.0.0.0
                                  idr_Prelude.Strings.trim12_val_1412.0.0.0.0.0.0.0.0.0.0.0 <- pure (CGrInt idris_str_head2.41.0.0.0.0.0.0.0.0.0.0)
                                  idr_Prelude.Strings.trim12_1419.0.0.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim12_val_1412.0.0.0.0.0.0.0.0.0.0.0
                                  idris_str_tail2.121.0.0.0.0.0.0.0.0.0.0 <- _prim_string_tail idris_str_tail2.116.0.0.0.0.0.0.0.0
                                  idr_Prelude.Strings.trim13_val.0.0.0.0.0.0.0.0.0.0.0 <- pure (CGrString idris_str_tail2.121.0.0.0.0.0.0.0.0.0.0)
                                  idr_Prelude.Strings.trim13_1425.0.0.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim13_val.0.0.0.0.0.0.0.0.0.0.0
                                  pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim12_1419.0.0.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim13_1425.0.0.0.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim12_1419.0.0.0.0.0.0.0.0.0.0.0 idr_Prelude.Strings.trim13_1425.0.0.0.0.0.0.0.0.0.0.0)
                                #default ->
                                  pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
                              idr_Prelude.Strings.trim11_1426.0.0.0.0.0.0.0.0.0 <- store idr_Prelude.Strings.trim11_val_1392.0.0.0.0.0.0.0.0.0
                              unboxed.CGrString.236.0.0.0.0.0.0.0.0.0 <- idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim11_1426.0.0.0.0.0.0.0.0.0
                              pure unboxed.CGrString.236.0.0.0.0.0.0.0.0.0
                          pure (CGrString ccp.9.0.0.0.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (CGrString ccp.9.0.0.0.0.0.0.0.0)
                        #default ->
                          pure idr_Prelude.Strings.trim2_val.0
                #default ->
                  pure idr_Prelude.Strings.trim2_val.0
              (CGrString idr_Prelude.Strings.trim6_1427.41.194.arity.1.0.0.0.0.0) <- pure idr_Prelude.Strings.trim6_val_1321.0.0.0.0.0
              idris_str_rev2.91.0.0.0.0 <- _prim_string_reverse idr_Prelude.Strings.trim6_1427.41.194.arity.1.0.0.0.0.0
              idris_str_tail2.122.0.0.0.0 <- _prim_string_tail idris_str_rev2.91.0.0.0.0
              idris_str_tail2.123.0.0.0.0 <- _prim_string_tail idris_str_tail2.122.0.0.0.0
              idr_Prelude.Strings.trim6_val_1318.0.0.0.0.0 <- pure (CGrString idris_str_tail2.123.0.0.0.0)
              idr_Prelude.Strings.trim6_1430.0.0.0.0.0 <- store idr_Prelude.Strings.trim6_val_1318.0.0.0.0.0
              pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim5_1317.0.0.0.0.0 idr_Prelude.Strings.trim6_1430.0.0.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Prelude.Strings.trim5_1317.0.0.0.0.0 idr_Prelude.Strings.trim6_1430.0.0.0.0.0)
            #default ->
              pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
          idr_Prelude.Strings.trim4_1431.0.0.0 <- store idr_Prelude.Strings.trim4_val_1076.0.0.0
          idr__Prelude.Strings.ltrim_with_55.unboxed idr_Prelude.Strings.trim4_1431.0.0.0
    #default ->
      pure idr_Prelude.Strings.trim2.41.37.arity.1.0
  idr_Main.main6_val.0 <- pure (CGrString unboxed.CGrString.4.0)
  idr_Main.main6_87.0 <- store idr_Main.main6_val.0
  idr_Main.main3_val_79.0 <- idr_Prelude.Interactive.printLn' idr_Main.main5_85.0 idr_Main.main6_87.0
  idr_Main.main7_val.0 <- pure (CGrString #"42")
  idr_Main.main7.0 <- store idr_Main.main7_val.0
  idr_Main.main4_val_89.0 <- idr_Prelude.Interactive.printLn' idr_Main.main5_85.0 idr_Main.main7.0
  idr_Main.main7_val_102.0 <- pure (C"idr_{U_Main.{main_8}_1}")
  idr_Main.main7_103.0 <- store idr_Main.main7_val_102.0
  idr_Main.main9_val.0 <- pure (C"idr_{U_Main.{main_9}_2}")
  idr_Main.main9.0 <- store idr_Main.main9_val.0
  idr_Main.main11_val.0 <- pure (CGrInt 10)
  idr_Main.main11.0 <- store idr_Main.main11_val.0
  idr_Main.main10.49.12.arity.1.0 <- pure 0
  idr_Main.main8_val.0 <- case idr_Main.main10.49.12.arity.1.0 of
    0 ->
      pure idr_Main.main11_val.0
    #default ->
      idr_Main.adder4.41.0.arity.1.0 <- pure 1
      idris_int_sub2.0.0 <- _prim_int_sub idr_Main.main10.49.12.arity.1.0 idr_Main.adder4.41.0.arity.1.0
      idr_Main.adder4_val.0 <- pure (CGrInt idris_int_sub2.0.0)
      idr_Main.adder4_2.0 <- store idr_Main.adder4_val.0
      pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.main9.0 idr_Main.adder4_2.0 idr_Main.main11.0) -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.main9.0 idr_Main.adder4_2.0 idr_Main.main11.0)
  idr_Main.main8_105.0 <- store idr_Main.main8_val.0
  idr_Main.main5_val_97.0 <- idr_Prelude.Interactive.printLn' idr_Main.main7_103.0 idr_Main.main8_105.0
  idr_Main.main11_val_120.0 <- pure (CGrInt 1)
  idr_Main.main11_121.49.13.arity.1.0 <- pure 1
  idr_Main.main9_val_114.0 <- case idr_Main.main11_121.49.13.arity.1.0 of
    0 ->
      pure (CErased) -- LINT: Last return expressions can only return non-node values: pure (CErased)
    #default ->
      idris_int_sub2.0.1 <- _prim_int_sub idr_Main.main11_121.49.13.arity.1.0 idr_Main.main11_121.49.13.arity.1.0
      idr_Main.adder4_val.1 <- pure (CGrInt idris_int_sub2.0.1)
      idr_Main.adder4_2.1 <- store idr_Main.adder4_val.1
      (CGrInt "idr_{APPLY_0}3_1445.1.0.57.0.arity.1.0") <- pure idr_Main.adder4_val.1
      idris_int_add0_1.0.0.0.0 <- pure 15
      (CGrInt idris_int_add1_1.0.0.0.0) <- pure idr_Main.main11_val.0
      idris_int_add2.0.0.0.0 <- _prim_int_add idris_int_add0_1.0.0.0.0 idris_int_add1_1.0.0.0.0
      "idr_Main.{adder_0}5_val.0.0" <- pure (CGrInt idris_int_add2.0.0.0.0)
      "idr_Main.{adder_0}5_1459.0.0" <- store "idr_Main.{adder_0}5_val.0.0"
      case "idr_{APPLY_0}3_1445.1.0.57.0.arity.1.0" of
        0 ->
          pure "idr_Main.{adder_0}5_val.0.0"
        #default ->
          idris_int_sub2.0.3.0.0 <- _prim_int_sub "idr_{APPLY_0}3_1445.1.0.57.0.arity.1.0" idr_Main.main11_121.49.13.arity.1.0
          idr_Main.adder4_val.3.0.0 <- pure (CGrInt idris_int_sub2.0.3.0.0)
          idr_Main.adder4_2.3.0.0 <- store idr_Main.adder4_val.3.0.0
          pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.main9.0 idr_Main.adder4_2.3.0.0 "idr_Main.{adder_0}5_1459.0.0") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.main9.0 idr_Main.adder4_2.3.0.0 "idr_Main.{adder_0}5_1459.0.0")
  idr_Main.main9_125.0 <- store idr_Main.main9_val_114.0
  idr_Main.main6_val_107.0 <- idr_Prelude.Interactive.printLn' idr_Main.main7_103.0 idr_Main.main9_125.0
  idr_Main.main13.0 <- store idr_Main.main11_val_120.0
  idr_Main.main12_142.49.14.arity.1.0 <- pure 2
  idr_Main.main10_val_135.0 <- case idr_Main.main12_142.49.14.arity.1.0 of
    0 ->
      pure (CErased) -- LINT: Last return expressions can only return non-node values: pure (CErased)
    #default ->
      idris_int_sub2.0.2 <- _prim_int_sub idr_Main.main12_142.49.14.arity.1.0 idr_Main.main11_121.49.13.arity.1.0
      idr_Main.adder4_val.2 <- pure (CGrInt idris_int_sub2.0.2)
      idr_Main.adder4_2.2 <- store idr_Main.adder4_val.2
      (CGrInt "idr_{APPLY_0}3_1445.2.0.57.1.arity.1.0") <- pure idr_Main.adder4_val.2
      idris_int_add0_1.0.0.1.0 <- pure 4
      (CGrInt idris_int_add1_1.0.0.1.0) <- pure idr_Main.main11_val_120.0
      idris_int_add2.0.0.1.0 <- _prim_int_add idris_int_add0_1.0.0.1.0 idris_int_add1_1.0.0.1.0
      "idr_Main.{adder_0}5_val.1.0" <- pure (CGrInt idris_int_add2.0.0.1.0)
      "idr_Main.{adder_0}5_1459.1.0" <- store "idr_Main.{adder_0}5_val.1.0"
      case "idr_{APPLY_0}3_1445.2.0.57.1.arity.1.0" of
        0 ->
          pure "idr_Main.{adder_0}5_val.1.0"
        #default ->
          idris_int_sub2.0.3.1.0 <- _prim_int_sub "idr_{APPLY_0}3_1445.2.0.57.1.arity.1.0" idr_Main.main11_121.49.13.arity.1.0
          idr_Main.adder4_val.3.1.0 <- pure (CGrInt idris_int_sub2.0.3.1.0)
          idr_Main.adder4_2.3.1.0 <- store idr_Main.adder4_val.3.1.0
          pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.main9.0 idr_Main.adder4_2.3.1.0 "idr_Main.{adder_0}5_1459.1.0") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Main.{adder_0}_1}" idr_Main.main9.0 idr_Main.adder4_2.3.1.0 "idr_Main.{adder_0}5_1459.1.0")
  idr_Main.main10_val_134.0 <- case idr_Main.main10_val_135.0 of
    (C"idr_{U_Main.{adder_0}_1}" "idr_{APPLY_0}2_1444.3.0" "idr_{APPLY_0}3_1445.3.0" "idr_{APPLY_0}4_1446.3.0") ->
      (CGrInt "idr_{APPLY_0}3_1445.3.0.57.2.arity.1") <- fetch "idr_{APPLY_0}3_1445.3.0"
      idris_int_add0_1.0.0.2 <- pure 7
      (CGrInt idris_int_add1_1.0.0.2) <- fetch "idr_{APPLY_0}4_1446.3.0"
      idris_int_add2.0.0.2 <- _prim_int_add idris_int_add0_1.0.0.2 idris_int_add1_1.0.0.2
      "idr_Main.{adder_0}5_val.2" <- pure (CGrInt idris_int_add2.0.0.2)
      "idr_Main.{adder_0}5_1459.2" <- store "idr_Main.{adder_0}5_val.2"
      case "idr_{APPLY_0}3_1445.3.0.57.2.arity.1" of
        0 ->
          pure "idr_Main.{adder_0}5_val.2"
        #default ->
          idris_int_sub2.0.3.2 <- _prim_int_sub "idr_{APPLY_0}3_1445.3.0.57.2.arity.1" idr_Main.main11_121.49.13.arity.1.0
          idr_Main.adder4_val.3.2 <- pure (CGrInt idris_int_sub2.0.3.2)
          idr_Main.adder4_2.3.2 <- store idr_Main.adder4_val.3.2
          pure (C"idr_{U_Main.{adder_0}_1}" "idr_{APPLY_0}2_1444.3.0" idr_Main.adder4_2.3.2 "idr_Main.{adder_0}5_1459.2") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Main.{adder_0}_1}" "idr_{APPLY_0}2_1444.3.0" idr_Main.adder4_2.3.2 "idr_Main.{adder_0}5_1459.2") -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_add1_1.0.0.2) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_{APPLY_0}3_1445.3.0.57.2.arity.1")
    #default ->
      pure (CErased) -- LINT: Last return expressions can only return non-node values: pure (CErased)
  idr_Main.main10_149.0 <- store idr_Main.main10_val_134.0
  idr_Main.main7_val_127.0 <- idr_Prelude.Interactive.printLn' idr_Main.main7_103.0 idr_Main.main10_149.0
  idris_str_head1_0.42 <- pure #"Hello!"
  idris_str_head2.42 <- _prim_string_head idris_str_head1_0.42
  idr_Main.main9_val_164.0 <- pure (CGrInt idris_str_head2.42)
  idr_Main.main9_167.0 <- store idr_Main.main9_val_164.0
  idris_str_tail2.124 <- _prim_string_tail idris_str_head1_0.42
  idris_str_eq3.25 <- _prim_string_eq idris_str_tail2.124 idr_Prelude.Strings.trim2.41.37.arity.1.0
  ccp.2.25 <- case idris_str_eq3.25 of
    #False ->
      pure idr_Main.main10.49.12.arity.1.0
    #True ->
      pure idr_Main.main11_121.49.13.arity.1.0
  idr_Main.main11_val_171.0 <- case ccp.2.25 of
    0 ->
      idris_str_head2.43.0.0 <- _prim_string_head idris_str_tail2.124
      idr_Main.main12_val_188.0.0.0 <- pure (CGrInt idris_str_head2.43.0.0)
      idr_Main.main12_193.0.0.0 <- store idr_Main.main12_val_188.0.0.0
      idris_str_tail2.127.0.0 <- _prim_string_tail idris_str_tail2.124
      idr_Main.main13_val_194.0.0.0 <- pure (CGrString idris_str_tail2.127.0.0)
      idr_Main.main13_199.0.0.0 <- store idr_Main.main13_val_194.0.0.0
      pure (Cidr_Prelude.Strings.StrCons idr_Main.main12_193.0.0.0 idr_Main.main13_199.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Main.main12_193.0.0.0 idr_Main.main13_199.0.0.0)
    #default ->
      pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
  idr_Main.main11_200.0 <- store idr_Main.main11_val_171.0
  idr_Main.main10_val_168.0 <- idr__Prelude.Strings.unpack_with_36 idr_Main.main11_200.0
  idr_Main.main10_201.0 <- store idr_Main.main10_val_168.0
  idr_Main.main8_val_156.0 <- pure (Cidr_Prelude.List.:: idr_Main.main9_167.0 idr_Main.main10_201.0)
  idr_Main.main8_202.0 <- store idr_Main.main8_val_156.0
  idr_Main.main8_val_155.0 <- idr_Main.toFormat idr_Main.main8_202.0
  idr_Main.main8_203.0 <- store idr_Main.main8_val_155.0
  idr_Main.main9_205.0 <- store idr_Prelude.Strings.trim2_val.0
  idr_Main.main8_val_154.0 <- idr_Main.printFmt idr_Main.main8_203.0 idr_Main.main9_205.0
  -- LINT: Invalid pattern match for (CGrString idris_str_concat1_0.0). Expected pattern of type: {CGrString[T_String]}, but got: {CGrString[T_String]
  ,C"idr_{U_Main.{printFmt_14}_1}"[{163}
                                  ,{68,87,173,174}]
  ,C"idr_{U_Main.{printFmt_15}_1}"[{164}
                                  ,{68,87,173,174}]}
  (CGrString idris_str_concat1_0.0) <- pure idr_Main.main8_val_154.0
  idris_str_concat2_0.0 <- pure #"\n"
  idris_str_concat3.0 <- _prim_string_concat idris_str_concat1_0.0 idris_str_concat2_0.0
  _prim_string_print idris_str_concat3.0
  idris_str_head1_0.44 <- pure #"Answer : %d"
  idris_str_head2.44 <- _prim_string_head idris_str_head1_0.44
  idr_Main.main10_val_226.0 <- pure (CGrInt idris_str_head2.44)
  idr_Main.main10_229.0 <- store idr_Main.main10_val_226.0
  idris_str_tail2.128 <- _prim_string_tail idris_str_head1_0.44
  idris_str_eq3.26 <- _prim_string_eq idris_str_tail2.128 idr_Prelude.Strings.trim2.41.37.arity.1.0
  ccp.2.26 <- case idris_str_eq3.26 of
    #False ->
      pure idr_Main.main10.49.12.arity.1.0
    #True ->
      pure idr_Main.main11_121.49.13.arity.1.0
  idr_Main.main12_val_233.0 <- case ccp.2.26 of
    0 ->
      idris_str_head2.45.0.0 <- _prim_string_head idris_str_tail2.128
      idr_Main.main13_val_251.0.0.0 <- pure (CGrInt idris_str_head2.45.0.0)
      idr_Main.main13_256.0.0.0 <- store idr_Main.main13_val_251.0.0.0
      idris_str_tail2.131.0.0 <- _prim_string_tail idris_str_tail2.128
      idr_Main.main14_val.0.0.0 <- pure (CGrString idris_str_tail2.131.0.0)
      idr_Main.main14_260.0.0.0 <- store idr_Main.main14_val.0.0.0
      pure (Cidr_Prelude.Strings.StrCons idr_Main.main13_256.0.0.0 idr_Main.main14_260.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Main.main13_256.0.0.0 idr_Main.main14_260.0.0.0)
    #default ->
      pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
  idr_Main.main12_261.0 <- store idr_Main.main12_val_233.0
  idr_Main.main11_val_230.0 <- idr__Prelude.Strings.unpack_with_36 idr_Main.main12_261.0
  idr_Main.main11_262.0 <- store idr_Main.main11_val_230.0
  idr_Main.main9_val_218.0 <- pure (Cidr_Prelude.List.:: idr_Main.main10_229.0 idr_Main.main11_262.0)
  idr_Main.main9_263.0 <- store idr_Main.main9_val_218.0
  idr_Main.main9_val_217.0 <- idr_Main.toFormat idr_Main.main9_263.0
  idr_Main.main9_264.0 <- store idr_Main.main9_val_217.0
  idr_Main.main9_val_216.0 <- idr_Main.printFmt idr_Main.main9_264.0 idr_Main.main9_205.0
  idr_Main.main10_val_268.0 <- pure (CGrInt 42)
  idr_Main.main10_269.0 <- store idr_Main.main10_val_268.0
  idr_Main.main9_val_215.0 <- case idr_Main.main9_val_216.0 of
    (C"idr_{U_Main.{printFmt_14}_1}" "idr_{APPLY_0}2_1448.4.0" "idr_{APPLY_0}3_1449.4.0") ->
      (CGrString "idr_{APPLY_0}3_1449.4.0.174.0.arity.1") <- fetch "idr_{APPLY_0}3_1449.4.0"
      "idr_Main.{printFmt_14}" "idr_{APPLY_0}2_1448.4.0" "idr_{APPLY_0}3_1449.4.0.174.0.arity.1" idr_Main.main10_269.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString "idr_{APPLY_0}3_1449.4.0.174.0.arity.1")
    (C"idr_{U_Main.{printFmt_15}_1}" "idr_{APPLY_0}2_1450.4.0" "idr_{APPLY_0}3_1451.4.0") ->
      (CGrString "idr_{APPLY_0}3_1451.4.0.174.1.arity.1") <- fetch "idr_{APPLY_0}3_1451.4.0"
      "idr_Main.{printFmt_15}" "idr_{APPLY_0}2_1450.4.0" "idr_{APPLY_0}3_1451.4.0.174.1.arity.1" idr_Main.main10_269.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString "idr_{APPLY_0}3_1451.4.0.174.1.arity.1")
    #default ->
      pure (CErased) -- LINT: Last return expressions can only return non-node values: pure (CErased)
  -- LINT: Invalid pattern match for (CGrString idris_str_concat1_0.1). Expected pattern of type: {CGrString[T_String]}, but got: {CErased[]
  ,CGrString[T_String]
  ,C"idr_{U_Main.{printFmt_14}_1}"[{163}
                                  ,{68,87,173,174}]
  ,C"idr_{U_Main.{printFmt_15}_1}"[{164}
                                  ,{68,87,173,174}]}
  (CGrString idris_str_concat1_0.1) <- pure idr_Main.main9_val_215.0
  idris_str_concat3.1 <- _prim_string_concat idris_str_concat1_0.1 idris_str_concat2_0.0
  _prim_string_print idris_str_concat3.1
  idris_str_head1_0.46 <- pure #"%s numner %d"
  idris_str_head2.46 <- _prim_string_head idris_str_head1_0.46
  idr_Main.main11_val_290.0 <- pure (CGrInt idris_str_head2.46)
  idr_Main.main11_293.0 <- store idr_Main.main11_val_290.0
  idris_str_tail2.132 <- _prim_string_tail idris_str_head1_0.46
  idris_str_eq3.27 <- _prim_string_eq idris_str_tail2.132 idr_Prelude.Strings.trim2.41.37.arity.1.0
  ccp.2.27 <- case idris_str_eq3.27 of
    #False ->
      pure idr_Main.main10.49.12.arity.1.0
    #True ->
      pure idr_Main.main11_121.49.13.arity.1.0
  idr_Main.main13_val_297.0 <- case ccp.2.27 of
    0 ->
      idris_str_head2.47.0.0 <- _prim_string_head idris_str_tail2.132
      idr_Main.main14_val_315.0.0.0 <- pure (CGrInt idris_str_head2.47.0.0)
      idr_Main.main14_320.0.0.0 <- store idr_Main.main14_val_315.0.0.0
      idris_str_tail2.135.0.0 <- _prim_string_tail idris_str_tail2.132
      idr_Main.main15_val.0.0.0 <- pure (CGrString idris_str_tail2.135.0.0)
      idr_Main.main15_324.0.0.0 <- store idr_Main.main15_val.0.0.0
      pure (Cidr_Prelude.Strings.StrCons idr_Main.main14_320.0.0.0 idr_Main.main15_324.0.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr_Main.main14_320.0.0.0 idr_Main.main15_324.0.0.0)
    #default ->
      pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
  idr_Main.main13_325.0 <- store idr_Main.main13_val_297.0
  idr_Main.main12_val_294.0 <- idr__Prelude.Strings.unpack_with_36 idr_Main.main13_325.0
  idr_Main.main12_326.0 <- store idr_Main.main12_val_294.0
  idr_Main.main10_val_282.0 <- pure (Cidr_Prelude.List.:: idr_Main.main11_293.0 idr_Main.main12_326.0)
  idr_Main.main10_327.0 <- store idr_Main.main10_val_282.0
  idr_Main.main10_val_281.0 <- idr_Main.toFormat idr_Main.main10_327.0
  idr_Main.main10_328.0 <- store idr_Main.main10_val_281.0
  idr_Main.main10_val_280.0 <- idr_Main.printFmt idr_Main.main10_328.0 idr_Main.main9_205.0
  idr_Main.main11_val_332.0 <- pure (CGrString #"Page")
  idr_Main.main11_333.0 <- store idr_Main.main11_val_332.0
  idr_Main.main10_val_279.0 <- case idr_Main.main10_val_280.0 of
    (C"idr_{U_Main.{printFmt_14}_1}" "idr_{APPLY_0}2_1448.5.0" "idr_{APPLY_0}3_1449.5.0") ->
      (CGrString "idr_{APPLY_0}3_1449.5.0.174.2.arity.1") <- fetch "idr_{APPLY_0}3_1449.5.0"
      "idr_Main.{printFmt_14}" "idr_{APPLY_0}2_1448.5.0" "idr_{APPLY_0}3_1449.5.0.174.2.arity.1" idr_Main.main11_333.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString "idr_{APPLY_0}3_1449.5.0.174.2.arity.1")
    (C"idr_{U_Main.{printFmt_15}_1}" "idr_{APPLY_0}2_1450.5.0" "idr_{APPLY_0}3_1451.5.0") ->
      (CGrString "idr_{APPLY_0}3_1451.5.0.174.3.arity.1") <- fetch "idr_{APPLY_0}3_1451.5.0"
      "idr_Main.{printFmt_15}" "idr_{APPLY_0}2_1450.5.0" "idr_{APPLY_0}3_1451.5.0.174.3.arity.1" idr_Main.main11_333.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString "idr_{APPLY_0}3_1451.5.0.174.3.arity.1")
    #default ->
      pure (CErased) -- LINT: Last return expressions can only return non-node values: pure (CErased)
  idr_Main.main11_val_335.0 <- pure (CGrInt 97)
  idr_Main.main11_336.0 <- store idr_Main.main11_val_335.0
  idr_Main.main10_val_278.0 <- case idr_Main.main10_val_279.0 of
    (C"idr_{U_Main.{printFmt_14}_1}" "idr_{APPLY_0}2_1448.6.0" "idr_{APPLY_0}3_1449.6.0") ->
      (CGrString "idr_{APPLY_0}3_1449.6.0.174.4.arity.1") <- fetch "idr_{APPLY_0}3_1449.6.0"
      "idr_Main.{printFmt_14}" "idr_{APPLY_0}2_1448.6.0" "idr_{APPLY_0}3_1449.6.0.174.4.arity.1" idr_Main.main11_336.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString "idr_{APPLY_0}3_1449.6.0.174.4.arity.1")
    (C"idr_{U_Main.{printFmt_15}_1}" "idr_{APPLY_0}2_1450.6.0" "idr_{APPLY_0}3_1451.6.0") ->
      (CGrString "idr_{APPLY_0}3_1451.6.0.174.5.arity.1") <- fetch "idr_{APPLY_0}3_1451.6.0"
      "idr_Main.{printFmt_15}" "idr_{APPLY_0}2_1450.6.0" "idr_{APPLY_0}3_1451.6.0.174.5.arity.1" idr_Main.main11_336.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString "idr_{APPLY_0}3_1451.6.0.174.5.arity.1")
    #default ->
      pure (CErased) -- LINT: Last return expressions can only return non-node values: pure (CErased)
  -- LINT: Invalid pattern match for (CGrString idris_str_concat1_0.2). Expected pattern of type: {CGrString[T_String]}, but got: {CErased[]
  ,CGrString[T_String]
  ,C"idr_{U_Main.{printFmt_14}_1}"[{163}
                                  ,{68,87,173,174}]
  ,C"idr_{U_Main.{printFmt_15}_1}"[{164}
                                  ,{68,87,173,174}]}
  (CGrString idris_str_concat1_0.2) <- pure idr_Main.main10_val_278.0
  idris_str_concat3.2 <- _prim_string_concat idris_str_concat1_0.2 idris_str_concat2_0.0
  _prim_string_print idris_str_concat3.2

idr_Data.Vect.foldrImpl idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4 idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl6 =
  idr_Data.Vect.foldrImpl6_val <- fetch idr_Data.Vect.foldrImpl6
  -- LINT: case has non-covered alternative CErased
  -- LINT: case has non-covered alternative CGrInt
  -- LINT: case has non-covered alternative CGrString
  -- LINT: case has non-covered alternative C"idr_{U_Main.{adder_0}_1}"
  case idr_Data.Vect.foldrImpl6_val of
    (Cidr_Data.Vect.:: idr_Data.Vect.foldrImpl7 idr_Data.Vect.foldrImpl8) ->
      idr_Data.Vect.foldrImpl12_val <- pure (C"idr_{U_Data.Vect.{foldrImpl_1}_1}" idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl7)
      idr_Data.Vect.foldrImpl12 <- store idr_Data.Vect.foldrImpl12_val
      idr_Data.Vect.foldrImpl idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4 idr_Data.Vect.foldrImpl12 idr_Data.Vect.foldrImpl8
    (Cidr_Data.Vect.Nil) ->
      "idr_{APPLY_0}0_val.0" <- fetch idr_Data.Vect.foldrImpl5
      case "idr_{APPLY_0}0_val.0" of
        (C"idr_{U_Data.Vect.{foldrImpl_1}_1}" "idr_{APPLY_0}2.0" "idr_{APPLY_0}3.0" "idr_{APPLY_0}4.0") ->
          "idr_Data.Vect.{foldrImpl_1}" "idr_{APPLY_0}2.0" "idr_{APPLY_0}4.0" idr_Data.Vect.foldrImpl4
        (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}") ->
          fetch idr_Data.Vect.foldrImpl4

idr_Main.printFmt idr_Main.printFmt0 idr_Main.printFmt1 =
  idr_Main.printFmt0_val <- fetch idr_Main.printFmt0
  case idr_Main.printFmt0_val of
    (Cidr_Main.End) ->
      fetch idr_Main.printFmt1
    (Cidr_Main.Lit idr_Main.printFmt2 idr_Main.printFmt3) ->
      (CGrString idris_str_concat1_0.5) <- fetch idr_Main.printFmt1
      (CGrString idris_str_concat2_0.5) <- fetch idr_Main.printFmt2
      idris_str_concat3.5 <- _prim_string_concat idris_str_concat1_0.5 idris_str_concat2_0.5
      idr_Main.printFmt4_val <- pure (CGrString idris_str_concat3.5)
      idr_Main.printFmt4 <- store idr_Main.printFmt4_val
      idr_Main.printFmt idr_Main.printFmt3 idr_Main.printFmt4 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.5) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.5)
    (Cidr_Main.Number idr_Main.printFmt2_382) ->
      pure (C"idr_{U_Main.{printFmt_14}_1}" idr_Main.printFmt2_382 idr_Main.printFmt1) -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Main.{printFmt_14}_1}" idr_Main.printFmt2_382 idr_Main.printFmt1)
    (Cidr_Main.Str idr_Main.printFmt2_383) ->
      pure (C"idr_{U_Main.{printFmt_15}_1}" idr_Main.printFmt2_383 idr_Main.printFmt1) -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Main.{printFmt_15}_1}" idr_Main.printFmt2_383 idr_Main.printFmt1)

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0_val.8" <- fetch idr_Prelude.Interactive.printLn'2
  ccp.11 <- case "idr_{APPLY_0}0_val.8" of
    (C"idr_{U_Main.{main_3}_1}") ->
      "idr_Main.{main_3}3_val.0" <- pure (C"idr_{U_Main.{main_2}_1}")
      "idr_Main.{main_3}3.0" <- store "idr_Main.{main_3}3_val.0"
      unboxed.CGrString.255 <- "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.unboxed" "idr_Main.{main_3}3.0" idr_Prelude.Interactive.printLn'3
      pure unboxed.CGrString.255
    (C"idr_{U_Main.{main_5}_1}") ->
      "idr_Main.{main_5}3_val.0" <- pure (C"idr_{U_Main.{main_4}_1}")
      "idr_Main.{main_5}3.0" <- store "idr_Main.{main_5}3_val.0"
      unboxed.CGrString.256 <- "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.unboxed" "idr_Main.{main_5}3.0" idr_Prelude.Interactive.printLn'3
      pure unboxed.CGrString.256
    (C"idr_{U_Main.{main_6}_1}") ->
      "idr_Main.{main_6}2.41.199.arity.1.0" <- pure #""
      -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_eq1_0.29)
      -- LINT: Invalid pattern match for (CGrString idris_str_eq1_0.29). Expected pattern of type: {CGrString[T_String]}, but got: {CErased[]
      ,CGrInt[T_Int64]
      ,CGrString[T_String]
      ,Cidr_Data.Vect.::[{2,12}
                        ,{9,16}]
      ,C"idr_{U_Main.{adder_0}_1}"[{46}
                                  ,{48,52,59}
                                  ,{47,51,58}]}
      (CGrString idris_str_eq1_0.29) <- fetch idr_Prelude.Interactive.printLn'3
      idris_str_eq3.29 <- _prim_string_eq idris_str_eq1_0.29 "idr_Main.{main_6}2.41.199.arity.1.0"
      ccp.2.29 <- case idris_str_eq3.29 of
        #False ->
          pure 0
        #True ->
          pure 1
      "idr_Main.{main_6}2_val_1496.0" <- case ccp.2.29 of
        0 ->
          idris_str_head2.49.0.0 <- _prim_string_head idris_str_eq1_0.29
          "idr_Main.{main_6}3_val_1506.0.0.0" <- pure (CGrInt idris_str_head2.49.0.0)
          "idr_Main.{main_6}3_1507.0.0.0" <- store "idr_Main.{main_6}3_val_1506.0.0.0"
          idris_str_tail2.136.0.0 <- _prim_string_tail idris_str_eq1_0.29
          idris_str_eq3.30.0.0 <- _prim_string_eq idris_str_tail2.136.0.0 "idr_Main.{main_6}2.41.199.arity.1.0"
          ccp.2.30.0.0 <- case idris_str_eq3.30.0.0 of
            #False ->
              pure ccp.2.29
            #True ->
              pure 1
          "idr_Main.{main_6}5_val.0.0.0" <- case ccp.2.30.0.0 of
            0 ->
              idris_str_head2.50.0.0.0.0 <- _prim_string_head idris_str_tail2.136.0.0
              "idr_Main.{main_6}6_val_1521.0.0.0.0.0" <- pure (CGrInt idris_str_head2.50.0.0.0.0)
              "idr_Main.{main_6}6_1524.0.0.0.0.0" <- store "idr_Main.{main_6}6_val_1521.0.0.0.0.0"
              idris_str_tail2.139.0.0.0.0 <- _prim_string_tail idris_str_tail2.136.0.0
              "idr_Main.{main_6}7_val.0.0.0.0.0" <- pure (CGrString idris_str_tail2.139.0.0.0.0)
              "idr_Main.{main_6}7_1526.0.0.0.0.0" <- store "idr_Main.{main_6}7_val.0.0.0.0.0"
              pure (Cidr_Prelude.Strings.StrCons "idr_Main.{main_6}6_1524.0.0.0.0.0" "idr_Main.{main_6}7_1526.0.0.0.0.0") -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons "idr_Main.{main_6}6_1524.0.0.0.0.0" "idr_Main.{main_6}7_1526.0.0.0.0.0")
            #default ->
              pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
          "idr_Main.{main_6}5_1527.0.0.0" <- store "idr_Main.{main_6}5_val.0.0.0"
          "idr_Main.{main_6}4_val.0.0.0" <- idr__Prelude.Strings.unpack_with_36 "idr_Main.{main_6}5_1527.0.0.0"
          "idr_Main.{main_6}4_1528.0.0.0" <- store "idr_Main.{main_6}4_val.0.0.0"
          pure (Cidr_Prelude.List.:: "idr_Main.{main_6}3_1507.0.0.0" "idr_Main.{main_6}4_1528.0.0.0") -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.List.:: "idr_Main.{main_6}3_1507.0.0.0" "idr_Main.{main_6}4_1528.0.0.0")
        #default ->
          pure (Cidr_Prelude.List.Nil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.List.Nil)
      "idr_Main.{main_6}2_1529.0" <- store "idr_Main.{main_6}2_val_1496.0"
      "idr_Main.{main_6}3_1531.41.203.arity.1.0" <- pure #"\""
      unboxed.CGrString.292.0 <- idr_Prelude.Show.showLitString.unboxed "idr_Main.{main_6}2_1529.0" "idr_Main.{main_6}3_1531.41.203.arity.1.0"
      "idr_Main.{main_6}1.41.204.arity.1.0" <- pure 34
      idris_str_cons3.18 <- _prim_string_cons "idr_Main.{main_6}1.41.204.arity.1.0" unboxed.CGrString.292.0
      pure idris_str_cons3.18
    (C"idr_{U_Main.{main_8}_1}") ->
      -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_str1_0.0.0.0)
      -- LINT: Invalid pattern match for (CGrInt idris_int_str1_0.0.0.0). Expected pattern of type: {CGrInt[T_Int64]}, but got: {CErased[]
      ,CGrInt[T_Int64]
      ,CGrString[T_String]
      ,Cidr_Data.Vect.::[{2,12}
                        ,{9,16}]
      ,C"idr_{U_Main.{adder_0}_1}"[{46}
                                  ,{48,52,59}
                                  ,{47,51,58}]}
      (CGrInt idris_int_str1_0.0.0.0) <- fetch idr_Prelude.Interactive.printLn'3
      idris_int_str2.0.0.0 <- _prim_int_str idris_int_str1_0.0.0.0
      ccp.3.0 <- pure 0
      "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.0" <- pure 5
      idris_int_eq2.7.0 <- _prim_int_eq ccp.3.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.0"
      ccp.0.7.0 <- case idris_int_eq2.7.0 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow5_val_343.0 <- case ccp.0.7.0 of
        0 ->
          idris_int_lt2.0.0 <- _prim_int_lt ccp.3.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.0"
          ccp.1.0.0 <- case idris_int_lt2.0.0 of
            #False ->
              pure ccp.0.7.0
            #True ->
              pure 1
          case ccp.1.0.0 of
            0 ->
              pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
            #default ->
              pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
        #default ->
          pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
      idr_Prelude.Show.primNumShow5_val_342.0 <- case idr_Prelude.Show.primNumShow5_val_343.0 of
        (Cidr_Prelude.Interfaces.GT) ->
          pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
        #default ->
          ccp.0.8.0 <- case idris_int_eq2.7.0 of
            #False ->
              pure ccp.3.0
            #True ->
              pure 1
          case ccp.0.8.0 of
            0 ->
              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_342.0 of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Show.primNumShow6_359.41.23.arity.1.0 <- pure #""
          idris_str_eq3.28.0 <- _prim_string_eq idris_int_str2.0.0.0 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.0
          ccp.2.28.0 <- case idris_str_eq3.28.0 of
            #False ->
              pure ccp.3.0
            #True ->
              pure 1
          idr_Prelude.Show.primNumShow6_val_356.0 <- case ccp.2.28.0 of
            0 ->
              pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.0" <- pure (Cidr_Prelude.Bool.True)
          case idr_Prelude.Show.primNumShow6_val_356.0 of
            (Cidr_Prelude.Bool.False) ->
              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
            (Cidr_Prelude.Bool.True) ->
              idris_str_head2.48.0.0 <- _prim_string_head idris_int_str2.0.0.0
              idr_Prelude.Show.primNumShow8.41.25.arity.1.0.0 <- pure 45
              idris_int_eq2.9.0.0 <- _prim_int_eq idris_str_head2.48.0.0 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.0
              ccp.0.9.0.0 <- case idris_int_eq2.9.0.0 of
                #False ->
                  pure ccp.3.0
                #True ->
                  pure 1
              case ccp.0.9.0.0 of
                0 ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.0"
      unboxed.CGrString.258 <- case idr_Prelude.Show.primNumShow5_val.0 of
        (Cidr_Prelude.Bool.False) ->
          pure idris_int_str2.0.0.0
        (Cidr_Prelude.Bool.True) ->
          idris_str_concat2_0.3.0 <- pure #")"
          idris_str_concat3.3.0 <- _prim_string_concat idris_int_str2.0.0.0 idris_str_concat2_0.3.0
          idris_str_concat1_0.4.0 <- pure #"("
          idris_str_concat3.4.0 <- _prim_string_concat idris_str_concat1_0.4.0 idris_str_concat3.3.0
          pure idris_str_concat3.4.0
      pure unboxed.CGrString.258
  idris_str_concat2_0.6 <- pure #"\n"
  idris_str_concat3.6 <- _prim_string_concat ccp.11 idris_str_concat2_0.6
  _prim_string_print idris_str_concat3.6
  pure (Cidr_MkUnit) -- LINT: Last return expressions can only return non-node values: pure (Cidr_MkUnit)

idr_Prelude.Show.showLitString.unboxed idr_Prelude.Show.showLitString0 idr_Prelude.Show.showLitString1.41.arity.1 =
  idr_Prelude.Show.showLitString0_val <- fetch idr_Prelude.Show.showLitString0
  case idr_Prelude.Show.showLitString0_val of
    (Cidr_Prelude.List.:: idr_Prelude.Show.showLitString2 idr_Prelude.Show.showLitString3) ->
      idr_Prelude.Show.showLitString2_val <- fetch idr_Prelude.Show.showLitString2
      (CGrInt idr_Prelude.Show.showLitString_cpat_LInt64_34) <- pure idr_Prelude.Show.showLitString2_val
      case idr_Prelude.Show.showLitString_cpat_LInt64_34 of
        34 ->
          unboxed.CGrString.261 <- idr_Prelude.Show.showLitString.unboxed idr_Prelude.Show.showLitString3 idr_Prelude.Show.showLitString1.41.arity.1
          idris_str_concat1_0.9 <- pure #"\\\""
          idris_str_concat3.9 <- _prim_string_concat idris_str_concat1_0.9 unboxed.CGrString.261
          pure idris_str_concat3.9
        #default ->
          (CGrInt idr_Prelude.Show.showLitChar_cpat_LInt64_7.0) <- pure idr_Prelude.Show.showLitString2_val
          idr_Prelude.Show.showLitString4_val_441 <- case idr_Prelude.Show.showLitChar_cpat_LInt64_7.0 of
            7 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_16}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_16}_1}")
            8 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_17}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_17}_1}")
            9 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_18}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_18}_1}")
            10 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_19}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_19}_1}")
            11 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_20}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_20}_1}")
            12 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_21}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_21}_1}")
            13 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_22}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_22}_1}")
            14 ->
              idr_Prelude.Show.showLitChar1_val.0 <- pure (C"idr_{U_Prelude.Show.{showLitChar_23}_1}")
              idr_Prelude.Show.showLitChar1.0 <- store idr_Prelude.Show.showLitChar1_val.0
              idr_Prelude.Show.showLitChar2_val.0 <- pure (CGrString #"\\SO")
              idr_Prelude.Show.showLitChar2.0 <- store idr_Prelude.Show.showLitChar2_val.0
              pure (C"idr_{U_Prelude.Show.protectEsc_1}" idr_Prelude.Show.showLitChar1.0 idr_Prelude.Show.showLitChar2.0) -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.protectEsc_1}" idr_Prelude.Show.showLitChar1.0 idr_Prelude.Show.showLitChar2.0)
            92 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_24}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_24}_1}")
            127 ->
              pure (C"idr_{U_Prelude.Show.{showLitChar_25}_1}") -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_25}_1}")
            #default ->
              (CGrInt idr_Prelude.Show.showLitChar0.41.30.arity.1.0) <- pure idr_Prelude.Show.showLitString2_val
              idris_ls_ext3.0 <- _prim_int_add idr_Prelude.Show.showLitChar0.41.30.arity.1.0 0
              idr_Prelude.Show.showLitChar:asciiTab:101_val.0 <- pure (CGrString #"NUL")
              idr_Prelude.Show.showLitChar:asciiTab:101.0 <- store idr_Prelude.Show.showLitChar:asciiTab:101_val.0
              idr_Prelude.Show.showLitChar:asciiTab:102_val_1571.0 <- pure (CGrString #"SOH")
              idr_Prelude.Show.showLitChar:asciiTab:102.0 <- store idr_Prelude.Show.showLitChar:asciiTab:102_val_1571.0
              idr_Prelude.Show.showLitChar:asciiTab:103_val_1572.0 <- pure (CGrString #"STX")
              idr_Prelude.Show.showLitChar:asciiTab:103.0 <- store idr_Prelude.Show.showLitChar:asciiTab:103_val_1572.0
              idr_Prelude.Show.showLitChar:asciiTab:104_val_1573.0 <- pure (CGrString #"ETX")
              idr_Prelude.Show.showLitChar:asciiTab:104.0 <- store idr_Prelude.Show.showLitChar:asciiTab:104_val_1573.0
              idr_Prelude.Show.showLitChar:asciiTab:105_val_1574.0 <- pure (CGrString #"EOT")
              idr_Prelude.Show.showLitChar:asciiTab:105.0 <- store idr_Prelude.Show.showLitChar:asciiTab:105_val_1574.0
              idr_Prelude.Show.showLitChar:asciiTab:106_val_1575.0 <- pure (CGrString #"ENQ")
              idr_Prelude.Show.showLitChar:asciiTab:106.0 <- store idr_Prelude.Show.showLitChar:asciiTab:106_val_1575.0
              idr_Prelude.Show.showLitChar:asciiTab:107_val_1576.0 <- pure (CGrString #"ACK")
              idr_Prelude.Show.showLitChar:asciiTab:107.0 <- store idr_Prelude.Show.showLitChar:asciiTab:107_val_1576.0
              idr_Prelude.Show.showLitChar:asciiTab:108_val_1577.0 <- pure (CGrString #"BEL")
              idr_Prelude.Show.showLitChar:asciiTab:108.0 <- store idr_Prelude.Show.showLitChar:asciiTab:108_val_1577.0
              idr_Prelude.Show.showLitChar:asciiTab:109_val_1578.0 <- pure (CGrString #"BS")
              idr_Prelude.Show.showLitChar:asciiTab:109.0 <- store idr_Prelude.Show.showLitChar:asciiTab:109_val_1578.0
              idr_Prelude.Show.showLitChar:asciiTab:1010_val_1579.0 <- pure (CGrString #"HT")
              idr_Prelude.Show.showLitChar:asciiTab:1010.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1010_val_1579.0
              idr_Prelude.Show.showLitChar:asciiTab:1011_val_1580.0 <- pure (CGrString #"LF")
              idr_Prelude.Show.showLitChar:asciiTab:1011.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1011_val_1580.0
              idr_Prelude.Show.showLitChar:asciiTab:1012_val_1581.0 <- pure (CGrString #"VT")
              idr_Prelude.Show.showLitChar:asciiTab:1012.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1012_val_1581.0
              idr_Prelude.Show.showLitChar:asciiTab:1013_val_1582.0 <- pure (CGrString #"FF")
              idr_Prelude.Show.showLitChar:asciiTab:1013.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1013_val_1582.0
              idr_Prelude.Show.showLitChar:asciiTab:1014_val_1583.0 <- pure (CGrString #"CR")
              idr_Prelude.Show.showLitChar:asciiTab:1014.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1014_val_1583.0
              idr_Prelude.Show.showLitChar:asciiTab:1015_val_1584.0 <- pure (CGrString #"SO")
              idr_Prelude.Show.showLitChar:asciiTab:1015.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1015_val_1584.0
              idr_Prelude.Show.showLitChar:asciiTab:1016_val_1585.0 <- pure (CGrString #"SI")
              idr_Prelude.Show.showLitChar:asciiTab:1016.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1016_val_1585.0
              idr_Prelude.Show.showLitChar:asciiTab:1017_val_1586.0 <- pure (CGrString #"DLE")
              idr_Prelude.Show.showLitChar:asciiTab:1017.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1017_val_1586.0
              idr_Prelude.Show.showLitChar:asciiTab:1018_val_1587.0 <- pure (CGrString #"DC1")
              idr_Prelude.Show.showLitChar:asciiTab:1018.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1018_val_1587.0
              idr_Prelude.Show.showLitChar:asciiTab:1019_val_1588.0 <- pure (CGrString #"DC2")
              idr_Prelude.Show.showLitChar:asciiTab:1019.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1019_val_1588.0
              idr_Prelude.Show.showLitChar:asciiTab:1020_val_1589.0 <- pure (CGrString #"DC3")
              idr_Prelude.Show.showLitChar:asciiTab:1020.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1020_val_1589.0
              idr_Prelude.Show.showLitChar:asciiTab:1021_val_1590.0 <- pure (CGrString #"DC4")
              idr_Prelude.Show.showLitChar:asciiTab:1021.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1021_val_1590.0
              idr_Prelude.Show.showLitChar:asciiTab:1022_val_1591.0 <- pure (CGrString #"NAK")
              idr_Prelude.Show.showLitChar:asciiTab:1022.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1022_val_1591.0
              idr_Prelude.Show.showLitChar:asciiTab:1023_val_1592.0 <- pure (CGrString #"SYN")
              idr_Prelude.Show.showLitChar:asciiTab:1023.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1023_val_1592.0
              idr_Prelude.Show.showLitChar:asciiTab:1024_val_1593.0 <- pure (CGrString #"ETB")
              idr_Prelude.Show.showLitChar:asciiTab:1024.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1024_val_1593.0
              idr_Prelude.Show.showLitChar:asciiTab:1025_val_1594.0 <- pure (CGrString #"CAN")
              idr_Prelude.Show.showLitChar:asciiTab:1025.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1025_val_1594.0
              idr_Prelude.Show.showLitChar:asciiTab:1026_val_1595.0 <- pure (CGrString #"EM")
              idr_Prelude.Show.showLitChar:asciiTab:1026.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1026_val_1595.0
              idr_Prelude.Show.showLitChar:asciiTab:1027_val_1596.0 <- pure (CGrString #"SUB")
              idr_Prelude.Show.showLitChar:asciiTab:1027.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1027_val_1596.0
              idr_Prelude.Show.showLitChar:asciiTab:1028_val_1597.0 <- pure (CGrString #"ESC")
              idr_Prelude.Show.showLitChar:asciiTab:1028.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1028_val_1597.0
              idr_Prelude.Show.showLitChar:asciiTab:1029_val_1598.0 <- pure (CGrString #"FS")
              idr_Prelude.Show.showLitChar:asciiTab:1029.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1029_val_1598.0
              idr_Prelude.Show.showLitChar:asciiTab:1030_val_1599.0 <- pure (CGrString #"GS")
              idr_Prelude.Show.showLitChar:asciiTab:1030.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1030_val_1599.0
              idr_Prelude.Show.showLitChar:asciiTab:1031_val_1600.0 <- pure (CGrString #"RS")
              idr_Prelude.Show.showLitChar:asciiTab:1031.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1031_val_1600.0
              idr_Prelude.Show.showLitChar:asciiTab:1032_val_1601.0 <- pure (CGrString #"US")
              idr_Prelude.Show.showLitChar:asciiTab:1032.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1032_val_1601.0
              idr_Prelude.Show.showLitChar:asciiTab:1033_val.0 <- pure (Cidr_Prelude.List.Nil)
              idr_Prelude.Show.showLitChar:asciiTab:1033.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1033_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1032_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1032.0 idr_Prelude.Show.showLitChar:asciiTab:1033.0)
              idr_Prelude.Show.showLitChar:asciiTab:1032_1602.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1032_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1031_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1031.0 idr_Prelude.Show.showLitChar:asciiTab:1032_1602.0)
              idr_Prelude.Show.showLitChar:asciiTab:1031_1603.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1031_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1030_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1030.0 idr_Prelude.Show.showLitChar:asciiTab:1031_1603.0)
              idr_Prelude.Show.showLitChar:asciiTab:1030_1604.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1030_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1029_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1029.0 idr_Prelude.Show.showLitChar:asciiTab:1030_1604.0)
              idr_Prelude.Show.showLitChar:asciiTab:1029_1605.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1029_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1028_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1028.0 idr_Prelude.Show.showLitChar:asciiTab:1029_1605.0)
              idr_Prelude.Show.showLitChar:asciiTab:1028_1606.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1028_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1027_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1027.0 idr_Prelude.Show.showLitChar:asciiTab:1028_1606.0)
              idr_Prelude.Show.showLitChar:asciiTab:1027_1607.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1027_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1026_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1026.0 idr_Prelude.Show.showLitChar:asciiTab:1027_1607.0)
              idr_Prelude.Show.showLitChar:asciiTab:1026_1608.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1026_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1025_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1025.0 idr_Prelude.Show.showLitChar:asciiTab:1026_1608.0)
              idr_Prelude.Show.showLitChar:asciiTab:1025_1609.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1025_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1024_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1024.0 idr_Prelude.Show.showLitChar:asciiTab:1025_1609.0)
              idr_Prelude.Show.showLitChar:asciiTab:1024_1610.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1024_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1023_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1023.0 idr_Prelude.Show.showLitChar:asciiTab:1024_1610.0)
              idr_Prelude.Show.showLitChar:asciiTab:1023_1611.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1023_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1022_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1022.0 idr_Prelude.Show.showLitChar:asciiTab:1023_1611.0)
              idr_Prelude.Show.showLitChar:asciiTab:1022_1612.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1022_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1021_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1021.0 idr_Prelude.Show.showLitChar:asciiTab:1022_1612.0)
              idr_Prelude.Show.showLitChar:asciiTab:1021_1613.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1021_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1020_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1020.0 idr_Prelude.Show.showLitChar:asciiTab:1021_1613.0)
              idr_Prelude.Show.showLitChar:asciiTab:1020_1614.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1020_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1019_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1019.0 idr_Prelude.Show.showLitChar:asciiTab:1020_1614.0)
              idr_Prelude.Show.showLitChar:asciiTab:1019_1615.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1019_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1018_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1018.0 idr_Prelude.Show.showLitChar:asciiTab:1019_1615.0)
              idr_Prelude.Show.showLitChar:asciiTab:1018_1616.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1018_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1017_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1017.0 idr_Prelude.Show.showLitChar:asciiTab:1018_1616.0)
              idr_Prelude.Show.showLitChar:asciiTab:1017_1617.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1017_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1016_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1016.0 idr_Prelude.Show.showLitChar:asciiTab:1017_1617.0)
              idr_Prelude.Show.showLitChar:asciiTab:1016_1618.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1016_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1015_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1015.0 idr_Prelude.Show.showLitChar:asciiTab:1016_1618.0)
              idr_Prelude.Show.showLitChar:asciiTab:1015_1619.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1015_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1014_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1014.0 idr_Prelude.Show.showLitChar:asciiTab:1015_1619.0)
              idr_Prelude.Show.showLitChar:asciiTab:1014_1620.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1014_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1013_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1013.0 idr_Prelude.Show.showLitChar:asciiTab:1014_1620.0)
              idr_Prelude.Show.showLitChar:asciiTab:1013_1621.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1013_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1012_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1012.0 idr_Prelude.Show.showLitChar:asciiTab:1013_1621.0)
              idr_Prelude.Show.showLitChar:asciiTab:1012_1622.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1012_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1011_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1011.0 idr_Prelude.Show.showLitChar:asciiTab:1012_1622.0)
              idr_Prelude.Show.showLitChar:asciiTab:1011_1623.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1011_val.0
              idr_Prelude.Show.showLitChar:asciiTab:1010_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:1010.0 idr_Prelude.Show.showLitChar:asciiTab:1011_1623.0)
              idr_Prelude.Show.showLitChar:asciiTab:1010_1624.0 <- store idr_Prelude.Show.showLitChar:asciiTab:1010_val.0
              idr_Prelude.Show.showLitChar:asciiTab:109_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:109.0 idr_Prelude.Show.showLitChar:asciiTab:1010_1624.0)
              idr_Prelude.Show.showLitChar:asciiTab:109_1625.0 <- store idr_Prelude.Show.showLitChar:asciiTab:109_val.0
              idr_Prelude.Show.showLitChar:asciiTab:108_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:108.0 idr_Prelude.Show.showLitChar:asciiTab:109_1625.0)
              idr_Prelude.Show.showLitChar:asciiTab:108_1626.0 <- store idr_Prelude.Show.showLitChar:asciiTab:108_val.0
              idr_Prelude.Show.showLitChar:asciiTab:107_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:107.0 idr_Prelude.Show.showLitChar:asciiTab:108_1626.0)
              idr_Prelude.Show.showLitChar:asciiTab:107_1627.0 <- store idr_Prelude.Show.showLitChar:asciiTab:107_val.0
              idr_Prelude.Show.showLitChar:asciiTab:106_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:106.0 idr_Prelude.Show.showLitChar:asciiTab:107_1627.0)
              idr_Prelude.Show.showLitChar:asciiTab:106_1628.0 <- store idr_Prelude.Show.showLitChar:asciiTab:106_val.0
              idr_Prelude.Show.showLitChar:asciiTab:105_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:105.0 idr_Prelude.Show.showLitChar:asciiTab:106_1628.0)
              idr_Prelude.Show.showLitChar:asciiTab:105_1629.0 <- store idr_Prelude.Show.showLitChar:asciiTab:105_val.0
              idr_Prelude.Show.showLitChar:asciiTab:104_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:104.0 idr_Prelude.Show.showLitChar:asciiTab:105_1629.0)
              idr_Prelude.Show.showLitChar:asciiTab:104_1630.0 <- store idr_Prelude.Show.showLitChar:asciiTab:104_val.0
              idr_Prelude.Show.showLitChar:asciiTab:103_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:103.0 idr_Prelude.Show.showLitChar:asciiTab:104_1630.0)
              idr_Prelude.Show.showLitChar:asciiTab:103_1631.0 <- store idr_Prelude.Show.showLitChar:asciiTab:103_val.0
              idr_Prelude.Show.showLitChar:asciiTab:102_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:102.0 idr_Prelude.Show.showLitChar:asciiTab:103_1631.0)
              idr_Prelude.Show.showLitChar:asciiTab:102_1632.0 <- store idr_Prelude.Show.showLitChar:asciiTab:102_val.0
              idr_Prelude.Show.showLitChar3_val.0 <- pure (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:asciiTab:101.0 idr_Prelude.Show.showLitChar:asciiTab:102_1632.0)
              idr_Prelude.Show.showLitChar3_413.0 <- store idr_Prelude.Show.showLitChar3_val.0
              idr_Prelude.Show.showLitChar1_val_405.0 <- idr_Prelude.Show.showLitChar:getAt:10 idris_ls_ext3.0 idr_Prelude.Show.showLitChar3_413.0
              case idr_Prelude.Show.showLitChar1_val_405.0 of
                (Cidr_Prelude.Maybe.Just idr_Prelude.Show.showLitChar2_416.0) ->
                  pure (C"idr_{U_Prelude.Show.{showLitChar_26}_1}" idr_Prelude.Show.showLitChar2_416.0) -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_26}_1}" idr_Prelude.Show.showLitChar2_416.0)
                (Cidr_Prelude.Maybe.Nothing) ->
                  idr_Prelude.Show.showLitChar2_419.0.49.21.arity.1 <- pure 127
                  (CGrInt idr_Prelude.Show.showLitChar0.0.57.5.arity.1) <- pure idr_Prelude.Show.showLitString2_val
                  idris_int_eq2.13.2 <- _prim_int_eq idr_Prelude.Show.showLitChar0.0.57.5.arity.1 idr_Prelude.Show.showLitChar2_419.0.49.21.arity.1
                  ccp.0.13.2 <- case idris_int_eq2.13.2 of
                    #False ->
                      pure 0
                    #True ->
                      pure 1
                  idr_Prelude.Show.showLitChar2_val_417.0 <- case ccp.0.13.2 of
                    0 ->
                      idris_int_lt2.1.2 <- _prim_int_lt idr_Prelude.Show.showLitChar0.0.57.5.arity.1 idr_Prelude.Show.showLitChar2_419.0.49.21.arity.1
                      ccp.1.1.2 <- case idris_int_lt2.1.2 of
                        #False ->
                          pure ccp.0.13.2
                        #True ->
                          pure 1
                      case ccp.1.1.2 of
                        0 ->
                          pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                        #default ->
                          pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
                  case idr_Prelude.Show.showLitChar2_val_417.0 of
                    (Cidr_Prelude.Interfaces.GT) ->
                      pure (C"idr_{U_Prelude.Show.{showLitChar_27}_1}" idr_Prelude.Show.showLitString2) -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_Prelude.Show.{showLitChar_27}_1}" idr_Prelude.Show.showLitString2)
                    #default ->
                      pure (C"idr_{U_prim__strCons_1}" idr_Prelude.Show.showLitString2) -- LINT: Last return expressions can only return non-node values: pure (C"idr_{U_prim__strCons_1}" idr_Prelude.Show.showLitString2)
          unboxed.CGrString.262 <- idr_Prelude.Show.showLitString.unboxed idr_Prelude.Show.showLitString3 idr_Prelude.Show.showLitString1.41.arity.1
          case idr_Prelude.Show.showLitString4_val_441 of
            (C"idr_{U_Prelude.Show.protectEsc_1}" "idr_{APPLY_0}2_1452.10" "idr_{APPLY_0}3_1453.10") ->
              (CGrString "idr_{APPLY_0}3_1453.10.174.6.arity.1") <- fetch "idr_{APPLY_0}3_1453.10"
              idr_Prelude.Show.protectEsc3.41.28.arity.1.0 <- pure #""
              idris_str_eq3.31.0 <- _prim_string_eq unboxed.CGrString.262 idr_Prelude.Show.protectEsc3.41.28.arity.1.0
              ccp.2.31.0 <- case idris_str_eq3.31.0 of
                #False ->
                  pure 0
                #True ->
                  pure 1
              idr_Prelude.Show.protectEsc3_val_391.0 <- case ccp.2.31.0 of
                0 ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
              "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.34.0" <- pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.protectEsc3_val_389.0 <- case idr_Prelude.Show.protectEsc3_val_391.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idris_str_head2.51.0.0 <- _prim_string_head unboxed.CGrString.262
                  "idr_Prelude.Show.{showLitChar_23}1.41.207.arity.1.0.0.0" <- pure 72
                  idris_int_eq2.12.0.0 <- _prim_int_eq idris_str_head2.51.0.0 "idr_Prelude.Show.{showLitChar_23}1.41.207.arity.1.0.0.0"
                  ccp.0.12.0.0 <- case idris_int_eq2.12.0.0 of
                    #False ->
                      pure 0
                    #True ->
                      pure 1
                  case ccp.0.12.0.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.34.0"
              ccp.5.0 <- case idr_Prelude.Show.protectEsc3_val_389.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure idr_Prelude.Show.protectEsc3.41.28.arity.1.0
                (Cidr_Prelude.Bool.True) ->
                  pure #"\\&"
              idris_str_concat3.7.0 <- _prim_string_concat ccp.5.0 unboxed.CGrString.262
              idris_str_concat3.8.0 <- _prim_string_concat "idr_{APPLY_0}3_1453.10.174.6.arity.1" idris_str_concat3.7.0
              pure idris_str_concat3.8.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString "idr_{APPLY_0}3_1453.10.174.6.arity.1")
            (C"idr_{U_Prelude.Show.{showLitChar_16}_1}") ->
              idris_str_concat1_0.10 <- pure #"\\a"
              idris_str_concat3.10 <- _prim_string_concat idris_str_concat1_0.10 unboxed.CGrString.262
              pure idris_str_concat3.10
            (C"idr_{U_Prelude.Show.{showLitChar_17}_1}") ->
              idris_str_concat1_0.11 <- pure #"\\b"
              idris_str_concat3.11 <- _prim_string_concat idris_str_concat1_0.11 unboxed.CGrString.262
              pure idris_str_concat3.11
            (C"idr_{U_Prelude.Show.{showLitChar_18}_1}") ->
              idris_str_concat1_0.12 <- pure #"\\t"
              idris_str_concat3.12 <- _prim_string_concat idris_str_concat1_0.12 unboxed.CGrString.262
              pure idris_str_concat3.12
            (C"idr_{U_Prelude.Show.{showLitChar_19}_1}") ->
              idris_str_concat1_0.13 <- pure #"\\n"
              idris_str_concat3.13 <- _prim_string_concat idris_str_concat1_0.13 unboxed.CGrString.262
              pure idris_str_concat3.13
            (C"idr_{U_Prelude.Show.{showLitChar_20}_1}") ->
              idris_str_concat1_0.14 <- pure #"\\v"
              idris_str_concat3.14 <- _prim_string_concat idris_str_concat1_0.14 unboxed.CGrString.262
              pure idris_str_concat3.14
            (C"idr_{U_Prelude.Show.{showLitChar_21}_1}") ->
              idris_str_concat1_0.15 <- pure #"\\f"
              idris_str_concat3.15 <- _prim_string_concat idris_str_concat1_0.15 unboxed.CGrString.262
              pure idris_str_concat3.15
            (C"idr_{U_Prelude.Show.{showLitChar_22}_1}") ->
              idris_str_concat1_0.16 <- pure #"\\r"
              idris_str_concat3.16 <- _prim_string_concat idris_str_concat1_0.16 unboxed.CGrString.262
              pure idris_str_concat3.16
            (C"idr_{U_Prelude.Show.{showLitChar_24}_1}") ->
              idris_str_concat1_0.17 <- pure #"\\\\"
              idris_str_concat3.17 <- _prim_string_concat idris_str_concat1_0.17 unboxed.CGrString.262
              pure idris_str_concat3.17
            (C"idr_{U_Prelude.Show.{showLitChar_25}_1}") ->
              idris_str_concat1_0.18 <- pure #"\\DEL"
              idris_str_concat3.18 <- _prim_string_concat idris_str_concat1_0.18 unboxed.CGrString.262
              pure idris_str_concat3.18
            (C"idr_{U_Prelude.Show.{showLitChar_26}_1}" "idr_{APPLY_0}2_1455.10") ->
              (CGrString idris_str_concat1_0.19) <- fetch "idr_{APPLY_0}2_1455.10"
              idris_str_concat3.19 <- _prim_string_concat idris_str_concat1_0.19 unboxed.CGrString.262
              "idr_Prelude.Show.{showLitChar_26}2.49.46.arity.1.0" <- pure 92
              idris_str_cons3.17.0 <- _prim_string_cons "idr_Prelude.Show.{showLitChar_26}2.49.46.arity.1.0" idris_str_concat3.19
              pure idris_str_cons3.17.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat1_0.19)
            (C"idr_{U_Prelude.Show.{showLitChar_27}_1}" "idr_{APPLY_0}2_1456.10") ->
              (CGrInt "idr_{APPLY_0}2_1456.10.49.22.arity.1") <- fetch "idr_{APPLY_0}2_1456.10"
              idris_int_str2.0.0.1 <- _prim_int_str "idr_{APPLY_0}2_1456.10.49.22.arity.1"
              ccp.3.1 <- pure 0
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.1" <- pure 5
              idris_int_eq2.7.1 <- _prim_int_eq ccp.3.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.1"
              ccp.0.7.1 <- case idris_int_eq2.7.1 of
                #False ->
                  pure ccp.3.1
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.1 <- case ccp.0.7.1 of
                0 ->
                  idris_int_lt2.0.1 <- _prim_int_lt ccp.3.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.1"
                  ccp.1.0.1 <- case idris_int_lt2.0.1 of
                    #False ->
                      pure ccp.0.7.1
                    #True ->
                      pure 1
                  case ccp.1.0.1 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.1 <- case idr_Prelude.Show.primNumShow5_val_343.1 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.1 <- case idris_int_eq2.7.1 of
                    #False ->
                      pure ccp.3.1
                    #True ->
                      pure 1
                  case ccp.0.8.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.1 <- case idr_Prelude.Show.primNumShow5_val_342.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.1 <- pure #""
                  idris_str_eq3.28.1 <- _prim_string_eq idris_int_str2.0.0.1 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.1
                  ccp.2.28.1 <- case idris_str_eq3.28.1 of
                    #False ->
                      pure ccp.3.1
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.1 <- case ccp.2.28.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.1" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.1 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.1 <- _prim_string_head idris_int_str2.0.0.1
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.1 <- pure 45
                      idris_int_eq2.9.0.1 <- _prim_int_eq idris_str_head2.48.0.1 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.1
                      ccp.0.9.0.1 <- case idris_int_eq2.9.0.1 of
                        #False ->
                          pure ccp.3.1
                        #True ->
                          pure 1
                      case ccp.0.9.0.1 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.1"
              unboxed.CGrString.297.0 <- case idr_Prelude.Show.primNumShow5_val.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_int_str2.0.0.1
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.1 <- pure #")"
                  idris_str_concat3.3.1 <- _prim_string_concat idris_int_str2.0.0.1 idris_str_concat2_0.3.1
                  idris_str_concat1_0.4.1 <- pure #"("
                  idris_str_concat3.4.1 <- _prim_string_concat idris_str_concat1_0.4.1 idris_str_concat3.3.1
                  pure idris_str_concat3.4.1
              idr_Prelude.Show.protectEsc3.41.28.arity.1.1 <- pure #""
              idris_str_eq3.31.1 <- _prim_string_eq unboxed.CGrString.262 idr_Prelude.Show.protectEsc3.41.28.arity.1.1
              ccp.2.31.1 <- case idris_str_eq3.31.1 of
                #False ->
                  pure ccp.3.1
                #True ->
                  pure 1
              idr_Prelude.Show.protectEsc3_val_391.1 <- case ccp.2.31.1 of
                0 ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
              "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.34.1" <- pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.protectEsc3_val_389.1 <- case idr_Prelude.Show.protectEsc3_val_391.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idris_str_head2.51.0.1 <- _prim_string_head unboxed.CGrString.262
                  idr_Prelude.Chars.isDigit1.49.0.arity.1.0.0.1 <- pure 48
                  idris_int_eq2.13.0.0.1 <- _prim_int_eq idris_str_head2.51.0.1 idr_Prelude.Chars.isDigit1.49.0.arity.1.0.0.1
                  ccp.0.13.0.0.1 <- case idris_int_eq2.13.0.0.1 of
                    #False ->
                      pure ccp.3.1
                    #True ->
                      pure 1
                  idr_Prelude.Chars.isDigit1_val_9.0.0.1 <- case ccp.0.13.0.0.1 of
                    0 ->
                      idris_int_lt2.1.0.0.1 <- _prim_int_lt idris_str_head2.51.0.1 idr_Prelude.Chars.isDigit1.49.0.arity.1.0.0.1
                      ccp.1.1.0.0.1 <- case idris_int_lt2.1.0.0.1 of
                        #False ->
                          pure ccp.0.13.0.0.1
                        #True ->
                          pure 1
                      case ccp.1.1.0.0.1 of
                        0 ->
                          pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                        #default ->
                          pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
                  idr_Prelude.Chars.isDigit1_val.0.0.1 <- case idr_Prelude.Chars.isDigit1_val_9.0.0.1 of
                    (Cidr_Prelude.Interfaces.GT) ->
                      pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.34.1"
                    #default ->
                      ccp.0.10.0.1 <- case idris_int_eq2.13.0.0.1 of
                        #False ->
                          pure ccp.3.1
                        #True ->
                          pure 1
                      case ccp.0.10.0.1 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.34.1"
                  case idr_Prelude.Chars.isDigit1_val.0.0.1 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idr_Prelude.Chars.isDigit2_20.49.2.arity.1.0.0.1 <- pure 57
                      idris_int_eq2.13.1.0.1 <- _prim_int_eq idris_str_head2.51.0.1 idr_Prelude.Chars.isDigit2_20.49.2.arity.1.0.0.1
                      ccp.0.13.1.0.1 <- case idris_int_eq2.13.1.0.1 of
                        #False ->
                          pure ccp.3.1
                        #True ->
                          pure 1
                      idr_Prelude.Chars.isDigit2_val_18.0.0.1 <- case ccp.0.13.1.0.1 of
                        0 ->
                          idris_int_lt2.1.1.0.1 <- _prim_int_lt idris_str_head2.51.0.1 idr_Prelude.Chars.isDigit2_20.49.2.arity.1.0.0.1
                          ccp.1.1.1.0.1 <- case idris_int_lt2.1.1.0.1 of
                            #False ->
                              pure ccp.0.13.1.0.1
                            #True ->
                              pure 1
                          case ccp.1.1.1.0.1 of
                            0 ->
                              pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                            #default ->
                              pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                        #default ->
                          pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
                      case idr_Prelude.Chars.isDigit2_val_18.0.0.1 of
                        (Cidr_Prelude.Interfaces.LT) ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.34.1"
                        #default ->
                          ccp.0.11.0.1 <- case idris_int_eq2.13.1.0.1 of
                            #False ->
                              pure ccp.3.1
                            #True ->
                              pure 1
                          case ccp.0.11.0.1 of
                            0 ->
                              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                            #default ->
                              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.34.1"
              ccp.5.1 <- case idr_Prelude.Show.protectEsc3_val_389.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure idr_Prelude.Show.protectEsc3.41.28.arity.1.1
                (Cidr_Prelude.Bool.True) ->
                  pure #"\\&"
              idris_str_concat3.7.1 <- _prim_string_concat ccp.5.1 unboxed.CGrString.262
              idris_str_concat3.8.1 <- _prim_string_concat unboxed.CGrString.297.0 idris_str_concat3.7.1
              "idr_Prelude.Show.{showLitChar_27}2.49.47.arity.1.0" <- pure 92
              idris_str_cons3.17.1 <- _prim_string_cons "idr_Prelude.Show.{showLitChar_27}2.49.47.arity.1.0" idris_str_concat3.8.1
              pure idris_str_cons3.17.1 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_{APPLY_0}2_1456.10.49.22.arity.1")
            (C"idr_{U_prim__strCons_1}" "idr_{APPLY_0}2_1457.10") ->
              (CGrInt "idr_{APPLY_0}2_1457.10.49.23.arity.1") <- fetch "idr_{APPLY_0}2_1457.10"
              idris_str_cons3.17.2 <- _prim_string_cons "idr_{APPLY_0}2_1457.10.49.23.arity.1" unboxed.CGrString.262
              pure idris_str_cons3.17.2 -- LINT: The result of Fetch can only be bound to a variable: (CGrInt "idr_{APPLY_0}2_1457.10.49.23.arity.1")
    (Cidr_Prelude.List.Nil) ->
      pure idr_Prelude.Show.showLitString1.41.arity.1

idr_Main.toFormat idr_Main.toFormat0 =
  idr_Main.toFormat0_val <- fetch idr_Main.toFormat0
  case idr_Main.toFormat0_val of
    (Cidr_Prelude.List.:: idr_Main.toFormat1 idr_Main.toFormat2) ->
      idr_Main.toFormat1_val <- fetch idr_Main.toFormat1
      (CGrInt idr_Main.toFormat_cpat_LInt64_37) <- pure idr_Main.toFormat1_val
      case idr_Main.toFormat_cpat_LInt64_37 of
        37 ->
          idr_Main.toFormat2_val <- fetch idr_Main.toFormat2
          case idr_Main.toFormat2_val of
            (Cidr_Prelude.List.:: idr_Main.toFormat3 idr_Main.toFormat4) ->
              idr_Main.toFormat3_val <- fetch idr_Main.toFormat3
              (CGrInt idr_Main.toFormat_cpat_LInt64_100) <- pure idr_Main.toFormat3_val
              case idr_Main.toFormat_cpat_LInt64_100 of
                100 ->
                  idr_Main.toFormat5_val <- idr_Main.toFormat idr_Main.toFormat4
                  idr_Main.toFormat5 <- store idr_Main.toFormat5_val
                  pure (Cidr_Main.Number idr_Main.toFormat5) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Main.Number idr_Main.toFormat5)
                115 ->
                  idr_Main.toFormat5_val_451 <- idr_Main.toFormat idr_Main.toFormat4
                  idr_Main.toFormat5_452 <- store idr_Main.toFormat5_val_451
                  pure (Cidr_Main.Str idr_Main.toFormat5_452) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Main.Str idr_Main.toFormat5_452)
                #default ->
                  idr_Main.toFormat5_val_453 <- pure (CGrString #"%")
                  idr_Main.toFormat5_454 <- store idr_Main.toFormat5_val_453
                  idr_Main.toFormat6_val <- idr_Main.toFormat idr_Main.toFormat2
                  idr_Main.toFormat6 <- store idr_Main.toFormat6_val
                  pure (Cidr_Main.Lit idr_Main.toFormat5_454 idr_Main.toFormat6) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Main.Lit idr_Main.toFormat5_454 idr_Main.toFormat6)
            #default ->
              idr_Main.toFormat3_val_459 <- pure (CGrString #"%")
              idr_Main.toFormat3_460 <- store idr_Main.toFormat3_val_459
              idr_Main.toFormat4_val <- idr_Main.toFormat idr_Main.toFormat2
              idr_Main.toFormat4_461 <- store idr_Main.toFormat4_val
              pure (Cidr_Main.Lit idr_Main.toFormat3_460 idr_Main.toFormat4_461) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Main.Lit idr_Main.toFormat3_460 idr_Main.toFormat4_461)
        #default ->
          idr_Main.toFormat3_val_462 <- idr_Main.toFormat idr_Main.toFormat2
          case idr_Main.toFormat3_val_462 of
            (Cidr_Main.Lit idr_Main.toFormat4_465 idr_Main.toFormat5_466) ->
              (CGrInt idr_Main.toFormat1.41.34.arity.1) <- pure idr_Main.toFormat1_val
              (CGrString idr_Main.toFormat4_465.49.24.arity.1) <- fetch idr_Main.toFormat4_465
              idris_str_cons3.19 <- _prim_string_cons idr_Main.toFormat1.41.34.arity.1 idr_Main.toFormat4_465.49.24.arity.1
              idr_Main.toFormat6_val_467 <- pure (CGrString idris_str_cons3.19)
              idr_Main.toFormat6_468 <- store idr_Main.toFormat6_val_467
              pure (Cidr_Main.Lit idr_Main.toFormat6_468 idr_Main.toFormat5_466) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Main.Lit idr_Main.toFormat6_468 idr_Main.toFormat5_466) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr_Main.toFormat4_465.49.24.arity.1)
            #default ->
              (CGrInt idr_Main.toFormat1.41.35.arity.1) <- pure idr_Main.toFormat1_val
              idr_Main.toFormat4_471.49.25.arity.1 <- pure #""
              idris_str_cons3.20 <- _prim_string_cons idr_Main.toFormat1.41.35.arity.1 idr_Main.toFormat4_471.49.25.arity.1
              idr_Main.toFormat4_val_469 <- pure (CGrString idris_str_cons3.20)
              idr_Main.toFormat4_472 <- store idr_Main.toFormat4_val_469
              idr_Main.toFormat5_474 <- store idr_Main.toFormat3_val_462
              pure (Cidr_Main.Lit idr_Main.toFormat4_472 idr_Main.toFormat5_474) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Main.Lit idr_Main.toFormat4_472 idr_Main.toFormat5_474)
    (Cidr_Prelude.List.Nil) ->
      pure (Cidr_Main.End) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Main.End)

"idr_Data.Vect.{foldrImpl_1}" "idr_Data.Vect.{foldrImpl_1}0" "idr_Data.Vect.{foldrImpl_1}2" "idr_Data.Vect.{foldrImpl_1}3" =
  "idr_Data.Vect.{foldrImpl_1}4_val" <- pure (Cidr_Prelude.List.:: "idr_Data.Vect.{foldrImpl_1}2" "idr_Data.Vect.{foldrImpl_1}3")
  "idr_Data.Vect.{foldrImpl_1}4_1463" <- store "idr_Data.Vect.{foldrImpl_1}4_val"
  "idr_{APPLY_0}0_val.15" <- fetch "idr_Data.Vect.{foldrImpl_1}0"
  case "idr_{APPLY_0}0_val.15" of
    (C"idr_{U_Data.Vect.{foldrImpl_1}_1}" "idr_{APPLY_0}2.15" "idr_{APPLY_0}3.15" "idr_{APPLY_0}4.15") ->
      "idr_Data.Vect.{foldrImpl_1}" "idr_{APPLY_0}2.15" "idr_{APPLY_0}4.15" "idr_Data.Vect.{foldrImpl_1}4_1463"
    (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}") ->
      pure "idr_Data.Vect.{foldrImpl_1}4_val"

"idr_Main.{printFmt_14}" "idr_Main.{printFmt_14}0" "idr_Main.{printFmt_14}1.174.arity.1" "idr_Main.{printFmt_14}2" =
  -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idris_int_str1_0.0.0.6)
  -- LINT: Invalid pattern match for (CGrInt idris_int_str1_0.0.0.6). Expected pattern of type: {CGrInt[T_Int64]}, but got: {CGrInt[T_Int64]
  ,CGrString[T_String]}
  (CGrInt idris_int_str1_0.0.0.6) <- fetch "idr_Main.{printFmt_14}2"
  idris_int_str2.0.0.6 <- _prim_int_str idris_int_str1_0.0.0.6
  ccp.3.6 <- pure 0
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.6" <- pure 5
  idris_int_eq2.7.6 <- _prim_int_eq ccp.3.6 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.6"
  ccp.0.7.6 <- case idris_int_eq2.7.6 of
    #False ->
      pure ccp.3.6
    #True ->
      pure 1
  idr_Prelude.Show.primNumShow5_val_343.6 <- case ccp.0.7.6 of
    0 ->
      idris_int_lt2.0.6 <- _prim_int_lt ccp.3.6 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.6"
      ccp.1.0.6 <- case idris_int_lt2.0.6 of
        #False ->
          pure ccp.0.7.6
        #True ->
          pure 1
      case ccp.1.0.6 of
        0 ->
          pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
        #default ->
          pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
    #default ->
      pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
  idr_Prelude.Show.primNumShow5_val_342.6 <- case idr_Prelude.Show.primNumShow5_val_343.6 of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
    #default ->
      ccp.0.8.6 <- case idris_int_eq2.7.6 of
        #False ->
          pure ccp.3.6
        #True ->
          pure 1
      case ccp.0.8.6 of
        0 ->
          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_val.6 <- case idr_Prelude.Show.primNumShow5_val_342.6 of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_359.41.23.arity.1.6 <- pure #""
      idris_str_eq3.28.6 <- _prim_string_eq idris_int_str2.0.0.6 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.6
      ccp.2.28.6 <- case idris_str_eq3.28.6 of
        #False ->
          pure ccp.3.6
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow6_val_356.6 <- case ccp.2.28.6 of
        0 ->
          pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.6" <- pure (Cidr_Prelude.Bool.True)
      case idr_Prelude.Show.primNumShow6_val_356.6 of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
        (Cidr_Prelude.Bool.True) ->
          idris_str_head2.48.0.6 <- _prim_string_head idris_int_str2.0.0.6
          idr_Prelude.Show.primNumShow8.41.25.arity.1.0.6 <- pure 45
          idris_int_eq2.9.0.6 <- _prim_int_eq idris_str_head2.48.0.6 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.6
          ccp.0.9.0.6 <- case idris_int_eq2.9.0.6 of
            #False ->
              pure ccp.3.6
            #True ->
              pure 1
          case ccp.0.9.0.6 of
            0 ->
              pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
            #default ->
              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.6"
  unboxed.CGrString.293 <- case idr_Prelude.Show.primNumShow5_val.6 of
    (Cidr_Prelude.Bool.False) ->
      pure idris_int_str2.0.0.6
    (Cidr_Prelude.Bool.True) ->
      idris_str_concat2_0.3.6 <- pure #")"
      idris_str_concat3.3.6 <- _prim_string_concat idris_int_str2.0.0.6 idris_str_concat2_0.3.6
      idris_str_concat1_0.4.6 <- pure #"("
      idris_str_concat3.4.6 <- _prim_string_concat idris_str_concat1_0.4.6 idris_str_concat3.3.6
      pure idris_str_concat3.4.6
  idris_str_concat3.28 <- _prim_string_concat "idr_Main.{printFmt_14}1.174.arity.1" unboxed.CGrString.293
  "idr_Main.{printFmt_14}3_val" <- pure (CGrString idris_str_concat3.28)
  "idr_Main.{printFmt_14}3_1536" <- store "idr_Main.{printFmt_14}3_val"
  idr_Main.printFmt "idr_Main.{printFmt_14}0" "idr_Main.{printFmt_14}3_1536"

"idr_Main.{printFmt_15}" "idr_Main.{printFmt_15}0" "idr_Main.{printFmt_15}1.174.arity.1" "idr_Main.{printFmt_15}2" =
  -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_concat2_0.29)
  -- LINT: Invalid pattern match for (CGrString idris_str_concat2_0.29). Expected pattern of type: {CGrString[T_String]}, but got: {CGrInt[T_Int64]
  ,CGrString[T_String]}
  (CGrString idris_str_concat2_0.29) <- fetch "idr_Main.{printFmt_15}2"
  idris_str_concat3.29 <- _prim_string_concat "idr_Main.{printFmt_15}1.174.arity.1" idris_str_concat2_0.29
  "idr_Main.{printFmt_15}3_val" <- pure (CGrString idris_str_concat3.29)
  "idr_Main.{printFmt_15}3" <- store "idr_Main.{printFmt_15}3_val"
  idr_Main.printFmt "idr_Main.{printFmt_15}0" "idr_Main.{printFmt_15}3"

"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.174.arity.1" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" =
  "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04"
  case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06") ->
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
      case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" of
        (Cidr_Prelude.List.Nil) ->
          "idr_{APPLY_0}0_val.16" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02"
          ccp.12 <- case "idr_{APPLY_0}0_val.16" of
            (C"idr_{U_Main.{main_2}_1}") ->
              (Cidr_Builtins.MkPair "idr_{APPLY_0}1.16.49.48.arity.1" "idr_{APPLY_0}1.16.49.48.arity.2") <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
              (CGrFloat idris_float_str1_0.0.0.2.0) <- fetch "idr_{APPLY_0}1.16.49.48.arity.1"
              idris_float_str2.0.0.2.0 <- _prim_float_string idris_float_str1_0.0.0.2.0
              ccp.3.2.0 <- pure 0
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.0" <- pure 5
              idris_int_eq2.7.2.0 <- _prim_int_eq ccp.3.2.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.0"
              ccp.0.7.2.0 <- case idris_int_eq2.7.2.0 of
                #False ->
                  pure ccp.3.2.0
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.2.0 <- case ccp.0.7.2.0 of
                0 ->
                  idris_int_lt2.0.2.0 <- _prim_int_lt ccp.3.2.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.0"
                  ccp.1.0.2.0 <- case idris_int_lt2.0.2.0 of
                    #False ->
                      pure ccp.0.7.2.0
                    #True ->
                      pure 1
                  case ccp.1.0.2.0 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.2.0 <- case idr_Prelude.Show.primNumShow5_val_343.2.0 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.2.0 <- case idris_int_eq2.7.2.0 of
                    #False ->
                      pure ccp.3.2.0
                    #True ->
                      pure 1
                  case ccp.0.8.2.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.2.0 <- case idr_Prelude.Show.primNumShow5_val_342.2.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.2.0 <- pure #""
                  idris_str_eq3.28.2.0 <- _prim_string_eq idris_float_str2.0.0.2.0 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.2.0
                  ccp.2.28.2.0 <- case idris_str_eq3.28.2.0 of
                    #False ->
                      pure ccp.3.2.0
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.2.0 <- case ccp.2.28.2.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.2.0" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.2.0 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.2.0 <- _prim_string_head idris_float_str2.0.0.2.0
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.2.0 <- pure 45
                      idris_int_eq2.9.0.2.0 <- _prim_int_eq idris_str_head2.48.0.2.0 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.2.0
                      ccp.0.9.0.2.0 <- case idris_int_eq2.9.0.2.0 of
                        #False ->
                          pure ccp.3.2.0
                        #True ->
                          pure 1
                      case ccp.0.9.0.2.0 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.2.0"
              unboxed.CGrString.282.0 <- case idr_Prelude.Show.primNumShow5_val.2.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.2.0
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.2.0 <- pure #")"
                  idris_str_concat3.3.2.0 <- _prim_string_concat idris_float_str2.0.0.2.0 idris_str_concat2_0.3.2.0
                  idris_str_concat1_0.4.2.0 <- pure #"("
                  idris_str_concat3.4.2.0 <- _prim_string_concat idris_str_concat1_0.4.2.0 idris_str_concat3.3.2.0
                  pure idris_str_concat3.4.2.0
              (CGrFloat idris_float_str1_0.0.0.3.0) <- fetch "idr_{APPLY_0}1.16.49.48.arity.2"
              idris_float_str2.0.0.3.0 <- _prim_float_string idris_float_str1_0.0.0.3.0
              ccp.0.7.3.0 <- case idris_int_eq2.7.2.0 of
                #False ->
                  pure ccp.3.2.0
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.3.0 <- case ccp.0.7.3.0 of
                0 ->
                  idris_int_lt2.0.3.0 <- _prim_int_lt ccp.3.2.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.0"
                  ccp.1.0.3.0 <- case idris_int_lt2.0.3.0 of
                    #False ->
                      pure ccp.0.7.3.0
                    #True ->
                      pure 1
                  case ccp.1.0.3.0 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.3.0 <- case idr_Prelude.Show.primNumShow5_val_343.3.0 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.3.0 <- case idris_int_eq2.7.2.0 of
                    #False ->
                      pure ccp.3.2.0
                    #True ->
                      pure 1
                  case ccp.0.8.3.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.3.0 <- case idr_Prelude.Show.primNumShow5_val_342.3.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.3.0 <- pure #""
                  idris_str_eq3.28.3.0 <- _prim_string_eq idris_float_str2.0.0.3.0 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.3.0
                  ccp.2.28.3.0 <- case idris_str_eq3.28.3.0 of
                    #False ->
                      pure ccp.3.2.0
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.3.0 <- case ccp.2.28.3.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.3.0" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.3.0 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.3.0 <- _prim_string_head idris_float_str2.0.0.3.0
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.3.0 <- pure 45
                      idris_int_eq2.9.0.3.0 <- _prim_int_eq idris_str_head2.48.0.3.0 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.3.0
                      ccp.0.9.0.3.0 <- case idris_int_eq2.9.0.3.0 of
                        #False ->
                          pure ccp.3.2.0
                        #True ->
                          pure 1
                      case ccp.0.9.0.3.0 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.3.0"
              unboxed.CGrString.283.0 <- case idr_Prelude.Show.primNumShow5_val.3.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.3.0
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.3.0 <- pure #")"
                  idris_str_concat3.3.3.0 <- _prim_string_concat idris_float_str2.0.0.3.0 idris_str_concat2_0.3.3.0
                  idris_str_concat1_0.4.3.0 <- pure #"("
                  idris_str_concat3.4.3.0 <- _prim_string_concat idris_str_concat1_0.4.3.0 idris_str_concat3.3.3.0
                  pure idris_str_concat3.4.3.0
              idris_str_concat2_0.20.0 <- pure #")"
              idris_str_concat3.20.0 <- _prim_string_concat unboxed.CGrString.283.0 idris_str_concat2_0.20.0
              idris_str_concat1_0.21.0 <- pure #", "
              idris_str_concat3.21.0 <- _prim_string_concat idris_str_concat1_0.21.0 idris_str_concat3.20.0
              idris_str_concat3.22.0 <- _prim_string_concat unboxed.CGrString.282.0 idris_str_concat3.21.0
              idris_str_concat1_0.23.0 <- pure #"("
              idris_str_concat3.23.0 <- _prim_string_concat idris_str_concat1_0.23.0 idris_str_concat3.22.0
              pure idris_str_concat3.23.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.3.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.2.0) -- LINT: The result of Fetch can only be bound to a variable: (Cidr_Builtins.MkPair "idr_{APPLY_0}1.16.49.48.arity.1" "idr_{APPLY_0}1.16.49.48.arity.2")
            (C"idr_{U_Main.{main_4}_1}") ->
              (Cidr_Builtins.MkPair "idr_{APPLY_0}1.16.49.49.arity.1" "idr_{APPLY_0}1.16.49.49.arity.2") <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
              (CGrFloat idris_float_str1_0.0.0.4.0) <- fetch "idr_{APPLY_0}1.16.49.49.arity.1"
              idris_float_str2.0.0.4.0 <- _prim_float_string idris_float_str1_0.0.0.4.0
              ccp.3.4.0 <- pure 0
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.0" <- pure 5
              idris_int_eq2.7.4.0 <- _prim_int_eq ccp.3.4.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.0"
              ccp.0.7.4.0 <- case idris_int_eq2.7.4.0 of
                #False ->
                  pure ccp.3.4.0
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.4.0 <- case ccp.0.7.4.0 of
                0 ->
                  idris_int_lt2.0.4.0 <- _prim_int_lt ccp.3.4.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.0"
                  ccp.1.0.4.0 <- case idris_int_lt2.0.4.0 of
                    #False ->
                      pure ccp.0.7.4.0
                    #True ->
                      pure 1
                  case ccp.1.0.4.0 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.4.0 <- case idr_Prelude.Show.primNumShow5_val_343.4.0 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.4.0 <- case idris_int_eq2.7.4.0 of
                    #False ->
                      pure ccp.3.4.0
                    #True ->
                      pure 1
                  case ccp.0.8.4.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.4.0 <- case idr_Prelude.Show.primNumShow5_val_342.4.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.4.0 <- pure #""
                  idris_str_eq3.28.4.0 <- _prim_string_eq idris_float_str2.0.0.4.0 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.4.0
                  ccp.2.28.4.0 <- case idris_str_eq3.28.4.0 of
                    #False ->
                      pure ccp.3.4.0
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.4.0 <- case ccp.2.28.4.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.4.0" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.4.0 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.4.0 <- _prim_string_head idris_float_str2.0.0.4.0
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.4.0 <- pure 45
                      idris_int_eq2.9.0.4.0 <- _prim_int_eq idris_str_head2.48.0.4.0 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.4.0
                      ccp.0.9.0.4.0 <- case idris_int_eq2.9.0.4.0 of
                        #False ->
                          pure ccp.3.4.0
                        #True ->
                          pure 1
                      case ccp.0.9.0.4.0 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.4.0"
              unboxed.CGrString.287.0 <- case idr_Prelude.Show.primNumShow5_val.4.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.4.0
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.4.0 <- pure #")"
                  idris_str_concat3.3.4.0 <- _prim_string_concat idris_float_str2.0.0.4.0 idris_str_concat2_0.3.4.0
                  idris_str_concat1_0.4.4.0 <- pure #"("
                  idris_str_concat3.4.4.0 <- _prim_string_concat idris_str_concat1_0.4.4.0 idris_str_concat3.3.4.0
                  pure idris_str_concat3.4.4.0
              (CGrFloat idris_float_str1_0.0.0.5.0) <- fetch "idr_{APPLY_0}1.16.49.49.arity.2"
              idris_float_str2.0.0.5.0 <- _prim_float_string idris_float_str1_0.0.0.5.0
              ccp.0.7.5.0 <- case idris_int_eq2.7.4.0 of
                #False ->
                  pure ccp.3.4.0
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.5.0 <- case ccp.0.7.5.0 of
                0 ->
                  idris_int_lt2.0.5.0 <- _prim_int_lt ccp.3.4.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.0"
                  ccp.1.0.5.0 <- case idris_int_lt2.0.5.0 of
                    #False ->
                      pure ccp.0.7.5.0
                    #True ->
                      pure 1
                  case ccp.1.0.5.0 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.5.0 <- case idr_Prelude.Show.primNumShow5_val_343.5.0 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.5.0 <- case idris_int_eq2.7.4.0 of
                    #False ->
                      pure ccp.3.4.0
                    #True ->
                      pure 1
                  case ccp.0.8.5.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.5.0 <- case idr_Prelude.Show.primNumShow5_val_342.5.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.5.0 <- pure #""
                  idris_str_eq3.28.5.0 <- _prim_string_eq idris_float_str2.0.0.5.0 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.5.0
                  ccp.2.28.5.0 <- case idris_str_eq3.28.5.0 of
                    #False ->
                      pure ccp.3.4.0
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.5.0 <- case ccp.2.28.5.0 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.5.0" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.5.0 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.5.0 <- _prim_string_head idris_float_str2.0.0.5.0
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.5.0 <- pure 45
                      idris_int_eq2.9.0.5.0 <- _prim_int_eq idris_str_head2.48.0.5.0 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.5.0
                      ccp.0.9.0.5.0 <- case idris_int_eq2.9.0.5.0 of
                        #False ->
                          pure ccp.3.4.0
                        #True ->
                          pure 1
                      case ccp.0.9.0.5.0 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.5.0"
              unboxed.CGrString.288.0 <- case idr_Prelude.Show.primNumShow5_val.5.0 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.5.0
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.5.0 <- pure #")"
                  idris_str_concat3.3.5.0 <- _prim_string_concat idris_float_str2.0.0.5.0 idris_str_concat2_0.3.5.0
                  idris_str_concat1_0.4.5.0 <- pure #"("
                  idris_str_concat3.4.5.0 <- _prim_string_concat idris_str_concat1_0.4.5.0 idris_str_concat3.3.5.0
                  pure idris_str_concat3.4.5.0
              idris_str_concat2_0.24.0 <- pure #")"
              idris_str_concat3.24.0 <- _prim_string_concat unboxed.CGrString.288.0 idris_str_concat2_0.24.0
              idris_str_concat1_0.25.0 <- pure #", "
              idris_str_concat3.25.0 <- _prim_string_concat idris_str_concat1_0.25.0 idris_str_concat3.24.0
              idris_str_concat3.26.0 <- _prim_string_concat unboxed.CGrString.287.0 idris_str_concat3.25.0
              idris_str_concat1_0.27.0 <- pure #"("
              idris_str_concat3.27.0 <- _prim_string_concat idris_str_concat1_0.27.0 idris_str_concat3.26.0
              pure idris_str_concat3.27.0 -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.5.0) -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.4.0) -- LINT: The result of Fetch can only be bound to a variable: (Cidr_Builtins.MkPair "idr_{APPLY_0}1.16.49.49.arity.1" "idr_{APPLY_0}1.16.49.49.arity.2")
          idris_str_concat3.30 <- _prim_string_concat "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.174.arity.1" ccp.12
          pure idris_str_concat3.30
        #default ->
          "idr_{APPLY_0}0_val.17" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02"
          ccp.13 <- case "idr_{APPLY_0}0_val.17" of
            (C"idr_{U_Main.{main_2}_1}") ->
              (Cidr_Builtins.MkPair "idr_{APPLY_0}1.17.49.50.arity.1" "idr_{APPLY_0}1.17.49.50.arity.2") <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
              (CGrFloat idris_float_str1_0.0.0.2.1) <- fetch "idr_{APPLY_0}1.17.49.50.arity.1"
              idris_float_str2.0.0.2.1 <- _prim_float_string idris_float_str1_0.0.0.2.1
              ccp.3.2.1 <- pure 0
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.1" <- pure 5
              idris_int_eq2.7.2.1 <- _prim_int_eq ccp.3.2.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.1"
              ccp.0.7.2.1 <- case idris_int_eq2.7.2.1 of
                #False ->
                  pure ccp.3.2.1
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.2.1 <- case ccp.0.7.2.1 of
                0 ->
                  idris_int_lt2.0.2.1 <- _prim_int_lt ccp.3.2.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.1"
                  ccp.1.0.2.1 <- case idris_int_lt2.0.2.1 of
                    #False ->
                      pure ccp.0.7.2.1
                    #True ->
                      pure 1
                  case ccp.1.0.2.1 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.2.1 <- case idr_Prelude.Show.primNumShow5_val_343.2.1 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.2.1 <- case idris_int_eq2.7.2.1 of
                    #False ->
                      pure ccp.3.2.1
                    #True ->
                      pure 1
                  case ccp.0.8.2.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.2.1 <- case idr_Prelude.Show.primNumShow5_val_342.2.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.2.1 <- pure #""
                  idris_str_eq3.28.2.1 <- _prim_string_eq idris_float_str2.0.0.2.1 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.2.1
                  ccp.2.28.2.1 <- case idris_str_eq3.28.2.1 of
                    #False ->
                      pure ccp.3.2.1
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.2.1 <- case ccp.2.28.2.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.2.1" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.2.1 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.2.1 <- _prim_string_head idris_float_str2.0.0.2.1
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.2.1 <- pure 45
                      idris_int_eq2.9.0.2.1 <- _prim_int_eq idris_str_head2.48.0.2.1 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.2.1
                      ccp.0.9.0.2.1 <- case idris_int_eq2.9.0.2.1 of
                        #False ->
                          pure ccp.3.2.1
                        #True ->
                          pure 1
                      case ccp.0.9.0.2.1 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.2.1"
              unboxed.CGrString.282.1 <- case idr_Prelude.Show.primNumShow5_val.2.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.2.1
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.2.1 <- pure #")"
                  idris_str_concat3.3.2.1 <- _prim_string_concat idris_float_str2.0.0.2.1 idris_str_concat2_0.3.2.1
                  idris_str_concat1_0.4.2.1 <- pure #"("
                  idris_str_concat3.4.2.1 <- _prim_string_concat idris_str_concat1_0.4.2.1 idris_str_concat3.3.2.1
                  pure idris_str_concat3.4.2.1
              (CGrFloat idris_float_str1_0.0.0.3.1) <- fetch "idr_{APPLY_0}1.17.49.50.arity.2"
              idris_float_str2.0.0.3.1 <- _prim_float_string idris_float_str1_0.0.0.3.1
              ccp.0.7.3.1 <- case idris_int_eq2.7.2.1 of
                #False ->
                  pure ccp.3.2.1
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.3.1 <- case ccp.0.7.3.1 of
                0 ->
                  idris_int_lt2.0.3.1 <- _prim_int_lt ccp.3.2.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.2.1"
                  ccp.1.0.3.1 <- case idris_int_lt2.0.3.1 of
                    #False ->
                      pure ccp.0.7.3.1
                    #True ->
                      pure 1
                  case ccp.1.0.3.1 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.3.1 <- case idr_Prelude.Show.primNumShow5_val_343.3.1 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.3.1 <- case idris_int_eq2.7.2.1 of
                    #False ->
                      pure ccp.3.2.1
                    #True ->
                      pure 1
                  case ccp.0.8.3.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.3.1 <- case idr_Prelude.Show.primNumShow5_val_342.3.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.3.1 <- pure #""
                  idris_str_eq3.28.3.1 <- _prim_string_eq idris_float_str2.0.0.3.1 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.3.1
                  ccp.2.28.3.1 <- case idris_str_eq3.28.3.1 of
                    #False ->
                      pure ccp.3.2.1
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.3.1 <- case ccp.2.28.3.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.3.1" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.3.1 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.3.1 <- _prim_string_head idris_float_str2.0.0.3.1
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.3.1 <- pure 45
                      idris_int_eq2.9.0.3.1 <- _prim_int_eq idris_str_head2.48.0.3.1 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.3.1
                      ccp.0.9.0.3.1 <- case idris_int_eq2.9.0.3.1 of
                        #False ->
                          pure ccp.3.2.1
                        #True ->
                          pure 1
                      case ccp.0.9.0.3.1 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.3.1"
              unboxed.CGrString.283.1 <- case idr_Prelude.Show.primNumShow5_val.3.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.3.1
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.3.1 <- pure #")"
                  idris_str_concat3.3.3.1 <- _prim_string_concat idris_float_str2.0.0.3.1 idris_str_concat2_0.3.3.1
                  idris_str_concat1_0.4.3.1 <- pure #"("
                  idris_str_concat3.4.3.1 <- _prim_string_concat idris_str_concat1_0.4.3.1 idris_str_concat3.3.3.1
                  pure idris_str_concat3.4.3.1
              idris_str_concat2_0.20.1 <- pure #")"
              idris_str_concat3.20.1 <- _prim_string_concat unboxed.CGrString.283.1 idris_str_concat2_0.20.1
              idris_str_concat1_0.21.1 <- pure #", "
              idris_str_concat3.21.1 <- _prim_string_concat idris_str_concat1_0.21.1 idris_str_concat3.20.1
              idris_str_concat3.22.1 <- _prim_string_concat unboxed.CGrString.282.1 idris_str_concat3.21.1
              idris_str_concat1_0.23.1 <- pure #"("
              idris_str_concat3.23.1 <- _prim_string_concat idris_str_concat1_0.23.1 idris_str_concat3.22.1
              pure idris_str_concat3.23.1 -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.3.1) -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.2.1) -- LINT: The result of Fetch can only be bound to a variable: (Cidr_Builtins.MkPair "idr_{APPLY_0}1.17.49.50.arity.1" "idr_{APPLY_0}1.17.49.50.arity.2")
            (C"idr_{U_Main.{main_4}_1}") ->
              (Cidr_Builtins.MkPair "idr_{APPLY_0}1.17.49.51.arity.1" "idr_{APPLY_0}1.17.49.51.arity.2") <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
              (CGrFloat idris_float_str1_0.0.0.4.1) <- fetch "idr_{APPLY_0}1.17.49.51.arity.1"
              idris_float_str2.0.0.4.1 <- _prim_float_string idris_float_str1_0.0.0.4.1
              ccp.3.4.1 <- pure 0
              "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.1" <- pure 5
              idris_int_eq2.7.4.1 <- _prim_int_eq ccp.3.4.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.1"
              ccp.0.7.4.1 <- case idris_int_eq2.7.4.1 of
                #False ->
                  pure ccp.3.4.1
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.4.1 <- case ccp.0.7.4.1 of
                0 ->
                  idris_int_lt2.0.4.1 <- _prim_int_lt ccp.3.4.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.1"
                  ccp.1.0.4.1 <- case idris_int_lt2.0.4.1 of
                    #False ->
                      pure ccp.0.7.4.1
                    #True ->
                      pure 1
                  case ccp.1.0.4.1 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.4.1 <- case idr_Prelude.Show.primNumShow5_val_343.4.1 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.4.1 <- case idris_int_eq2.7.4.1 of
                    #False ->
                      pure ccp.3.4.1
                    #True ->
                      pure 1
                  case ccp.0.8.4.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.4.1 <- case idr_Prelude.Show.primNumShow5_val_342.4.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.4.1 <- pure #""
                  idris_str_eq3.28.4.1 <- _prim_string_eq idris_float_str2.0.0.4.1 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.4.1
                  ccp.2.28.4.1 <- case idris_str_eq3.28.4.1 of
                    #False ->
                      pure ccp.3.4.1
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.4.1 <- case ccp.2.28.4.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.4.1" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.4.1 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.4.1 <- _prim_string_head idris_float_str2.0.0.4.1
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.4.1 <- pure 45
                      idris_int_eq2.9.0.4.1 <- _prim_int_eq idris_str_head2.48.0.4.1 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.4.1
                      ccp.0.9.0.4.1 <- case idris_int_eq2.9.0.4.1 of
                        #False ->
                          pure ccp.3.4.1
                        #True ->
                          pure 1
                      case ccp.0.9.0.4.1 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.4.1"
              unboxed.CGrString.287.1 <- case idr_Prelude.Show.primNumShow5_val.4.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.4.1
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.4.1 <- pure #")"
                  idris_str_concat3.3.4.1 <- _prim_string_concat idris_float_str2.0.0.4.1 idris_str_concat2_0.3.4.1
                  idris_str_concat1_0.4.4.1 <- pure #"("
                  idris_str_concat3.4.4.1 <- _prim_string_concat idris_str_concat1_0.4.4.1 idris_str_concat3.3.4.1
                  pure idris_str_concat3.4.4.1
              (CGrFloat idris_float_str1_0.0.0.5.1) <- fetch "idr_{APPLY_0}1.17.49.51.arity.2"
              idris_float_str2.0.0.5.1 <- _prim_float_string idris_float_str1_0.0.0.5.1
              ccp.0.7.5.1 <- case idris_int_eq2.7.4.1 of
                #False ->
                  pure ccp.3.4.1
                #True ->
                  pure 1
              idr_Prelude.Show.primNumShow5_val_343.5.1 <- case ccp.0.7.5.1 of
                0 ->
                  idris_int_lt2.0.5.1 <- _prim_int_lt ccp.3.4.1 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.41.212.arity.1.0.4.1"
                  ccp.1.0.5.1 <- case idris_int_lt2.0.5.1 of
                    #False ->
                      pure ccp.0.7.5.1
                    #True ->
                      pure 1
                  case ccp.1.0.5.1 of
                    0 ->
                      pure (Cidr_Prelude.Interfaces.GT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.GT)
                    #default ->
                      pure (Cidr_Prelude.Interfaces.LT) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.EQ) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Interfaces.EQ)
              idr_Prelude.Show.primNumShow5_val_342.5.1 <- case idr_Prelude.Show.primNumShow5_val_343.5.1 of
                (Cidr_Prelude.Interfaces.GT) ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  ccp.0.8.5.1 <- case idris_int_eq2.7.4.1 of
                    #False ->
                      pure ccp.3.4.1
                    #True ->
                      pure 1
                  case ccp.0.8.5.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
              idr_Prelude.Show.primNumShow5_val.5.1 <- case idr_Prelude.Show.primNumShow5_val_342.5.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                (Cidr_Prelude.Bool.True) ->
                  idr_Prelude.Show.primNumShow6_359.41.23.arity.1.5.1 <- pure #""
                  idris_str_eq3.28.5.1 <- _prim_string_eq idris_float_str2.0.0.5.1 idr_Prelude.Show.primNumShow6_359.41.23.arity.1.5.1
                  ccp.2.28.5.1 <- case idris_str_eq3.28.5.1 of
                    #False ->
                      pure ccp.3.4.1
                    #True ->
                      pure 1
                  idr_Prelude.Show.primNumShow6_val_356.5.1 <- case ccp.2.28.5.1 of
                    0 ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.5.1" <- pure (Cidr_Prelude.Bool.True)
                  case idr_Prelude.Show.primNumShow6_val_356.5.1 of
                    (Cidr_Prelude.Bool.False) ->
                      pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                    (Cidr_Prelude.Bool.True) ->
                      idris_str_head2.48.0.5.1 <- _prim_string_head idris_float_str2.0.0.5.1
                      idr_Prelude.Show.primNumShow8.41.25.arity.1.0.5.1 <- pure 45
                      idris_int_eq2.9.0.5.1 <- _prim_int_eq idris_str_head2.48.0.5.1 idr_Prelude.Show.primNumShow8.41.25.arity.1.0.5.1
                      ccp.0.9.0.5.1 <- case idris_int_eq2.9.0.5.1 of
                        #False ->
                          pure ccp.3.4.1
                        #True ->
                          pure 1
                      case ccp.0.9.0.5.1 of
                        0 ->
                          pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                        #default ->
                          pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.31.5.1"
              unboxed.CGrString.288.1 <- case idr_Prelude.Show.primNumShow5_val.5.1 of
                (Cidr_Prelude.Bool.False) ->
                  pure idris_float_str2.0.0.5.1
                (Cidr_Prelude.Bool.True) ->
                  idris_str_concat2_0.3.5.1 <- pure #")"
                  idris_str_concat3.3.5.1 <- _prim_string_concat idris_float_str2.0.0.5.1 idris_str_concat2_0.3.5.1
                  idris_str_concat1_0.4.5.1 <- pure #"("
                  idris_str_concat3.4.5.1 <- _prim_string_concat idris_str_concat1_0.4.5.1 idris_str_concat3.3.5.1
                  pure idris_str_concat3.4.5.1
              idris_str_concat2_0.24.1 <- pure #")"
              idris_str_concat3.24.1 <- _prim_string_concat unboxed.CGrString.288.1 idris_str_concat2_0.24.1
              idris_str_concat1_0.25.1 <- pure #", "
              idris_str_concat3.25.1 <- _prim_string_concat idris_str_concat1_0.25.1 idris_str_concat3.24.1
              idris_str_concat3.26.1 <- _prim_string_concat unboxed.CGrString.287.1 idris_str_concat3.25.1
              idris_str_concat1_0.27.1 <- pure #"("
              idris_str_concat3.27.1 <- _prim_string_concat idris_str_concat1_0.27.1 idris_str_concat3.26.1
              pure idris_str_concat3.27.1 -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.5.1) -- LINT: The result of Fetch can only be bound to a variable: (CGrFloat idris_float_str1_0.0.0.4.1) -- LINT: The result of Fetch can only be bound to a variable: (Cidr_Builtins.MkPair "idr_{APPLY_0}1.17.49.51.arity.1" "idr_{APPLY_0}1.17.49.51.arity.2")
          idris_str_concat2_0.31 <- pure #", "
          idris_str_concat3.31 <- _prim_string_concat ccp.13 idris_str_concat2_0.31
          idris_str_concat3.32 <- _prim_string_concat "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.174.arity.1" idris_str_concat3.31
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" idris_str_concat3.32 "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.174.arity.1"

"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.unboxed" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:02" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:03" =
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011_val" <- pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}")
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012_val" <- pure (Cidr_Prelude.List.Nil)
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013_val" <- pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}")
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val" <- idr_Data.Vect.foldrImpl "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:03"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_1566" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val"
  "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07.174.9.arity.1" <- pure #""
  unboxed.CGrString.244 <- "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:02" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07.174.9.arity.1" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_1566"
  idris_str_concat2_0.33 <- pure #"]"
  idris_str_concat3.33 <- _prim_string_concat unboxed.CGrString.244 idris_str_concat2_0.33
  idris_str_concat1_0.34 <- pure #"["
  idris_str_concat3.34 <- _prim_string_concat idris_str_concat1_0.34 idris_str_concat3.33
  pure idris_str_concat3.34

idr_Prelude.Show.showLitChar:getAt:10 idr_Prelude.Show.showLitChar:getAt:101.49.arity.1 idr_Prelude.Show.showLitChar:getAt:102 =
  idr_Prelude.Show.showLitChar:getAt:102_val <- fetch idr_Prelude.Show.showLitChar:getAt:102
  case idr_Prelude.Show.showLitChar:getAt:102_val of
    (Cidr_Prelude.List.:: idr_Prelude.Show.showLitChar:getAt:103 idr_Prelude.Show.showLitChar:getAt:104) ->
      case idr_Prelude.Show.showLitChar:getAt:101.49.arity.1 of
        0 ->
          pure (Cidr_Prelude.Maybe.Just idr_Prelude.Show.showLitChar:getAt:103) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Maybe.Just idr_Prelude.Show.showLitChar:getAt:103)
        #default ->
          idr_Prelude.Show.showLitChar:getAt:105.41.214.arity.1 <- pure 1
          idris_int_sub2.1 <- _prim_int_sub idr_Prelude.Show.showLitChar:getAt:101.49.arity.1 idr_Prelude.Show.showLitChar:getAt:105.41.214.arity.1
          idr_Prelude.Show.showLitChar:getAt:10 idris_int_sub2.1 idr_Prelude.Show.showLitChar:getAt:104
    (Cidr_Prelude.List.Nil) ->
      pure (Cidr_Prelude.Maybe.Nothing) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Maybe.Nothing)

idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_361 =
  idr__Prelude.Strings.unpack_with_361_val <- fetch idr__Prelude.Strings.unpack_with_361
  case idr__Prelude.Strings.unpack_with_361_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_363) ->
      idr__Prelude.Strings.unpack_with_365.41.215.arity.1 <- pure #""
      (CGrString idris_str_eq1_0.32) <- fetch idr__Prelude.Strings.unpack_with_363
      idris_str_eq3.32 <- _prim_string_eq idris_str_eq1_0.32 idr__Prelude.Strings.unpack_with_365.41.215.arity.1
      ccp.2.32 <- case idris_str_eq3.32 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr__Prelude.Strings.unpack_with_365_val <- case ccp.2.32 of
        0 ->
          idris_str_head2.52.0.0 <- _prim_string_head idris_str_eq1_0.32
          idr__Prelude.Strings.unpack_with_366_val_1651.0.0 <- pure (CGrInt idris_str_head2.52.0.0)
          idr__Prelude.Strings.unpack_with_366_1652.0.0 <- store idr__Prelude.Strings.unpack_with_366_val_1651.0.0
          idris_str_tail2.140.0.0 <- _prim_string_tail idris_str_eq1_0.32
          idr__Prelude.Strings.unpack_with_367_val.0.0 <- pure (CGrString idris_str_tail2.140.0.0)
          idr__Prelude.Strings.unpack_with_367.0.0 <- store idr__Prelude.Strings.unpack_with_367_val.0.0
          pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_1652.0.0 idr__Prelude.Strings.unpack_with_367.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.unpack_with_366_1652.0.0 idr__Prelude.Strings.unpack_with_367.0.0)
        #default ->
          pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
      idr__Prelude.Strings.unpack_with_365_1653 <- store idr__Prelude.Strings.unpack_with_365_val
      idr__Prelude.Strings.unpack_with_364_val <- idr__Prelude.Strings.unpack_with_36 idr__Prelude.Strings.unpack_with_365_1653
      idr__Prelude.Strings.unpack_with_364_1654 <- store idr__Prelude.Strings.unpack_with_364_val
      pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_1654) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.List.:: idr__Prelude.Strings.unpack_with_362 idr__Prelude.Strings.unpack_with_364_1654) -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_eq1_0.32)
    (Cidr_Prelude.Strings.StrNil) ->
      pure (Cidr_Prelude.List.Nil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.List.Nil)

idr__Prelude.Strings.ltrim_with_55.unboxed idr__Prelude.Strings.ltrim_with_551 =
  idr__Prelude.Strings.ltrim_with_551_val <- fetch idr__Prelude.Strings.ltrim_with_551
  case idr__Prelude.Strings.ltrim_with_551_val of
    (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.ltrim_with_552 idr__Prelude.Strings.ltrim_with_553) ->
      (CGrInt idr__Prelude.Strings.ltrim_with_552.57.26.arity.1) <- fetch idr__Prelude.Strings.ltrim_with_552
      idr_Prelude.Chars.isSpace1.41.3.arity.1.17 <- pure 32
      idris_int_eq2.0.17 <- _prim_int_eq idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr_Prelude.Chars.isSpace1.41.3.arity.1.17
      ccp.0.0.17 <- case idris_int_eq2.0.17 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr__Prelude.Strings.ltrim_with_554_val <- case ccp.0.0.17 of
        0 ->
          idr_Prelude.Chars.isSpace2.41.4.arity.1.17 <- pure 9
          idris_int_eq2.1.17 <- _prim_int_eq idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr_Prelude.Chars.isSpace2.41.4.arity.1.17
          ccp.0.1.17 <- case idris_int_eq2.1.17 of
            #False ->
              pure ccp.0.0.17
            #True ->
              pure 1
          case ccp.0.1.17 of
            0 ->
              idr_Prelude.Chars.isSpace3.41.5.arity.1.17 <- pure 13
              idris_int_eq2.2.17 <- _prim_int_eq idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr_Prelude.Chars.isSpace3.41.5.arity.1.17
              ccp.0.2.17 <- case idris_int_eq2.2.17 of
                #False ->
                  pure ccp.0.0.17
                #True ->
                  pure 1
              case ccp.0.2.17 of
                0 ->
                  idr_Prelude.Chars.isSpace4.41.6.arity.1.17 <- pure 10
                  idris_int_eq2.3.17 <- _prim_int_eq idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr_Prelude.Chars.isSpace4.41.6.arity.1.17
                  ccp.0.3.17 <- case idris_int_eq2.3.17 of
                    #False ->
                      pure ccp.0.0.17
                    #True ->
                      pure 1
                  case ccp.0.3.17 of
                    0 ->
                      idr_Prelude.Chars.isSpace5.41.7.arity.1.17 <- pure 12
                      idris_int_eq2.4.17 <- _prim_int_eq idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr_Prelude.Chars.isSpace5.41.7.arity.1.17
                      ccp.0.4.17 <- case idris_int_eq2.4.17 of
                        #False ->
                          pure ccp.0.0.17
                        #True ->
                          pure 1
                      case ccp.0.4.17 of
                        0 ->
                          idr_Prelude.Chars.isSpace6.41.8.arity.1.17 <- pure 11
                          idris_int_eq2.5.17 <- _prim_int_eq idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr_Prelude.Chars.isSpace6.41.8.arity.1.17
                          ccp.0.5.17 <- case idris_int_eq2.5.17 of
                            #False ->
                              pure ccp.0.0.17
                            #True ->
                              pure 1
                          case ccp.0.5.17 of
                            0 ->
                              idr_Prelude.Chars.isSpace7.41.9.arity.1.17 <- pure 160
                              idris_int_eq2.6.17 <- _prim_int_eq idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr_Prelude.Chars.isSpace7.41.9.arity.1.17
                              ccp.0.6.17 <- case idris_int_eq2.6.17 of
                                #False ->
                                  pure ccp.0.0.17
                                #True ->
                                  pure 1
                              case ccp.0.6.17 of
                                0 ->
                                  pure (Cidr_Prelude.Bool.False) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.False)
                                #default ->
                                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                            #default ->
                              pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                        #default ->
                          pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                    #default ->
                      pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.True) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Bool.True)
      case idr__Prelude.Strings.ltrim_with_554_val of
        (Cidr_Prelude.Bool.False) ->
          (CGrString idr__Prelude.Strings.ltrim_with_553.49.55.arity.1) <- fetch idr__Prelude.Strings.ltrim_with_553
          idris_str_cons3.21 <- _prim_string_cons idr__Prelude.Strings.ltrim_with_552.57.26.arity.1 idr__Prelude.Strings.ltrim_with_553.49.55.arity.1
          pure idris_str_cons3.21 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idr__Prelude.Strings.ltrim_with_553.49.55.arity.1)
        (Cidr_Prelude.Bool.True) ->
          idr__Prelude.Strings.ltrim_with_556.41.218.arity.1 <- pure #""
          (CGrString idris_str_eq1_0.33) <- fetch idr__Prelude.Strings.ltrim_with_553
          idris_str_eq3.33 <- _prim_string_eq idris_str_eq1_0.33 idr__Prelude.Strings.ltrim_with_556.41.218.arity.1
          ccp.2.33 <- case idris_str_eq3.33 of
            #False ->
              pure 0
            #True ->
              pure 1
          idr__Prelude.Strings.ltrim_with_556_val <- case ccp.2.33 of
            0 ->
              idris_str_head2.53.0.0 <- _prim_string_head idris_str_eq1_0.33
              idr__Prelude.Strings.ltrim_with_557_val_1665.0.0 <- pure (CGrInt idris_str_head2.53.0.0)
              idr__Prelude.Strings.ltrim_with_557_1666.0.0 <- store idr__Prelude.Strings.ltrim_with_557_val_1665.0.0
              idris_str_tail2.141.0.0 <- _prim_string_tail idris_str_eq1_0.33
              idr__Prelude.Strings.ltrim_with_558_val.0.0 <- pure (CGrString idris_str_tail2.141.0.0)
              idr__Prelude.Strings.ltrim_with_558.0.0 <- store idr__Prelude.Strings.ltrim_with_558_val.0.0
              pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.ltrim_with_557_1666.0.0 idr__Prelude.Strings.ltrim_with_558.0.0) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrCons idr__Prelude.Strings.ltrim_with_557_1666.0.0 idr__Prelude.Strings.ltrim_with_558.0.0)
            #default ->
              pure (Cidr_Prelude.Strings.StrNil) -- LINT: Last return expressions can only return non-node values: pure (Cidr_Prelude.Strings.StrNil)
          idr__Prelude.Strings.ltrim_with_556_1667 <- store idr__Prelude.Strings.ltrim_with_556_val
          idr__Prelude.Strings.ltrim_with_55.unboxed idr__Prelude.Strings.ltrim_with_556_1667 -- LINT: The result of Fetch can only be bound to a variable: (CGrString idris_str_eq1_0.33) -- LINT: The result of Fetch can only be bound to a variable: (CGrInt idr__Prelude.Strings.ltrim_with_552.57.26.arity.1)
    (Cidr_Prelude.Strings.StrNil) ->
      pure #""
