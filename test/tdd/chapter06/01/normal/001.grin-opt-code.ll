; ModuleID = 'basic'
source_filename = "<string>"

@_heap_ptr_ = global i64 0
@str.3.val = global [0 x i8] zeroinitializer
@str.3 = global { i8*, i64 } { i8* getelementptr inbounds ([0 x i8], [0 x i8]* @str.3.val, i64 0, i64 0), i64 0 }
@str.4.val = global [1 x i8] c"\0A"
@str.4 = global { i8*, i64 } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.4.val, i64 0, i64 0), i64 1 }
@str.0.val = global [10 x i8] c"  string  "
@str.0 = global { i8*, i64 } { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.0.val, i64 0, i64 0), i64 10 }
@str.15.val = global [1 x i8] c"\22"
@str.15 = global { i8*, i64 } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.15.val, i64 0, i64 0), i64 1 }
@str.13.val = global [1 x i8] c"%"
@str.13 = global { i8*, i64 } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.13.val, i64 0, i64 0), i64 1 }
@str.6.val = global [12 x i8] c"%s numner %d"
@str.6 = global { i8*, i64 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.6.val, i64 0, i64 0), i64 12 }
@str.8.val = global [1 x i8] c"("
@str.8 = global { i8*, i64 } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.8.val, i64 0, i64 0), i64 1 }
@str.9.val = global [1 x i8] c")"
@str.9 = global { i8*, i64 } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.9.val, i64 0, i64 0), i64 1 }
@str.14.val = global [2 x i8] c", "
@str.14 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.14.val, i64 0, i64 0), i64 2 }
@str.1.val = global [2 x i8] c"42"
@str.1 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.1.val, i64 0, i64 0), i64 2 }
@str.33.val = global [3 x i8] c"ACK"
@str.33 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.33.val, i64 0, i64 0), i64 3 }
@str.5.val = global [11 x i8] c"Answer : %d"
@str.5 = global { i8*, i64 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.5.val, i64 0, i64 0), i64 11 }
@str.34.val = global [3 x i8] c"BEL"
@str.34 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.34.val, i64 0, i64 0), i64 3 }
@str.35.val = global [2 x i8] c"BS"
@str.35 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.35.val, i64 0, i64 0), i64 2 }
@str.51.val = global [3 x i8] c"CAN"
@str.51 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.51.val, i64 0, i64 0), i64 3 }
@str.40.val = global [2 x i8] c"CR"
@str.40 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.40.val, i64 0, i64 0), i64 2 }
@str.44.val = global [3 x i8] c"DC1"
@str.44 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.44.val, i64 0, i64 0), i64 3 }
@str.45.val = global [3 x i8] c"DC2"
@str.45 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.45.val, i64 0, i64 0), i64 3 }
@str.46.val = global [3 x i8] c"DC3"
@str.46 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.46.val, i64 0, i64 0), i64 3 }
@str.47.val = global [3 x i8] c"DC4"
@str.47 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.47.val, i64 0, i64 0), i64 3 }
@str.43.val = global [3 x i8] c"DLE"
@str.43 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.43.val, i64 0, i64 0), i64 3 }
@str.52.val = global [2 x i8] c"EM"
@str.52 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.52.val, i64 0, i64 0), i64 2 }
@str.32.val = global [3 x i8] c"ENQ"
@str.32 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.32.val, i64 0, i64 0), i64 3 }
@str.31.val = global [3 x i8] c"EOT"
@str.31 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.31.val, i64 0, i64 0), i64 3 }
@str.54.val = global [3 x i8] c"ESC"
@str.54 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.54.val, i64 0, i64 0), i64 3 }
@str.50.val = global [3 x i8] c"ETB"
@str.50 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.50.val, i64 0, i64 0), i64 3 }
@str.30.val = global [3 x i8] c"ETX"
@str.30 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.30.val, i64 0, i64 0), i64 3 }
@str.39.val = global [2 x i8] c"FF"
@str.39 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.39.val, i64 0, i64 0), i64 2 }
@str.55.val = global [2 x i8] c"FS"
@str.55 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.55.val, i64 0, i64 0), i64 2 }
@str.56.val = global [2 x i8] c"GS"
@str.56 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.56.val, i64 0, i64 0), i64 2 }
@str.36.val = global [2 x i8] c"HT"
@str.36 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.36.val, i64 0, i64 0), i64 2 }
@str.2.val = global [6 x i8] c"Hello!"
@str.2 = global { i8*, i64 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @str.2.val, i64 0, i64 0), i64 6 }
@str.37.val = global [2 x i8] c"LF"
@str.37 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.37.val, i64 0, i64 0), i64 2 }
@str.48.val = global [3 x i8] c"NAK"
@str.48 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.48.val, i64 0, i64 0), i64 3 }
@str.27.val = global [3 x i8] c"NUL"
@str.27 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.27.val, i64 0, i64 0), i64 3 }
@str.7.val = global [4 x i8] c"Page"
@str.7 = global { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.7.val, i64 0, i64 0), i64 4 }
@str.57.val = global [2 x i8] c"RS"
@str.57 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.57.val, i64 0, i64 0), i64 2 }
@str.42.val = global [2 x i8] c"SI"
@str.42 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.42.val, i64 0, i64 0), i64 2 }
@str.41.val = global [2 x i8] c"SO"
@str.41 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.41.val, i64 0, i64 0), i64 2 }
@str.28.val = global [3 x i8] c"SOH"
@str.28 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.28.val, i64 0, i64 0), i64 3 }
@str.29.val = global [3 x i8] c"STX"
@str.29 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.29.val, i64 0, i64 0), i64 3 }
@str.53.val = global [3 x i8] c"SUB"
@str.53 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.53.val, i64 0, i64 0), i64 3 }
@str.49.val = global [3 x i8] c"SYN"
@str.49 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.49.val, i64 0, i64 0), i64 3 }
@str.58.val = global [2 x i8] c"US"
@str.58 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.58.val, i64 0, i64 0), i64 2 }
@str.38.val = global [2 x i8] c"VT"
@str.38 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.38.val, i64 0, i64 0), i64 2 }
@str.25.val = global [1 x i8] c"["
@str.25 = global { i8*, i64 } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.25.val, i64 0, i64 0), i64 1 }
@str.12.val = global [2 x i8] c"\5C\22"
@str.12 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.12.val, i64 0, i64 0), i64 2 }
@str.10.val = global [2 x i8] c"\5C&"
@str.10 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.10.val, i64 0, i64 0), i64 2 }
@str.24.val = global [4 x i8] c"\5CDEL"
@str.24 = global { i8*, i64 } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.24.val, i64 0, i64 0), i64 4 }
@str.11.val = global [3 x i8] c"\5CSO"
@str.11 = global { i8*, i64 } { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.11.val, i64 0, i64 0), i64 3 }
@str.23.val = global [2 x i8] c"\5C\5C"
@str.23 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.23.val, i64 0, i64 0), i64 2 }
@str.16.val = global [2 x i8] c"\5Ca"
@str.16 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.16.val, i64 0, i64 0), i64 2 }
@str.17.val = global [2 x i8] c"\5Cb"
@str.17 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.17.val, i64 0, i64 0), i64 2 }
@str.21.val = global [2 x i8] c"\5Cf"
@str.21 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.21.val, i64 0, i64 0), i64 2 }
@str.19.val = global [2 x i8] c"\5Cn"
@str.19 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.19.val, i64 0, i64 0), i64 2 }
@str.22.val = global [2 x i8] c"\5Cr"
@str.22 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.22.val, i64 0, i64 0), i64 2 }
@str.18.val = global [2 x i8] c"\5Ct"
@str.18 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.18.val, i64 0, i64 0), i64 2 }
@str.20.val = global [2 x i8] c"\5Cv"
@str.20 = global { i8*, i64 } { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.20.val, i64 0, i64 0), i64 2 }
@str.26.val = global [1 x i8] c"]"
@str.26 = global { i8*, i64 } { i8* getelementptr inbounds ([1 x i8], [1 x i8]* @str.26.val, i64 0, i64 0), i64 1 }

declare void @_prim_int_print(i64)

declare void @_prim_usleep(i64)

declare void @_prim_string_print({ i8*, i64 }*)

declare { i8*, i64 }* @_prim_read_string()

declare void @_prim_error({ i8*, i64 }*)

declare i64 @_prim_ffi_file_eof(i64)

declare { i8*, i64 }* @_prim_string_concat({ i8*, i64 }*, { i8*, i64 }*)

declare { i8*, i64 }* @_prim_string_reverse({ i8*, i64 }*)

declare i64 @_prim_string_lt({ i8*, i64 }*, { i8*, i64 }*)

declare i64 @_prim_string_eq({ i8*, i64 }*, { i8*, i64 }*)

declare i64 @_prim_string_head({ i8*, i64 }*)

declare { i8*, i64 }* @_prim_string_tail({ i8*, i64 }*)

declare { i8*, i64 }* @_prim_string_cons(i64, { i8*, i64 }*)

declare i64 @_prim_string_len({ i8*, i64 }*)

declare { i8*, i64 }* @_prim_int_str(i64)

declare i64 @_prim_str_int({ i8*, i64 }*)

declare float @_prim_int_float(i64)

declare { i8*, i64 }* @_prim_float_string(float)

declare i64 @_prim_char_int(i8)

declare i64 @_prim_int_shr(i64)

declare i64 @_prim_int_add(i64, i64)

declare i64 @_prim_int_sub(i64, i64)

declare i64 @_prim_int_mul(i64, i64)

declare i64 @_prim_int_div(i64, i64)

declare i1 @_prim_int_eq(i64, i64)

declare i1 @_prim_int_ne(i64, i64)

declare i1 @_prim_int_gt(i64, i64)

declare i1 @_prim_int_ge(i64, i64)

declare i1 @_prim_int_lt(i64, i64)

declare i1 @_prim_int_le(i64, i64)

declare i64 @_prim_word_add(i64, i64)

declare i64 @_prim_word_sub(i64, i64)

declare i64 @_prim_word_mul(i64, i64)

declare i64 @_prim_word_div(i64, i64)

declare i1 @_prim_word_eq(i64, i64)

declare i1 @_prim_word_ne(i64, i64)

declare i1 @_prim_word_gt(i64, i64)

declare i1 @_prim_word_ge(i64, i64)

declare i1 @_prim_word_lt(i64, i64)

declare i1 @_prim_word_le(i64, i64)

declare float @_prim_float_add(float, float)

declare float @_prim_float_sub(float, float)

declare float @_prim_float_mul(float, float)

declare float @_prim_float_div(float, float)

declare i1 @_prim_float_eq(float, float)

declare i1 @_prim_float_ne(float, float)

declare i1 @_prim_float_gt(float, float)

declare i1 @_prim_float_ge(float, float)

declare i1 @_prim_float_lt(float, float)

declare i1 @_prim_float_le(float, float)

declare i1 @_prim_bool_eq(i1, i1)

declare i1 @_prim_bool_ne(i1, i1)

define private fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idris_int_eq0, i64* %idris_int_eq1) #0 {
idris_int_eq.entry:
  %tag.0 = load i64, i64* %idris_int_eq0, align 1
  switch i64 %tag.0, label %error_block [
    i64 0, label %block.CErased.1
    i64 1, label %block.CGrFloat.6
    i64 2, label %block.CGrInt.13
    i64 3, label %block.CGrString.20
    i64 4, label %block.Cidr_Builtins.MkPair.27
    i64 5, label %"block.Cidr_Data.Vect.::.36"
    i64 6, label %block.Cidr_Prelude.Bool.False.45
    i64 7, label %block.Cidr_Prelude.Bool.True.50
    i64 8, label %"block.Cidr_Prelude.List.::.55"
    i64 9, label %block.Cidr_Prelude.List.Nil.64
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.69"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.80"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.87"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.96"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.105"
  ]

block.CErased.1:                                  ; preds = %idris_int_eq.entry
  %ptr_CErased.2 = bitcast i64* %idris_int_eq0 to <{ i64 }>*
  %node_CErased.3 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.2, align 1
  %src.4 = extractvalue <{ i64 }> %node_CErased.3, 0
  %dst.5 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4, 0
  br label %block.exit.112

block.CGrFloat.6:                                 ; preds = %idris_int_eq.entry
  %ptr_CGrFloat.7 = bitcast i64* %idris_int_eq0 to <{ i64, [1 x float] }>*
  %node_CGrFloat.8 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.7, align 1
  %src.9 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.8, 0
  %dst.10 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.9, 0
  %src.11 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.8, 1, 0
  %dst.12 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10, float %src.11, 1, 0
  br label %block.exit.112

block.CGrInt.13:                                  ; preds = %idris_int_eq.entry
  %ptr_CGrInt.14 = bitcast i64* %idris_int_eq0 to <{ i64, [1 x i64] }>*
  %node_CGrInt.15 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.14, align 1
  %src.16 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.15, 0
  %dst.17 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.16, 0
  %src.18 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.15, 1, 0
  %dst.19 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.17, i64 %src.18, 2, 0
  br label %block.exit.112

block.CGrString.20:                               ; preds = %idris_int_eq.entry
  %ptr_CGrString.21 = bitcast i64* %idris_int_eq0 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.22 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.21, align 1
  %src.23 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.22, 0
  %dst.24 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.23, 0
  %src.25 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.22, 1, 0
  %dst.26 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.24, { i8*, i64 }* %src.25, 3, 0
  br label %block.exit.112

block.Cidr_Builtins.MkPair.27:                    ; preds = %idris_int_eq.entry
  %ptr_Cidr_Builtins.MkPair.28 = bitcast i64* %idris_int_eq0 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.29 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.28, align 1
  %src.30 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.29, 0
  %dst.31 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.30, 0
  %src.32 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.29, 1, 1
  %dst.33 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.31, i64* %src.32, 4, 1
  %src.34 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.29, 1, 0
  %dst.35 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.33, i64* %src.34, 4, 0
  br label %block.exit.112

"block.Cidr_Data.Vect.::.36":                     ; preds = %idris_int_eq.entry
  %"ptr_Cidr_Data.Vect.::.37" = bitcast i64* %idris_int_eq0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.38" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.37", align 1
  %src.39 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.38", 0
  %dst.40 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.39, 0
  %src.41 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.38", 1, 1
  %dst.42 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.40, i64* %src.41, 4, 1
  %src.43 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.38", 1, 0
  %dst.44 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.42, i64* %src.43, 4, 0
  br label %block.exit.112

block.Cidr_Prelude.Bool.False.45:                 ; preds = %idris_int_eq.entry
  %ptr_Cidr_Prelude.Bool.False.46 = bitcast i64* %idris_int_eq0 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.47 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.46, align 1
  %src.48 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.47, 0
  %dst.49 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.48, 0
  br label %block.exit.112

block.Cidr_Prelude.Bool.True.50:                  ; preds = %idris_int_eq.entry
  %ptr_Cidr_Prelude.Bool.True.51 = bitcast i64* %idris_int_eq0 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.52 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.51, align 1
  %src.53 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.52, 0
  %dst.54 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.53, 0
  br label %block.exit.112

"block.Cidr_Prelude.List.::.55":                  ; preds = %idris_int_eq.entry
  %"ptr_Cidr_Prelude.List.::.56" = bitcast i64* %idris_int_eq0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.57" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.56", align 1
  %src.58 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.57", 0
  %dst.59 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.58, 0
  %src.60 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.57", 1, 1
  %dst.61 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.59, i64* %src.60, 4, 1
  %src.62 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.57", 1, 0
  %dst.63 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.61, i64* %src.62, 4, 0
  br label %block.exit.112

block.Cidr_Prelude.List.Nil.64:                   ; preds = %idris_int_eq.entry
  %ptr_Cidr_Prelude.List.Nil.65 = bitcast i64* %idris_int_eq0 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.66 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.65, align 1
  %src.67 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.66, 0
  %dst.68 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.67, 0
  br label %block.exit.112

"block.Cidr_{U_Main.{adder_0}_1}.69":             ; preds = %idris_int_eq.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.70" = bitcast i64* %idris_int_eq0 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.71" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.70", align 1
  %src.72 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.71", 0
  %dst.73 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.72, 0
  %src.74 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.71", 1, 2
  %dst.75 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.73, i64* %src.74, 4, 2
  %src.76 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.71", 1, 1
  %dst.77 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.75, i64* %src.76, 4, 1
  %src.78 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.71", 1, 0
  %dst.79 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.77, i64* %src.78, 4, 0
  br label %block.exit.112

"block.Cidr_{U_Main.{main_9}_1}.80":              ; preds = %idris_int_eq.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.81" = bitcast i64* %idris_int_eq0 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.82" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.81", align 1
  %src.83 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.82", 0
  %dst.84 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.83, 0
  %src.85 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.82", 1, 0
  %dst.86 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.84, i64* %src.85, 4, 0
  br label %block.exit.112

"block.Cidr_{U_Main.{printFmt_14}_1}.87":         ; preds = %idris_int_eq.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.88" = bitcast i64* %idris_int_eq0 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.89" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.88", align 1
  %src.90 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.89", 0
  %dst.91 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.90, 0
  %src.92 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.89", 1, 1
  %dst.93 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.91, i64* %src.92, 4, 1
  %src.94 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.89", 1, 0
  %dst.95 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.93, i64* %src.94, 4, 0
  br label %block.exit.112

"block.Cidr_{U_Main.{printFmt_15}_1}.96":         ; preds = %idris_int_eq.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.97" = bitcast i64* %idris_int_eq0 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.98" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.97", align 1
  %src.99 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.98", 0
  %dst.100 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.99, 0
  %src.101 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.98", 1, 1
  %dst.102 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.100, i64* %src.101, 4, 1
  %src.103 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.98", 1, 0
  %dst.104 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.102, i64* %src.103, 4, 0
  br label %block.exit.112

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.105": ; preds = %idris_int_eq.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.106" = bitcast i64* %idris_int_eq0 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.107" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.106", align 1
  %src.108 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.107", 0
  %dst.109 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.108, 0
  %src.110 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.107", 1, 0
  %dst.111 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.109, i64* %src.110, 4, 0
  br label %block.exit.112

block.exit.112:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.105", %"block.Cidr_{U_Main.{printFmt_15}_1}.96", %"block.Cidr_{U_Main.{printFmt_14}_1}.87", %"block.Cidr_{U_Main.{main_9}_1}.80", %"block.Cidr_{U_Main.{adder_0}_1}.69", %block.Cidr_Prelude.List.Nil.64, %"block.Cidr_Prelude.List.::.55", %block.Cidr_Prelude.Bool.True.50, %block.Cidr_Prelude.Bool.False.45, %"block.Cidr_Data.Vect.::.36", %block.Cidr_Builtins.MkPair.27, %block.CGrString.20, %block.CGrInt.13, %block.CGrFloat.6, %block.CErased.1
  %node_CGrInt.113 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.5, %block.CErased.1 ], [ %dst.12, %block.CGrFloat.6 ], [ %dst.19, %block.CGrInt.13 ], [ %dst.26, %block.CGrString.20 ], [ %dst.35, %block.Cidr_Builtins.MkPair.27 ], [ %dst.44, %"block.Cidr_Data.Vect.::.36" ], [ %dst.49, %block.Cidr_Prelude.Bool.False.45 ], [ %dst.54, %block.Cidr_Prelude.Bool.True.50 ], [ %dst.63, %"block.Cidr_Prelude.List.::.55" ], [ %dst.68, %block.Cidr_Prelude.List.Nil.64 ], [ %dst.79, %"block.Cidr_{U_Main.{adder_0}_1}.69" ], [ %dst.86, %"block.Cidr_{U_Main.{main_9}_1}.80" ], [ %dst.95, %"block.Cidr_{U_Main.{printFmt_14}_1}.87" ], [ %dst.104, %"block.Cidr_{U_Main.{printFmt_15}_1}.96" ], [ %dst.111, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.105" ]
  %idris_int_eq0_1 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrInt.113, 2, 0
  %tag.114 = load i64, i64* %idris_int_eq1, align 1
  %ptr_CGrInt.115 = bitcast i64* %idris_int_eq1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.116 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.115, align 1
  %idris_int_eq1_1 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.116, 1, 0
  %idris_int_eq2.117 = icmp eq i64 %idris_int_eq0_1, %idris_int_eq1_1
  switch i1 %idris_int_eq2.117, label %error_block [
    i1 false, label %block.bool_False.118
    i1 true, label %block.bool_True.120
  ]

block.bool_False.118:                             ; preds = %block.exit.112
  %node_CGrInt.119 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 0, 1, 0
  br label %block.exit.122

block.bool_True.120:                              ; preds = %block.exit.112
  %node_CGrInt.121 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 1, 1, 0
  br label %block.exit.122

block.exit.122:                                   ; preds = %block.bool_True.120, %block.bool_False.118
  %result.idris_int_eq.123 = phi <{ i64, [1 x i64] }> [ %node_CGrInt.119, %block.bool_False.118 ], [ %node_CGrInt.121, %block.bool_True.120 ]
  ret <{ i64, [1 x i64] }> %result.idris_int_eq.123

error_block:                                      ; preds = %block.exit.112, %idris_int_eq.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @idris_int_lt(i64* %idris_int_lt0, i64* %idris_int_lt1) #0 {
idris_int_lt.entry:
  %tag.124 = load i64, i64* %idris_int_lt0, align 1
  switch i64 %tag.124, label %error_block [
    i64 0, label %block.CErased.125
    i64 1, label %block.CGrFloat.130
    i64 2, label %block.CGrInt.137
    i64 3, label %block.CGrString.144
    i64 4, label %block.Cidr_Builtins.MkPair.151
    i64 5, label %"block.Cidr_Data.Vect.::.160"
    i64 6, label %block.Cidr_Prelude.Bool.False.169
    i64 7, label %block.Cidr_Prelude.Bool.True.174
    i64 8, label %"block.Cidr_Prelude.List.::.179"
    i64 9, label %block.Cidr_Prelude.List.Nil.188
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.193"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.204"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.211"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.220"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.229"
  ]

block.CErased.125:                                ; preds = %idris_int_lt.entry
  %ptr_CErased.126 = bitcast i64* %idris_int_lt0 to <{ i64 }>*
  %node_CErased.127 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.126, align 1
  %src.128 = extractvalue <{ i64 }> %node_CErased.127, 0
  %dst.129 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.128, 0
  br label %block.exit.236

block.CGrFloat.130:                               ; preds = %idris_int_lt.entry
  %ptr_CGrFloat.131 = bitcast i64* %idris_int_lt0 to <{ i64, [1 x float] }>*
  %node_CGrFloat.132 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.131, align 1
  %src.133 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.132, 0
  %dst.134 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.133, 0
  %src.135 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.132, 1, 0
  %dst.136 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.134, float %src.135, 1, 0
  br label %block.exit.236

block.CGrInt.137:                                 ; preds = %idris_int_lt.entry
  %ptr_CGrInt.138 = bitcast i64* %idris_int_lt0 to <{ i64, [1 x i64] }>*
  %node_CGrInt.139 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.138, align 1
  %src.140 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.139, 0
  %dst.141 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.140, 0
  %src.142 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.139, 1, 0
  %dst.143 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.141, i64 %src.142, 2, 0
  br label %block.exit.236

block.CGrString.144:                              ; preds = %idris_int_lt.entry
  %ptr_CGrString.145 = bitcast i64* %idris_int_lt0 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.146 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.145, align 1
  %src.147 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.146, 0
  %dst.148 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.147, 0
  %src.149 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.146, 1, 0
  %dst.150 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.148, { i8*, i64 }* %src.149, 3, 0
  br label %block.exit.236

block.Cidr_Builtins.MkPair.151:                   ; preds = %idris_int_lt.entry
  %ptr_Cidr_Builtins.MkPair.152 = bitcast i64* %idris_int_lt0 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.153 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.152, align 1
  %src.154 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.153, 0
  %dst.155 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.154, 0
  %src.156 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.153, 1, 1
  %dst.157 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.155, i64* %src.156, 4, 1
  %src.158 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.153, 1, 0
  %dst.159 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.157, i64* %src.158, 4, 0
  br label %block.exit.236

"block.Cidr_Data.Vect.::.160":                    ; preds = %idris_int_lt.entry
  %"ptr_Cidr_Data.Vect.::.161" = bitcast i64* %idris_int_lt0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.162" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.161", align 1
  %src.163 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.162", 0
  %dst.164 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.163, 0
  %src.165 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.162", 1, 1
  %dst.166 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.164, i64* %src.165, 4, 1
  %src.167 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.162", 1, 0
  %dst.168 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.166, i64* %src.167, 4, 0
  br label %block.exit.236

block.Cidr_Prelude.Bool.False.169:                ; preds = %idris_int_lt.entry
  %ptr_Cidr_Prelude.Bool.False.170 = bitcast i64* %idris_int_lt0 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.171 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.170, align 1
  %src.172 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.171, 0
  %dst.173 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.172, 0
  br label %block.exit.236

block.Cidr_Prelude.Bool.True.174:                 ; preds = %idris_int_lt.entry
  %ptr_Cidr_Prelude.Bool.True.175 = bitcast i64* %idris_int_lt0 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.176 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.175, align 1
  %src.177 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.176, 0
  %dst.178 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.177, 0
  br label %block.exit.236

"block.Cidr_Prelude.List.::.179":                 ; preds = %idris_int_lt.entry
  %"ptr_Cidr_Prelude.List.::.180" = bitcast i64* %idris_int_lt0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.181" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.180", align 1
  %src.182 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.181", 0
  %dst.183 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.182, 0
  %src.184 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.181", 1, 1
  %dst.185 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.183, i64* %src.184, 4, 1
  %src.186 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.181", 1, 0
  %dst.187 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.185, i64* %src.186, 4, 0
  br label %block.exit.236

block.Cidr_Prelude.List.Nil.188:                  ; preds = %idris_int_lt.entry
  %ptr_Cidr_Prelude.List.Nil.189 = bitcast i64* %idris_int_lt0 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.190 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.189, align 1
  %src.191 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.190, 0
  %dst.192 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.191, 0
  br label %block.exit.236

"block.Cidr_{U_Main.{adder_0}_1}.193":            ; preds = %idris_int_lt.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.194" = bitcast i64* %idris_int_lt0 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.195" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.194", align 1
  %src.196 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.195", 0
  %dst.197 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.196, 0
  %src.198 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.195", 1, 2
  %dst.199 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.197, i64* %src.198, 4, 2
  %src.200 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.195", 1, 1
  %dst.201 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.199, i64* %src.200, 4, 1
  %src.202 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.195", 1, 0
  %dst.203 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.201, i64* %src.202, 4, 0
  br label %block.exit.236

"block.Cidr_{U_Main.{main_9}_1}.204":             ; preds = %idris_int_lt.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.205" = bitcast i64* %idris_int_lt0 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.206" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.205", align 1
  %src.207 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.206", 0
  %dst.208 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.207, 0
  %src.209 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.206", 1, 0
  %dst.210 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.208, i64* %src.209, 4, 0
  br label %block.exit.236

"block.Cidr_{U_Main.{printFmt_14}_1}.211":        ; preds = %idris_int_lt.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.212" = bitcast i64* %idris_int_lt0 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.213" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.212", align 1
  %src.214 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.213", 0
  %dst.215 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.214, 0
  %src.216 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.213", 1, 1
  %dst.217 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.215, i64* %src.216, 4, 1
  %src.218 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.213", 1, 0
  %dst.219 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.217, i64* %src.218, 4, 0
  br label %block.exit.236

"block.Cidr_{U_Main.{printFmt_15}_1}.220":        ; preds = %idris_int_lt.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.221" = bitcast i64* %idris_int_lt0 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.222" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.221", align 1
  %src.223 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.222", 0
  %dst.224 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.223, 0
  %src.225 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.222", 1, 1
  %dst.226 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.224, i64* %src.225, 4, 1
  %src.227 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.222", 1, 0
  %dst.228 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.226, i64* %src.227, 4, 0
  br label %block.exit.236

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.229": ; preds = %idris_int_lt.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.230" = bitcast i64* %idris_int_lt0 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.231" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.230", align 1
  %src.232 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.231", 0
  %dst.233 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.232, 0
  %src.234 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.231", 1, 0
  %dst.235 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.233, i64* %src.234, 4, 0
  br label %block.exit.236

block.exit.236:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.229", %"block.Cidr_{U_Main.{printFmt_15}_1}.220", %"block.Cidr_{U_Main.{printFmt_14}_1}.211", %"block.Cidr_{U_Main.{main_9}_1}.204", %"block.Cidr_{U_Main.{adder_0}_1}.193", %block.Cidr_Prelude.List.Nil.188, %"block.Cidr_Prelude.List.::.179", %block.Cidr_Prelude.Bool.True.174, %block.Cidr_Prelude.Bool.False.169, %"block.Cidr_Data.Vect.::.160", %block.Cidr_Builtins.MkPair.151, %block.CGrString.144, %block.CGrInt.137, %block.CGrFloat.130, %block.CErased.125
  %node_CGrInt.237 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.129, %block.CErased.125 ], [ %dst.136, %block.CGrFloat.130 ], [ %dst.143, %block.CGrInt.137 ], [ %dst.150, %block.CGrString.144 ], [ %dst.159, %block.Cidr_Builtins.MkPair.151 ], [ %dst.168, %"block.Cidr_Data.Vect.::.160" ], [ %dst.173, %block.Cidr_Prelude.Bool.False.169 ], [ %dst.178, %block.Cidr_Prelude.Bool.True.174 ], [ %dst.187, %"block.Cidr_Prelude.List.::.179" ], [ %dst.192, %block.Cidr_Prelude.List.Nil.188 ], [ %dst.203, %"block.Cidr_{U_Main.{adder_0}_1}.193" ], [ %dst.210, %"block.Cidr_{U_Main.{main_9}_1}.204" ], [ %dst.219, %"block.Cidr_{U_Main.{printFmt_14}_1}.211" ], [ %dst.228, %"block.Cidr_{U_Main.{printFmt_15}_1}.220" ], [ %dst.235, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.229" ]
  %idris_int_lt0_1 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrInt.237, 2, 0
  %tag.238 = load i64, i64* %idris_int_lt1, align 1
  %ptr_CGrInt.239 = bitcast i64* %idris_int_lt1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.240 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.239, align 1
  %idris_int_lt1_1 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.240, 1, 0
  %idris_int_lt2.241 = icmp slt i64 %idris_int_lt0_1, %idris_int_lt1_1
  switch i1 %idris_int_lt2.241, label %error_block [
    i1 false, label %block.bool_False.242
    i1 true, label %block.bool_True.244
  ]

block.bool_False.242:                             ; preds = %block.exit.236
  %node_CGrInt.243 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 0, 1, 0
  br label %block.exit.246

block.bool_True.244:                              ; preds = %block.exit.236
  %node_CGrInt.245 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 1, 1, 0
  br label %block.exit.246

block.exit.246:                                   ; preds = %block.bool_True.244, %block.bool_False.242
  %result.idris_int_lt.247 = phi <{ i64, [1 x i64] }> [ %node_CGrInt.243, %block.bool_False.242 ], [ %node_CGrInt.245, %block.bool_True.244 ]
  ret <{ i64, [1 x i64] }> %result.idris_int_lt.247

error_block:                                      ; preds = %block.exit.236, %idris_int_lt.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @idris_int_add(i64* %idris_int_add0, i64* %idris_int_add1) #0 {
idris_int_add.entry:
  %tag.248 = load i64, i64* %idris_int_add0, align 1
  switch i64 %tag.248, label %error_block [
    i64 0, label %block.CErased.249
    i64 1, label %block.CGrFloat.254
    i64 2, label %block.CGrInt.261
    i64 3, label %block.CGrString.268
    i64 4, label %block.Cidr_Builtins.MkPair.275
    i64 5, label %"block.Cidr_Data.Vect.::.284"
    i64 6, label %block.Cidr_Prelude.Bool.False.293
    i64 7, label %block.Cidr_Prelude.Bool.True.298
    i64 8, label %"block.Cidr_Prelude.List.::.303"
    i64 9, label %block.Cidr_Prelude.List.Nil.312
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.317"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.328"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.335"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.344"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.353"
  ]

block.CErased.249:                                ; preds = %idris_int_add.entry
  %ptr_CErased.250 = bitcast i64* %idris_int_add0 to <{ i64 }>*
  %node_CErased.251 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.250, align 1
  %src.252 = extractvalue <{ i64 }> %node_CErased.251, 0
  %dst.253 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.252, 0
  br label %block.exit.360

block.CGrFloat.254:                               ; preds = %idris_int_add.entry
  %ptr_CGrFloat.255 = bitcast i64* %idris_int_add0 to <{ i64, [1 x float] }>*
  %node_CGrFloat.256 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.255, align 1
  %src.257 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.256, 0
  %dst.258 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.257, 0
  %src.259 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.256, 1, 0
  %dst.260 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.258, float %src.259, 1, 0
  br label %block.exit.360

block.CGrInt.261:                                 ; preds = %idris_int_add.entry
  %ptr_CGrInt.262 = bitcast i64* %idris_int_add0 to <{ i64, [1 x i64] }>*
  %node_CGrInt.263 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.262, align 1
  %src.264 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.263, 0
  %dst.265 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.264, 0
  %src.266 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.263, 1, 0
  %dst.267 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.265, i64 %src.266, 2, 0
  br label %block.exit.360

block.CGrString.268:                              ; preds = %idris_int_add.entry
  %ptr_CGrString.269 = bitcast i64* %idris_int_add0 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.270 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.269, align 1
  %src.271 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.270, 0
  %dst.272 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.271, 0
  %src.273 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.270, 1, 0
  %dst.274 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.272, { i8*, i64 }* %src.273, 3, 0
  br label %block.exit.360

block.Cidr_Builtins.MkPair.275:                   ; preds = %idris_int_add.entry
  %ptr_Cidr_Builtins.MkPair.276 = bitcast i64* %idris_int_add0 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.277 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.276, align 1
  %src.278 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.277, 0
  %dst.279 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.278, 0
  %src.280 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.277, 1, 1
  %dst.281 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.279, i64* %src.280, 4, 1
  %src.282 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.277, 1, 0
  %dst.283 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.281, i64* %src.282, 4, 0
  br label %block.exit.360

"block.Cidr_Data.Vect.::.284":                    ; preds = %idris_int_add.entry
  %"ptr_Cidr_Data.Vect.::.285" = bitcast i64* %idris_int_add0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.286" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.285", align 1
  %src.287 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.286", 0
  %dst.288 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.287, 0
  %src.289 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.286", 1, 1
  %dst.290 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.288, i64* %src.289, 4, 1
  %src.291 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.286", 1, 0
  %dst.292 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.290, i64* %src.291, 4, 0
  br label %block.exit.360

block.Cidr_Prelude.Bool.False.293:                ; preds = %idris_int_add.entry
  %ptr_Cidr_Prelude.Bool.False.294 = bitcast i64* %idris_int_add0 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.295 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.294, align 1
  %src.296 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.295, 0
  %dst.297 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.296, 0
  br label %block.exit.360

block.Cidr_Prelude.Bool.True.298:                 ; preds = %idris_int_add.entry
  %ptr_Cidr_Prelude.Bool.True.299 = bitcast i64* %idris_int_add0 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.300 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.299, align 1
  %src.301 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.300, 0
  %dst.302 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.301, 0
  br label %block.exit.360

"block.Cidr_Prelude.List.::.303":                 ; preds = %idris_int_add.entry
  %"ptr_Cidr_Prelude.List.::.304" = bitcast i64* %idris_int_add0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.305" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.304", align 1
  %src.306 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.305", 0
  %dst.307 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.306, 0
  %src.308 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.305", 1, 1
  %dst.309 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.307, i64* %src.308, 4, 1
  %src.310 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.305", 1, 0
  %dst.311 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.309, i64* %src.310, 4, 0
  br label %block.exit.360

block.Cidr_Prelude.List.Nil.312:                  ; preds = %idris_int_add.entry
  %ptr_Cidr_Prelude.List.Nil.313 = bitcast i64* %idris_int_add0 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.314 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.313, align 1
  %src.315 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.314, 0
  %dst.316 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.315, 0
  br label %block.exit.360

"block.Cidr_{U_Main.{adder_0}_1}.317":            ; preds = %idris_int_add.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.318" = bitcast i64* %idris_int_add0 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.319" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.318", align 1
  %src.320 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.319", 0
  %dst.321 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.320, 0
  %src.322 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.319", 1, 2
  %dst.323 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.321, i64* %src.322, 4, 2
  %src.324 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.319", 1, 1
  %dst.325 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.323, i64* %src.324, 4, 1
  %src.326 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.319", 1, 0
  %dst.327 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.325, i64* %src.326, 4, 0
  br label %block.exit.360

"block.Cidr_{U_Main.{main_9}_1}.328":             ; preds = %idris_int_add.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.329" = bitcast i64* %idris_int_add0 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.330" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.329", align 1
  %src.331 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.330", 0
  %dst.332 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.331, 0
  %src.333 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.330", 1, 0
  %dst.334 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.332, i64* %src.333, 4, 0
  br label %block.exit.360

"block.Cidr_{U_Main.{printFmt_14}_1}.335":        ; preds = %idris_int_add.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.336" = bitcast i64* %idris_int_add0 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.337" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.336", align 1
  %src.338 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.337", 0
  %dst.339 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.338, 0
  %src.340 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.337", 1, 1
  %dst.341 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.339, i64* %src.340, 4, 1
  %src.342 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.337", 1, 0
  %dst.343 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.341, i64* %src.342, 4, 0
  br label %block.exit.360

"block.Cidr_{U_Main.{printFmt_15}_1}.344":        ; preds = %idris_int_add.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.345" = bitcast i64* %idris_int_add0 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.346" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.345", align 1
  %src.347 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.346", 0
  %dst.348 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.347, 0
  %src.349 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.346", 1, 1
  %dst.350 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.348, i64* %src.349, 4, 1
  %src.351 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.346", 1, 0
  %dst.352 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.350, i64* %src.351, 4, 0
  br label %block.exit.360

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.353": ; preds = %idris_int_add.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.354" = bitcast i64* %idris_int_add0 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.355" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.354", align 1
  %src.356 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.355", 0
  %dst.357 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.356, 0
  %src.358 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.355", 1, 0
  %dst.359 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.357, i64* %src.358, 4, 0
  br label %block.exit.360

block.exit.360:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.353", %"block.Cidr_{U_Main.{printFmt_15}_1}.344", %"block.Cidr_{U_Main.{printFmt_14}_1}.335", %"block.Cidr_{U_Main.{main_9}_1}.328", %"block.Cidr_{U_Main.{adder_0}_1}.317", %block.Cidr_Prelude.List.Nil.312, %"block.Cidr_Prelude.List.::.303", %block.Cidr_Prelude.Bool.True.298, %block.Cidr_Prelude.Bool.False.293, %"block.Cidr_Data.Vect.::.284", %block.Cidr_Builtins.MkPair.275, %block.CGrString.268, %block.CGrInt.261, %block.CGrFloat.254, %block.CErased.249
  %node_CGrInt.361 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.253, %block.CErased.249 ], [ %dst.260, %block.CGrFloat.254 ], [ %dst.267, %block.CGrInt.261 ], [ %dst.274, %block.CGrString.268 ], [ %dst.283, %block.Cidr_Builtins.MkPair.275 ], [ %dst.292, %"block.Cidr_Data.Vect.::.284" ], [ %dst.297, %block.Cidr_Prelude.Bool.False.293 ], [ %dst.302, %block.Cidr_Prelude.Bool.True.298 ], [ %dst.311, %"block.Cidr_Prelude.List.::.303" ], [ %dst.316, %block.Cidr_Prelude.List.Nil.312 ], [ %dst.327, %"block.Cidr_{U_Main.{adder_0}_1}.317" ], [ %dst.334, %"block.Cidr_{U_Main.{main_9}_1}.328" ], [ %dst.343, %"block.Cidr_{U_Main.{printFmt_14}_1}.335" ], [ %dst.352, %"block.Cidr_{U_Main.{printFmt_15}_1}.344" ], [ %dst.359, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.353" ]
  %idris_int_add0_1 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrInt.361, 2, 0
  %tag.362 = load i64, i64* %idris_int_add1, align 1
  switch i64 %tag.362, label %error_block [
    i64 0, label %block.CErased.363
    i64 1, label %block.CGrFloat.368
    i64 2, label %block.CGrInt.375
    i64 3, label %block.CGrString.382
    i64 4, label %block.Cidr_Builtins.MkPair.389
    i64 5, label %"block.Cidr_Data.Vect.::.398"
    i64 6, label %block.Cidr_Prelude.Bool.False.407
    i64 7, label %block.Cidr_Prelude.Bool.True.412
    i64 8, label %"block.Cidr_Prelude.List.::.417"
    i64 9, label %block.Cidr_Prelude.List.Nil.426
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.431"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.442"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.449"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.458"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.467"
  ]

block.CErased.363:                                ; preds = %block.exit.360
  %ptr_CErased.364 = bitcast i64* %idris_int_add1 to <{ i64 }>*
  %node_CErased.365 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.364, align 1
  %src.366 = extractvalue <{ i64 }> %node_CErased.365, 0
  %dst.367 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.366, 0
  br label %block.exit.474

block.CGrFloat.368:                               ; preds = %block.exit.360
  %ptr_CGrFloat.369 = bitcast i64* %idris_int_add1 to <{ i64, [1 x float] }>*
  %node_CGrFloat.370 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.369, align 1
  %src.371 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.370, 0
  %dst.372 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.371, 0
  %src.373 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.370, 1, 0
  %dst.374 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.372, float %src.373, 1, 0
  br label %block.exit.474

block.CGrInt.375:                                 ; preds = %block.exit.360
  %ptr_CGrInt.376 = bitcast i64* %idris_int_add1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.377 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.376, align 1
  %src.378 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.377, 0
  %dst.379 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.378, 0
  %src.380 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.377, 1, 0
  %dst.381 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.379, i64 %src.380, 2, 0
  br label %block.exit.474

block.CGrString.382:                              ; preds = %block.exit.360
  %ptr_CGrString.383 = bitcast i64* %idris_int_add1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.384 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.383, align 1
  %src.385 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.384, 0
  %dst.386 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.385, 0
  %src.387 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.384, 1, 0
  %dst.388 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.386, { i8*, i64 }* %src.387, 3, 0
  br label %block.exit.474

block.Cidr_Builtins.MkPair.389:                   ; preds = %block.exit.360
  %ptr_Cidr_Builtins.MkPair.390 = bitcast i64* %idris_int_add1 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.391 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.390, align 1
  %src.392 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.391, 0
  %dst.393 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.392, 0
  %src.394 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.391, 1, 1
  %dst.395 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.393, i64* %src.394, 4, 1
  %src.396 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.391, 1, 0
  %dst.397 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.395, i64* %src.396, 4, 0
  br label %block.exit.474

"block.Cidr_Data.Vect.::.398":                    ; preds = %block.exit.360
  %"ptr_Cidr_Data.Vect.::.399" = bitcast i64* %idris_int_add1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.400" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.399", align 1
  %src.401 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.400", 0
  %dst.402 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.401, 0
  %src.403 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.400", 1, 1
  %dst.404 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.402, i64* %src.403, 4, 1
  %src.405 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.400", 1, 0
  %dst.406 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.404, i64* %src.405, 4, 0
  br label %block.exit.474

block.Cidr_Prelude.Bool.False.407:                ; preds = %block.exit.360
  %ptr_Cidr_Prelude.Bool.False.408 = bitcast i64* %idris_int_add1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.409 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.408, align 1
  %src.410 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.409, 0
  %dst.411 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.410, 0
  br label %block.exit.474

block.Cidr_Prelude.Bool.True.412:                 ; preds = %block.exit.360
  %ptr_Cidr_Prelude.Bool.True.413 = bitcast i64* %idris_int_add1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.414 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.413, align 1
  %src.415 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.414, 0
  %dst.416 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.415, 0
  br label %block.exit.474

"block.Cidr_Prelude.List.::.417":                 ; preds = %block.exit.360
  %"ptr_Cidr_Prelude.List.::.418" = bitcast i64* %idris_int_add1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.419" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.418", align 1
  %src.420 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.419", 0
  %dst.421 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.420, 0
  %src.422 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.419", 1, 1
  %dst.423 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.421, i64* %src.422, 4, 1
  %src.424 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.419", 1, 0
  %dst.425 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.423, i64* %src.424, 4, 0
  br label %block.exit.474

block.Cidr_Prelude.List.Nil.426:                  ; preds = %block.exit.360
  %ptr_Cidr_Prelude.List.Nil.427 = bitcast i64* %idris_int_add1 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.428 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.427, align 1
  %src.429 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.428, 0
  %dst.430 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.429, 0
  br label %block.exit.474

"block.Cidr_{U_Main.{adder_0}_1}.431":            ; preds = %block.exit.360
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.432" = bitcast i64* %idris_int_add1 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.433" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.432", align 1
  %src.434 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.433", 0
  %dst.435 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.434, 0
  %src.436 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.433", 1, 2
  %dst.437 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.435, i64* %src.436, 4, 2
  %src.438 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.433", 1, 1
  %dst.439 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.437, i64* %src.438, 4, 1
  %src.440 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.433", 1, 0
  %dst.441 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.439, i64* %src.440, 4, 0
  br label %block.exit.474

"block.Cidr_{U_Main.{main_9}_1}.442":             ; preds = %block.exit.360
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.443" = bitcast i64* %idris_int_add1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.444" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.443", align 1
  %src.445 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.444", 0
  %dst.446 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.445, 0
  %src.447 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.444", 1, 0
  %dst.448 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.446, i64* %src.447, 4, 0
  br label %block.exit.474

"block.Cidr_{U_Main.{printFmt_14}_1}.449":        ; preds = %block.exit.360
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.450" = bitcast i64* %idris_int_add1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.451" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.450", align 1
  %src.452 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.451", 0
  %dst.453 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.452, 0
  %src.454 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.451", 1, 1
  %dst.455 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.453, i64* %src.454, 4, 1
  %src.456 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.451", 1, 0
  %dst.457 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.455, i64* %src.456, 4, 0
  br label %block.exit.474

"block.Cidr_{U_Main.{printFmt_15}_1}.458":        ; preds = %block.exit.360
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.459" = bitcast i64* %idris_int_add1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.460" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.459", align 1
  %src.461 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.460", 0
  %dst.462 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.461, 0
  %src.463 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.460", 1, 1
  %dst.464 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.462, i64* %src.463, 4, 1
  %src.465 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.460", 1, 0
  %dst.466 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.464, i64* %src.465, 4, 0
  br label %block.exit.474

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.467": ; preds = %block.exit.360
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.468" = bitcast i64* %idris_int_add1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.469" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.468", align 1
  %src.470 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.469", 0
  %dst.471 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.470, 0
  %src.472 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.469", 1, 0
  %dst.473 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.471, i64* %src.472, 4, 0
  br label %block.exit.474

block.exit.474:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.467", %"block.Cidr_{U_Main.{printFmt_15}_1}.458", %"block.Cidr_{U_Main.{printFmt_14}_1}.449", %"block.Cidr_{U_Main.{main_9}_1}.442", %"block.Cidr_{U_Main.{adder_0}_1}.431", %block.Cidr_Prelude.List.Nil.426, %"block.Cidr_Prelude.List.::.417", %block.Cidr_Prelude.Bool.True.412, %block.Cidr_Prelude.Bool.False.407, %"block.Cidr_Data.Vect.::.398", %block.Cidr_Builtins.MkPair.389, %block.CGrString.382, %block.CGrInt.375, %block.CGrFloat.368, %block.CErased.363
  %node_CGrInt.475 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.367, %block.CErased.363 ], [ %dst.374, %block.CGrFloat.368 ], [ %dst.381, %block.CGrInt.375 ], [ %dst.388, %block.CGrString.382 ], [ %dst.397, %block.Cidr_Builtins.MkPair.389 ], [ %dst.406, %"block.Cidr_Data.Vect.::.398" ], [ %dst.411, %block.Cidr_Prelude.Bool.False.407 ], [ %dst.416, %block.Cidr_Prelude.Bool.True.412 ], [ %dst.425, %"block.Cidr_Prelude.List.::.417" ], [ %dst.430, %block.Cidr_Prelude.List.Nil.426 ], [ %dst.441, %"block.Cidr_{U_Main.{adder_0}_1}.431" ], [ %dst.448, %"block.Cidr_{U_Main.{main_9}_1}.442" ], [ %dst.457, %"block.Cidr_{U_Main.{printFmt_14}_1}.449" ], [ %dst.466, %"block.Cidr_{U_Main.{printFmt_15}_1}.458" ], [ %dst.473, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.467" ]
  %idris_int_add1_1 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrInt.475, 2, 0
  %idris_int_add2.476 = add i64 %idris_int_add0_1, %idris_int_add1_1
  %node_CGrInt.477 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 %idris_int_add2.476, 1, 0
  ret <{ i64, [1 x i64] }> %node_CGrInt.477

error_block:                                      ; preds = %block.exit.360, %idris_int_add.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @idris_int_sub(i64* %idris_int_sub0, i64* %idris_int_sub1) #0 {
idris_int_sub.entry:
  %tag.478 = load i64, i64* %idris_int_sub0, align 1
  %ptr_CGrInt.479 = bitcast i64* %idris_int_sub0 to <{ i64, [1 x i64] }>*
  %node_CGrInt.480 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.479, align 1
  %idris_int_sub0_1 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.480, 1, 0
  %tag.481 = load i64, i64* %idris_int_sub1, align 1
  %ptr_CGrInt.482 = bitcast i64* %idris_int_sub1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.483 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.482, align 1
  %idris_int_sub1_1 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.483, 1, 0
  %idris_int_sub2.484 = sub i64 %idris_int_sub0_1, %idris_int_sub1_1
  %node_CGrInt.485 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 %idris_int_sub2.484, 1, 0
  ret <{ i64, [1 x i64] }> %node_CGrInt.485

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @idris_write_str(i64* %idris_write_str1, i64* %idris_write_str2) #0 {
idris_write_str.entry:
  %tag.486 = load i64, i64* %idris_write_str2, align 1
  %ptr_CGrString.487 = bitcast i64* %idris_write_str2 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.488 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.487, align 1
  %idris_write_str2_0 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.488, 1, 0
  call void @_prim_string_print({ i8*, i64 }* %idris_write_str2_0)
  ret <{ i64 }> <{ i64 15 }>

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %idris_str_concat1, i64* %idris_str_concat2) #0 {
idris_str_concat.entry:
  %tag.489 = load i64, i64* %idris_str_concat1, align 1
  switch i64 %tag.489, label %error_block [
    i64 0, label %block.CErased.490
    i64 1, label %block.CGrFloat.495
    i64 2, label %block.CGrInt.502
    i64 3, label %block.CGrString.509
    i64 4, label %block.Cidr_Builtins.MkPair.516
    i64 5, label %"block.Cidr_Data.Vect.::.525"
    i64 6, label %block.Cidr_Prelude.Bool.False.534
    i64 7, label %block.Cidr_Prelude.Bool.True.539
    i64 8, label %"block.Cidr_Prelude.List.::.544"
    i64 9, label %block.Cidr_Prelude.List.Nil.553
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.558"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.569"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.576"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.585"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.594"
  ]

block.CErased.490:                                ; preds = %idris_str_concat.entry
  %ptr_CErased.491 = bitcast i64* %idris_str_concat1 to <{ i64 }>*
  %node_CErased.492 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.491, align 1
  %src.493 = extractvalue <{ i64 }> %node_CErased.492, 0
  %dst.494 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.493, 0
  br label %block.exit.601

block.CGrFloat.495:                               ; preds = %idris_str_concat.entry
  %ptr_CGrFloat.496 = bitcast i64* %idris_str_concat1 to <{ i64, [1 x float] }>*
  %node_CGrFloat.497 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.496, align 1
  %src.498 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.497, 0
  %dst.499 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.498, 0
  %src.500 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.497, 1, 0
  %dst.501 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.499, float %src.500, 1, 0
  br label %block.exit.601

block.CGrInt.502:                                 ; preds = %idris_str_concat.entry
  %ptr_CGrInt.503 = bitcast i64* %idris_str_concat1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.504 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.503, align 1
  %src.505 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.504, 0
  %dst.506 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.505, 0
  %src.507 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.504, 1, 0
  %dst.508 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.506, i64 %src.507, 2, 0
  br label %block.exit.601

block.CGrString.509:                              ; preds = %idris_str_concat.entry
  %ptr_CGrString.510 = bitcast i64* %idris_str_concat1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.511 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.510, align 1
  %src.512 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.511, 0
  %dst.513 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.512, 0
  %src.514 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.511, 1, 0
  %dst.515 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.513, { i8*, i64 }* %src.514, 3, 0
  br label %block.exit.601

block.Cidr_Builtins.MkPair.516:                   ; preds = %idris_str_concat.entry
  %ptr_Cidr_Builtins.MkPair.517 = bitcast i64* %idris_str_concat1 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.518 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.517, align 1
  %src.519 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.518, 0
  %dst.520 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.519, 0
  %src.521 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.518, 1, 1
  %dst.522 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.520, i64* %src.521, 4, 1
  %src.523 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.518, 1, 0
  %dst.524 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.522, i64* %src.523, 4, 0
  br label %block.exit.601

"block.Cidr_Data.Vect.::.525":                    ; preds = %idris_str_concat.entry
  %"ptr_Cidr_Data.Vect.::.526" = bitcast i64* %idris_str_concat1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.527" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.526", align 1
  %src.528 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.527", 0
  %dst.529 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.528, 0
  %src.530 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.527", 1, 1
  %dst.531 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.529, i64* %src.530, 4, 1
  %src.532 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.527", 1, 0
  %dst.533 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.531, i64* %src.532, 4, 0
  br label %block.exit.601

block.Cidr_Prelude.Bool.False.534:                ; preds = %idris_str_concat.entry
  %ptr_Cidr_Prelude.Bool.False.535 = bitcast i64* %idris_str_concat1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.536 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.535, align 1
  %src.537 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.536, 0
  %dst.538 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.537, 0
  br label %block.exit.601

block.Cidr_Prelude.Bool.True.539:                 ; preds = %idris_str_concat.entry
  %ptr_Cidr_Prelude.Bool.True.540 = bitcast i64* %idris_str_concat1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.541 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.540, align 1
  %src.542 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.541, 0
  %dst.543 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.542, 0
  br label %block.exit.601

"block.Cidr_Prelude.List.::.544":                 ; preds = %idris_str_concat.entry
  %"ptr_Cidr_Prelude.List.::.545" = bitcast i64* %idris_str_concat1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.546" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.545", align 1
  %src.547 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.546", 0
  %dst.548 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.547, 0
  %src.549 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.546", 1, 1
  %dst.550 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.548, i64* %src.549, 4, 1
  %src.551 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.546", 1, 0
  %dst.552 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.550, i64* %src.551, 4, 0
  br label %block.exit.601

block.Cidr_Prelude.List.Nil.553:                  ; preds = %idris_str_concat.entry
  %ptr_Cidr_Prelude.List.Nil.554 = bitcast i64* %idris_str_concat1 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.555 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.554, align 1
  %src.556 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.555, 0
  %dst.557 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.556, 0
  br label %block.exit.601

"block.Cidr_{U_Main.{adder_0}_1}.558":            ; preds = %idris_str_concat.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.559" = bitcast i64* %idris_str_concat1 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.560" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.559", align 1
  %src.561 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.560", 0
  %dst.562 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.561, 0
  %src.563 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.560", 1, 2
  %dst.564 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.562, i64* %src.563, 4, 2
  %src.565 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.560", 1, 1
  %dst.566 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.564, i64* %src.565, 4, 1
  %src.567 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.560", 1, 0
  %dst.568 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.566, i64* %src.567, 4, 0
  br label %block.exit.601

"block.Cidr_{U_Main.{main_9}_1}.569":             ; preds = %idris_str_concat.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.570" = bitcast i64* %idris_str_concat1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.571" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.570", align 1
  %src.572 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.571", 0
  %dst.573 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.572, 0
  %src.574 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.571", 1, 0
  %dst.575 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.573, i64* %src.574, 4, 0
  br label %block.exit.601

"block.Cidr_{U_Main.{printFmt_14}_1}.576":        ; preds = %idris_str_concat.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.577" = bitcast i64* %idris_str_concat1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.578" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.577", align 1
  %src.579 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.578", 0
  %dst.580 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.579, 0
  %src.581 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.578", 1, 1
  %dst.582 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.580, i64* %src.581, 4, 1
  %src.583 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.578", 1, 0
  %dst.584 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.582, i64* %src.583, 4, 0
  br label %block.exit.601

"block.Cidr_{U_Main.{printFmt_15}_1}.585":        ; preds = %idris_str_concat.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.586" = bitcast i64* %idris_str_concat1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.587" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.586", align 1
  %src.588 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.587", 0
  %dst.589 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.588, 0
  %src.590 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.587", 1, 1
  %dst.591 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.589, i64* %src.590, 4, 1
  %src.592 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.587", 1, 0
  %dst.593 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.591, i64* %src.592, 4, 0
  br label %block.exit.601

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.594": ; preds = %idris_str_concat.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.595" = bitcast i64* %idris_str_concat1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.596" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.595", align 1
  %src.597 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.596", 0
  %dst.598 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.597, 0
  %src.599 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.596", 1, 0
  %dst.600 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.598, i64* %src.599, 4, 0
  br label %block.exit.601

block.exit.601:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.594", %"block.Cidr_{U_Main.{printFmt_15}_1}.585", %"block.Cidr_{U_Main.{printFmt_14}_1}.576", %"block.Cidr_{U_Main.{main_9}_1}.569", %"block.Cidr_{U_Main.{adder_0}_1}.558", %block.Cidr_Prelude.List.Nil.553, %"block.Cidr_Prelude.List.::.544", %block.Cidr_Prelude.Bool.True.539, %block.Cidr_Prelude.Bool.False.534, %"block.Cidr_Data.Vect.::.525", %block.Cidr_Builtins.MkPair.516, %block.CGrString.509, %block.CGrInt.502, %block.CGrFloat.495, %block.CErased.490
  %node_CGrString.602 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.494, %block.CErased.490 ], [ %dst.501, %block.CGrFloat.495 ], [ %dst.508, %block.CGrInt.502 ], [ %dst.515, %block.CGrString.509 ], [ %dst.524, %block.Cidr_Builtins.MkPair.516 ], [ %dst.533, %"block.Cidr_Data.Vect.::.525" ], [ %dst.538, %block.Cidr_Prelude.Bool.False.534 ], [ %dst.543, %block.Cidr_Prelude.Bool.True.539 ], [ %dst.552, %"block.Cidr_Prelude.List.::.544" ], [ %dst.557, %block.Cidr_Prelude.List.Nil.553 ], [ %dst.568, %"block.Cidr_{U_Main.{adder_0}_1}.558" ], [ %dst.575, %"block.Cidr_{U_Main.{main_9}_1}.569" ], [ %dst.584, %"block.Cidr_{U_Main.{printFmt_14}_1}.576" ], [ %dst.593, %"block.Cidr_{U_Main.{printFmt_15}_1}.585" ], [ %dst.600, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.594" ]
  %idris_str_concat1_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrString.602, 3, 0
  %tag.603 = load i64, i64* %idris_str_concat2, align 1
  switch i64 %tag.603, label %error_block [
    i64 0, label %block.CErased.604
    i64 1, label %block.CGrFloat.609
    i64 2, label %block.CGrInt.616
    i64 3, label %block.CGrString.623
    i64 4, label %block.Cidr_Builtins.MkPair.630
    i64 5, label %"block.Cidr_Data.Vect.::.639"
    i64 6, label %block.Cidr_Prelude.Bool.False.648
    i64 7, label %block.Cidr_Prelude.Bool.True.653
    i64 8, label %"block.Cidr_Prelude.List.::.658"
    i64 9, label %block.Cidr_Prelude.List.Nil.667
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.672"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.683"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.690"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.699"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.708"
  ]

block.CErased.604:                                ; preds = %block.exit.601
  %ptr_CErased.605 = bitcast i64* %idris_str_concat2 to <{ i64 }>*
  %node_CErased.606 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.605, align 1
  %src.607 = extractvalue <{ i64 }> %node_CErased.606, 0
  %dst.608 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.607, 0
  br label %block.exit.715

block.CGrFloat.609:                               ; preds = %block.exit.601
  %ptr_CGrFloat.610 = bitcast i64* %idris_str_concat2 to <{ i64, [1 x float] }>*
  %node_CGrFloat.611 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.610, align 1
  %src.612 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.611, 0
  %dst.613 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.612, 0
  %src.614 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.611, 1, 0
  %dst.615 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.613, float %src.614, 1, 0
  br label %block.exit.715

block.CGrInt.616:                                 ; preds = %block.exit.601
  %ptr_CGrInt.617 = bitcast i64* %idris_str_concat2 to <{ i64, [1 x i64] }>*
  %node_CGrInt.618 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.617, align 1
  %src.619 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.618, 0
  %dst.620 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.619, 0
  %src.621 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.618, 1, 0
  %dst.622 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.620, i64 %src.621, 2, 0
  br label %block.exit.715

block.CGrString.623:                              ; preds = %block.exit.601
  %ptr_CGrString.624 = bitcast i64* %idris_str_concat2 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.625 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.624, align 1
  %src.626 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.625, 0
  %dst.627 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.626, 0
  %src.628 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.625, 1, 0
  %dst.629 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.627, { i8*, i64 }* %src.628, 3, 0
  br label %block.exit.715

block.Cidr_Builtins.MkPair.630:                   ; preds = %block.exit.601
  %ptr_Cidr_Builtins.MkPair.631 = bitcast i64* %idris_str_concat2 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.632 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.631, align 1
  %src.633 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.632, 0
  %dst.634 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.633, 0
  %src.635 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.632, 1, 1
  %dst.636 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.634, i64* %src.635, 4, 1
  %src.637 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.632, 1, 0
  %dst.638 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.636, i64* %src.637, 4, 0
  br label %block.exit.715

"block.Cidr_Data.Vect.::.639":                    ; preds = %block.exit.601
  %"ptr_Cidr_Data.Vect.::.640" = bitcast i64* %idris_str_concat2 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.641" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.640", align 1
  %src.642 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.641", 0
  %dst.643 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.642, 0
  %src.644 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.641", 1, 1
  %dst.645 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.643, i64* %src.644, 4, 1
  %src.646 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.641", 1, 0
  %dst.647 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.645, i64* %src.646, 4, 0
  br label %block.exit.715

block.Cidr_Prelude.Bool.False.648:                ; preds = %block.exit.601
  %ptr_Cidr_Prelude.Bool.False.649 = bitcast i64* %idris_str_concat2 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.650 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.649, align 1
  %src.651 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.650, 0
  %dst.652 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.651, 0
  br label %block.exit.715

block.Cidr_Prelude.Bool.True.653:                 ; preds = %block.exit.601
  %ptr_Cidr_Prelude.Bool.True.654 = bitcast i64* %idris_str_concat2 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.655 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.654, align 1
  %src.656 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.655, 0
  %dst.657 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.656, 0
  br label %block.exit.715

"block.Cidr_Prelude.List.::.658":                 ; preds = %block.exit.601
  %"ptr_Cidr_Prelude.List.::.659" = bitcast i64* %idris_str_concat2 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.660" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.659", align 1
  %src.661 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.660", 0
  %dst.662 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.661, 0
  %src.663 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.660", 1, 1
  %dst.664 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.662, i64* %src.663, 4, 1
  %src.665 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.660", 1, 0
  %dst.666 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.664, i64* %src.665, 4, 0
  br label %block.exit.715

block.Cidr_Prelude.List.Nil.667:                  ; preds = %block.exit.601
  %ptr_Cidr_Prelude.List.Nil.668 = bitcast i64* %idris_str_concat2 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.669 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.668, align 1
  %src.670 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.669, 0
  %dst.671 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.670, 0
  br label %block.exit.715

"block.Cidr_{U_Main.{adder_0}_1}.672":            ; preds = %block.exit.601
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.673" = bitcast i64* %idris_str_concat2 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.674" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.673", align 1
  %src.675 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.674", 0
  %dst.676 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.675, 0
  %src.677 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.674", 1, 2
  %dst.678 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.676, i64* %src.677, 4, 2
  %src.679 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.674", 1, 1
  %dst.680 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.678, i64* %src.679, 4, 1
  %src.681 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.674", 1, 0
  %dst.682 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.680, i64* %src.681, 4, 0
  br label %block.exit.715

"block.Cidr_{U_Main.{main_9}_1}.683":             ; preds = %block.exit.601
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.684" = bitcast i64* %idris_str_concat2 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.685" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.684", align 1
  %src.686 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.685", 0
  %dst.687 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.686, 0
  %src.688 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.685", 1, 0
  %dst.689 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.687, i64* %src.688, 4, 0
  br label %block.exit.715

"block.Cidr_{U_Main.{printFmt_14}_1}.690":        ; preds = %block.exit.601
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.691" = bitcast i64* %idris_str_concat2 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.692" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.691", align 1
  %src.693 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.692", 0
  %dst.694 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.693, 0
  %src.695 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.692", 1, 1
  %dst.696 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.694, i64* %src.695, 4, 1
  %src.697 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.692", 1, 0
  %dst.698 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.696, i64* %src.697, 4, 0
  br label %block.exit.715

"block.Cidr_{U_Main.{printFmt_15}_1}.699":        ; preds = %block.exit.601
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.700" = bitcast i64* %idris_str_concat2 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.701" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.700", align 1
  %src.702 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.701", 0
  %dst.703 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.702, 0
  %src.704 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.701", 1, 1
  %dst.705 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.703, i64* %src.704, 4, 1
  %src.706 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.701", 1, 0
  %dst.707 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.705, i64* %src.706, 4, 0
  br label %block.exit.715

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.708": ; preds = %block.exit.601
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.709" = bitcast i64* %idris_str_concat2 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.710" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.709", align 1
  %src.711 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.710", 0
  %dst.712 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.711, 0
  %src.713 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.710", 1, 0
  %dst.714 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.712, i64* %src.713, 4, 0
  br label %block.exit.715

block.exit.715:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.708", %"block.Cidr_{U_Main.{printFmt_15}_1}.699", %"block.Cidr_{U_Main.{printFmt_14}_1}.690", %"block.Cidr_{U_Main.{main_9}_1}.683", %"block.Cidr_{U_Main.{adder_0}_1}.672", %block.Cidr_Prelude.List.Nil.667, %"block.Cidr_Prelude.List.::.658", %block.Cidr_Prelude.Bool.True.653, %block.Cidr_Prelude.Bool.False.648, %"block.Cidr_Data.Vect.::.639", %block.Cidr_Builtins.MkPair.630, %block.CGrString.623, %block.CGrInt.616, %block.CGrFloat.609, %block.CErased.604
  %node_CGrString.716 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.608, %block.CErased.604 ], [ %dst.615, %block.CGrFloat.609 ], [ %dst.622, %block.CGrInt.616 ], [ %dst.629, %block.CGrString.623 ], [ %dst.638, %block.Cidr_Builtins.MkPair.630 ], [ %dst.647, %"block.Cidr_Data.Vect.::.639" ], [ %dst.652, %block.Cidr_Prelude.Bool.False.648 ], [ %dst.657, %block.Cidr_Prelude.Bool.True.653 ], [ %dst.666, %"block.Cidr_Prelude.List.::.658" ], [ %dst.671, %block.Cidr_Prelude.List.Nil.667 ], [ %dst.682, %"block.Cidr_{U_Main.{adder_0}_1}.672" ], [ %dst.689, %"block.Cidr_{U_Main.{main_9}_1}.683" ], [ %dst.698, %"block.Cidr_{U_Main.{printFmt_14}_1}.690" ], [ %dst.707, %"block.Cidr_{U_Main.{printFmt_15}_1}.699" ], [ %dst.714, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.708" ]
  %idris_str_concat2_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrString.716, 3, 0
  %idris_str_concat3.717 = call { i8*, i64 }* @_prim_string_concat({ i8*, i64 }* %idris_str_concat1_0, { i8*, i64 }* %idris_str_concat2_0)
  %node_CGrString.718 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* %idris_str_concat3.717, 1, 0
  ret <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.718

error_block:                                      ; preds = %block.exit.601, %idris_str_concat.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %idris_str_eq1, i64* %idris_str_eq2) #0 {
idris_str_eq.entry:
  %tag.719 = load i64, i64* %idris_str_eq1, align 1
  switch i64 %tag.719, label %error_block [
    i64 0, label %block.CErased.720
    i64 1, label %block.CGrFloat.725
    i64 2, label %block.CGrInt.732
    i64 3, label %block.CGrString.739
    i64 4, label %block.Cidr_Builtins.MkPair.746
    i64 5, label %"block.Cidr_Data.Vect.::.755"
    i64 6, label %block.Cidr_Prelude.Bool.False.764
    i64 7, label %block.Cidr_Prelude.Bool.True.769
    i64 8, label %"block.Cidr_Prelude.List.::.774"
    i64 9, label %block.Cidr_Prelude.List.Nil.783
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.788"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.799"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.806"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.815"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.824"
  ]

block.CErased.720:                                ; preds = %idris_str_eq.entry
  %ptr_CErased.721 = bitcast i64* %idris_str_eq1 to <{ i64 }>*
  %node_CErased.722 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.721, align 1
  %src.723 = extractvalue <{ i64 }> %node_CErased.722, 0
  %dst.724 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.723, 0
  br label %block.exit.831

block.CGrFloat.725:                               ; preds = %idris_str_eq.entry
  %ptr_CGrFloat.726 = bitcast i64* %idris_str_eq1 to <{ i64, [1 x float] }>*
  %node_CGrFloat.727 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.726, align 1
  %src.728 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.727, 0
  %dst.729 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.728, 0
  %src.730 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.727, 1, 0
  %dst.731 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.729, float %src.730, 1, 0
  br label %block.exit.831

block.CGrInt.732:                                 ; preds = %idris_str_eq.entry
  %ptr_CGrInt.733 = bitcast i64* %idris_str_eq1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.734 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.733, align 1
  %src.735 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.734, 0
  %dst.736 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.735, 0
  %src.737 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.734, 1, 0
  %dst.738 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.736, i64 %src.737, 2, 0
  br label %block.exit.831

block.CGrString.739:                              ; preds = %idris_str_eq.entry
  %ptr_CGrString.740 = bitcast i64* %idris_str_eq1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.741 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.740, align 1
  %src.742 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.741, 0
  %dst.743 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.742, 0
  %src.744 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.741, 1, 0
  %dst.745 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.743, { i8*, i64 }* %src.744, 3, 0
  br label %block.exit.831

block.Cidr_Builtins.MkPair.746:                   ; preds = %idris_str_eq.entry
  %ptr_Cidr_Builtins.MkPair.747 = bitcast i64* %idris_str_eq1 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.748 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.747, align 1
  %src.749 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.748, 0
  %dst.750 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.749, 0
  %src.751 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.748, 1, 1
  %dst.752 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.750, i64* %src.751, 4, 1
  %src.753 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.748, 1, 0
  %dst.754 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.752, i64* %src.753, 4, 0
  br label %block.exit.831

"block.Cidr_Data.Vect.::.755":                    ; preds = %idris_str_eq.entry
  %"ptr_Cidr_Data.Vect.::.756" = bitcast i64* %idris_str_eq1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.757" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.756", align 1
  %src.758 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.757", 0
  %dst.759 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.758, 0
  %src.760 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.757", 1, 1
  %dst.761 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.759, i64* %src.760, 4, 1
  %src.762 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.757", 1, 0
  %dst.763 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.761, i64* %src.762, 4, 0
  br label %block.exit.831

block.Cidr_Prelude.Bool.False.764:                ; preds = %idris_str_eq.entry
  %ptr_Cidr_Prelude.Bool.False.765 = bitcast i64* %idris_str_eq1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.766 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.765, align 1
  %src.767 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.766, 0
  %dst.768 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.767, 0
  br label %block.exit.831

block.Cidr_Prelude.Bool.True.769:                 ; preds = %idris_str_eq.entry
  %ptr_Cidr_Prelude.Bool.True.770 = bitcast i64* %idris_str_eq1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.771 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.770, align 1
  %src.772 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.771, 0
  %dst.773 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.772, 0
  br label %block.exit.831

"block.Cidr_Prelude.List.::.774":                 ; preds = %idris_str_eq.entry
  %"ptr_Cidr_Prelude.List.::.775" = bitcast i64* %idris_str_eq1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.776" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.775", align 1
  %src.777 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.776", 0
  %dst.778 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.777, 0
  %src.779 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.776", 1, 1
  %dst.780 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.778, i64* %src.779, 4, 1
  %src.781 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.776", 1, 0
  %dst.782 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.780, i64* %src.781, 4, 0
  br label %block.exit.831

block.Cidr_Prelude.List.Nil.783:                  ; preds = %idris_str_eq.entry
  %ptr_Cidr_Prelude.List.Nil.784 = bitcast i64* %idris_str_eq1 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.785 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.784, align 1
  %src.786 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.785, 0
  %dst.787 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.786, 0
  br label %block.exit.831

"block.Cidr_{U_Main.{adder_0}_1}.788":            ; preds = %idris_str_eq.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.789" = bitcast i64* %idris_str_eq1 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.790" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.789", align 1
  %src.791 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.790", 0
  %dst.792 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.791, 0
  %src.793 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.790", 1, 2
  %dst.794 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.792, i64* %src.793, 4, 2
  %src.795 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.790", 1, 1
  %dst.796 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.794, i64* %src.795, 4, 1
  %src.797 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.790", 1, 0
  %dst.798 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.796, i64* %src.797, 4, 0
  br label %block.exit.831

"block.Cidr_{U_Main.{main_9}_1}.799":             ; preds = %idris_str_eq.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.800" = bitcast i64* %idris_str_eq1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.801" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.800", align 1
  %src.802 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.801", 0
  %dst.803 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.802, 0
  %src.804 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.801", 1, 0
  %dst.805 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.803, i64* %src.804, 4, 0
  br label %block.exit.831

"block.Cidr_{U_Main.{printFmt_14}_1}.806":        ; preds = %idris_str_eq.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.807" = bitcast i64* %idris_str_eq1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.808" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.807", align 1
  %src.809 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.808", 0
  %dst.810 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.809, 0
  %src.811 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.808", 1, 1
  %dst.812 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.810, i64* %src.811, 4, 1
  %src.813 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.808", 1, 0
  %dst.814 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.812, i64* %src.813, 4, 0
  br label %block.exit.831

"block.Cidr_{U_Main.{printFmt_15}_1}.815":        ; preds = %idris_str_eq.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.816" = bitcast i64* %idris_str_eq1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.817" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.816", align 1
  %src.818 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.817", 0
  %dst.819 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.818, 0
  %src.820 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.817", 1, 1
  %dst.821 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.819, i64* %src.820, 4, 1
  %src.822 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.817", 1, 0
  %dst.823 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.821, i64* %src.822, 4, 0
  br label %block.exit.831

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.824": ; preds = %idris_str_eq.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.825" = bitcast i64* %idris_str_eq1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.826" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.825", align 1
  %src.827 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.826", 0
  %dst.828 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.827, 0
  %src.829 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.826", 1, 0
  %dst.830 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.828, i64* %src.829, 4, 0
  br label %block.exit.831

block.exit.831:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.824", %"block.Cidr_{U_Main.{printFmt_15}_1}.815", %"block.Cidr_{U_Main.{printFmt_14}_1}.806", %"block.Cidr_{U_Main.{main_9}_1}.799", %"block.Cidr_{U_Main.{adder_0}_1}.788", %block.Cidr_Prelude.List.Nil.783, %"block.Cidr_Prelude.List.::.774", %block.Cidr_Prelude.Bool.True.769, %block.Cidr_Prelude.Bool.False.764, %"block.Cidr_Data.Vect.::.755", %block.Cidr_Builtins.MkPair.746, %block.CGrString.739, %block.CGrInt.732, %block.CGrFloat.725, %block.CErased.720
  %node_CGrString.832 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.724, %block.CErased.720 ], [ %dst.731, %block.CGrFloat.725 ], [ %dst.738, %block.CGrInt.732 ], [ %dst.745, %block.CGrString.739 ], [ %dst.754, %block.Cidr_Builtins.MkPair.746 ], [ %dst.763, %"block.Cidr_Data.Vect.::.755" ], [ %dst.768, %block.Cidr_Prelude.Bool.False.764 ], [ %dst.773, %block.Cidr_Prelude.Bool.True.769 ], [ %dst.782, %"block.Cidr_Prelude.List.::.774" ], [ %dst.787, %block.Cidr_Prelude.List.Nil.783 ], [ %dst.798, %"block.Cidr_{U_Main.{adder_0}_1}.788" ], [ %dst.805, %"block.Cidr_{U_Main.{main_9}_1}.799" ], [ %dst.814, %"block.Cidr_{U_Main.{printFmt_14}_1}.806" ], [ %dst.823, %"block.Cidr_{U_Main.{printFmt_15}_1}.815" ], [ %dst.830, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.824" ]
  %idris_str_eq1_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrString.832, 3, 0
  %tag.833 = load i64, i64* %idris_str_eq2, align 1
  %ptr_CGrString.834 = bitcast i64* %idris_str_eq2 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.835 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.834, align 1
  %idris_str_eq2_0 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.835, 1, 0
  %idris_str_eq3.836 = call i64 @_prim_string_eq({ i8*, i64 }* %idris_str_eq1_0, { i8*, i64 }* %idris_str_eq2_0)
  %node_CGrInt.837 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 %idris_str_eq3.836, 1, 0
  ret <{ i64, [1 x i64] }> %node_CGrInt.837

error_block:                                      ; preds = %idris_str_eq.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idris_str_rev1) #0 {
idris_str_rev.entry:
  %tag.838 = load i64, i64* %idris_str_rev1, align 1
  %ptr_CGrString.839 = bitcast i64* %idris_str_rev1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.840 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.839, align 1
  %idris_str_rev1_0 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.840, 1, 0
  %idris_str_rev2.841 = call { i8*, i64 }* @_prim_string_reverse({ i8*, i64 }* %idris_str_rev1_0)
  %node_CGrString.842 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* %idris_str_rev2.841, 1, 0
  ret <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.842

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %idris_str_head1) #0 {
idris_str_head.entry:
  %tag.843 = load i64, i64* %idris_str_head1, align 1
  switch i64 %tag.843, label %error_block [
    i64 0, label %block.CErased.844
    i64 1, label %block.CGrFloat.849
    i64 2, label %block.CGrInt.856
    i64 3, label %block.CGrString.863
    i64 4, label %block.Cidr_Builtins.MkPair.870
    i64 5, label %"block.Cidr_Data.Vect.::.879"
    i64 6, label %block.Cidr_Prelude.Bool.False.888
    i64 7, label %block.Cidr_Prelude.Bool.True.893
    i64 8, label %"block.Cidr_Prelude.List.::.898"
    i64 9, label %block.Cidr_Prelude.List.Nil.907
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.912"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.923"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.930"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.939"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.948"
  ]

block.CErased.844:                                ; preds = %idris_str_head.entry
  %ptr_CErased.845 = bitcast i64* %idris_str_head1 to <{ i64 }>*
  %node_CErased.846 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.845, align 1
  %src.847 = extractvalue <{ i64 }> %node_CErased.846, 0
  %dst.848 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.847, 0
  br label %block.exit.955

block.CGrFloat.849:                               ; preds = %idris_str_head.entry
  %ptr_CGrFloat.850 = bitcast i64* %idris_str_head1 to <{ i64, [1 x float] }>*
  %node_CGrFloat.851 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.850, align 1
  %src.852 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.851, 0
  %dst.853 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.852, 0
  %src.854 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.851, 1, 0
  %dst.855 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.853, float %src.854, 1, 0
  br label %block.exit.955

block.CGrInt.856:                                 ; preds = %idris_str_head.entry
  %ptr_CGrInt.857 = bitcast i64* %idris_str_head1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.858 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.857, align 1
  %src.859 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.858, 0
  %dst.860 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.859, 0
  %src.861 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.858, 1, 0
  %dst.862 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.860, i64 %src.861, 2, 0
  br label %block.exit.955

block.CGrString.863:                              ; preds = %idris_str_head.entry
  %ptr_CGrString.864 = bitcast i64* %idris_str_head1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.865 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.864, align 1
  %src.866 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.865, 0
  %dst.867 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.866, 0
  %src.868 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.865, 1, 0
  %dst.869 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.867, { i8*, i64 }* %src.868, 3, 0
  br label %block.exit.955

block.Cidr_Builtins.MkPair.870:                   ; preds = %idris_str_head.entry
  %ptr_Cidr_Builtins.MkPair.871 = bitcast i64* %idris_str_head1 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.872 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.871, align 1
  %src.873 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.872, 0
  %dst.874 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.873, 0
  %src.875 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.872, 1, 1
  %dst.876 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.874, i64* %src.875, 4, 1
  %src.877 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.872, 1, 0
  %dst.878 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.876, i64* %src.877, 4, 0
  br label %block.exit.955

"block.Cidr_Data.Vect.::.879":                    ; preds = %idris_str_head.entry
  %"ptr_Cidr_Data.Vect.::.880" = bitcast i64* %idris_str_head1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.881" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.880", align 1
  %src.882 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.881", 0
  %dst.883 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.882, 0
  %src.884 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.881", 1, 1
  %dst.885 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.883, i64* %src.884, 4, 1
  %src.886 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.881", 1, 0
  %dst.887 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.885, i64* %src.886, 4, 0
  br label %block.exit.955

block.Cidr_Prelude.Bool.False.888:                ; preds = %idris_str_head.entry
  %ptr_Cidr_Prelude.Bool.False.889 = bitcast i64* %idris_str_head1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.890 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.889, align 1
  %src.891 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.890, 0
  %dst.892 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.891, 0
  br label %block.exit.955

block.Cidr_Prelude.Bool.True.893:                 ; preds = %idris_str_head.entry
  %ptr_Cidr_Prelude.Bool.True.894 = bitcast i64* %idris_str_head1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.895 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.894, align 1
  %src.896 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.895, 0
  %dst.897 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.896, 0
  br label %block.exit.955

"block.Cidr_Prelude.List.::.898":                 ; preds = %idris_str_head.entry
  %"ptr_Cidr_Prelude.List.::.899" = bitcast i64* %idris_str_head1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.900" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.899", align 1
  %src.901 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.900", 0
  %dst.902 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.901, 0
  %src.903 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.900", 1, 1
  %dst.904 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.902, i64* %src.903, 4, 1
  %src.905 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.900", 1, 0
  %dst.906 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.904, i64* %src.905, 4, 0
  br label %block.exit.955

block.Cidr_Prelude.List.Nil.907:                  ; preds = %idris_str_head.entry
  %ptr_Cidr_Prelude.List.Nil.908 = bitcast i64* %idris_str_head1 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.909 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.908, align 1
  %src.910 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.909, 0
  %dst.911 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.910, 0
  br label %block.exit.955

"block.Cidr_{U_Main.{adder_0}_1}.912":            ; preds = %idris_str_head.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.913" = bitcast i64* %idris_str_head1 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.914" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.913", align 1
  %src.915 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.914", 0
  %dst.916 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.915, 0
  %src.917 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.914", 1, 2
  %dst.918 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.916, i64* %src.917, 4, 2
  %src.919 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.914", 1, 1
  %dst.920 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.918, i64* %src.919, 4, 1
  %src.921 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.914", 1, 0
  %dst.922 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.920, i64* %src.921, 4, 0
  br label %block.exit.955

"block.Cidr_{U_Main.{main_9}_1}.923":             ; preds = %idris_str_head.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.924" = bitcast i64* %idris_str_head1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.925" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.924", align 1
  %src.926 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.925", 0
  %dst.927 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.926, 0
  %src.928 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.925", 1, 0
  %dst.929 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.927, i64* %src.928, 4, 0
  br label %block.exit.955

"block.Cidr_{U_Main.{printFmt_14}_1}.930":        ; preds = %idris_str_head.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.931" = bitcast i64* %idris_str_head1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.932" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.931", align 1
  %src.933 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.932", 0
  %dst.934 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.933, 0
  %src.935 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.932", 1, 1
  %dst.936 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.934, i64* %src.935, 4, 1
  %src.937 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.932", 1, 0
  %dst.938 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.936, i64* %src.937, 4, 0
  br label %block.exit.955

"block.Cidr_{U_Main.{printFmt_15}_1}.939":        ; preds = %idris_str_head.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.940" = bitcast i64* %idris_str_head1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.941" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.940", align 1
  %src.942 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.941", 0
  %dst.943 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.942, 0
  %src.944 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.941", 1, 1
  %dst.945 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.943, i64* %src.944, 4, 1
  %src.946 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.941", 1, 0
  %dst.947 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.945, i64* %src.946, 4, 0
  br label %block.exit.955

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.948": ; preds = %idris_str_head.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.949" = bitcast i64* %idris_str_head1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.950" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.949", align 1
  %src.951 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.950", 0
  %dst.952 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.951, 0
  %src.953 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.950", 1, 0
  %dst.954 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.952, i64* %src.953, 4, 0
  br label %block.exit.955

block.exit.955:                                   ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.948", %"block.Cidr_{U_Main.{printFmt_15}_1}.939", %"block.Cidr_{U_Main.{printFmt_14}_1}.930", %"block.Cidr_{U_Main.{main_9}_1}.923", %"block.Cidr_{U_Main.{adder_0}_1}.912", %block.Cidr_Prelude.List.Nil.907, %"block.Cidr_Prelude.List.::.898", %block.Cidr_Prelude.Bool.True.893, %block.Cidr_Prelude.Bool.False.888, %"block.Cidr_Data.Vect.::.879", %block.Cidr_Builtins.MkPair.870, %block.CGrString.863, %block.CGrInt.856, %block.CGrFloat.849, %block.CErased.844
  %node_CGrString.956 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.848, %block.CErased.844 ], [ %dst.855, %block.CGrFloat.849 ], [ %dst.862, %block.CGrInt.856 ], [ %dst.869, %block.CGrString.863 ], [ %dst.878, %block.Cidr_Builtins.MkPair.870 ], [ %dst.887, %"block.Cidr_Data.Vect.::.879" ], [ %dst.892, %block.Cidr_Prelude.Bool.False.888 ], [ %dst.897, %block.Cidr_Prelude.Bool.True.893 ], [ %dst.906, %"block.Cidr_Prelude.List.::.898" ], [ %dst.911, %block.Cidr_Prelude.List.Nil.907 ], [ %dst.922, %"block.Cidr_{U_Main.{adder_0}_1}.912" ], [ %dst.929, %"block.Cidr_{U_Main.{main_9}_1}.923" ], [ %dst.938, %"block.Cidr_{U_Main.{printFmt_14}_1}.930" ], [ %dst.947, %"block.Cidr_{U_Main.{printFmt_15}_1}.939" ], [ %dst.954, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.948" ]
  %idris_str_head1_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrString.956, 3, 0
  %idris_str_head2.957 = call i64 @_prim_string_head({ i8*, i64 }* %idris_str_head1_0)
  %node_CGrInt.958 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 %idris_str_head2.957, 1, 0
  ret <{ i64, [1 x i64] }> %node_CGrInt.958

error_block:                                      ; preds = %idris_str_head.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %idris_str_tail1) #0 {
idris_str_tail.entry:
  %tag.959 = load i64, i64* %idris_str_tail1, align 1
  switch i64 %tag.959, label %error_block [
    i64 0, label %block.CErased.960
    i64 1, label %block.CGrFloat.965
    i64 2, label %block.CGrInt.972
    i64 3, label %block.CGrString.979
    i64 4, label %block.Cidr_Builtins.MkPair.986
    i64 5, label %"block.Cidr_Data.Vect.::.995"
    i64 6, label %block.Cidr_Prelude.Bool.False.1004
    i64 7, label %block.Cidr_Prelude.Bool.True.1009
    i64 8, label %"block.Cidr_Prelude.List.::.1014"
    i64 9, label %block.Cidr_Prelude.List.Nil.1023
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.1028"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.1039"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.1046"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.1055"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1064"
  ]

block.CErased.960:                                ; preds = %idris_str_tail.entry
  %ptr_CErased.961 = bitcast i64* %idris_str_tail1 to <{ i64 }>*
  %node_CErased.962 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.961, align 1
  %src.963 = extractvalue <{ i64 }> %node_CErased.962, 0
  %dst.964 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.963, 0
  br label %block.exit.1071

block.CGrFloat.965:                               ; preds = %idris_str_tail.entry
  %ptr_CGrFloat.966 = bitcast i64* %idris_str_tail1 to <{ i64, [1 x float] }>*
  %node_CGrFloat.967 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.966, align 1
  %src.968 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.967, 0
  %dst.969 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.968, 0
  %src.970 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.967, 1, 0
  %dst.971 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.969, float %src.970, 1, 0
  br label %block.exit.1071

block.CGrInt.972:                                 ; preds = %idris_str_tail.entry
  %ptr_CGrInt.973 = bitcast i64* %idris_str_tail1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.974 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.973, align 1
  %src.975 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.974, 0
  %dst.976 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.975, 0
  %src.977 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.974, 1, 0
  %dst.978 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.976, i64 %src.977, 2, 0
  br label %block.exit.1071

block.CGrString.979:                              ; preds = %idris_str_tail.entry
  %ptr_CGrString.980 = bitcast i64* %idris_str_tail1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.981 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.980, align 1
  %src.982 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.981, 0
  %dst.983 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.982, 0
  %src.984 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.981, 1, 0
  %dst.985 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.983, { i8*, i64 }* %src.984, 3, 0
  br label %block.exit.1071

block.Cidr_Builtins.MkPair.986:                   ; preds = %idris_str_tail.entry
  %ptr_Cidr_Builtins.MkPair.987 = bitcast i64* %idris_str_tail1 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.988 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.987, align 1
  %src.989 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.988, 0
  %dst.990 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.989, 0
  %src.991 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.988, 1, 1
  %dst.992 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.990, i64* %src.991, 4, 1
  %src.993 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.988, 1, 0
  %dst.994 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.992, i64* %src.993, 4, 0
  br label %block.exit.1071

"block.Cidr_Data.Vect.::.995":                    ; preds = %idris_str_tail.entry
  %"ptr_Cidr_Data.Vect.::.996" = bitcast i64* %idris_str_tail1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.997" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.996", align 1
  %src.998 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.997", 0
  %dst.999 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.998, 0
  %src.1000 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.997", 1, 1
  %dst.1001 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.999, i64* %src.1000, 4, 1
  %src.1002 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.997", 1, 0
  %dst.1003 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1001, i64* %src.1002, 4, 0
  br label %block.exit.1071

block.Cidr_Prelude.Bool.False.1004:               ; preds = %idris_str_tail.entry
  %ptr_Cidr_Prelude.Bool.False.1005 = bitcast i64* %idris_str_tail1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.1006 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1005, align 1
  %src.1007 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.1006, 0
  %dst.1008 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1007, 0
  br label %block.exit.1071

block.Cidr_Prelude.Bool.True.1009:                ; preds = %idris_str_tail.entry
  %ptr_Cidr_Prelude.Bool.True.1010 = bitcast i64* %idris_str_tail1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.1011 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1010, align 1
  %src.1012 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.1011, 0
  %dst.1013 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1012, 0
  br label %block.exit.1071

"block.Cidr_Prelude.List.::.1014":                ; preds = %idris_str_tail.entry
  %"ptr_Cidr_Prelude.List.::.1015" = bitcast i64* %idris_str_tail1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.1016" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.1015", align 1
  %src.1017 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1016", 0
  %dst.1018 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1017, 0
  %src.1019 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1016", 1, 1
  %dst.1020 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1018, i64* %src.1019, 4, 1
  %src.1021 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1016", 1, 0
  %dst.1022 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1020, i64* %src.1021, 4, 0
  br label %block.exit.1071

block.Cidr_Prelude.List.Nil.1023:                 ; preds = %idris_str_tail.entry
  %ptr_Cidr_Prelude.List.Nil.1024 = bitcast i64* %idris_str_tail1 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.1025 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.1024, align 1
  %src.1026 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.1025, 0
  %dst.1027 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1026, 0
  br label %block.exit.1071

"block.Cidr_{U_Main.{adder_0}_1}.1028":           ; preds = %idris_str_tail.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1029" = bitcast i64* %idris_str_tail1 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1030" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1029", align 1
  %src.1031 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1030", 0
  %dst.1032 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1031, 0
  %src.1033 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1030", 1, 2
  %dst.1034 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1032, i64* %src.1033, 4, 2
  %src.1035 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1030", 1, 1
  %dst.1036 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1034, i64* %src.1035, 4, 1
  %src.1037 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1030", 1, 0
  %dst.1038 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1036, i64* %src.1037, 4, 0
  br label %block.exit.1071

"block.Cidr_{U_Main.{main_9}_1}.1039":            ; preds = %idris_str_tail.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1040" = bitcast i64* %idris_str_tail1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.1041" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1040", align 1
  %src.1042 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1041", 0
  %dst.1043 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1042, 0
  %src.1044 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1041", 1, 0
  %dst.1045 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1043, i64* %src.1044, 4, 0
  br label %block.exit.1071

"block.Cidr_{U_Main.{printFmt_14}_1}.1046":       ; preds = %idris_str_tail.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1047" = bitcast i64* %idris_str_tail1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1048" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1047", align 1
  %src.1049 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1048", 0
  %dst.1050 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1049, 0
  %src.1051 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1048", 1, 1
  %dst.1052 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1050, i64* %src.1051, 4, 1
  %src.1053 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1048", 1, 0
  %dst.1054 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1052, i64* %src.1053, 4, 0
  br label %block.exit.1071

"block.Cidr_{U_Main.{printFmt_15}_1}.1055":       ; preds = %idris_str_tail.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1056" = bitcast i64* %idris_str_tail1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1057" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1056", align 1
  %src.1058 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1057", 0
  %dst.1059 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1058, 0
  %src.1060 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1057", 1, 1
  %dst.1061 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1059, i64* %src.1060, 4, 1
  %src.1062 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1057", 1, 0
  %dst.1063 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1061, i64* %src.1062, 4, 0
  br label %block.exit.1071

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1064": ; preds = %idris_str_tail.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1065" = bitcast i64* %idris_str_tail1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1066" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1065", align 1
  %src.1067 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1066", 0
  %dst.1068 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1067, 0
  %src.1069 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1066", 1, 0
  %dst.1070 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1068, i64* %src.1069, 4, 0
  br label %block.exit.1071

block.exit.1071:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1064", %"block.Cidr_{U_Main.{printFmt_15}_1}.1055", %"block.Cidr_{U_Main.{printFmt_14}_1}.1046", %"block.Cidr_{U_Main.{main_9}_1}.1039", %"block.Cidr_{U_Main.{adder_0}_1}.1028", %block.Cidr_Prelude.List.Nil.1023, %"block.Cidr_Prelude.List.::.1014", %block.Cidr_Prelude.Bool.True.1009, %block.Cidr_Prelude.Bool.False.1004, %"block.Cidr_Data.Vect.::.995", %block.Cidr_Builtins.MkPair.986, %block.CGrString.979, %block.CGrInt.972, %block.CGrFloat.965, %block.CErased.960
  %node_CGrString.1072 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.964, %block.CErased.960 ], [ %dst.971, %block.CGrFloat.965 ], [ %dst.978, %block.CGrInt.972 ], [ %dst.985, %block.CGrString.979 ], [ %dst.994, %block.Cidr_Builtins.MkPair.986 ], [ %dst.1003, %"block.Cidr_Data.Vect.::.995" ], [ %dst.1008, %block.Cidr_Prelude.Bool.False.1004 ], [ %dst.1013, %block.Cidr_Prelude.Bool.True.1009 ], [ %dst.1022, %"block.Cidr_Prelude.List.::.1014" ], [ %dst.1027, %block.Cidr_Prelude.List.Nil.1023 ], [ %dst.1038, %"block.Cidr_{U_Main.{adder_0}_1}.1028" ], [ %dst.1045, %"block.Cidr_{U_Main.{main_9}_1}.1039" ], [ %dst.1054, %"block.Cidr_{U_Main.{printFmt_14}_1}.1046" ], [ %dst.1063, %"block.Cidr_{U_Main.{printFmt_15}_1}.1055" ], [ %dst.1070, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1064" ]
  %idris_str_tail1_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrString.1072, 3, 0
  %idris_str_tail2.1073 = call { i8*, i64 }* @_prim_string_tail({ i8*, i64 }* %idris_str_tail1_0)
  %node_CGrString.1074 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* %idris_str_tail2.1073, 1, 0
  ret <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1074

error_block:                                      ; preds = %idris_str_tail.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %idris_str_cons1, i64* %idris_str_cons2) #0 {
idris_str_cons.entry:
  %tag.1075 = load i64, i64* %idris_str_cons1, align 1
  %ptr_CGrInt.1076 = bitcast i64* %idris_str_cons1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1077 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1076, align 1
  %idris_str_cons1_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1077, 1, 0
  %tag.1078 = load i64, i64* %idris_str_cons2, align 1
  switch i64 %tag.1078, label %error_block [
    i64 0, label %block.CErased.1079
    i64 1, label %block.CGrFloat.1084
    i64 2, label %block.CGrInt.1091
    i64 3, label %block.CGrString.1098
    i64 4, label %block.Cidr_Builtins.MkPair.1105
    i64 5, label %"block.Cidr_Data.Vect.::.1114"
    i64 6, label %block.Cidr_Prelude.Bool.False.1123
    i64 7, label %block.Cidr_Prelude.Bool.True.1128
    i64 8, label %"block.Cidr_Prelude.List.::.1133"
    i64 9, label %block.Cidr_Prelude.List.Nil.1142
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.1147"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.1158"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.1165"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.1174"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1183"
  ]

block.CErased.1079:                               ; preds = %idris_str_cons.entry
  %ptr_CErased.1080 = bitcast i64* %idris_str_cons2 to <{ i64 }>*
  %node_CErased.1081 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.1080, align 1
  %src.1082 = extractvalue <{ i64 }> %node_CErased.1081, 0
  %dst.1083 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1082, 0
  br label %block.exit.1190

block.CGrFloat.1084:                              ; preds = %idris_str_cons.entry
  %ptr_CGrFloat.1085 = bitcast i64* %idris_str_cons2 to <{ i64, [1 x float] }>*
  %node_CGrFloat.1086 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.1085, align 1
  %src.1087 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1086, 0
  %dst.1088 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1087, 0
  %src.1089 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1086, 1, 0
  %dst.1090 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1088, float %src.1089, 1, 0
  br label %block.exit.1190

block.CGrInt.1091:                                ; preds = %idris_str_cons.entry
  %ptr_CGrInt.1092 = bitcast i64* %idris_str_cons2 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1093 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1092, align 1
  %src.1094 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1093, 0
  %dst.1095 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1094, 0
  %src.1096 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1093, 1, 0
  %dst.1097 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1095, i64 %src.1096, 2, 0
  br label %block.exit.1190

block.CGrString.1098:                             ; preds = %idris_str_cons.entry
  %ptr_CGrString.1099 = bitcast i64* %idris_str_cons2 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.1100 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.1099, align 1
  %src.1101 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1100, 0
  %dst.1102 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1101, 0
  %src.1103 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1100, 1, 0
  %dst.1104 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1102, { i8*, i64 }* %src.1103, 3, 0
  br label %block.exit.1190

block.Cidr_Builtins.MkPair.1105:                  ; preds = %idris_str_cons.entry
  %ptr_Cidr_Builtins.MkPair.1106 = bitcast i64* %idris_str_cons2 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.1107 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.1106, align 1
  %src.1108 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1107, 0
  %dst.1109 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1108, 0
  %src.1110 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1107, 1, 1
  %dst.1111 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1109, i64* %src.1110, 4, 1
  %src.1112 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1107, 1, 0
  %dst.1113 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1111, i64* %src.1112, 4, 0
  br label %block.exit.1190

"block.Cidr_Data.Vect.::.1114":                   ; preds = %idris_str_cons.entry
  %"ptr_Cidr_Data.Vect.::.1115" = bitcast i64* %idris_str_cons2 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.1116" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.1115", align 1
  %src.1117 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1116", 0
  %dst.1118 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1117, 0
  %src.1119 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1116", 1, 1
  %dst.1120 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1118, i64* %src.1119, 4, 1
  %src.1121 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1116", 1, 0
  %dst.1122 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1120, i64* %src.1121, 4, 0
  br label %block.exit.1190

block.Cidr_Prelude.Bool.False.1123:               ; preds = %idris_str_cons.entry
  %ptr_Cidr_Prelude.Bool.False.1124 = bitcast i64* %idris_str_cons2 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.1125 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1124, align 1
  %src.1126 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.1125, 0
  %dst.1127 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1126, 0
  br label %block.exit.1190

block.Cidr_Prelude.Bool.True.1128:                ; preds = %idris_str_cons.entry
  %ptr_Cidr_Prelude.Bool.True.1129 = bitcast i64* %idris_str_cons2 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.1130 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1129, align 1
  %src.1131 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.1130, 0
  %dst.1132 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1131, 0
  br label %block.exit.1190

"block.Cidr_Prelude.List.::.1133":                ; preds = %idris_str_cons.entry
  %"ptr_Cidr_Prelude.List.::.1134" = bitcast i64* %idris_str_cons2 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.1135" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.1134", align 1
  %src.1136 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1135", 0
  %dst.1137 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1136, 0
  %src.1138 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1135", 1, 1
  %dst.1139 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1137, i64* %src.1138, 4, 1
  %src.1140 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1135", 1, 0
  %dst.1141 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1139, i64* %src.1140, 4, 0
  br label %block.exit.1190

block.Cidr_Prelude.List.Nil.1142:                 ; preds = %idris_str_cons.entry
  %ptr_Cidr_Prelude.List.Nil.1143 = bitcast i64* %idris_str_cons2 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.1144 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.1143, align 1
  %src.1145 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.1144, 0
  %dst.1146 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1145, 0
  br label %block.exit.1190

"block.Cidr_{U_Main.{adder_0}_1}.1147":           ; preds = %idris_str_cons.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1148" = bitcast i64* %idris_str_cons2 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1149" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1148", align 1
  %src.1150 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1149", 0
  %dst.1151 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1150, 0
  %src.1152 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1149", 1, 2
  %dst.1153 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1151, i64* %src.1152, 4, 2
  %src.1154 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1149", 1, 1
  %dst.1155 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1153, i64* %src.1154, 4, 1
  %src.1156 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1149", 1, 0
  %dst.1157 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1155, i64* %src.1156, 4, 0
  br label %block.exit.1190

"block.Cidr_{U_Main.{main_9}_1}.1158":            ; preds = %idris_str_cons.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1159" = bitcast i64* %idris_str_cons2 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.1160" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1159", align 1
  %src.1161 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1160", 0
  %dst.1162 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1161, 0
  %src.1163 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1160", 1, 0
  %dst.1164 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1162, i64* %src.1163, 4, 0
  br label %block.exit.1190

"block.Cidr_{U_Main.{printFmt_14}_1}.1165":       ; preds = %idris_str_cons.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1166" = bitcast i64* %idris_str_cons2 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1167" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1166", align 1
  %src.1168 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1167", 0
  %dst.1169 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1168, 0
  %src.1170 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1167", 1, 1
  %dst.1171 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1169, i64* %src.1170, 4, 1
  %src.1172 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1167", 1, 0
  %dst.1173 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1171, i64* %src.1172, 4, 0
  br label %block.exit.1190

"block.Cidr_{U_Main.{printFmt_15}_1}.1174":       ; preds = %idris_str_cons.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1175" = bitcast i64* %idris_str_cons2 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1176" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1175", align 1
  %src.1177 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1176", 0
  %dst.1178 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1177, 0
  %src.1179 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1176", 1, 1
  %dst.1180 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1178, i64* %src.1179, 4, 1
  %src.1181 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1176", 1, 0
  %dst.1182 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1180, i64* %src.1181, 4, 0
  br label %block.exit.1190

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1183": ; preds = %idris_str_cons.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1184" = bitcast i64* %idris_str_cons2 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1185" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1184", align 1
  %src.1186 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1185", 0
  %dst.1187 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1186, 0
  %src.1188 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1185", 1, 0
  %dst.1189 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1187, i64* %src.1188, 4, 0
  br label %block.exit.1190

block.exit.1190:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1183", %"block.Cidr_{U_Main.{printFmt_15}_1}.1174", %"block.Cidr_{U_Main.{printFmt_14}_1}.1165", %"block.Cidr_{U_Main.{main_9}_1}.1158", %"block.Cidr_{U_Main.{adder_0}_1}.1147", %block.Cidr_Prelude.List.Nil.1142, %"block.Cidr_Prelude.List.::.1133", %block.Cidr_Prelude.Bool.True.1128, %block.Cidr_Prelude.Bool.False.1123, %"block.Cidr_Data.Vect.::.1114", %block.Cidr_Builtins.MkPair.1105, %block.CGrString.1098, %block.CGrInt.1091, %block.CGrFloat.1084, %block.CErased.1079
  %node_CGrString.1191 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.1083, %block.CErased.1079 ], [ %dst.1090, %block.CGrFloat.1084 ], [ %dst.1097, %block.CGrInt.1091 ], [ %dst.1104, %block.CGrString.1098 ], [ %dst.1113, %block.Cidr_Builtins.MkPair.1105 ], [ %dst.1122, %"block.Cidr_Data.Vect.::.1114" ], [ %dst.1127, %block.Cidr_Prelude.Bool.False.1123 ], [ %dst.1132, %block.Cidr_Prelude.Bool.True.1128 ], [ %dst.1141, %"block.Cidr_Prelude.List.::.1133" ], [ %dst.1146, %block.Cidr_Prelude.List.Nil.1142 ], [ %dst.1157, %"block.Cidr_{U_Main.{adder_0}_1}.1147" ], [ %dst.1164, %"block.Cidr_{U_Main.{main_9}_1}.1158" ], [ %dst.1173, %"block.Cidr_{U_Main.{printFmt_14}_1}.1165" ], [ %dst.1182, %"block.Cidr_{U_Main.{printFmt_15}_1}.1174" ], [ %dst.1189, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1183" ]
  %idris_str_cons2_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrString.1191, 3, 0
  %idris_str_cons3.1192 = call { i8*, i64 }* @_prim_string_cons(i64 %idris_str_cons1_0, { i8*, i64 }* %idris_str_cons2_0)
  %node_CGrString.1193 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* %idris_str_cons3.1192, 1, 0
  ret <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1193

error_block:                                      ; preds = %idris_str_cons.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_int_str(i64* %idris_int_str1) #0 {
idris_int_str.entry:
  %tag.1194 = load i64, i64* %idris_int_str1, align 1
  switch i64 %tag.1194, label %error_block [
    i64 0, label %block.CErased.1195
    i64 1, label %block.CGrFloat.1200
    i64 2, label %block.CGrInt.1207
    i64 3, label %block.CGrString.1214
    i64 4, label %block.Cidr_Builtins.MkPair.1221
    i64 5, label %"block.Cidr_Data.Vect.::.1230"
    i64 6, label %block.Cidr_Prelude.Bool.False.1239
    i64 7, label %block.Cidr_Prelude.Bool.True.1244
    i64 8, label %"block.Cidr_Prelude.List.::.1249"
    i64 9, label %block.Cidr_Prelude.List.Nil.1258
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.1263"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.1274"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.1281"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.1290"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1299"
  ]

block.CErased.1195:                               ; preds = %idris_int_str.entry
  %ptr_CErased.1196 = bitcast i64* %idris_int_str1 to <{ i64 }>*
  %node_CErased.1197 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.1196, align 1
  %src.1198 = extractvalue <{ i64 }> %node_CErased.1197, 0
  %dst.1199 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1198, 0
  br label %block.exit.1306

block.CGrFloat.1200:                              ; preds = %idris_int_str.entry
  %ptr_CGrFloat.1201 = bitcast i64* %idris_int_str1 to <{ i64, [1 x float] }>*
  %node_CGrFloat.1202 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.1201, align 1
  %src.1203 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1202, 0
  %dst.1204 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1203, 0
  %src.1205 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1202, 1, 0
  %dst.1206 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1204, float %src.1205, 1, 0
  br label %block.exit.1306

block.CGrInt.1207:                                ; preds = %idris_int_str.entry
  %ptr_CGrInt.1208 = bitcast i64* %idris_int_str1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1209 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1208, align 1
  %src.1210 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1209, 0
  %dst.1211 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1210, 0
  %src.1212 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1209, 1, 0
  %dst.1213 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1211, i64 %src.1212, 2, 0
  br label %block.exit.1306

block.CGrString.1214:                             ; preds = %idris_int_str.entry
  %ptr_CGrString.1215 = bitcast i64* %idris_int_str1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.1216 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.1215, align 1
  %src.1217 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1216, 0
  %dst.1218 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1217, 0
  %src.1219 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1216, 1, 0
  %dst.1220 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1218, { i8*, i64 }* %src.1219, 3, 0
  br label %block.exit.1306

block.Cidr_Builtins.MkPair.1221:                  ; preds = %idris_int_str.entry
  %ptr_Cidr_Builtins.MkPair.1222 = bitcast i64* %idris_int_str1 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.1223 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.1222, align 1
  %src.1224 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1223, 0
  %dst.1225 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1224, 0
  %src.1226 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1223, 1, 1
  %dst.1227 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1225, i64* %src.1226, 4, 1
  %src.1228 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1223, 1, 0
  %dst.1229 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1227, i64* %src.1228, 4, 0
  br label %block.exit.1306

"block.Cidr_Data.Vect.::.1230":                   ; preds = %idris_int_str.entry
  %"ptr_Cidr_Data.Vect.::.1231" = bitcast i64* %idris_int_str1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.1232" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.1231", align 1
  %src.1233 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1232", 0
  %dst.1234 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1233, 0
  %src.1235 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1232", 1, 1
  %dst.1236 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1234, i64* %src.1235, 4, 1
  %src.1237 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1232", 1, 0
  %dst.1238 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1236, i64* %src.1237, 4, 0
  br label %block.exit.1306

block.Cidr_Prelude.Bool.False.1239:               ; preds = %idris_int_str.entry
  %ptr_Cidr_Prelude.Bool.False.1240 = bitcast i64* %idris_int_str1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.1241 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1240, align 1
  %src.1242 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.1241, 0
  %dst.1243 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1242, 0
  br label %block.exit.1306

block.Cidr_Prelude.Bool.True.1244:                ; preds = %idris_int_str.entry
  %ptr_Cidr_Prelude.Bool.True.1245 = bitcast i64* %idris_int_str1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.1246 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1245, align 1
  %src.1247 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.1246, 0
  %dst.1248 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1247, 0
  br label %block.exit.1306

"block.Cidr_Prelude.List.::.1249":                ; preds = %idris_int_str.entry
  %"ptr_Cidr_Prelude.List.::.1250" = bitcast i64* %idris_int_str1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.1251" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.1250", align 1
  %src.1252 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1251", 0
  %dst.1253 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1252, 0
  %src.1254 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1251", 1, 1
  %dst.1255 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1253, i64* %src.1254, 4, 1
  %src.1256 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1251", 1, 0
  %dst.1257 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1255, i64* %src.1256, 4, 0
  br label %block.exit.1306

block.Cidr_Prelude.List.Nil.1258:                 ; preds = %idris_int_str.entry
  %ptr_Cidr_Prelude.List.Nil.1259 = bitcast i64* %idris_int_str1 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.1260 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.1259, align 1
  %src.1261 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.1260, 0
  %dst.1262 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1261, 0
  br label %block.exit.1306

"block.Cidr_{U_Main.{adder_0}_1}.1263":           ; preds = %idris_int_str.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1264" = bitcast i64* %idris_int_str1 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1265" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1264", align 1
  %src.1266 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1265", 0
  %dst.1267 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1266, 0
  %src.1268 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1265", 1, 2
  %dst.1269 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1267, i64* %src.1268, 4, 2
  %src.1270 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1265", 1, 1
  %dst.1271 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1269, i64* %src.1270, 4, 1
  %src.1272 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1265", 1, 0
  %dst.1273 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1271, i64* %src.1272, 4, 0
  br label %block.exit.1306

"block.Cidr_{U_Main.{main_9}_1}.1274":            ; preds = %idris_int_str.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1275" = bitcast i64* %idris_int_str1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.1276" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1275", align 1
  %src.1277 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1276", 0
  %dst.1278 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1277, 0
  %src.1279 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1276", 1, 0
  %dst.1280 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1278, i64* %src.1279, 4, 0
  br label %block.exit.1306

"block.Cidr_{U_Main.{printFmt_14}_1}.1281":       ; preds = %idris_int_str.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1282" = bitcast i64* %idris_int_str1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1283" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1282", align 1
  %src.1284 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1283", 0
  %dst.1285 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1284, 0
  %src.1286 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1283", 1, 1
  %dst.1287 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1285, i64* %src.1286, 4, 1
  %src.1288 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1283", 1, 0
  %dst.1289 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1287, i64* %src.1288, 4, 0
  br label %block.exit.1306

"block.Cidr_{U_Main.{printFmt_15}_1}.1290":       ; preds = %idris_int_str.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1291" = bitcast i64* %idris_int_str1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1292" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1291", align 1
  %src.1293 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1292", 0
  %dst.1294 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1293, 0
  %src.1295 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1292", 1, 1
  %dst.1296 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1294, i64* %src.1295, 4, 1
  %src.1297 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1292", 1, 0
  %dst.1298 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1296, i64* %src.1297, 4, 0
  br label %block.exit.1306

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1299": ; preds = %idris_int_str.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1300" = bitcast i64* %idris_int_str1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1301" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1300", align 1
  %src.1302 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1301", 0
  %dst.1303 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1302, 0
  %src.1304 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1301", 1, 0
  %dst.1305 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1303, i64* %src.1304, 4, 0
  br label %block.exit.1306

block.exit.1306:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1299", %"block.Cidr_{U_Main.{printFmt_15}_1}.1290", %"block.Cidr_{U_Main.{printFmt_14}_1}.1281", %"block.Cidr_{U_Main.{main_9}_1}.1274", %"block.Cidr_{U_Main.{adder_0}_1}.1263", %block.Cidr_Prelude.List.Nil.1258, %"block.Cidr_Prelude.List.::.1249", %block.Cidr_Prelude.Bool.True.1244, %block.Cidr_Prelude.Bool.False.1239, %"block.Cidr_Data.Vect.::.1230", %block.Cidr_Builtins.MkPair.1221, %block.CGrString.1214, %block.CGrInt.1207, %block.CGrFloat.1200, %block.CErased.1195
  %node_CGrInt.1307 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.1199, %block.CErased.1195 ], [ %dst.1206, %block.CGrFloat.1200 ], [ %dst.1213, %block.CGrInt.1207 ], [ %dst.1220, %block.CGrString.1214 ], [ %dst.1229, %block.Cidr_Builtins.MkPair.1221 ], [ %dst.1238, %"block.Cidr_Data.Vect.::.1230" ], [ %dst.1243, %block.Cidr_Prelude.Bool.False.1239 ], [ %dst.1248, %block.Cidr_Prelude.Bool.True.1244 ], [ %dst.1257, %"block.Cidr_Prelude.List.::.1249" ], [ %dst.1262, %block.Cidr_Prelude.List.Nil.1258 ], [ %dst.1273, %"block.Cidr_{U_Main.{adder_0}_1}.1263" ], [ %dst.1280, %"block.Cidr_{U_Main.{main_9}_1}.1274" ], [ %dst.1289, %"block.Cidr_{U_Main.{printFmt_14}_1}.1281" ], [ %dst.1298, %"block.Cidr_{U_Main.{printFmt_15}_1}.1290" ], [ %dst.1305, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1299" ]
  %idris_int_str1_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrInt.1307, 2, 0
  %idris_int_str2.1308 = call { i8*, i64 }* @_prim_int_str(i64 %idris_int_str1_0)
  %node_CGrString.1309 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* %idris_int_str2.1308, 1, 0
  ret <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1309

error_block:                                      ; preds = %idris_int_str.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_float_str(i64* %idris_float_str1) #0 {
idris_float_str.entry:
  %tag.1310 = load i64, i64* %idris_float_str1, align 1
  switch i64 %tag.1310, label %error_block [
    i64 0, label %block.CErased.1311
    i64 1, label %block.CGrFloat.1316
    i64 2, label %block.CGrInt.1323
    i64 3, label %block.CGrString.1330
    i64 4, label %block.Cidr_Builtins.MkPair.1337
    i64 5, label %"block.Cidr_Data.Vect.::.1346"
    i64 6, label %block.Cidr_Prelude.Bool.False.1355
    i64 7, label %block.Cidr_Prelude.Bool.True.1360
    i64 8, label %"block.Cidr_Prelude.List.::.1365"
    i64 9, label %block.Cidr_Prelude.List.Nil.1374
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.1379"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.1390"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.1397"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.1406"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1415"
  ]

block.CErased.1311:                               ; preds = %idris_float_str.entry
  %ptr_CErased.1312 = bitcast i64* %idris_float_str1 to <{ i64 }>*
  %node_CErased.1313 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.1312, align 1
  %src.1314 = extractvalue <{ i64 }> %node_CErased.1313, 0
  %dst.1315 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1314, 0
  br label %block.exit.1422

block.CGrFloat.1316:                              ; preds = %idris_float_str.entry
  %ptr_CGrFloat.1317 = bitcast i64* %idris_float_str1 to <{ i64, [1 x float] }>*
  %node_CGrFloat.1318 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.1317, align 1
  %src.1319 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1318, 0
  %dst.1320 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1319, 0
  %src.1321 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1318, 1, 0
  %dst.1322 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1320, float %src.1321, 1, 0
  br label %block.exit.1422

block.CGrInt.1323:                                ; preds = %idris_float_str.entry
  %ptr_CGrInt.1324 = bitcast i64* %idris_float_str1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1325 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1324, align 1
  %src.1326 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1325, 0
  %dst.1327 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1326, 0
  %src.1328 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1325, 1, 0
  %dst.1329 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1327, i64 %src.1328, 2, 0
  br label %block.exit.1422

block.CGrString.1330:                             ; preds = %idris_float_str.entry
  %ptr_CGrString.1331 = bitcast i64* %idris_float_str1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.1332 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.1331, align 1
  %src.1333 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1332, 0
  %dst.1334 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1333, 0
  %src.1335 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1332, 1, 0
  %dst.1336 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1334, { i8*, i64 }* %src.1335, 3, 0
  br label %block.exit.1422

block.Cidr_Builtins.MkPair.1337:                  ; preds = %idris_float_str.entry
  %ptr_Cidr_Builtins.MkPair.1338 = bitcast i64* %idris_float_str1 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.1339 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.1338, align 1
  %src.1340 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1339, 0
  %dst.1341 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1340, 0
  %src.1342 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1339, 1, 1
  %dst.1343 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1341, i64* %src.1342, 4, 1
  %src.1344 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1339, 1, 0
  %dst.1345 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1343, i64* %src.1344, 4, 0
  br label %block.exit.1422

"block.Cidr_Data.Vect.::.1346":                   ; preds = %idris_float_str.entry
  %"ptr_Cidr_Data.Vect.::.1347" = bitcast i64* %idris_float_str1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.1348" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.1347", align 1
  %src.1349 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1348", 0
  %dst.1350 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1349, 0
  %src.1351 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1348", 1, 1
  %dst.1352 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1350, i64* %src.1351, 4, 1
  %src.1353 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1348", 1, 0
  %dst.1354 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1352, i64* %src.1353, 4, 0
  br label %block.exit.1422

block.Cidr_Prelude.Bool.False.1355:               ; preds = %idris_float_str.entry
  %ptr_Cidr_Prelude.Bool.False.1356 = bitcast i64* %idris_float_str1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.1357 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1356, align 1
  %src.1358 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.1357, 0
  %dst.1359 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1358, 0
  br label %block.exit.1422

block.Cidr_Prelude.Bool.True.1360:                ; preds = %idris_float_str.entry
  %ptr_Cidr_Prelude.Bool.True.1361 = bitcast i64* %idris_float_str1 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.1362 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1361, align 1
  %src.1363 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.1362, 0
  %dst.1364 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1363, 0
  br label %block.exit.1422

"block.Cidr_Prelude.List.::.1365":                ; preds = %idris_float_str.entry
  %"ptr_Cidr_Prelude.List.::.1366" = bitcast i64* %idris_float_str1 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.1367" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.1366", align 1
  %src.1368 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1367", 0
  %dst.1369 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1368, 0
  %src.1370 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1367", 1, 1
  %dst.1371 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1369, i64* %src.1370, 4, 1
  %src.1372 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1367", 1, 0
  %dst.1373 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1371, i64* %src.1372, 4, 0
  br label %block.exit.1422

block.Cidr_Prelude.List.Nil.1374:                 ; preds = %idris_float_str.entry
  %ptr_Cidr_Prelude.List.Nil.1375 = bitcast i64* %idris_float_str1 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.1376 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.1375, align 1
  %src.1377 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.1376, 0
  %dst.1378 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1377, 0
  br label %block.exit.1422

"block.Cidr_{U_Main.{adder_0}_1}.1379":           ; preds = %idris_float_str.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1380" = bitcast i64* %idris_float_str1 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1381" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1380", align 1
  %src.1382 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1381", 0
  %dst.1383 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1382, 0
  %src.1384 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1381", 1, 2
  %dst.1385 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1383, i64* %src.1384, 4, 2
  %src.1386 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1381", 1, 1
  %dst.1387 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1385, i64* %src.1386, 4, 1
  %src.1388 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1381", 1, 0
  %dst.1389 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1387, i64* %src.1388, 4, 0
  br label %block.exit.1422

"block.Cidr_{U_Main.{main_9}_1}.1390":            ; preds = %idris_float_str.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1391" = bitcast i64* %idris_float_str1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.1392" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1391", align 1
  %src.1393 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1392", 0
  %dst.1394 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1393, 0
  %src.1395 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1392", 1, 0
  %dst.1396 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1394, i64* %src.1395, 4, 0
  br label %block.exit.1422

"block.Cidr_{U_Main.{printFmt_14}_1}.1397":       ; preds = %idris_float_str.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1398" = bitcast i64* %idris_float_str1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1399" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1398", align 1
  %src.1400 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1399", 0
  %dst.1401 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1400, 0
  %src.1402 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1399", 1, 1
  %dst.1403 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1401, i64* %src.1402, 4, 1
  %src.1404 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1399", 1, 0
  %dst.1405 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1403, i64* %src.1404, 4, 0
  br label %block.exit.1422

"block.Cidr_{U_Main.{printFmt_15}_1}.1406":       ; preds = %idris_float_str.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1407" = bitcast i64* %idris_float_str1 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1408" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1407", align 1
  %src.1409 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1408", 0
  %dst.1410 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1409, 0
  %src.1411 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1408", 1, 1
  %dst.1412 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1410, i64* %src.1411, 4, 1
  %src.1413 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1408", 1, 0
  %dst.1414 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1412, i64* %src.1413, 4, 0
  br label %block.exit.1422

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1415": ; preds = %idris_float_str.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1416" = bitcast i64* %idris_float_str1 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1417" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1416", align 1
  %src.1418 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1417", 0
  %dst.1419 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1418, 0
  %src.1420 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1417", 1, 0
  %dst.1421 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1419, i64* %src.1420, 4, 0
  br label %block.exit.1422

block.exit.1422:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1415", %"block.Cidr_{U_Main.{printFmt_15}_1}.1406", %"block.Cidr_{U_Main.{printFmt_14}_1}.1397", %"block.Cidr_{U_Main.{main_9}_1}.1390", %"block.Cidr_{U_Main.{adder_0}_1}.1379", %block.Cidr_Prelude.List.Nil.1374, %"block.Cidr_Prelude.List.::.1365", %block.Cidr_Prelude.Bool.True.1360, %block.Cidr_Prelude.Bool.False.1355, %"block.Cidr_Data.Vect.::.1346", %block.Cidr_Builtins.MkPair.1337, %block.CGrString.1330, %block.CGrInt.1323, %block.CGrFloat.1316, %block.CErased.1311
  %node_CGrFloat.1423 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.1315, %block.CErased.1311 ], [ %dst.1322, %block.CGrFloat.1316 ], [ %dst.1329, %block.CGrInt.1323 ], [ %dst.1336, %block.CGrString.1330 ], [ %dst.1345, %block.Cidr_Builtins.MkPair.1337 ], [ %dst.1354, %"block.Cidr_Data.Vect.::.1346" ], [ %dst.1359, %block.Cidr_Prelude.Bool.False.1355 ], [ %dst.1364, %block.Cidr_Prelude.Bool.True.1360 ], [ %dst.1373, %"block.Cidr_Prelude.List.::.1365" ], [ %dst.1378, %block.Cidr_Prelude.List.Nil.1374 ], [ %dst.1389, %"block.Cidr_{U_Main.{adder_0}_1}.1379" ], [ %dst.1396, %"block.Cidr_{U_Main.{main_9}_1}.1390" ], [ %dst.1405, %"block.Cidr_{U_Main.{printFmt_14}_1}.1397" ], [ %dst.1414, %"block.Cidr_{U_Main.{printFmt_15}_1}.1406" ], [ %dst.1421, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1415" ]
  %idris_float_str1_0 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %node_CGrFloat.1423, 1, 0
  %idris_float_str2.1424 = call { i8*, i64 }* @_prim_float_string(float %idris_float_str1_0)
  %node_CGrString.1425 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* %idris_float_str2.1424, 1, 0
  ret <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1425

error_block:                                      ; preds = %idris_float_str.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @idris_ls_ext(i64* %idris_ls_ext1) #0 {
idris_ls_ext.entry:
  %tag.1426 = load i64, i64* %idris_ls_ext1, align 1
  %ptr_CGrInt.1427 = bitcast i64* %idris_ls_ext1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1428 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1427, align 1
  %idris_ls_ext2 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1428, 1, 0
  %idris_ls_ext3.1429 = add i64 %idris_ls_ext2, 0
  %node_CGrInt.1430 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 %idris_ls_ext3.1429, 1, 0
  ret <{ i64, [1 x i64] }> %node_CGrInt.1430

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @idris_ch_int(i64* %idris_ch_int1) #0 {
idris_ch_int.entry:
  %tag.1431 = load i64, i64* %idris_ch_int1, align 1
  %ptr_CGrInt.1432 = bitcast i64* %idris_ch_int1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1433 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1432, align 1
  %idris_ch_int2 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1433, 1, 0
  %node_CGrInt.1434 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 %idris_ch_int2, 1, 0
  ret <{ i64, [1 x i64] }> %node_CGrInt.1434

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define void @grinMain() #0 {
grinMain.entry:
  %r.1435 = tail call fastcc <{ i64 }> @"idr_{runMain_0}"()
  ret void

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Main.adder(i64* %idr_Main.adder0, i64* %idr_Main.adder1, i64* %idr_Main.adder2, i64* %idr_Main.adder3) #0 {
idr_Main.adder.entry:
  %tag.1436 = load i64, i64* %idr_Main.adder2, align 1
  %ptr_CGrInt.1437 = bitcast i64* %idr_Main.adder2 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1438 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1437, align 1
  %tag.1439 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1438, 0
  switch i64 %tag.1439, label %error_block [
    i64 2, label %block.CGrInt.1440
  ]

block.CGrInt.1440:                                ; preds = %idr_Main.adder.entry
  %idr_Main.adder_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1438, 1, 0
  switch i64 %idr_Main.adder_cpat_LInt64_0, label %block.default.1441 [
    i64 0, label %block.int_0.1459
  ]

block.default.1441:                               ; preds = %block.CGrInt.1440
  %node_CGrInt.1442 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 1, 1, 0
  %alloc_bytes.1443 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1444 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1443 to i64
  %new_node_ptr.1445 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1444 monotonic
  %new_node_ptr.1446 = inttoptr i64 %new_node_ptr.1445 to i64*
  %tag.1447 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1442, 0
  %ptr_CGrInt.1448 = bitcast i64* %new_node_ptr.1446 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1442, <{ i64, [1 x i64] }>* %ptr_CGrInt.1448, align 1
  %idr_Main.adder4_val.1449 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_sub(i64* %idr_Main.adder2, i64* %new_node_ptr.1446)
  %alloc_bytes.1450 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1451 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1450 to i64
  %new_node_ptr.1452 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1451 monotonic
  %new_node_ptr.1453 = inttoptr i64 %new_node_ptr.1452 to i64*
  %tag.1454 = extractvalue <{ i64, [1 x i64] }> %idr_Main.adder4_val.1449, 0
  %ptr_CGrInt.1455 = bitcast i64* %new_node_ptr.1453 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.adder4_val.1449, <{ i64, [1 x i64] }>* %ptr_CGrInt.1455, align 1
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1456" = insertvalue <{ i64, [3 x i64*] }> <{ i64 10, [3 x i64*] undef }>, i64* %idr_Main.adder1, 1, 0
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1457" = insertvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1456", i64* %new_node_ptr.1453, 1, 1
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1458" = insertvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1457", i64* %idr_Main.adder3, 1, 2
  %src.1575 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1458", 0
  %dst.1576 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1575, 0
  %src.1577 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1458", 1, 2
  %dst.1578 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1576, i64* %src.1577, 4, 2
  %src.1579 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1458", 1, 1
  %dst.1580 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1578, i64* %src.1579, 4, 1
  %src.1581 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1458", 1, 0
  %dst.1582 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1580, i64* %src.1581, 4, 0
  br label %block.exit.1574

block.int_0.1459:                                 ; preds = %block.CGrInt.1440
  %tag.1460 = load i64, i64* %idr_Main.adder3, align 1
  switch i64 %tag.1460, label %error_block [
    i64 0, label %block.CErased.1461
    i64 1, label %block.CGrFloat.1466
    i64 2, label %block.CGrInt.1473
    i64 3, label %block.CGrString.1480
    i64 4, label %block.Cidr_Builtins.MkPair.1487
    i64 5, label %"block.Cidr_Data.Vect.::.1496"
    i64 6, label %block.Cidr_Prelude.Bool.False.1505
    i64 7, label %block.Cidr_Prelude.Bool.True.1510
    i64 8, label %"block.Cidr_Prelude.List.::.1515"
    i64 9, label %block.Cidr_Prelude.List.Nil.1524
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.1529"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.1540"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.1547"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.1556"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1565"
  ]

block.CErased.1461:                               ; preds = %block.int_0.1459
  %ptr_CErased.1462 = bitcast i64* %idr_Main.adder3 to <{ i64 }>*
  %node_CErased.1463 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.1462, align 1
  %src.1464 = extractvalue <{ i64 }> %node_CErased.1463, 0
  %dst.1465 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1464, 0
  br label %block.exit.1572

block.CGrFloat.1466:                              ; preds = %block.int_0.1459
  %ptr_CGrFloat.1467 = bitcast i64* %idr_Main.adder3 to <{ i64, [1 x float] }>*
  %node_CGrFloat.1468 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.1467, align 1
  %src.1469 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1468, 0
  %dst.1470 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1469, 0
  %src.1471 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1468, 1, 0
  %dst.1472 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1470, float %src.1471, 1, 0
  br label %block.exit.1572

block.CGrInt.1473:                                ; preds = %block.int_0.1459
  %ptr_CGrInt.1474 = bitcast i64* %idr_Main.adder3 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1475 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1474, align 1
  %src.1476 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1475, 0
  %dst.1477 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1476, 0
  %src.1478 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1475, 1, 0
  %dst.1479 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1477, i64 %src.1478, 2, 0
  br label %block.exit.1572

block.CGrString.1480:                             ; preds = %block.int_0.1459
  %ptr_CGrString.1481 = bitcast i64* %idr_Main.adder3 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.1482 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.1481, align 1
  %src.1483 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1482, 0
  %dst.1484 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1483, 0
  %src.1485 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1482, 1, 0
  %dst.1486 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1484, { i8*, i64 }* %src.1485, 3, 0
  br label %block.exit.1572

block.Cidr_Builtins.MkPair.1487:                  ; preds = %block.int_0.1459
  %ptr_Cidr_Builtins.MkPair.1488 = bitcast i64* %idr_Main.adder3 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.1489 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.1488, align 1
  %src.1490 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1489, 0
  %dst.1491 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1490, 0
  %src.1492 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1489, 1, 1
  %dst.1493 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1491, i64* %src.1492, 4, 1
  %src.1494 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1489, 1, 0
  %dst.1495 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1493, i64* %src.1494, 4, 0
  br label %block.exit.1572

"block.Cidr_Data.Vect.::.1496":                   ; preds = %block.int_0.1459
  %"ptr_Cidr_Data.Vect.::.1497" = bitcast i64* %idr_Main.adder3 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.1498" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.1497", align 1
  %src.1499 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1498", 0
  %dst.1500 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1499, 0
  %src.1501 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1498", 1, 1
  %dst.1502 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1500, i64* %src.1501, 4, 1
  %src.1503 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1498", 1, 0
  %dst.1504 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1502, i64* %src.1503, 4, 0
  br label %block.exit.1572

block.Cidr_Prelude.Bool.False.1505:               ; preds = %block.int_0.1459
  %ptr_Cidr_Prelude.Bool.False.1506 = bitcast i64* %idr_Main.adder3 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.1507 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1506, align 1
  %src.1508 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.1507, 0
  %dst.1509 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1508, 0
  br label %block.exit.1572

block.Cidr_Prelude.Bool.True.1510:                ; preds = %block.int_0.1459
  %ptr_Cidr_Prelude.Bool.True.1511 = bitcast i64* %idr_Main.adder3 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.1512 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1511, align 1
  %src.1513 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.1512, 0
  %dst.1514 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1513, 0
  br label %block.exit.1572

"block.Cidr_Prelude.List.::.1515":                ; preds = %block.int_0.1459
  %"ptr_Cidr_Prelude.List.::.1516" = bitcast i64* %idr_Main.adder3 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.1517" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.1516", align 1
  %src.1518 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1517", 0
  %dst.1519 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1518, 0
  %src.1520 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1517", 1, 1
  %dst.1521 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1519, i64* %src.1520, 4, 1
  %src.1522 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1517", 1, 0
  %dst.1523 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1521, i64* %src.1522, 4, 0
  br label %block.exit.1572

block.Cidr_Prelude.List.Nil.1524:                 ; preds = %block.int_0.1459
  %ptr_Cidr_Prelude.List.Nil.1525 = bitcast i64* %idr_Main.adder3 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.1526 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.1525, align 1
  %src.1527 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.1526, 0
  %dst.1528 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1527, 0
  br label %block.exit.1572

"block.Cidr_{U_Main.{adder_0}_1}.1529":           ; preds = %block.int_0.1459
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1530" = bitcast i64* %idr_Main.adder3 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1531" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1530", align 1
  %src.1532 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1531", 0
  %dst.1533 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1532, 0
  %src.1534 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1531", 1, 2
  %dst.1535 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1533, i64* %src.1534, 4, 2
  %src.1536 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1531", 1, 1
  %dst.1537 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1535, i64* %src.1536, 4, 1
  %src.1538 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1531", 1, 0
  %dst.1539 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1537, i64* %src.1538, 4, 0
  br label %block.exit.1572

"block.Cidr_{U_Main.{main_9}_1}.1540":            ; preds = %block.int_0.1459
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1541" = bitcast i64* %idr_Main.adder3 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.1542" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1541", align 1
  %src.1543 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1542", 0
  %dst.1544 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1543, 0
  %src.1545 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1542", 1, 0
  %dst.1546 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1544, i64* %src.1545, 4, 0
  br label %block.exit.1572

"block.Cidr_{U_Main.{printFmt_14}_1}.1547":       ; preds = %block.int_0.1459
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1548" = bitcast i64* %idr_Main.adder3 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1549" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1548", align 1
  %src.1550 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1549", 0
  %dst.1551 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1550, 0
  %src.1552 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1549", 1, 1
  %dst.1553 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1551, i64* %src.1552, 4, 1
  %src.1554 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1549", 1, 0
  %dst.1555 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1553, i64* %src.1554, 4, 0
  br label %block.exit.1572

"block.Cidr_{U_Main.{printFmt_15}_1}.1556":       ; preds = %block.int_0.1459
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1557" = bitcast i64* %idr_Main.adder3 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1558" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1557", align 1
  %src.1559 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1558", 0
  %dst.1560 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1559, 0
  %src.1561 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1558", 1, 1
  %dst.1562 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1560, i64* %src.1561, 4, 1
  %src.1563 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1558", 1, 0
  %dst.1564 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1562, i64* %src.1563, 4, 0
  br label %block.exit.1572

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1565": ; preds = %block.int_0.1459
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1566" = bitcast i64* %idr_Main.adder3 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1567" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1566", align 1
  %src.1568 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1567", 0
  %dst.1569 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1568, 0
  %src.1570 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1567", 1, 0
  %dst.1571 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1569, i64* %src.1570, 4, 0
  br label %block.exit.1572

block.exit.1572:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1565", %"block.Cidr_{U_Main.{printFmt_15}_1}.1556", %"block.Cidr_{U_Main.{printFmt_14}_1}.1547", %"block.Cidr_{U_Main.{main_9}_1}.1540", %"block.Cidr_{U_Main.{adder_0}_1}.1529", %block.Cidr_Prelude.List.Nil.1524, %"block.Cidr_Prelude.List.::.1515", %block.Cidr_Prelude.Bool.True.1510, %block.Cidr_Prelude.Bool.False.1505, %"block.Cidr_Data.Vect.::.1496", %block.Cidr_Builtins.MkPair.1487, %block.CGrString.1480, %block.CGrInt.1473, %block.CGrFloat.1466, %block.CErased.1461
  %result.int_0.1573 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.1465, %block.CErased.1461 ], [ %dst.1472, %block.CGrFloat.1466 ], [ %dst.1479, %block.CGrInt.1473 ], [ %dst.1486, %block.CGrString.1480 ], [ %dst.1495, %block.Cidr_Builtins.MkPair.1487 ], [ %dst.1504, %"block.Cidr_Data.Vect.::.1496" ], [ %dst.1509, %block.Cidr_Prelude.Bool.False.1505 ], [ %dst.1514, %block.Cidr_Prelude.Bool.True.1510 ], [ %dst.1523, %"block.Cidr_Prelude.List.::.1515" ], [ %dst.1528, %block.Cidr_Prelude.List.Nil.1524 ], [ %dst.1539, %"block.Cidr_{U_Main.{adder_0}_1}.1529" ], [ %dst.1546, %"block.Cidr_{U_Main.{main_9}_1}.1540" ], [ %dst.1555, %"block.Cidr_{U_Main.{printFmt_14}_1}.1547" ], [ %dst.1564, %"block.Cidr_{U_Main.{printFmt_15}_1}.1556" ], [ %dst.1571, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1565" ]
  br label %block.exit.1574

block.exit.1574:                                  ; preds = %block.exit.1572, %block.default.1441
  %result.CGrInt.1583 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.1582, %block.default.1441 ], [ %result.int_0.1573, %block.exit.1572 ]
  br label %block.exit.1584

block.exit.1584:                                  ; preds = %block.exit.1574
  %result.idr_Main.adder.1585 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %result.CGrInt.1583, %block.exit.1574 ]
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %result.idr_Main.adder.1585

error_block:                                      ; preds = %block.int_0.1459, %idr_Main.adder.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Data.Vect.foldrImpl(i64* %idr_Data.Vect.foldrImpl0, i64* %idr_Data.Vect.foldrImpl1, i64* %idr_Data.Vect.foldrImpl2, i64* %idr_Data.Vect.foldrImpl3, i64* %idr_Data.Vect.foldrImpl4, i64* %idr_Data.Vect.foldrImpl5, i64* %idr_Data.Vect.foldrImpl6) #0 {
idr_Data.Vect.foldrImpl.entry:
  %tag.1586 = load i64, i64* %idr_Data.Vect.foldrImpl6, align 1
  switch i64 %tag.1586, label %error_block [
    i64 0, label %block.CErased.1587
    i64 1, label %block.CGrFloat.1592
    i64 2, label %block.CGrInt.1599
    i64 3, label %block.CGrString.1606
    i64 4, label %block.Cidr_Builtins.MkPair.1613
    i64 5, label %"block.Cidr_Data.Vect.::.1622"
    i64 16, label %block.Cidr_Data.Vect.Nil.1631
    i64 6, label %block.Cidr_Prelude.Bool.False.1636
    i64 7, label %block.Cidr_Prelude.Bool.True.1641
    i64 8, label %"block.Cidr_Prelude.List.::.1646"
    i64 9, label %block.Cidr_Prelude.List.Nil.1655
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.1660"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.1671"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.1678"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.1687"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1696"
  ]

block.CErased.1587:                               ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_CErased.1588 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64 }>*
  %node_CErased.1589 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.1588, align 1
  %src.1590 = extractvalue <{ i64 }> %node_CErased.1589, 0
  %dst.1591 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1590, 0
  br label %block.exit.1703

block.CGrFloat.1592:                              ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_CGrFloat.1593 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [1 x float] }>*
  %node_CGrFloat.1594 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.1593, align 1
  %src.1595 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1594, 0
  %dst.1596 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1595, 0
  %src.1597 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.1594, 1, 0
  %dst.1598 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1596, float %src.1597, 1, 0
  br label %block.exit.1703

block.CGrInt.1599:                                ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_CGrInt.1600 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1601 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1600, align 1
  %src.1602 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1601, 0
  %dst.1603 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1602, 0
  %src.1604 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1601, 1, 0
  %dst.1605 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1603, i64 %src.1604, 2, 0
  br label %block.exit.1703

block.CGrString.1606:                             ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_CGrString.1607 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.1608 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.1607, align 1
  %src.1609 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1608, 0
  %dst.1610 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1609, 0
  %src.1611 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.1608, 1, 0
  %dst.1612 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1610, { i8*, i64 }* %src.1611, 3, 0
  br label %block.exit.1703

block.Cidr_Builtins.MkPair.1613:                  ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_Cidr_Builtins.MkPair.1614 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.1615 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.1614, align 1
  %src.1616 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1615, 0
  %dst.1617 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1616, 0
  %src.1618 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1615, 1, 1
  %dst.1619 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1617, i64* %src.1618, 4, 1
  %src.1620 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.1615, 1, 0
  %dst.1621 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1619, i64* %src.1620, 4, 0
  br label %block.exit.1703

"block.Cidr_Data.Vect.::.1622":                   ; preds = %idr_Data.Vect.foldrImpl.entry
  %"ptr_Cidr_Data.Vect.::.1623" = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.1624" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.1623", align 1
  %src.1625 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1624", 0
  %dst.1626 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1625, 0
  %src.1627 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1624", 1, 1
  %dst.1628 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1626, i64* %src.1627, 4, 1
  %src.1629 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.1624", 1, 0
  %dst.1630 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1628, i64* %src.1629, 4, 0
  br label %block.exit.1703

block.Cidr_Data.Vect.Nil.1631:                    ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_Cidr_Data.Vect.Nil.1632 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64 }>*
  %node_Cidr_Data.Vect.Nil.1633 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Data.Vect.Nil.1632, align 1
  %src.1634 = extractvalue <{ i64 }> %node_Cidr_Data.Vect.Nil.1633, 0
  %dst.1635 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1634, 0
  br label %block.exit.1703

block.Cidr_Prelude.Bool.False.1636:               ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_Cidr_Prelude.Bool.False.1637 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.1638 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1637, align 1
  %src.1639 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.1638, 0
  %dst.1640 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1639, 0
  br label %block.exit.1703

block.Cidr_Prelude.Bool.True.1641:                ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_Cidr_Prelude.Bool.True.1642 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.1643 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1642, align 1
  %src.1644 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.1643, 0
  %dst.1645 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1644, 0
  br label %block.exit.1703

"block.Cidr_Prelude.List.::.1646":                ; preds = %idr_Data.Vect.foldrImpl.entry
  %"ptr_Cidr_Prelude.List.::.1647" = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.1648" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.1647", align 1
  %src.1649 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1648", 0
  %dst.1650 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1649, 0
  %src.1651 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1648", 1, 1
  %dst.1652 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1650, i64* %src.1651, 4, 1
  %src.1653 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.1648", 1, 0
  %dst.1654 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1652, i64* %src.1653, 4, 0
  br label %block.exit.1703

block.Cidr_Prelude.List.Nil.1655:                 ; preds = %idr_Data.Vect.foldrImpl.entry
  %ptr_Cidr_Prelude.List.Nil.1656 = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.1657 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.1656, align 1
  %src.1658 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.1657, 0
  %dst.1659 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1658, 0
  br label %block.exit.1703

"block.Cidr_{U_Main.{adder_0}_1}.1660":           ; preds = %idr_Data.Vect.foldrImpl.entry
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1661" = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.1662" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.1661", align 1
  %src.1663 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1662", 0
  %dst.1664 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1663, 0
  %src.1665 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1662", 1, 2
  %dst.1666 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1664, i64* %src.1665, 4, 2
  %src.1667 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1662", 1, 1
  %dst.1668 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1666, i64* %src.1667, 4, 1
  %src.1669 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.1662", 1, 0
  %dst.1670 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1668, i64* %src.1669, 4, 0
  br label %block.exit.1703

"block.Cidr_{U_Main.{main_9}_1}.1671":            ; preds = %idr_Data.Vect.foldrImpl.entry
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1672" = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.1673" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.1672", align 1
  %src.1674 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1673", 0
  %dst.1675 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1674, 0
  %src.1676 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.1673", 1, 0
  %dst.1677 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1675, i64* %src.1676, 4, 0
  br label %block.exit.1703

"block.Cidr_{U_Main.{printFmt_14}_1}.1678":       ; preds = %idr_Data.Vect.foldrImpl.entry
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1679" = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1680" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.1679", align 1
  %src.1681 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1680", 0
  %dst.1682 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1681, 0
  %src.1683 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1680", 1, 1
  %dst.1684 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1682, i64* %src.1683, 4, 1
  %src.1685 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.1680", 1, 0
  %dst.1686 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1684, i64* %src.1685, 4, 0
  br label %block.exit.1703

"block.Cidr_{U_Main.{printFmt_15}_1}.1687":       ; preds = %idr_Data.Vect.foldrImpl.entry
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1688" = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1689" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.1688", align 1
  %src.1690 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1689", 0
  %dst.1691 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1690, 0
  %src.1692 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1689", 1, 1
  %dst.1693 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1691, i64* %src.1692, 4, 1
  %src.1694 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.1689", 1, 0
  %dst.1695 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1693, i64* %src.1694, 4, 0
  br label %block.exit.1703

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1696": ; preds = %idr_Data.Vect.foldrImpl.entry
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1697" = bitcast i64* %idr_Data.Vect.foldrImpl6 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1698" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1697", align 1
  %src.1699 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1698", 0
  %dst.1700 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.1699, 0
  %src.1701 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.1698", 1, 0
  %dst.1702 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.1700, i64* %src.1701, 4, 0
  br label %block.exit.1703

block.exit.1703:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1696", %"block.Cidr_{U_Main.{printFmt_15}_1}.1687", %"block.Cidr_{U_Main.{printFmt_14}_1}.1678", %"block.Cidr_{U_Main.{main_9}_1}.1671", %"block.Cidr_{U_Main.{adder_0}_1}.1660", %block.Cidr_Prelude.List.Nil.1655, %"block.Cidr_Prelude.List.::.1646", %block.Cidr_Prelude.Bool.True.1641, %block.Cidr_Prelude.Bool.False.1636, %block.Cidr_Data.Vect.Nil.1631, %"block.Cidr_Data.Vect.::.1622", %block.Cidr_Builtins.MkPair.1613, %block.CGrString.1606, %block.CGrInt.1599, %block.CGrFloat.1592, %block.CErased.1587
  %idr_Data.Vect.foldrImpl6_val.1704 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.1591, %block.CErased.1587 ], [ %dst.1598, %block.CGrFloat.1592 ], [ %dst.1605, %block.CGrInt.1599 ], [ %dst.1612, %block.CGrString.1606 ], [ %dst.1621, %block.Cidr_Builtins.MkPair.1613 ], [ %dst.1630, %"block.Cidr_Data.Vect.::.1622" ], [ %dst.1635, %block.Cidr_Data.Vect.Nil.1631 ], [ %dst.1640, %block.Cidr_Prelude.Bool.False.1636 ], [ %dst.1645, %block.Cidr_Prelude.Bool.True.1641 ], [ %dst.1654, %"block.Cidr_Prelude.List.::.1646" ], [ %dst.1659, %block.Cidr_Prelude.List.Nil.1655 ], [ %dst.1670, %"block.Cidr_{U_Main.{adder_0}_1}.1660" ], [ %dst.1677, %"block.Cidr_{U_Main.{main_9}_1}.1671" ], [ %dst.1686, %"block.Cidr_{U_Main.{printFmt_14}_1}.1678" ], [ %dst.1695, %"block.Cidr_{U_Main.{printFmt_15}_1}.1687" ], [ %dst.1702, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.1696" ]
  %tag.1705 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Data.Vect.foldrImpl6_val.1704, 0
  switch i64 %tag.1705, label %error_block [
    i64 5, label %"block.Cidr_Data.Vect.::.1706"
    i64 16, label %block.Cidr_Data.Vect.Nil.1735
  ]

"block.Cidr_Data.Vect.::.1706":                   ; preds = %block.exit.1703
  %idr_Data.Vect.foldrImpl7 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Data.Vect.foldrImpl6_val.1704, 4, 0
  %idr_Data.Vect.foldrImpl8 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Data.Vect.foldrImpl6_val.1704, 4, 1
  %alloc_bytes.1707 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.1708 = ptrtoint <{ i64 }>* %alloc_bytes.1707 to i64
  %new_node_ptr.1709 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1708 monotonic
  %new_node_ptr.1710 = inttoptr i64 %new_node_ptr.1709 to i64*
  %tag.1711 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.1712 = bitcast i64* %new_node_ptr.1710 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.1712, align 1
  %alloc_bytes.1713 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.1714 = ptrtoint <{ i64 }>* %alloc_bytes.1713 to i64
  %new_node_ptr.1715 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1714 monotonic
  %new_node_ptr.1716 = inttoptr i64 %new_node_ptr.1715 to i64*
  %tag.1717 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.1718 = bitcast i64* %new_node_ptr.1716 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.1718, align 1
  %alloc_bytes.1719 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.1720 = ptrtoint <{ i64 }>* %alloc_bytes.1719 to i64
  %new_node_ptr.1721 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1720 monotonic
  %new_node_ptr.1722 = inttoptr i64 %new_node_ptr.1721 to i64*
  %tag.1723 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.1724 = bitcast i64* %new_node_ptr.1722 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.1724, align 1
  %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1725" = insertvalue <{ i64, [3 x i64*] }> <{ i64 17, [3 x i64*] undef }>, i64* %idr_Data.Vect.foldrImpl5, 1, 0
  %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1726" = insertvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1725", i64* %idr_Data.Vect.foldrImpl3, 1, 1
  %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1727" = insertvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1726", i64* %idr_Data.Vect.foldrImpl7, 1, 2
  %alloc_bytes.1728 = getelementptr inbounds <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* null, i32 1
  %alloc_bytes.1729 = ptrtoint <{ i64, [3 x i64*] }>* %alloc_bytes.1728 to i64
  %new_node_ptr.1730 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1729 monotonic
  %new_node_ptr.1731 = inttoptr i64 %new_node_ptr.1730 to i64*
  %tag.1732 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1727", 0
  %"ptr_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1733" = bitcast i64* %new_node_ptr.1731 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1727", <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.1733", align 1
  %"result.Cidr_Data.Vect.::.1734" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Data.Vect.foldrImpl(i64* %new_node_ptr.1710, i64* %new_node_ptr.1716, i64* %new_node_ptr.1722, i64* %idr_Data.Vect.foldrImpl3, i64* %idr_Data.Vect.foldrImpl4, i64* %new_node_ptr.1731, i64* %idr_Data.Vect.foldrImpl8)
  br label %block.exit.1737

block.Cidr_Data.Vect.Nil.1735:                    ; preds = %block.exit.1703
  %result.Cidr_Data.Vect.Nil.1736 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %idr_Data.Vect.foldrImpl5, i64* %idr_Data.Vect.foldrImpl4)
  br label %block.exit.1737

block.exit.1737:                                  ; preds = %block.Cidr_Data.Vect.Nil.1735, %"block.Cidr_Data.Vect.::.1706"
  %result.idr_Data.Vect.foldrImpl.1738 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %"result.Cidr_Data.Vect.::.1734", %"block.Cidr_Data.Vect.::.1706" ], [ %result.Cidr_Data.Vect.Nil.1736, %block.Cidr_Data.Vect.Nil.1735 ]
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %result.idr_Data.Vect.foldrImpl.1738

error_block:                                      ; preds = %block.exit.1703, %idr_Data.Vect.foldrImpl.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @idr_Prelude.Chars.isDigit(i64* %idr_Prelude.Chars.isDigit0) #0 {
idr_Prelude.Chars.isDigit.entry:
  %node_CGrInt.1739 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 48, 1, 0
  %alloc_bytes.1740 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1741 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1740 to i64
  %new_node_ptr.1742 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1741 monotonic
  %new_node_ptr.1743 = inttoptr i64 %new_node_ptr.1742 to i64*
  %tag.1744 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1739, 0
  %ptr_CGrInt.1745 = bitcast i64* %new_node_ptr.1743 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1739, <{ i64, [1 x i64] }>* %ptr_CGrInt.1745, align 1
  %idr_Prelude.Chars.isDigit1_val_9.1746 = tail call fastcc <{ i64 }> @"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0"(i64* %idr_Prelude.Chars.isDigit0, i64* %new_node_ptr.1743)
  %alloc_bytes.1747 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.1748 = ptrtoint <{ i64 }>* %alloc_bytes.1747 to i64
  %new_node_ptr.1749 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1748 monotonic
  %new_node_ptr.1750 = inttoptr i64 %new_node_ptr.1749 to i64*
  %tag.1751 = extractvalue <{ i64 }> %idr_Prelude.Chars.isDigit1_val_9.1746, 0
  switch i64 %tag.1751, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.1752
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.1754
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.1756
  ]

block.Cidr_Prelude.Interfaces.EQ.1752:            ; preds = %idr_Prelude.Chars.isDigit.entry
  %ptr_Cidr_Prelude.Interfaces.EQ.1753 = bitcast i64* %new_node_ptr.1750 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit1_val_9.1746, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.1753, align 1
  br label %block.exit.1758

block.Cidr_Prelude.Interfaces.GT.1754:            ; preds = %idr_Prelude.Chars.isDigit.entry
  %ptr_Cidr_Prelude.Interfaces.GT.1755 = bitcast i64* %new_node_ptr.1750 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit1_val_9.1746, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.1755, align 1
  br label %block.exit.1758

block.Cidr_Prelude.Interfaces.LT.1756:            ; preds = %idr_Prelude.Chars.isDigit.entry
  %ptr_Cidr_Prelude.Interfaces.LT.1757 = bitcast i64* %new_node_ptr.1750 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit1_val_9.1746, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.1757, align 1
  br label %block.exit.1758

block.exit.1758:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.1756, %block.Cidr_Prelude.Interfaces.GT.1754, %block.Cidr_Prelude.Interfaces.EQ.1752
  %tag.1759 = load i64, i64* %new_node_ptr.1750, align 1
  switch i64 %tag.1759, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.1760
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.1763
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.1766
  ]

block.Cidr_Prelude.Interfaces.EQ.1760:            ; preds = %block.exit.1758
  %ptr_Cidr_Prelude.Interfaces.EQ.1761 = bitcast i64* %new_node_ptr.1750 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.EQ.1762 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.1761, align 1
  br label %block.exit.1769

block.Cidr_Prelude.Interfaces.GT.1763:            ; preds = %block.exit.1758
  %ptr_Cidr_Prelude.Interfaces.GT.1764 = bitcast i64* %new_node_ptr.1750 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.GT.1765 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.1764, align 1
  br label %block.exit.1769

block.Cidr_Prelude.Interfaces.LT.1766:            ; preds = %block.exit.1758
  %ptr_Cidr_Prelude.Interfaces.LT.1767 = bitcast i64* %new_node_ptr.1750 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.LT.1768 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.1767, align 1
  br label %block.exit.1769

block.exit.1769:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.1766, %block.Cidr_Prelude.Interfaces.GT.1763, %block.Cidr_Prelude.Interfaces.EQ.1760
  %idr_Prelude.Chars.isDigit1_val_12.1770 = phi <{ i64 }> [ %node_Cidr_Prelude.Interfaces.EQ.1762, %block.Cidr_Prelude.Interfaces.EQ.1760 ], [ %node_Cidr_Prelude.Interfaces.GT.1765, %block.Cidr_Prelude.Interfaces.GT.1763 ], [ %node_Cidr_Prelude.Interfaces.LT.1768, %block.Cidr_Prelude.Interfaces.LT.1766 ]
  %tag.1771 = extractvalue <{ i64 }> %idr_Prelude.Chars.isDigit1_val_12.1770, 0
  switch i64 %tag.1771, label %block.default.1772 [
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.1798
  ]

block.default.1772:                               ; preds = %block.exit.1769
  %node_CGrInt.1773 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 48, 1, 0
  %alloc_bytes.1774 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1775 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1774 to i64
  %new_node_ptr.1776 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1775 monotonic
  %new_node_ptr.1777 = inttoptr i64 %new_node_ptr.1776 to i64*
  %tag.1778 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1773, 0
  %ptr_CGrInt.1779 = bitcast i64* %new_node_ptr.1777 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1773, <{ i64, [1 x i64] }>* %ptr_CGrInt.1779, align 1
  %idr_Prelude.Chars.isDigit2_val.1780 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isDigit0, i64* %new_node_ptr.1777)
  %alloc_bytes.1781 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1782 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1781 to i64
  %new_node_ptr.1783 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1782 monotonic
  %new_node_ptr.1784 = inttoptr i64 %new_node_ptr.1783 to i64*
  %tag.1785 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isDigit2_val.1780, 0
  %ptr_CGrInt.1786 = bitcast i64* %new_node_ptr.1784 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isDigit2_val.1780, <{ i64, [1 x i64] }>* %ptr_CGrInt.1786, align 1
  %tag.1787 = load i64, i64* %new_node_ptr.1784, align 1
  %ptr_CGrInt.1788 = bitcast i64* %new_node_ptr.1784 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1789 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1788, align 1
  %tag.1790 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1789, 0
  switch i64 %tag.1790, label %error_block [
    i64 2, label %block.CGrInt.1791
  ]

block.CGrInt.1791:                                ; preds = %block.default.1772
  %idr_Prelude.Chars.isDigit_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1789, 1, 0
  switch i64 %idr_Prelude.Chars.isDigit_cpat_LInt64_0, label %block.default.1792 [
    i64 0, label %block.int_0.1793
  ]

block.default.1792:                               ; preds = %block.CGrInt.1791
  br label %block.exit.1794

block.int_0.1793:                                 ; preds = %block.CGrInt.1791
  br label %block.exit.1794

block.exit.1794:                                  ; preds = %block.int_0.1793, %block.default.1792
  %result.CGrInt.1795 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.1792 ], [ <{ i64 6 }>, %block.int_0.1793 ]
  br label %block.exit.1796

block.exit.1796:                                  ; preds = %block.exit.1794
  %result.default.1797 = phi <{ i64 }> [ %result.CGrInt.1795, %block.exit.1794 ]
  br label %block.exit.1799

block.Cidr_Prelude.Interfaces.GT.1798:            ; preds = %block.exit.1769
  br label %block.exit.1799

block.exit.1799:                                  ; preds = %block.Cidr_Prelude.Interfaces.GT.1798, %block.exit.1796
  %idr_Prelude.Chars.isDigit1_val.1800 = phi <{ i64 }> [ %result.default.1797, %block.exit.1796 ], [ <{ i64 7 }>, %block.Cidr_Prelude.Interfaces.GT.1798 ]
  %alloc_bytes.1801 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.1802 = ptrtoint <{ i64 }>* %alloc_bytes.1801 to i64
  %new_node_ptr.1803 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1802 monotonic
  %new_node_ptr.1804 = inttoptr i64 %new_node_ptr.1803 to i64*
  %tag.1805 = extractvalue <{ i64 }> %idr_Prelude.Chars.isDigit1_val.1800, 0
  switch i64 %tag.1805, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.1806
    i64 7, label %block.Cidr_Prelude.Bool.True.1808
  ]

block.Cidr_Prelude.Bool.False.1806:               ; preds = %block.exit.1799
  %ptr_Cidr_Prelude.Bool.False.1807 = bitcast i64* %new_node_ptr.1804 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit1_val.1800, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1807, align 1
  br label %block.exit.1810

block.Cidr_Prelude.Bool.True.1808:                ; preds = %block.exit.1799
  %ptr_Cidr_Prelude.Bool.True.1809 = bitcast i64* %new_node_ptr.1804 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit1_val.1800, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1809, align 1
  br label %block.exit.1810

block.exit.1810:                                  ; preds = %block.Cidr_Prelude.Bool.True.1808, %block.Cidr_Prelude.Bool.False.1806
  %tag.1811 = load i64, i64* %new_node_ptr.1804, align 1
  switch i64 %tag.1811, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.1812
    i64 7, label %block.Cidr_Prelude.Bool.True.1815
  ]

block.Cidr_Prelude.Bool.False.1812:               ; preds = %block.exit.1810
  %ptr_Cidr_Prelude.Bool.False.1813 = bitcast i64* %new_node_ptr.1804 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.1814 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.1813, align 1
  br label %block.exit.1818

block.Cidr_Prelude.Bool.True.1815:                ; preds = %block.exit.1810
  %ptr_Cidr_Prelude.Bool.True.1816 = bitcast i64* %new_node_ptr.1804 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.1817 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.1816, align 1
  br label %block.exit.1818

block.exit.1818:                                  ; preds = %block.Cidr_Prelude.Bool.True.1815, %block.Cidr_Prelude.Bool.False.1812
  %idr_Prelude.Chars.isDigit1_val_17.1819 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.1814, %block.Cidr_Prelude.Bool.False.1812 ], [ %node_Cidr_Prelude.Bool.True.1817, %block.Cidr_Prelude.Bool.True.1815 ]
  %tag.1820 = extractvalue <{ i64 }> %idr_Prelude.Chars.isDigit1_val_17.1819, 0
  switch i64 %tag.1820, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.1821
    i64 7, label %block.Cidr_Prelude.Bool.True.1822
  ]

block.Cidr_Prelude.Bool.False.1821:               ; preds = %block.exit.1818
  br label %block.exit.1885

block.Cidr_Prelude.Bool.True.1822:                ; preds = %block.exit.1818
  %node_CGrInt.1823 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 57, 1, 0
  %alloc_bytes.1824 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1825 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1824 to i64
  %new_node_ptr.1826 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1825 monotonic
  %new_node_ptr.1827 = inttoptr i64 %new_node_ptr.1826 to i64*
  %tag.1828 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1823, 0
  %ptr_CGrInt.1829 = bitcast i64* %new_node_ptr.1827 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1823, <{ i64, [1 x i64] }>* %ptr_CGrInt.1829, align 1
  %idr_Prelude.Chars.isDigit2_val_18.1830 = tail call fastcc <{ i64 }> @"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0"(i64* %idr_Prelude.Chars.isDigit0, i64* %new_node_ptr.1827)
  %alloc_bytes.1831 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.1832 = ptrtoint <{ i64 }>* %alloc_bytes.1831 to i64
  %new_node_ptr.1833 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1832 monotonic
  %new_node_ptr.1834 = inttoptr i64 %new_node_ptr.1833 to i64*
  %tag.1835 = extractvalue <{ i64 }> %idr_Prelude.Chars.isDigit2_val_18.1830, 0
  switch i64 %tag.1835, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.1836
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.1838
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.1840
  ]

block.Cidr_Prelude.Interfaces.EQ.1836:            ; preds = %block.Cidr_Prelude.Bool.True.1822
  %ptr_Cidr_Prelude.Interfaces.EQ.1837 = bitcast i64* %new_node_ptr.1834 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit2_val_18.1830, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.1837, align 1
  br label %block.exit.1842

block.Cidr_Prelude.Interfaces.GT.1838:            ; preds = %block.Cidr_Prelude.Bool.True.1822
  %ptr_Cidr_Prelude.Interfaces.GT.1839 = bitcast i64* %new_node_ptr.1834 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit2_val_18.1830, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.1839, align 1
  br label %block.exit.1842

block.Cidr_Prelude.Interfaces.LT.1840:            ; preds = %block.Cidr_Prelude.Bool.True.1822
  %ptr_Cidr_Prelude.Interfaces.LT.1841 = bitcast i64* %new_node_ptr.1834 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Chars.isDigit2_val_18.1830, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.1841, align 1
  br label %block.exit.1842

block.exit.1842:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.1840, %block.Cidr_Prelude.Interfaces.GT.1838, %block.Cidr_Prelude.Interfaces.EQ.1836
  %tag.1843 = load i64, i64* %new_node_ptr.1834, align 1
  switch i64 %tag.1843, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.1844
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.1847
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.1850
  ]

block.Cidr_Prelude.Interfaces.EQ.1844:            ; preds = %block.exit.1842
  %ptr_Cidr_Prelude.Interfaces.EQ.1845 = bitcast i64* %new_node_ptr.1834 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.EQ.1846 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.1845, align 1
  br label %block.exit.1853

block.Cidr_Prelude.Interfaces.GT.1847:            ; preds = %block.exit.1842
  %ptr_Cidr_Prelude.Interfaces.GT.1848 = bitcast i64* %new_node_ptr.1834 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.GT.1849 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.1848, align 1
  br label %block.exit.1853

block.Cidr_Prelude.Interfaces.LT.1850:            ; preds = %block.exit.1842
  %ptr_Cidr_Prelude.Interfaces.LT.1851 = bitcast i64* %new_node_ptr.1834 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.LT.1852 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.1851, align 1
  br label %block.exit.1853

block.exit.1853:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.1850, %block.Cidr_Prelude.Interfaces.GT.1847, %block.Cidr_Prelude.Interfaces.EQ.1844
  %idr_Prelude.Chars.isDigit2_val_22.1854 = phi <{ i64 }> [ %node_Cidr_Prelude.Interfaces.EQ.1846, %block.Cidr_Prelude.Interfaces.EQ.1844 ], [ %node_Cidr_Prelude.Interfaces.GT.1849, %block.Cidr_Prelude.Interfaces.GT.1847 ], [ %node_Cidr_Prelude.Interfaces.LT.1852, %block.Cidr_Prelude.Interfaces.LT.1850 ]
  %tag.1855 = extractvalue <{ i64 }> %idr_Prelude.Chars.isDigit2_val_22.1854, 0
  switch i64 %tag.1855, label %block.default.1856 [
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.1882
  ]

block.default.1856:                               ; preds = %block.exit.1853
  %node_CGrInt.1857 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 57, 1, 0
  %alloc_bytes.1858 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1859 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1858 to i64
  %new_node_ptr.1860 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1859 monotonic
  %new_node_ptr.1861 = inttoptr i64 %new_node_ptr.1860 to i64*
  %tag.1862 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1857, 0
  %ptr_CGrInt.1863 = bitcast i64* %new_node_ptr.1861 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1857, <{ i64, [1 x i64] }>* %ptr_CGrInt.1863, align 1
  %idr_Prelude.Chars.isDigit3_val.1864 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isDigit0, i64* %new_node_ptr.1861)
  %alloc_bytes.1865 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1866 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1865 to i64
  %new_node_ptr.1867 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1866 monotonic
  %new_node_ptr.1868 = inttoptr i64 %new_node_ptr.1867 to i64*
  %tag.1869 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isDigit3_val.1864, 0
  %ptr_CGrInt.1870 = bitcast i64* %new_node_ptr.1868 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isDigit3_val.1864, <{ i64, [1 x i64] }>* %ptr_CGrInt.1870, align 1
  %tag.1871 = load i64, i64* %new_node_ptr.1868, align 1
  %ptr_CGrInt.1872 = bitcast i64* %new_node_ptr.1868 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1873 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1872, align 1
  %tag.1874 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1873, 0
  switch i64 %tag.1874, label %error_block [
    i64 2, label %block.CGrInt.1875
  ]

block.CGrInt.1875:                                ; preds = %block.default.1856
  %idr_Prelude.Chars.isDigit_cpat_LInt64_0_26 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1873, 1, 0
  switch i64 %idr_Prelude.Chars.isDigit_cpat_LInt64_0_26, label %block.default.1876 [
    i64 0, label %block.int_0.1877
  ]

block.default.1876:                               ; preds = %block.CGrInt.1875
  br label %block.exit.1878

block.int_0.1877:                                 ; preds = %block.CGrInt.1875
  br label %block.exit.1878

block.exit.1878:                                  ; preds = %block.int_0.1877, %block.default.1876
  %result.CGrInt.1879 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.1876 ], [ <{ i64 6 }>, %block.int_0.1877 ]
  br label %block.exit.1880

block.exit.1880:                                  ; preds = %block.exit.1878
  %result.default.1881 = phi <{ i64 }> [ %result.CGrInt.1879, %block.exit.1878 ]
  br label %block.exit.1883

block.Cidr_Prelude.Interfaces.LT.1882:            ; preds = %block.exit.1853
  br label %block.exit.1883

block.exit.1883:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.1882, %block.exit.1880
  %result.Cidr_Prelude.Bool.True.1884 = phi <{ i64 }> [ %result.default.1881, %block.exit.1880 ], [ <{ i64 7 }>, %block.Cidr_Prelude.Interfaces.LT.1882 ]
  br label %block.exit.1885

block.exit.1885:                                  ; preds = %block.exit.1883, %block.Cidr_Prelude.Bool.False.1821
  %result.idr_Prelude.Chars.isDigit.1886 = phi <{ i64 }> [ <{ i64 6 }>, %block.Cidr_Prelude.Bool.False.1821 ], [ %result.Cidr_Prelude.Bool.True.1884, %block.exit.1883 ]
  ret <{ i64 }> %result.idr_Prelude.Chars.isDigit.1886

error_block:                                      ; preds = %block.default.1856, %block.exit.1842, %block.Cidr_Prelude.Bool.True.1822, %block.exit.1818, %block.exit.1810, %block.exit.1799, %block.default.1772, %block.exit.1758, %idr_Prelude.Chars.isDigit.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %idr_Prelude.Chars.isSpace0) #0 {
idr_Prelude.Chars.isSpace.entry:
  %node_CGrInt.1887 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 32, 1, 0
  %alloc_bytes.1888 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1889 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1888 to i64
  %new_node_ptr.1890 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1889 monotonic
  %new_node_ptr.1891 = inttoptr i64 %new_node_ptr.1890 to i64*
  %tag.1892 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1887, 0
  %ptr_CGrInt.1893 = bitcast i64* %new_node_ptr.1891 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1887, <{ i64, [1 x i64] }>* %ptr_CGrInt.1893, align 1
  %idr_Prelude.Chars.isSpace1_val.1894 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isSpace0, i64* %new_node_ptr.1891)
  %alloc_bytes.1895 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1896 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1895 to i64
  %new_node_ptr.1897 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1896 monotonic
  %new_node_ptr.1898 = inttoptr i64 %new_node_ptr.1897 to i64*
  %tag.1899 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace1_val.1894, 0
  %ptr_CGrInt.1900 = bitcast i64* %new_node_ptr.1898 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace1_val.1894, <{ i64, [1 x i64] }>* %ptr_CGrInt.1900, align 1
  %tag.1901 = load i64, i64* %new_node_ptr.1898, align 1
  %ptr_CGrInt.1902 = bitcast i64* %new_node_ptr.1898 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1903 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1902, align 1
  %tag.1904 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1903, 0
  switch i64 %tag.1904, label %error_block [
    i64 2, label %block.CGrInt.1905
  ]

block.CGrInt.1905:                                ; preds = %idr_Prelude.Chars.isSpace.entry
  %idr_Prelude.Chars.isSpace_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1903, 1, 0
  switch i64 %idr_Prelude.Chars.isSpace_cpat_LInt64_0, label %block.default.1906 [
    i64 0, label %block.int_0.1907
  ]

block.default.1906:                               ; preds = %block.CGrInt.1905
  br label %block.exit.2058

block.int_0.1907:                                 ; preds = %block.CGrInt.1905
  %node_CGrInt.1908 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 9, 1, 0
  %alloc_bytes.1909 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1910 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1909 to i64
  %new_node_ptr.1911 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1910 monotonic
  %new_node_ptr.1912 = inttoptr i64 %new_node_ptr.1911 to i64*
  %tag.1913 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1908, 0
  %ptr_CGrInt.1914 = bitcast i64* %new_node_ptr.1912 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1908, <{ i64, [1 x i64] }>* %ptr_CGrInt.1914, align 1
  %idr_Prelude.Chars.isSpace2_val.1915 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isSpace0, i64* %new_node_ptr.1912)
  %alloc_bytes.1916 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1917 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1916 to i64
  %new_node_ptr.1918 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1917 monotonic
  %new_node_ptr.1919 = inttoptr i64 %new_node_ptr.1918 to i64*
  %tag.1920 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace2_val.1915, 0
  %ptr_CGrInt.1921 = bitcast i64* %new_node_ptr.1919 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace2_val.1915, <{ i64, [1 x i64] }>* %ptr_CGrInt.1921, align 1
  %tag.1922 = load i64, i64* %new_node_ptr.1919, align 1
  %ptr_CGrInt.1923 = bitcast i64* %new_node_ptr.1919 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1924 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1923, align 1
  %tag.1925 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1924, 0
  switch i64 %tag.1925, label %error_block [
    i64 2, label %block.CGrInt.1926
  ]

block.CGrInt.1926:                                ; preds = %block.int_0.1907
  %idr_Prelude.Chars.isSpace_cpat_LInt64_0_33 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1924, 1, 0
  switch i64 %idr_Prelude.Chars.isSpace_cpat_LInt64_0_33, label %block.default.1927 [
    i64 0, label %block.int_0.1928
  ]

block.default.1927:                               ; preds = %block.CGrInt.1926
  br label %block.exit.2054

block.int_0.1928:                                 ; preds = %block.CGrInt.1926
  %node_CGrInt.1929 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 13, 1, 0
  %alloc_bytes.1930 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1931 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1930 to i64
  %new_node_ptr.1932 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1931 monotonic
  %new_node_ptr.1933 = inttoptr i64 %new_node_ptr.1932 to i64*
  %tag.1934 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1929, 0
  %ptr_CGrInt.1935 = bitcast i64* %new_node_ptr.1933 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1929, <{ i64, [1 x i64] }>* %ptr_CGrInt.1935, align 1
  %idr_Prelude.Chars.isSpace3_val.1936 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isSpace0, i64* %new_node_ptr.1933)
  %alloc_bytes.1937 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1938 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1937 to i64
  %new_node_ptr.1939 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1938 monotonic
  %new_node_ptr.1940 = inttoptr i64 %new_node_ptr.1939 to i64*
  %tag.1941 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace3_val.1936, 0
  %ptr_CGrInt.1942 = bitcast i64* %new_node_ptr.1940 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace3_val.1936, <{ i64, [1 x i64] }>* %ptr_CGrInt.1942, align 1
  %tag.1943 = load i64, i64* %new_node_ptr.1940, align 1
  %ptr_CGrInt.1944 = bitcast i64* %new_node_ptr.1940 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1945 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1944, align 1
  %tag.1946 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1945, 0
  switch i64 %tag.1946, label %error_block [
    i64 2, label %block.CGrInt.1947
  ]

block.CGrInt.1947:                                ; preds = %block.int_0.1928
  %idr_Prelude.Chars.isSpace_cpat_LInt64_0_37 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1945, 1, 0
  switch i64 %idr_Prelude.Chars.isSpace_cpat_LInt64_0_37, label %block.default.1948 [
    i64 0, label %block.int_0.1949
  ]

block.default.1948:                               ; preds = %block.CGrInt.1947
  br label %block.exit.2050

block.int_0.1949:                                 ; preds = %block.CGrInt.1947
  %node_CGrInt.1950 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 10, 1, 0
  %alloc_bytes.1951 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1952 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1951 to i64
  %new_node_ptr.1953 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1952 monotonic
  %new_node_ptr.1954 = inttoptr i64 %new_node_ptr.1953 to i64*
  %tag.1955 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1950, 0
  %ptr_CGrInt.1956 = bitcast i64* %new_node_ptr.1954 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1950, <{ i64, [1 x i64] }>* %ptr_CGrInt.1956, align 1
  %idr_Prelude.Chars.isSpace4_val.1957 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isSpace0, i64* %new_node_ptr.1954)
  %alloc_bytes.1958 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1959 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1958 to i64
  %new_node_ptr.1960 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1959 monotonic
  %new_node_ptr.1961 = inttoptr i64 %new_node_ptr.1960 to i64*
  %tag.1962 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace4_val.1957, 0
  %ptr_CGrInt.1963 = bitcast i64* %new_node_ptr.1961 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace4_val.1957, <{ i64, [1 x i64] }>* %ptr_CGrInt.1963, align 1
  %tag.1964 = load i64, i64* %new_node_ptr.1961, align 1
  %ptr_CGrInt.1965 = bitcast i64* %new_node_ptr.1961 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1966 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1965, align 1
  %tag.1967 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1966, 0
  switch i64 %tag.1967, label %error_block [
    i64 2, label %block.CGrInt.1968
  ]

block.CGrInt.1968:                                ; preds = %block.int_0.1949
  %idr_Prelude.Chars.isSpace_cpat_LInt64_0_41 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1966, 1, 0
  switch i64 %idr_Prelude.Chars.isSpace_cpat_LInt64_0_41, label %block.default.1969 [
    i64 0, label %block.int_0.1970
  ]

block.default.1969:                               ; preds = %block.CGrInt.1968
  br label %block.exit.2046

block.int_0.1970:                                 ; preds = %block.CGrInt.1968
  %node_CGrInt.1971 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 12, 1, 0
  %alloc_bytes.1972 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1973 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1972 to i64
  %new_node_ptr.1974 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1973 monotonic
  %new_node_ptr.1975 = inttoptr i64 %new_node_ptr.1974 to i64*
  %tag.1976 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1971, 0
  %ptr_CGrInt.1977 = bitcast i64* %new_node_ptr.1975 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1971, <{ i64, [1 x i64] }>* %ptr_CGrInt.1977, align 1
  %idr_Prelude.Chars.isSpace5_val.1978 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isSpace0, i64* %new_node_ptr.1975)
  %alloc_bytes.1979 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1980 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1979 to i64
  %new_node_ptr.1981 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1980 monotonic
  %new_node_ptr.1982 = inttoptr i64 %new_node_ptr.1981 to i64*
  %tag.1983 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace5_val.1978, 0
  %ptr_CGrInt.1984 = bitcast i64* %new_node_ptr.1982 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace5_val.1978, <{ i64, [1 x i64] }>* %ptr_CGrInt.1984, align 1
  %tag.1985 = load i64, i64* %new_node_ptr.1982, align 1
  %ptr_CGrInt.1986 = bitcast i64* %new_node_ptr.1982 to <{ i64, [1 x i64] }>*
  %node_CGrInt.1987 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.1986, align 1
  %tag.1988 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1987, 0
  switch i64 %tag.1988, label %error_block [
    i64 2, label %block.CGrInt.1989
  ]

block.CGrInt.1989:                                ; preds = %block.int_0.1970
  %idr_Prelude.Chars.isSpace_cpat_LInt64_0_45 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1987, 1, 0
  switch i64 %idr_Prelude.Chars.isSpace_cpat_LInt64_0_45, label %block.default.1990 [
    i64 0, label %block.int_0.1991
  ]

block.default.1990:                               ; preds = %block.CGrInt.1989
  br label %block.exit.2042

block.int_0.1991:                                 ; preds = %block.CGrInt.1989
  %node_CGrInt.1992 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 11, 1, 0
  %alloc_bytes.1993 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.1994 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.1993 to i64
  %new_node_ptr.1995 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.1994 monotonic
  %new_node_ptr.1996 = inttoptr i64 %new_node_ptr.1995 to i64*
  %tag.1997 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.1992, 0
  %ptr_CGrInt.1998 = bitcast i64* %new_node_ptr.1996 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.1992, <{ i64, [1 x i64] }>* %ptr_CGrInt.1998, align 1
  %idr_Prelude.Chars.isSpace6_val.1999 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isSpace0, i64* %new_node_ptr.1996)
  %alloc_bytes.2000 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2001 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2000 to i64
  %new_node_ptr.2002 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2001 monotonic
  %new_node_ptr.2003 = inttoptr i64 %new_node_ptr.2002 to i64*
  %tag.2004 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace6_val.1999, 0
  %ptr_CGrInt.2005 = bitcast i64* %new_node_ptr.2003 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace6_val.1999, <{ i64, [1 x i64] }>* %ptr_CGrInt.2005, align 1
  %tag.2006 = load i64, i64* %new_node_ptr.2003, align 1
  %ptr_CGrInt.2007 = bitcast i64* %new_node_ptr.2003 to <{ i64, [1 x i64] }>*
  %node_CGrInt.2008 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.2007, align 1
  %tag.2009 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2008, 0
  switch i64 %tag.2009, label %error_block [
    i64 2, label %block.CGrInt.2010
  ]

block.CGrInt.2010:                                ; preds = %block.int_0.1991
  %idr_Prelude.Chars.isSpace_cpat_LInt64_0_49 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2008, 1, 0
  switch i64 %idr_Prelude.Chars.isSpace_cpat_LInt64_0_49, label %block.default.2011 [
    i64 0, label %block.int_0.2012
  ]

block.default.2011:                               ; preds = %block.CGrInt.2010
  br label %block.exit.2038

block.int_0.2012:                                 ; preds = %block.CGrInt.2010
  %node_CGrInt.2013 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 160, 1, 0
  %alloc_bytes.2014 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2015 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2014 to i64
  %new_node_ptr.2016 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2015 monotonic
  %new_node_ptr.2017 = inttoptr i64 %new_node_ptr.2016 to i64*
  %tag.2018 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2013, 0
  %ptr_CGrInt.2019 = bitcast i64* %new_node_ptr.2017 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2013, <{ i64, [1 x i64] }>* %ptr_CGrInt.2019, align 1
  %idr_Prelude.Chars.isSpace7_val.2020 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %idr_Prelude.Chars.isSpace0, i64* %new_node_ptr.2017)
  %alloc_bytes.2021 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2022 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2021 to i64
  %new_node_ptr.2023 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2022 monotonic
  %new_node_ptr.2024 = inttoptr i64 %new_node_ptr.2023 to i64*
  %tag.2025 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace7_val.2020, 0
  %ptr_CGrInt.2026 = bitcast i64* %new_node_ptr.2024 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Chars.isSpace7_val.2020, <{ i64, [1 x i64] }>* %ptr_CGrInt.2026, align 1
  %tag.2027 = load i64, i64* %new_node_ptr.2024, align 1
  %ptr_CGrInt.2028 = bitcast i64* %new_node_ptr.2024 to <{ i64, [1 x i64] }>*
  %node_CGrInt.2029 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.2028, align 1
  %tag.2030 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2029, 0
  switch i64 %tag.2030, label %error_block [
    i64 2, label %block.CGrInt.2031
  ]

block.CGrInt.2031:                                ; preds = %block.int_0.2012
  %idr_Prelude.Chars.isSpace_cpat_LInt64_0_53 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2029, 1, 0
  switch i64 %idr_Prelude.Chars.isSpace_cpat_LInt64_0_53, label %block.default.2032 [
    i64 0, label %block.int_0.2033
  ]

block.default.2032:                               ; preds = %block.CGrInt.2031
  br label %block.exit.2034

block.int_0.2033:                                 ; preds = %block.CGrInt.2031
  br label %block.exit.2034

block.exit.2034:                                  ; preds = %block.int_0.2033, %block.default.2032
  %result.CGrInt.2035 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.2032 ], [ <{ i64 6 }>, %block.int_0.2033 ]
  br label %block.exit.2036

block.exit.2036:                                  ; preds = %block.exit.2034
  %result.int_0.2037 = phi <{ i64 }> [ %result.CGrInt.2035, %block.exit.2034 ]
  br label %block.exit.2038

block.exit.2038:                                  ; preds = %block.exit.2036, %block.default.2011
  %result.CGrInt.2039 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.2011 ], [ %result.int_0.2037, %block.exit.2036 ]
  br label %block.exit.2040

block.exit.2040:                                  ; preds = %block.exit.2038
  %result.int_0.2041 = phi <{ i64 }> [ %result.CGrInt.2039, %block.exit.2038 ]
  br label %block.exit.2042

block.exit.2042:                                  ; preds = %block.exit.2040, %block.default.1990
  %result.CGrInt.2043 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.1990 ], [ %result.int_0.2041, %block.exit.2040 ]
  br label %block.exit.2044

block.exit.2044:                                  ; preds = %block.exit.2042
  %result.int_0.2045 = phi <{ i64 }> [ %result.CGrInt.2043, %block.exit.2042 ]
  br label %block.exit.2046

block.exit.2046:                                  ; preds = %block.exit.2044, %block.default.1969
  %result.CGrInt.2047 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.1969 ], [ %result.int_0.2045, %block.exit.2044 ]
  br label %block.exit.2048

block.exit.2048:                                  ; preds = %block.exit.2046
  %result.int_0.2049 = phi <{ i64 }> [ %result.CGrInt.2047, %block.exit.2046 ]
  br label %block.exit.2050

block.exit.2050:                                  ; preds = %block.exit.2048, %block.default.1948
  %result.CGrInt.2051 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.1948 ], [ %result.int_0.2049, %block.exit.2048 ]
  br label %block.exit.2052

block.exit.2052:                                  ; preds = %block.exit.2050
  %result.int_0.2053 = phi <{ i64 }> [ %result.CGrInt.2051, %block.exit.2050 ]
  br label %block.exit.2054

block.exit.2054:                                  ; preds = %block.exit.2052, %block.default.1927
  %result.CGrInt.2055 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.1927 ], [ %result.int_0.2053, %block.exit.2052 ]
  br label %block.exit.2056

block.exit.2056:                                  ; preds = %block.exit.2054
  %result.int_0.2057 = phi <{ i64 }> [ %result.CGrInt.2055, %block.exit.2054 ]
  br label %block.exit.2058

block.exit.2058:                                  ; preds = %block.exit.2056, %block.default.1906
  %result.CGrInt.2059 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.1906 ], [ %result.int_0.2057, %block.exit.2056 ]
  br label %block.exit.2060

block.exit.2060:                                  ; preds = %block.exit.2058
  %result.idr_Prelude.Chars.isSpace.2061 = phi <{ i64 }> [ %result.CGrInt.2059, %block.exit.2058 ]
  ret <{ i64 }> %result.idr_Prelude.Chars.isSpace.2061

error_block:                                      ; preds = %block.int_0.2012, %block.int_0.1991, %block.int_0.1970, %block.int_0.1949, %block.int_0.1928, %block.int_0.1907, %idr_Prelude.Chars.isSpace.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @idr_Main.main(i64* %idr_Main.main0) #0 {
idr_Main.main.entry:
  %alloc_bytes.2062 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2063 = ptrtoint <{ i64 }>* %alloc_bytes.2062 to i64
  %new_node_ptr.2064 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2063 monotonic
  %new_node_ptr.2065 = inttoptr i64 %new_node_ptr.2064 to i64*
  %tag.2066 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2067 = bitcast i64* %new_node_ptr.2065 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2067, align 1
  %alloc_bytes.2068 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2069 = ptrtoint <{ i64 }>* %alloc_bytes.2068 to i64
  %new_node_ptr.2070 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2069 monotonic
  %new_node_ptr.2071 = inttoptr i64 %new_node_ptr.2070 to i64*
  %tag.2072 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2073 = bitcast i64* %new_node_ptr.2071 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2073, align 1
  %alloc_bytes.2074 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2075 = ptrtoint <{ i64 }>* %alloc_bytes.2074 to i64
  %new_node_ptr.2076 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2075 monotonic
  %new_node_ptr.2077 = inttoptr i64 %new_node_ptr.2076 to i64*
  %tag.2078 = extractvalue <{ i64 }> <{ i64 21 }>, 0
  %"ptr_C\22idr_{U_Main.{main_3}_1}\22.2079" = bitcast i64* %new_node_ptr.2077 to <{ i64 }>*
  store <{ i64 }> <{ i64 21 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_3}_1}\22.2079", align 1
  %idr_Main.main4_val.2080 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.tri()
  %alloc_bytes.2081 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.2082 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.2081 to i64
  %new_node_ptr.2083 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2082 monotonic
  %new_node_ptr.2084 = inttoptr i64 %new_node_ptr.2083 to i64*
  %tag.2085 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main4_val.2080, 0
  %"ptr_Cidr_Data.Vect.::.2086" = bitcast i64* %new_node_ptr.2084 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main4_val.2080, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2086", align 1
  %idr_Main.main1_val.2087 = tail call fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %new_node_ptr.2065, i64* %new_node_ptr.2071, i64* %new_node_ptr.2077, i64* %new_node_ptr.2084, i64* %idr_Main.main0)
  %alloc_bytes.2088 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2089 = ptrtoint <{ i64 }>* %alloc_bytes.2088 to i64
  %new_node_ptr.2090 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2089 monotonic
  %new_node_ptr.2091 = inttoptr i64 %new_node_ptr.2090 to i64*
  %tag.2092 = extractvalue <{ i64 }> %idr_Main.main1_val.2087, 0
  %ptr_Cidr_MkUnit.2093 = bitcast i64* %new_node_ptr.2091 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main1_val.2087, <{ i64 }>* %ptr_Cidr_MkUnit.2093, align 1
  %alloc_bytes.2094 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2095 = ptrtoint <{ i64 }>* %alloc_bytes.2094 to i64
  %new_node_ptr.2096 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2095 monotonic
  %new_node_ptr.2097 = inttoptr i64 %new_node_ptr.2096 to i64*
  %tag.2098 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2099 = bitcast i64* %new_node_ptr.2097 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2099, align 1
  %alloc_bytes.2100 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2101 = ptrtoint <{ i64 }>* %alloc_bytes.2100 to i64
  %new_node_ptr.2102 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2101 monotonic
  %new_node_ptr.2103 = inttoptr i64 %new_node_ptr.2102 to i64*
  %tag.2104 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2105 = bitcast i64* %new_node_ptr.2103 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2105, align 1
  %alloc_bytes.2106 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2107 = ptrtoint <{ i64 }>* %alloc_bytes.2106 to i64
  %new_node_ptr.2108 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2107 monotonic
  %new_node_ptr.2109 = inttoptr i64 %new_node_ptr.2108 to i64*
  %tag.2110 = extractvalue <{ i64 }> <{ i64 22 }>, 0
  %"ptr_C\22idr_{U_Main.{main_5}_1}\22.2111" = bitcast i64* %new_node_ptr.2109 to <{ i64 }>*
  store <{ i64 }> <{ i64 22 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_5}_1}\22.2111", align 1
  %idr_Main.main5_val.2112 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.tri2()
  %alloc_bytes.2113 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.2114 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.2113 to i64
  %new_node_ptr.2115 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2114 monotonic
  %new_node_ptr.2116 = inttoptr i64 %new_node_ptr.2115 to i64*
  %tag.2117 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main5_val.2112, 0
  %"ptr_Cidr_Data.Vect.::.2118" = bitcast i64* %new_node_ptr.2116 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main5_val.2112, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2118", align 1
  %idr_Main.main2_val_71.2119 = tail call fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %new_node_ptr.2097, i64* %new_node_ptr.2103, i64* %new_node_ptr.2109, i64* %new_node_ptr.2116, i64* %idr_Main.main0)
  %alloc_bytes.2120 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2121 = ptrtoint <{ i64 }>* %alloc_bytes.2120 to i64
  %new_node_ptr.2122 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2121 monotonic
  %new_node_ptr.2123 = inttoptr i64 %new_node_ptr.2122 to i64*
  %tag.2124 = extractvalue <{ i64 }> %idr_Main.main2_val_71.2119, 0
  %ptr_Cidr_MkUnit.2125 = bitcast i64* %new_node_ptr.2123 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main2_val_71.2119, <{ i64 }>* %ptr_Cidr_MkUnit.2125, align 1
  %alloc_bytes.2126 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2127 = ptrtoint <{ i64 }>* %alloc_bytes.2126 to i64
  %new_node_ptr.2128 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2127 monotonic
  %new_node_ptr.2129 = inttoptr i64 %new_node_ptr.2128 to i64*
  %tag.2130 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2131 = bitcast i64* %new_node_ptr.2129 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2131, align 1
  %alloc_bytes.2132 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2133 = ptrtoint <{ i64 }>* %alloc_bytes.2132 to i64
  %new_node_ptr.2134 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2133 monotonic
  %new_node_ptr.2135 = inttoptr i64 %new_node_ptr.2134 to i64*
  %tag.2136 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2137 = bitcast i64* %new_node_ptr.2135 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2137, align 1
  %alloc_bytes.2138 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2139 = ptrtoint <{ i64 }>* %alloc_bytes.2138 to i64
  %new_node_ptr.2140 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2139 monotonic
  %new_node_ptr.2141 = inttoptr i64 %new_node_ptr.2140 to i64*
  %tag.2142 = extractvalue <{ i64 }> <{ i64 23 }>, 0
  %"ptr_C\22idr_{U_Main.{main_6}_1}\22.2143" = bitcast i64* %new_node_ptr.2141 to <{ i64 }>*
  store <{ i64 }> <{ i64 23 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_6}_1}\22.2143", align 1
  %node_CGrString.2144 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.0, 1, 0
  %alloc_bytes.2145 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.2146 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.2145 to i64
  %new_node_ptr.2147 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2146 monotonic
  %new_node_ptr.2148 = inttoptr i64 %new_node_ptr.2147 to i64*
  %tag.2149 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.2144, 0
  %ptr_CGrString.2150 = bitcast i64* %new_node_ptr.2148 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.2144, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2150, align 1
  %idr_Main.main6_val.2151 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_Prelude.Strings.trim(i64* %new_node_ptr.2148)
  %alloc_bytes.2152 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.2153 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.2152 to i64
  %new_node_ptr.2154 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2153 monotonic
  %new_node_ptr.2155 = inttoptr i64 %new_node_ptr.2154 to i64*
  %tag.2156 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main6_val.2151, 0
  %ptr_CGrString.2157 = bitcast i64* %new_node_ptr.2155 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main6_val.2151, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2157, align 1
  %idr_Main.main3_val_79.2158 = tail call fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %new_node_ptr.2129, i64* %new_node_ptr.2135, i64* %new_node_ptr.2141, i64* %new_node_ptr.2155, i64* %idr_Main.main0)
  %alloc_bytes.2159 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2160 = ptrtoint <{ i64 }>* %alloc_bytes.2159 to i64
  %new_node_ptr.2161 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2160 monotonic
  %new_node_ptr.2162 = inttoptr i64 %new_node_ptr.2161 to i64*
  %tag.2163 = extractvalue <{ i64 }> %idr_Main.main3_val_79.2158, 0
  %ptr_Cidr_MkUnit.2164 = bitcast i64* %new_node_ptr.2162 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main3_val_79.2158, <{ i64 }>* %ptr_Cidr_MkUnit.2164, align 1
  %alloc_bytes.2165 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2166 = ptrtoint <{ i64 }>* %alloc_bytes.2165 to i64
  %new_node_ptr.2167 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2166 monotonic
  %new_node_ptr.2168 = inttoptr i64 %new_node_ptr.2167 to i64*
  %tag.2169 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2170 = bitcast i64* %new_node_ptr.2168 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2170, align 1
  %alloc_bytes.2171 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2172 = ptrtoint <{ i64 }>* %alloc_bytes.2171 to i64
  %new_node_ptr.2173 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2172 monotonic
  %new_node_ptr.2174 = inttoptr i64 %new_node_ptr.2173 to i64*
  %tag.2175 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2176 = bitcast i64* %new_node_ptr.2174 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2176, align 1
  %alloc_bytes.2177 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2178 = ptrtoint <{ i64 }>* %alloc_bytes.2177 to i64
  %new_node_ptr.2179 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2178 monotonic
  %new_node_ptr.2180 = inttoptr i64 %new_node_ptr.2179 to i64*
  %tag.2181 = extractvalue <{ i64 }> <{ i64 23 }>, 0
  %"ptr_C\22idr_{U_Main.{main_6}_1}\22.2182" = bitcast i64* %new_node_ptr.2180 to <{ i64 }>*
  store <{ i64 }> <{ i64 23 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_6}_1}\22.2182", align 1
  %node_CGrString.2183 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.1, 1, 0
  %alloc_bytes.2184 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.2185 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.2184 to i64
  %new_node_ptr.2186 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2185 monotonic
  %new_node_ptr.2187 = inttoptr i64 %new_node_ptr.2186 to i64*
  %tag.2188 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.2183, 0
  %ptr_CGrString.2189 = bitcast i64* %new_node_ptr.2187 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.2183, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2189, align 1
  %idr_Main.main4_val_89.2190 = tail call fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %new_node_ptr.2168, i64* %new_node_ptr.2174, i64* %new_node_ptr.2180, i64* %new_node_ptr.2187, i64* %idr_Main.main0)
  %alloc_bytes.2191 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2192 = ptrtoint <{ i64 }>* %alloc_bytes.2191 to i64
  %new_node_ptr.2193 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2192 monotonic
  %new_node_ptr.2194 = inttoptr i64 %new_node_ptr.2193 to i64*
  %tag.2195 = extractvalue <{ i64 }> %idr_Main.main4_val_89.2190, 0
  %ptr_Cidr_MkUnit.2196 = bitcast i64* %new_node_ptr.2194 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main4_val_89.2190, <{ i64 }>* %ptr_Cidr_MkUnit.2196, align 1
  %alloc_bytes.2197 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2198 = ptrtoint <{ i64 }>* %alloc_bytes.2197 to i64
  %new_node_ptr.2199 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2198 monotonic
  %new_node_ptr.2200 = inttoptr i64 %new_node_ptr.2199 to i64*
  %tag.2201 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2202 = bitcast i64* %new_node_ptr.2200 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2202, align 1
  %alloc_bytes.2203 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2204 = ptrtoint <{ i64 }>* %alloc_bytes.2203 to i64
  %new_node_ptr.2205 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2204 monotonic
  %new_node_ptr.2206 = inttoptr i64 %new_node_ptr.2205 to i64*
  %tag.2207 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2208 = bitcast i64* %new_node_ptr.2206 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2208, align 1
  %alloc_bytes.2209 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2210 = ptrtoint <{ i64 }>* %alloc_bytes.2209 to i64
  %new_node_ptr.2211 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2210 monotonic
  %new_node_ptr.2212 = inttoptr i64 %new_node_ptr.2211 to i64*
  %tag.2213 = extractvalue <{ i64 }> <{ i64 24 }>, 0
  %"ptr_C\22idr_{U_Main.{main_8}_1}\22.2214" = bitcast i64* %new_node_ptr.2212 to <{ i64 }>*
  store <{ i64 }> <{ i64 24 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_8}_1}\22.2214", align 1
  %alloc_bytes.2215 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2216 = ptrtoint <{ i64 }>* %alloc_bytes.2215 to i64
  %new_node_ptr.2217 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2216 monotonic
  %new_node_ptr.2218 = inttoptr i64 %new_node_ptr.2217 to i64*
  %tag.2219 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2220 = bitcast i64* %new_node_ptr.2218 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2220, align 1
  %alloc_bytes.2221 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2222 = ptrtoint <{ i64 }>* %alloc_bytes.2221 to i64
  %new_node_ptr.2223 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2222 monotonic
  %new_node_ptr.2224 = inttoptr i64 %new_node_ptr.2223 to i64*
  %tag.2225 = extractvalue <{ i64 }> <{ i64 25 }>, 0
  %"ptr_C\22idr_{U_Main.{main_9}_2}\22.2226" = bitcast i64* %new_node_ptr.2224 to <{ i64 }>*
  store <{ i64 }> <{ i64 25 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_9}_2}\22.2226", align 1
  %node_CGrInt.2227 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 0, 1, 0
  %alloc_bytes.2228 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2229 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2228 to i64
  %new_node_ptr.2230 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2229 monotonic
  %new_node_ptr.2231 = inttoptr i64 %new_node_ptr.2230 to i64*
  %tag.2232 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2227, 0
  %ptr_CGrInt.2233 = bitcast i64* %new_node_ptr.2231 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2227, <{ i64, [1 x i64] }>* %ptr_CGrInt.2233, align 1
  %node_CGrInt.2234 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 10, 1, 0
  %alloc_bytes.2235 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2236 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2235 to i64
  %new_node_ptr.2237 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2236 monotonic
  %new_node_ptr.2238 = inttoptr i64 %new_node_ptr.2237 to i64*
  %tag.2239 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2234, 0
  %ptr_CGrInt.2240 = bitcast i64* %new_node_ptr.2238 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2234, <{ i64, [1 x i64] }>* %ptr_CGrInt.2240, align 1
  %idr_Main.main8_val.2241 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Main.adder(i64* %new_node_ptr.2218, i64* %new_node_ptr.2224, i64* %new_node_ptr.2231, i64* %new_node_ptr.2238)
  %alloc_bytes.2242 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.2243 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.2242 to i64
  %new_node_ptr.2244 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2243 monotonic
  %new_node_ptr.2245 = inttoptr i64 %new_node_ptr.2244 to i64*
  %tag.2246 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  switch i64 %tag.2246, label %error_block [
    i64 0, label %block.CErased.2247
    i64 1, label %block.CGrFloat.2251
    i64 2, label %block.CGrInt.2257
    i64 3, label %block.CGrString.2263
    i64 4, label %block.Cidr_Builtins.MkPair.2269
    i64 5, label %"block.Cidr_Data.Vect.::.2277"
    i64 6, label %block.Cidr_Prelude.Bool.False.2285
    i64 7, label %block.Cidr_Prelude.Bool.True.2289
    i64 8, label %"block.Cidr_Prelude.List.::.2293"
    i64 9, label %block.Cidr_Prelude.List.Nil.2301
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.2305"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.2315"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.2321"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.2329"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2337"
  ]

block.CErased.2247:                               ; preds = %idr_Main.main.entry
  %src.2248 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2249 = insertvalue <{ i64 }> undef, i64 %src.2248, 0
  %ptr_CErased.2250 = bitcast i64* %new_node_ptr.2245 to <{ i64 }>*
  store <{ i64 }> %dst.2249, <{ i64 }>* %ptr_CErased.2250, align 1
  br label %block.exit.2343

block.CGrFloat.2251:                              ; preds = %idr_Main.main.entry
  %src.2252 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2253 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.2252, 0
  %src.2254 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 1, 0
  %dst.2255 = insertvalue <{ i64, [1 x float] }> %dst.2253, float %src.2254, 1, 0
  %ptr_CGrFloat.2256 = bitcast i64* %new_node_ptr.2245 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.2255, <{ i64, [1 x float] }>* %ptr_CGrFloat.2256, align 1
  br label %block.exit.2343

block.CGrInt.2257:                                ; preds = %idr_Main.main.entry
  %src.2258 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2259 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.2258, 0
  %src.2260 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 2, 0
  %dst.2261 = insertvalue <{ i64, [1 x i64] }> %dst.2259, i64 %src.2260, 1, 0
  %ptr_CGrInt.2262 = bitcast i64* %new_node_ptr.2245 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.2261, <{ i64, [1 x i64] }>* %ptr_CGrInt.2262, align 1
  br label %block.exit.2343

block.CGrString.2263:                             ; preds = %idr_Main.main.entry
  %src.2264 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2265 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.2264, 0
  %src.2266 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 3, 0
  %dst.2267 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.2265, { i8*, i64 }* %src.2266, 1, 0
  %ptr_CGrString.2268 = bitcast i64* %new_node_ptr.2245 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.2267, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2268, align 1
  br label %block.exit.2343

block.Cidr_Builtins.MkPair.2269:                  ; preds = %idr_Main.main.entry
  %src.2270 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2271 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2270, 0
  %src.2272 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 1
  %dst.2273 = insertvalue <{ i64, [2 x i64*] }> %dst.2271, i64* %src.2272, 1, 1
  %src.2274 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2275 = insertvalue <{ i64, [2 x i64*] }> %dst.2273, i64* %src.2274, 1, 0
  %ptr_Cidr_Builtins.MkPair.2276 = bitcast i64* %new_node_ptr.2245 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2275, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.2276, align 1
  br label %block.exit.2343

"block.Cidr_Data.Vect.::.2277":                   ; preds = %idr_Main.main.entry
  %src.2278 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2279 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2278, 0
  %src.2280 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 1
  %dst.2281 = insertvalue <{ i64, [2 x i64*] }> %dst.2279, i64* %src.2280, 1, 1
  %src.2282 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2283 = insertvalue <{ i64, [2 x i64*] }> %dst.2281, i64* %src.2282, 1, 0
  %"ptr_Cidr_Data.Vect.::.2284" = bitcast i64* %new_node_ptr.2245 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2283, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2284", align 1
  br label %block.exit.2343

block.Cidr_Prelude.Bool.False.2285:               ; preds = %idr_Main.main.entry
  %src.2286 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2287 = insertvalue <{ i64 }> undef, i64 %src.2286, 0
  %ptr_Cidr_Prelude.Bool.False.2288 = bitcast i64* %new_node_ptr.2245 to <{ i64 }>*
  store <{ i64 }> %dst.2287, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.2288, align 1
  br label %block.exit.2343

block.Cidr_Prelude.Bool.True.2289:                ; preds = %idr_Main.main.entry
  %src.2290 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2291 = insertvalue <{ i64 }> undef, i64 %src.2290, 0
  %ptr_Cidr_Prelude.Bool.True.2292 = bitcast i64* %new_node_ptr.2245 to <{ i64 }>*
  store <{ i64 }> %dst.2291, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.2292, align 1
  br label %block.exit.2343

"block.Cidr_Prelude.List.::.2293":                ; preds = %idr_Main.main.entry
  %src.2294 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2295 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2294, 0
  %src.2296 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 1
  %dst.2297 = insertvalue <{ i64, [2 x i64*] }> %dst.2295, i64* %src.2296, 1, 1
  %src.2298 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2299 = insertvalue <{ i64, [2 x i64*] }> %dst.2297, i64* %src.2298, 1, 0
  %"ptr_Cidr_Prelude.List.::.2300" = bitcast i64* %new_node_ptr.2245 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2299, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.2300", align 1
  br label %block.exit.2343

block.Cidr_Prelude.List.Nil.2301:                 ; preds = %idr_Main.main.entry
  %src.2302 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2303 = insertvalue <{ i64 }> undef, i64 %src.2302, 0
  %ptr_Cidr_Prelude.List.Nil.2304 = bitcast i64* %new_node_ptr.2245 to <{ i64 }>*
  store <{ i64 }> %dst.2303, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.2304, align 1
  br label %block.exit.2343

"block.Cidr_{U_Main.{adder_0}_1}.2305":           ; preds = %idr_Main.main.entry
  %src.2306 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2307 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.2306, 0
  %src.2308 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 2
  %dst.2309 = insertvalue <{ i64, [3 x i64*] }> %dst.2307, i64* %src.2308, 1, 2
  %src.2310 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 1
  %dst.2311 = insertvalue <{ i64, [3 x i64*] }> %dst.2309, i64* %src.2310, 1, 1
  %src.2312 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2313 = insertvalue <{ i64, [3 x i64*] }> %dst.2311, i64* %src.2312, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2314" = bitcast i64* %new_node_ptr.2245 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.2313, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2314", align 1
  br label %block.exit.2343

"block.Cidr_{U_Main.{main_9}_1}.2315":            ; preds = %idr_Main.main.entry
  %src.2316 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2317 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2316, 0
  %src.2318 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2319 = insertvalue <{ i64, [1 x i64*] }> %dst.2317, i64* %src.2318, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2320" = bitcast i64* %new_node_ptr.2245 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2319, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2320", align 1
  br label %block.exit.2343

"block.Cidr_{U_Main.{printFmt_14}_1}.2321":       ; preds = %idr_Main.main.entry
  %src.2322 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2323 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2322, 0
  %src.2324 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 1
  %dst.2325 = insertvalue <{ i64, [2 x i64*] }> %dst.2323, i64* %src.2324, 1, 1
  %src.2326 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2327 = insertvalue <{ i64, [2 x i64*] }> %dst.2325, i64* %src.2326, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2328" = bitcast i64* %new_node_ptr.2245 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2327, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2328", align 1
  br label %block.exit.2343

"block.Cidr_{U_Main.{printFmt_15}_1}.2329":       ; preds = %idr_Main.main.entry
  %src.2330 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2331 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2330, 0
  %src.2332 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 1
  %dst.2333 = insertvalue <{ i64, [2 x i64*] }> %dst.2331, i64* %src.2332, 1, 1
  %src.2334 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2335 = insertvalue <{ i64, [2 x i64*] }> %dst.2333, i64* %src.2334, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2336" = bitcast i64* %new_node_ptr.2245 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2335, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2336", align 1
  br label %block.exit.2343

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2337": ; preds = %idr_Main.main.entry
  %src.2338 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 0
  %dst.2339 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2338, 0
  %src.2340 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main8_val.2241, 4, 0
  %dst.2341 = insertvalue <{ i64, [1 x i64*] }> %dst.2339, i64* %src.2340, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2342" = bitcast i64* %new_node_ptr.2245 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2341, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2342", align 1
  br label %block.exit.2343

block.exit.2343:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2337", %"block.Cidr_{U_Main.{printFmt_15}_1}.2329", %"block.Cidr_{U_Main.{printFmt_14}_1}.2321", %"block.Cidr_{U_Main.{main_9}_1}.2315", %"block.Cidr_{U_Main.{adder_0}_1}.2305", %block.Cidr_Prelude.List.Nil.2301, %"block.Cidr_Prelude.List.::.2293", %block.Cidr_Prelude.Bool.True.2289, %block.Cidr_Prelude.Bool.False.2285, %"block.Cidr_Data.Vect.::.2277", %block.Cidr_Builtins.MkPair.2269, %block.CGrString.2263, %block.CGrInt.2257, %block.CGrFloat.2251, %block.CErased.2247
  %idr_Main.main5_val_97.2344 = tail call fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %new_node_ptr.2200, i64* %new_node_ptr.2206, i64* %new_node_ptr.2212, i64* %new_node_ptr.2245, i64* %idr_Main.main0)
  %alloc_bytes.2345 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2346 = ptrtoint <{ i64 }>* %alloc_bytes.2345 to i64
  %new_node_ptr.2347 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2346 monotonic
  %new_node_ptr.2348 = inttoptr i64 %new_node_ptr.2347 to i64*
  %tag.2349 = extractvalue <{ i64 }> %idr_Main.main5_val_97.2344, 0
  %ptr_Cidr_MkUnit.2350 = bitcast i64* %new_node_ptr.2348 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main5_val_97.2344, <{ i64 }>* %ptr_Cidr_MkUnit.2350, align 1
  %alloc_bytes.2351 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2352 = ptrtoint <{ i64 }>* %alloc_bytes.2351 to i64
  %new_node_ptr.2353 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2352 monotonic
  %new_node_ptr.2354 = inttoptr i64 %new_node_ptr.2353 to i64*
  %tag.2355 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2356 = bitcast i64* %new_node_ptr.2354 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2356, align 1
  %alloc_bytes.2357 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2358 = ptrtoint <{ i64 }>* %alloc_bytes.2357 to i64
  %new_node_ptr.2359 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2358 monotonic
  %new_node_ptr.2360 = inttoptr i64 %new_node_ptr.2359 to i64*
  %tag.2361 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2362 = bitcast i64* %new_node_ptr.2360 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2362, align 1
  %alloc_bytes.2363 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2364 = ptrtoint <{ i64 }>* %alloc_bytes.2363 to i64
  %new_node_ptr.2365 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2364 monotonic
  %new_node_ptr.2366 = inttoptr i64 %new_node_ptr.2365 to i64*
  %tag.2367 = extractvalue <{ i64 }> <{ i64 24 }>, 0
  %"ptr_C\22idr_{U_Main.{main_8}_1}\22.2368" = bitcast i64* %new_node_ptr.2366 to <{ i64 }>*
  store <{ i64 }> <{ i64 24 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_8}_1}\22.2368", align 1
  %alloc_bytes.2369 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2370 = ptrtoint <{ i64 }>* %alloc_bytes.2369 to i64
  %new_node_ptr.2371 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2370 monotonic
  %new_node_ptr.2372 = inttoptr i64 %new_node_ptr.2371 to i64*
  %tag.2373 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2374 = bitcast i64* %new_node_ptr.2372 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2374, align 1
  %alloc_bytes.2375 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2376 = ptrtoint <{ i64 }>* %alloc_bytes.2375 to i64
  %new_node_ptr.2377 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2376 monotonic
  %new_node_ptr.2378 = inttoptr i64 %new_node_ptr.2377 to i64*
  %tag.2379 = extractvalue <{ i64 }> <{ i64 25 }>, 0
  %"ptr_C\22idr_{U_Main.{main_9}_2}\22.2380" = bitcast i64* %new_node_ptr.2378 to <{ i64 }>*
  store <{ i64 }> <{ i64 25 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_9}_2}\22.2380", align 1
  %node_CGrInt.2381 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 1, 1, 0
  %alloc_bytes.2382 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2383 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2382 to i64
  %new_node_ptr.2384 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2383 monotonic
  %new_node_ptr.2385 = inttoptr i64 %new_node_ptr.2384 to i64*
  %tag.2386 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2381, 0
  %ptr_CGrInt.2387 = bitcast i64* %new_node_ptr.2385 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2381, <{ i64, [1 x i64] }>* %ptr_CGrInt.2387, align 1
  %node_CGrInt.2388 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 10, 1, 0
  %alloc_bytes.2389 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2390 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2389 to i64
  %new_node_ptr.2391 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2390 monotonic
  %new_node_ptr.2392 = inttoptr i64 %new_node_ptr.2391 to i64*
  %tag.2393 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2388, 0
  %ptr_CGrInt.2394 = bitcast i64* %new_node_ptr.2392 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2388, <{ i64, [1 x i64] }>* %ptr_CGrInt.2394, align 1
  %idr_Main.main9_val_115.2395 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Main.adder(i64* %new_node_ptr.2372, i64* %new_node_ptr.2378, i64* %new_node_ptr.2385, i64* %new_node_ptr.2392)
  %alloc_bytes.2396 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.2397 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.2396 to i64
  %new_node_ptr.2398 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2397 monotonic
  %new_node_ptr.2399 = inttoptr i64 %new_node_ptr.2398 to i64*
  %tag.2400 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  switch i64 %tag.2400, label %error_block [
    i64 0, label %block.CErased.2401
    i64 1, label %block.CGrFloat.2405
    i64 2, label %block.CGrInt.2411
    i64 3, label %block.CGrString.2417
    i64 4, label %block.Cidr_Builtins.MkPair.2423
    i64 5, label %"block.Cidr_Data.Vect.::.2431"
    i64 6, label %block.Cidr_Prelude.Bool.False.2439
    i64 7, label %block.Cidr_Prelude.Bool.True.2443
    i64 8, label %"block.Cidr_Prelude.List.::.2447"
    i64 9, label %block.Cidr_Prelude.List.Nil.2455
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.2459"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.2469"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.2475"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.2483"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2491"
  ]

block.CErased.2401:                               ; preds = %block.exit.2343
  %src.2402 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2403 = insertvalue <{ i64 }> undef, i64 %src.2402, 0
  %ptr_CErased.2404 = bitcast i64* %new_node_ptr.2399 to <{ i64 }>*
  store <{ i64 }> %dst.2403, <{ i64 }>* %ptr_CErased.2404, align 1
  br label %block.exit.2497

block.CGrFloat.2405:                              ; preds = %block.exit.2343
  %src.2406 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2407 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.2406, 0
  %src.2408 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 1, 0
  %dst.2409 = insertvalue <{ i64, [1 x float] }> %dst.2407, float %src.2408, 1, 0
  %ptr_CGrFloat.2410 = bitcast i64* %new_node_ptr.2399 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.2409, <{ i64, [1 x float] }>* %ptr_CGrFloat.2410, align 1
  br label %block.exit.2497

block.CGrInt.2411:                                ; preds = %block.exit.2343
  %src.2412 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2413 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.2412, 0
  %src.2414 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 2, 0
  %dst.2415 = insertvalue <{ i64, [1 x i64] }> %dst.2413, i64 %src.2414, 1, 0
  %ptr_CGrInt.2416 = bitcast i64* %new_node_ptr.2399 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.2415, <{ i64, [1 x i64] }>* %ptr_CGrInt.2416, align 1
  br label %block.exit.2497

block.CGrString.2417:                             ; preds = %block.exit.2343
  %src.2418 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2419 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.2418, 0
  %src.2420 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 3, 0
  %dst.2421 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.2419, { i8*, i64 }* %src.2420, 1, 0
  %ptr_CGrString.2422 = bitcast i64* %new_node_ptr.2399 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.2421, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2422, align 1
  br label %block.exit.2497

block.Cidr_Builtins.MkPair.2423:                  ; preds = %block.exit.2343
  %src.2424 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2425 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2424, 0
  %src.2426 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 1
  %dst.2427 = insertvalue <{ i64, [2 x i64*] }> %dst.2425, i64* %src.2426, 1, 1
  %src.2428 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2429 = insertvalue <{ i64, [2 x i64*] }> %dst.2427, i64* %src.2428, 1, 0
  %ptr_Cidr_Builtins.MkPair.2430 = bitcast i64* %new_node_ptr.2399 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2429, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.2430, align 1
  br label %block.exit.2497

"block.Cidr_Data.Vect.::.2431":                   ; preds = %block.exit.2343
  %src.2432 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2433 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2432, 0
  %src.2434 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 1
  %dst.2435 = insertvalue <{ i64, [2 x i64*] }> %dst.2433, i64* %src.2434, 1, 1
  %src.2436 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2437 = insertvalue <{ i64, [2 x i64*] }> %dst.2435, i64* %src.2436, 1, 0
  %"ptr_Cidr_Data.Vect.::.2438" = bitcast i64* %new_node_ptr.2399 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2437, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2438", align 1
  br label %block.exit.2497

block.Cidr_Prelude.Bool.False.2439:               ; preds = %block.exit.2343
  %src.2440 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2441 = insertvalue <{ i64 }> undef, i64 %src.2440, 0
  %ptr_Cidr_Prelude.Bool.False.2442 = bitcast i64* %new_node_ptr.2399 to <{ i64 }>*
  store <{ i64 }> %dst.2441, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.2442, align 1
  br label %block.exit.2497

block.Cidr_Prelude.Bool.True.2443:                ; preds = %block.exit.2343
  %src.2444 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2445 = insertvalue <{ i64 }> undef, i64 %src.2444, 0
  %ptr_Cidr_Prelude.Bool.True.2446 = bitcast i64* %new_node_ptr.2399 to <{ i64 }>*
  store <{ i64 }> %dst.2445, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.2446, align 1
  br label %block.exit.2497

"block.Cidr_Prelude.List.::.2447":                ; preds = %block.exit.2343
  %src.2448 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2449 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2448, 0
  %src.2450 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 1
  %dst.2451 = insertvalue <{ i64, [2 x i64*] }> %dst.2449, i64* %src.2450, 1, 1
  %src.2452 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2453 = insertvalue <{ i64, [2 x i64*] }> %dst.2451, i64* %src.2452, 1, 0
  %"ptr_Cidr_Prelude.List.::.2454" = bitcast i64* %new_node_ptr.2399 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2453, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.2454", align 1
  br label %block.exit.2497

block.Cidr_Prelude.List.Nil.2455:                 ; preds = %block.exit.2343
  %src.2456 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2457 = insertvalue <{ i64 }> undef, i64 %src.2456, 0
  %ptr_Cidr_Prelude.List.Nil.2458 = bitcast i64* %new_node_ptr.2399 to <{ i64 }>*
  store <{ i64 }> %dst.2457, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.2458, align 1
  br label %block.exit.2497

"block.Cidr_{U_Main.{adder_0}_1}.2459":           ; preds = %block.exit.2343
  %src.2460 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2461 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.2460, 0
  %src.2462 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 2
  %dst.2463 = insertvalue <{ i64, [3 x i64*] }> %dst.2461, i64* %src.2462, 1, 2
  %src.2464 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 1
  %dst.2465 = insertvalue <{ i64, [3 x i64*] }> %dst.2463, i64* %src.2464, 1, 1
  %src.2466 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2467 = insertvalue <{ i64, [3 x i64*] }> %dst.2465, i64* %src.2466, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2468" = bitcast i64* %new_node_ptr.2399 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.2467, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2468", align 1
  br label %block.exit.2497

"block.Cidr_{U_Main.{main_9}_1}.2469":            ; preds = %block.exit.2343
  %src.2470 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2471 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2470, 0
  %src.2472 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2473 = insertvalue <{ i64, [1 x i64*] }> %dst.2471, i64* %src.2472, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2474" = bitcast i64* %new_node_ptr.2399 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2473, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2474", align 1
  br label %block.exit.2497

"block.Cidr_{U_Main.{printFmt_14}_1}.2475":       ; preds = %block.exit.2343
  %src.2476 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2477 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2476, 0
  %src.2478 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 1
  %dst.2479 = insertvalue <{ i64, [2 x i64*] }> %dst.2477, i64* %src.2478, 1, 1
  %src.2480 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2481 = insertvalue <{ i64, [2 x i64*] }> %dst.2479, i64* %src.2480, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2482" = bitcast i64* %new_node_ptr.2399 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2481, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2482", align 1
  br label %block.exit.2497

"block.Cidr_{U_Main.{printFmt_15}_1}.2483":       ; preds = %block.exit.2343
  %src.2484 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2485 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2484, 0
  %src.2486 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 1
  %dst.2487 = insertvalue <{ i64, [2 x i64*] }> %dst.2485, i64* %src.2486, 1, 1
  %src.2488 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2489 = insertvalue <{ i64, [2 x i64*] }> %dst.2487, i64* %src.2488, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2490" = bitcast i64* %new_node_ptr.2399 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2489, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2490", align 1
  br label %block.exit.2497

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2491": ; preds = %block.exit.2343
  %src.2492 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 0
  %dst.2493 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2492, 0
  %src.2494 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_115.2395, 4, 0
  %dst.2495 = insertvalue <{ i64, [1 x i64*] }> %dst.2493, i64* %src.2494, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2496" = bitcast i64* %new_node_ptr.2399 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2495, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2496", align 1
  br label %block.exit.2497

block.exit.2497:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2491", %"block.Cidr_{U_Main.{printFmt_15}_1}.2483", %"block.Cidr_{U_Main.{printFmt_14}_1}.2475", %"block.Cidr_{U_Main.{main_9}_1}.2469", %"block.Cidr_{U_Main.{adder_0}_1}.2459", %block.Cidr_Prelude.List.Nil.2455, %"block.Cidr_Prelude.List.::.2447", %block.Cidr_Prelude.Bool.True.2443, %block.Cidr_Prelude.Bool.False.2439, %"block.Cidr_Data.Vect.::.2431", %block.Cidr_Builtins.MkPair.2423, %block.CGrString.2417, %block.CGrInt.2411, %block.CGrFloat.2405, %block.CErased.2401
  %node_CGrInt.2498 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 15, 1, 0
  %alloc_bytes.2499 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2500 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2499 to i64
  %new_node_ptr.2501 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2500 monotonic
  %new_node_ptr.2502 = inttoptr i64 %new_node_ptr.2501 to i64*
  %tag.2503 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2498, 0
  %ptr_CGrInt.2504 = bitcast i64* %new_node_ptr.2502 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2498, <{ i64, [1 x i64] }>* %ptr_CGrInt.2504, align 1
  %idr_Main.main9_val_114.2505 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.2399, i64* %new_node_ptr.2502)
  %alloc_bytes.2506 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.2507 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.2506 to i64
  %new_node_ptr.2508 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2507 monotonic
  %new_node_ptr.2509 = inttoptr i64 %new_node_ptr.2508 to i64*
  %tag.2510 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  switch i64 %tag.2510, label %error_block [
    i64 0, label %block.CErased.2511
    i64 1, label %block.CGrFloat.2515
    i64 2, label %block.CGrInt.2521
    i64 3, label %block.CGrString.2527
    i64 4, label %block.Cidr_Builtins.MkPair.2533
    i64 5, label %"block.Cidr_Data.Vect.::.2541"
    i64 6, label %block.Cidr_Prelude.Bool.False.2549
    i64 7, label %block.Cidr_Prelude.Bool.True.2553
    i64 8, label %"block.Cidr_Prelude.List.::.2557"
    i64 9, label %block.Cidr_Prelude.List.Nil.2565
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.2569"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.2579"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.2585"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.2593"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2601"
  ]

block.CErased.2511:                               ; preds = %block.exit.2497
  %src.2512 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2513 = insertvalue <{ i64 }> undef, i64 %src.2512, 0
  %ptr_CErased.2514 = bitcast i64* %new_node_ptr.2509 to <{ i64 }>*
  store <{ i64 }> %dst.2513, <{ i64 }>* %ptr_CErased.2514, align 1
  br label %block.exit.2607

block.CGrFloat.2515:                              ; preds = %block.exit.2497
  %src.2516 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2517 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.2516, 0
  %src.2518 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 1, 0
  %dst.2519 = insertvalue <{ i64, [1 x float] }> %dst.2517, float %src.2518, 1, 0
  %ptr_CGrFloat.2520 = bitcast i64* %new_node_ptr.2509 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.2519, <{ i64, [1 x float] }>* %ptr_CGrFloat.2520, align 1
  br label %block.exit.2607

block.CGrInt.2521:                                ; preds = %block.exit.2497
  %src.2522 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2523 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.2522, 0
  %src.2524 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 2, 0
  %dst.2525 = insertvalue <{ i64, [1 x i64] }> %dst.2523, i64 %src.2524, 1, 0
  %ptr_CGrInt.2526 = bitcast i64* %new_node_ptr.2509 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.2525, <{ i64, [1 x i64] }>* %ptr_CGrInt.2526, align 1
  br label %block.exit.2607

block.CGrString.2527:                             ; preds = %block.exit.2497
  %src.2528 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2529 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.2528, 0
  %src.2530 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 3, 0
  %dst.2531 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.2529, { i8*, i64 }* %src.2530, 1, 0
  %ptr_CGrString.2532 = bitcast i64* %new_node_ptr.2509 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.2531, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2532, align 1
  br label %block.exit.2607

block.Cidr_Builtins.MkPair.2533:                  ; preds = %block.exit.2497
  %src.2534 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2535 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2534, 0
  %src.2536 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 1
  %dst.2537 = insertvalue <{ i64, [2 x i64*] }> %dst.2535, i64* %src.2536, 1, 1
  %src.2538 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2539 = insertvalue <{ i64, [2 x i64*] }> %dst.2537, i64* %src.2538, 1, 0
  %ptr_Cidr_Builtins.MkPair.2540 = bitcast i64* %new_node_ptr.2509 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2539, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.2540, align 1
  br label %block.exit.2607

"block.Cidr_Data.Vect.::.2541":                   ; preds = %block.exit.2497
  %src.2542 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2543 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2542, 0
  %src.2544 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 1
  %dst.2545 = insertvalue <{ i64, [2 x i64*] }> %dst.2543, i64* %src.2544, 1, 1
  %src.2546 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2547 = insertvalue <{ i64, [2 x i64*] }> %dst.2545, i64* %src.2546, 1, 0
  %"ptr_Cidr_Data.Vect.::.2548" = bitcast i64* %new_node_ptr.2509 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2547, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2548", align 1
  br label %block.exit.2607

block.Cidr_Prelude.Bool.False.2549:               ; preds = %block.exit.2497
  %src.2550 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2551 = insertvalue <{ i64 }> undef, i64 %src.2550, 0
  %ptr_Cidr_Prelude.Bool.False.2552 = bitcast i64* %new_node_ptr.2509 to <{ i64 }>*
  store <{ i64 }> %dst.2551, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.2552, align 1
  br label %block.exit.2607

block.Cidr_Prelude.Bool.True.2553:                ; preds = %block.exit.2497
  %src.2554 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2555 = insertvalue <{ i64 }> undef, i64 %src.2554, 0
  %ptr_Cidr_Prelude.Bool.True.2556 = bitcast i64* %new_node_ptr.2509 to <{ i64 }>*
  store <{ i64 }> %dst.2555, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.2556, align 1
  br label %block.exit.2607

"block.Cidr_Prelude.List.::.2557":                ; preds = %block.exit.2497
  %src.2558 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2559 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2558, 0
  %src.2560 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 1
  %dst.2561 = insertvalue <{ i64, [2 x i64*] }> %dst.2559, i64* %src.2560, 1, 1
  %src.2562 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2563 = insertvalue <{ i64, [2 x i64*] }> %dst.2561, i64* %src.2562, 1, 0
  %"ptr_Cidr_Prelude.List.::.2564" = bitcast i64* %new_node_ptr.2509 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2563, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.2564", align 1
  br label %block.exit.2607

block.Cidr_Prelude.List.Nil.2565:                 ; preds = %block.exit.2497
  %src.2566 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2567 = insertvalue <{ i64 }> undef, i64 %src.2566, 0
  %ptr_Cidr_Prelude.List.Nil.2568 = bitcast i64* %new_node_ptr.2509 to <{ i64 }>*
  store <{ i64 }> %dst.2567, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.2568, align 1
  br label %block.exit.2607

"block.Cidr_{U_Main.{adder_0}_1}.2569":           ; preds = %block.exit.2497
  %src.2570 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2571 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.2570, 0
  %src.2572 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 2
  %dst.2573 = insertvalue <{ i64, [3 x i64*] }> %dst.2571, i64* %src.2572, 1, 2
  %src.2574 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 1
  %dst.2575 = insertvalue <{ i64, [3 x i64*] }> %dst.2573, i64* %src.2574, 1, 1
  %src.2576 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2577 = insertvalue <{ i64, [3 x i64*] }> %dst.2575, i64* %src.2576, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2578" = bitcast i64* %new_node_ptr.2509 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.2577, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2578", align 1
  br label %block.exit.2607

"block.Cidr_{U_Main.{main_9}_1}.2579":            ; preds = %block.exit.2497
  %src.2580 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2581 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2580, 0
  %src.2582 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2583 = insertvalue <{ i64, [1 x i64*] }> %dst.2581, i64* %src.2582, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2584" = bitcast i64* %new_node_ptr.2509 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2583, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2584", align 1
  br label %block.exit.2607

"block.Cidr_{U_Main.{printFmt_14}_1}.2585":       ; preds = %block.exit.2497
  %src.2586 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2587 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2586, 0
  %src.2588 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 1
  %dst.2589 = insertvalue <{ i64, [2 x i64*] }> %dst.2587, i64* %src.2588, 1, 1
  %src.2590 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2591 = insertvalue <{ i64, [2 x i64*] }> %dst.2589, i64* %src.2590, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2592" = bitcast i64* %new_node_ptr.2509 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2591, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2592", align 1
  br label %block.exit.2607

"block.Cidr_{U_Main.{printFmt_15}_1}.2593":       ; preds = %block.exit.2497
  %src.2594 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2595 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2594, 0
  %src.2596 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 1
  %dst.2597 = insertvalue <{ i64, [2 x i64*] }> %dst.2595, i64* %src.2596, 1, 1
  %src.2598 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2599 = insertvalue <{ i64, [2 x i64*] }> %dst.2597, i64* %src.2598, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2600" = bitcast i64* %new_node_ptr.2509 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2599, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2600", align 1
  br label %block.exit.2607

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2601": ; preds = %block.exit.2497
  %src.2602 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 0
  %dst.2603 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2602, 0
  %src.2604 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_114.2505, 4, 0
  %dst.2605 = insertvalue <{ i64, [1 x i64*] }> %dst.2603, i64* %src.2604, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2606" = bitcast i64* %new_node_ptr.2509 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2605, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2606", align 1
  br label %block.exit.2607

block.exit.2607:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2601", %"block.Cidr_{U_Main.{printFmt_15}_1}.2593", %"block.Cidr_{U_Main.{printFmt_14}_1}.2585", %"block.Cidr_{U_Main.{main_9}_1}.2579", %"block.Cidr_{U_Main.{adder_0}_1}.2569", %block.Cidr_Prelude.List.Nil.2565, %"block.Cidr_Prelude.List.::.2557", %block.Cidr_Prelude.Bool.True.2553, %block.Cidr_Prelude.Bool.False.2549, %"block.Cidr_Data.Vect.::.2541", %block.Cidr_Builtins.MkPair.2533, %block.CGrString.2527, %block.CGrInt.2521, %block.CGrFloat.2515, %block.CErased.2511
  %idr_Main.main6_val_107.2608 = tail call fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %new_node_ptr.2354, i64* %new_node_ptr.2360, i64* %new_node_ptr.2366, i64* %new_node_ptr.2509, i64* %idr_Main.main0)
  %alloc_bytes.2609 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2610 = ptrtoint <{ i64 }>* %alloc_bytes.2609 to i64
  %new_node_ptr.2611 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2610 monotonic
  %new_node_ptr.2612 = inttoptr i64 %new_node_ptr.2611 to i64*
  %tag.2613 = extractvalue <{ i64 }> %idr_Main.main6_val_107.2608, 0
  %ptr_Cidr_MkUnit.2614 = bitcast i64* %new_node_ptr.2612 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main6_val_107.2608, <{ i64 }>* %ptr_Cidr_MkUnit.2614, align 1
  %alloc_bytes.2615 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2616 = ptrtoint <{ i64 }>* %alloc_bytes.2615 to i64
  %new_node_ptr.2617 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2616 monotonic
  %new_node_ptr.2618 = inttoptr i64 %new_node_ptr.2617 to i64*
  %tag.2619 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2620 = bitcast i64* %new_node_ptr.2618 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2620, align 1
  %alloc_bytes.2621 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2622 = ptrtoint <{ i64 }>* %alloc_bytes.2621 to i64
  %new_node_ptr.2623 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2622 monotonic
  %new_node_ptr.2624 = inttoptr i64 %new_node_ptr.2623 to i64*
  %tag.2625 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2626 = bitcast i64* %new_node_ptr.2624 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2626, align 1
  %alloc_bytes.2627 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2628 = ptrtoint <{ i64 }>* %alloc_bytes.2627 to i64
  %new_node_ptr.2629 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2628 monotonic
  %new_node_ptr.2630 = inttoptr i64 %new_node_ptr.2629 to i64*
  %tag.2631 = extractvalue <{ i64 }> <{ i64 24 }>, 0
  %"ptr_C\22idr_{U_Main.{main_8}_1}\22.2632" = bitcast i64* %new_node_ptr.2630 to <{ i64 }>*
  store <{ i64 }> <{ i64 24 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_8}_1}\22.2632", align 1
  %alloc_bytes.2633 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2634 = ptrtoint <{ i64 }>* %alloc_bytes.2633 to i64
  %new_node_ptr.2635 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2634 monotonic
  %new_node_ptr.2636 = inttoptr i64 %new_node_ptr.2635 to i64*
  %tag.2637 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.2638 = bitcast i64* %new_node_ptr.2636 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.2638, align 1
  %alloc_bytes.2639 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2640 = ptrtoint <{ i64 }>* %alloc_bytes.2639 to i64
  %new_node_ptr.2641 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2640 monotonic
  %new_node_ptr.2642 = inttoptr i64 %new_node_ptr.2641 to i64*
  %tag.2643 = extractvalue <{ i64 }> <{ i64 25 }>, 0
  %"ptr_C\22idr_{U_Main.{main_9}_2}\22.2644" = bitcast i64* %new_node_ptr.2642 to <{ i64 }>*
  store <{ i64 }> <{ i64 25 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_9}_2}\22.2644", align 1
  %node_CGrInt.2645 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 2, 1, 0
  %alloc_bytes.2646 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2647 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2646 to i64
  %new_node_ptr.2648 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2647 monotonic
  %new_node_ptr.2649 = inttoptr i64 %new_node_ptr.2648 to i64*
  %tag.2650 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2645, 0
  %ptr_CGrInt.2651 = bitcast i64* %new_node_ptr.2649 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2645, <{ i64, [1 x i64] }>* %ptr_CGrInt.2651, align 1
  %node_CGrInt.2652 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 1, 1, 0
  %alloc_bytes.2653 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2654 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2653 to i64
  %new_node_ptr.2655 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2654 monotonic
  %new_node_ptr.2656 = inttoptr i64 %new_node_ptr.2655 to i64*
  %tag.2657 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2652, 0
  %ptr_CGrInt.2658 = bitcast i64* %new_node_ptr.2656 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2652, <{ i64, [1 x i64] }>* %ptr_CGrInt.2658, align 1
  %idr_Main.main10_val_136.2659 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Main.adder(i64* %new_node_ptr.2636, i64* %new_node_ptr.2642, i64* %new_node_ptr.2649, i64* %new_node_ptr.2656)
  %alloc_bytes.2660 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.2661 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.2660 to i64
  %new_node_ptr.2662 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2661 monotonic
  %new_node_ptr.2663 = inttoptr i64 %new_node_ptr.2662 to i64*
  %tag.2664 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  switch i64 %tag.2664, label %error_block [
    i64 0, label %block.CErased.2665
    i64 1, label %block.CGrFloat.2669
    i64 2, label %block.CGrInt.2675
    i64 3, label %block.CGrString.2681
    i64 4, label %block.Cidr_Builtins.MkPair.2687
    i64 5, label %"block.Cidr_Data.Vect.::.2695"
    i64 6, label %block.Cidr_Prelude.Bool.False.2703
    i64 7, label %block.Cidr_Prelude.Bool.True.2707
    i64 8, label %"block.Cidr_Prelude.List.::.2711"
    i64 9, label %block.Cidr_Prelude.List.Nil.2719
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.2723"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.2733"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.2739"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.2747"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2755"
  ]

block.CErased.2665:                               ; preds = %block.exit.2607
  %src.2666 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2667 = insertvalue <{ i64 }> undef, i64 %src.2666, 0
  %ptr_CErased.2668 = bitcast i64* %new_node_ptr.2663 to <{ i64 }>*
  store <{ i64 }> %dst.2667, <{ i64 }>* %ptr_CErased.2668, align 1
  br label %block.exit.2761

block.CGrFloat.2669:                              ; preds = %block.exit.2607
  %src.2670 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2671 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.2670, 0
  %src.2672 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 1, 0
  %dst.2673 = insertvalue <{ i64, [1 x float] }> %dst.2671, float %src.2672, 1, 0
  %ptr_CGrFloat.2674 = bitcast i64* %new_node_ptr.2663 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.2673, <{ i64, [1 x float] }>* %ptr_CGrFloat.2674, align 1
  br label %block.exit.2761

block.CGrInt.2675:                                ; preds = %block.exit.2607
  %src.2676 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2677 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.2676, 0
  %src.2678 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 2, 0
  %dst.2679 = insertvalue <{ i64, [1 x i64] }> %dst.2677, i64 %src.2678, 1, 0
  %ptr_CGrInt.2680 = bitcast i64* %new_node_ptr.2663 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.2679, <{ i64, [1 x i64] }>* %ptr_CGrInt.2680, align 1
  br label %block.exit.2761

block.CGrString.2681:                             ; preds = %block.exit.2607
  %src.2682 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2683 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.2682, 0
  %src.2684 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 3, 0
  %dst.2685 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.2683, { i8*, i64 }* %src.2684, 1, 0
  %ptr_CGrString.2686 = bitcast i64* %new_node_ptr.2663 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.2685, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2686, align 1
  br label %block.exit.2761

block.Cidr_Builtins.MkPair.2687:                  ; preds = %block.exit.2607
  %src.2688 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2689 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2688, 0
  %src.2690 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 1
  %dst.2691 = insertvalue <{ i64, [2 x i64*] }> %dst.2689, i64* %src.2690, 1, 1
  %src.2692 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2693 = insertvalue <{ i64, [2 x i64*] }> %dst.2691, i64* %src.2692, 1, 0
  %ptr_Cidr_Builtins.MkPair.2694 = bitcast i64* %new_node_ptr.2663 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2693, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.2694, align 1
  br label %block.exit.2761

"block.Cidr_Data.Vect.::.2695":                   ; preds = %block.exit.2607
  %src.2696 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2697 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2696, 0
  %src.2698 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 1
  %dst.2699 = insertvalue <{ i64, [2 x i64*] }> %dst.2697, i64* %src.2698, 1, 1
  %src.2700 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2701 = insertvalue <{ i64, [2 x i64*] }> %dst.2699, i64* %src.2700, 1, 0
  %"ptr_Cidr_Data.Vect.::.2702" = bitcast i64* %new_node_ptr.2663 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2701, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2702", align 1
  br label %block.exit.2761

block.Cidr_Prelude.Bool.False.2703:               ; preds = %block.exit.2607
  %src.2704 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2705 = insertvalue <{ i64 }> undef, i64 %src.2704, 0
  %ptr_Cidr_Prelude.Bool.False.2706 = bitcast i64* %new_node_ptr.2663 to <{ i64 }>*
  store <{ i64 }> %dst.2705, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.2706, align 1
  br label %block.exit.2761

block.Cidr_Prelude.Bool.True.2707:                ; preds = %block.exit.2607
  %src.2708 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2709 = insertvalue <{ i64 }> undef, i64 %src.2708, 0
  %ptr_Cidr_Prelude.Bool.True.2710 = bitcast i64* %new_node_ptr.2663 to <{ i64 }>*
  store <{ i64 }> %dst.2709, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.2710, align 1
  br label %block.exit.2761

"block.Cidr_Prelude.List.::.2711":                ; preds = %block.exit.2607
  %src.2712 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2713 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2712, 0
  %src.2714 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 1
  %dst.2715 = insertvalue <{ i64, [2 x i64*] }> %dst.2713, i64* %src.2714, 1, 1
  %src.2716 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2717 = insertvalue <{ i64, [2 x i64*] }> %dst.2715, i64* %src.2716, 1, 0
  %"ptr_Cidr_Prelude.List.::.2718" = bitcast i64* %new_node_ptr.2663 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2717, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.2718", align 1
  br label %block.exit.2761

block.Cidr_Prelude.List.Nil.2719:                 ; preds = %block.exit.2607
  %src.2720 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2721 = insertvalue <{ i64 }> undef, i64 %src.2720, 0
  %ptr_Cidr_Prelude.List.Nil.2722 = bitcast i64* %new_node_ptr.2663 to <{ i64 }>*
  store <{ i64 }> %dst.2721, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.2722, align 1
  br label %block.exit.2761

"block.Cidr_{U_Main.{adder_0}_1}.2723":           ; preds = %block.exit.2607
  %src.2724 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2725 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.2724, 0
  %src.2726 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 2
  %dst.2727 = insertvalue <{ i64, [3 x i64*] }> %dst.2725, i64* %src.2726, 1, 2
  %src.2728 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 1
  %dst.2729 = insertvalue <{ i64, [3 x i64*] }> %dst.2727, i64* %src.2728, 1, 1
  %src.2730 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2731 = insertvalue <{ i64, [3 x i64*] }> %dst.2729, i64* %src.2730, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2732" = bitcast i64* %new_node_ptr.2663 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.2731, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2732", align 1
  br label %block.exit.2761

"block.Cidr_{U_Main.{main_9}_1}.2733":            ; preds = %block.exit.2607
  %src.2734 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2735 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2734, 0
  %src.2736 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2737 = insertvalue <{ i64, [1 x i64*] }> %dst.2735, i64* %src.2736, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2738" = bitcast i64* %new_node_ptr.2663 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2737, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2738", align 1
  br label %block.exit.2761

"block.Cidr_{U_Main.{printFmt_14}_1}.2739":       ; preds = %block.exit.2607
  %src.2740 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2741 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2740, 0
  %src.2742 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 1
  %dst.2743 = insertvalue <{ i64, [2 x i64*] }> %dst.2741, i64* %src.2742, 1, 1
  %src.2744 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2745 = insertvalue <{ i64, [2 x i64*] }> %dst.2743, i64* %src.2744, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2746" = bitcast i64* %new_node_ptr.2663 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2745, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2746", align 1
  br label %block.exit.2761

"block.Cidr_{U_Main.{printFmt_15}_1}.2747":       ; preds = %block.exit.2607
  %src.2748 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2749 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2748, 0
  %src.2750 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 1
  %dst.2751 = insertvalue <{ i64, [2 x i64*] }> %dst.2749, i64* %src.2750, 1, 1
  %src.2752 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2753 = insertvalue <{ i64, [2 x i64*] }> %dst.2751, i64* %src.2752, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2754" = bitcast i64* %new_node_ptr.2663 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2753, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2754", align 1
  br label %block.exit.2761

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2755": ; preds = %block.exit.2607
  %src.2756 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 0
  %dst.2757 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2756, 0
  %src.2758 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_136.2659, 4, 0
  %dst.2759 = insertvalue <{ i64, [1 x i64*] }> %dst.2757, i64* %src.2758, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2760" = bitcast i64* %new_node_ptr.2663 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2759, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2760", align 1
  br label %block.exit.2761

block.exit.2761:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2755", %"block.Cidr_{U_Main.{printFmt_15}_1}.2747", %"block.Cidr_{U_Main.{printFmt_14}_1}.2739", %"block.Cidr_{U_Main.{main_9}_1}.2733", %"block.Cidr_{U_Main.{adder_0}_1}.2723", %block.Cidr_Prelude.List.Nil.2719, %"block.Cidr_Prelude.List.::.2711", %block.Cidr_Prelude.Bool.True.2707, %block.Cidr_Prelude.Bool.False.2703, %"block.Cidr_Data.Vect.::.2695", %block.Cidr_Builtins.MkPair.2687, %block.CGrString.2681, %block.CGrInt.2675, %block.CGrFloat.2669, %block.CErased.2665
  %node_CGrInt.2762 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 4, 1, 0
  %alloc_bytes.2763 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2764 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2763 to i64
  %new_node_ptr.2765 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2764 monotonic
  %new_node_ptr.2766 = inttoptr i64 %new_node_ptr.2765 to i64*
  %tag.2767 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2762, 0
  %ptr_CGrInt.2768 = bitcast i64* %new_node_ptr.2766 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2762, <{ i64, [1 x i64] }>* %ptr_CGrInt.2768, align 1
  %idr_Main.main10_val_135.2769 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.2663, i64* %new_node_ptr.2766)
  %alloc_bytes.2770 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.2771 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.2770 to i64
  %new_node_ptr.2772 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2771 monotonic
  %new_node_ptr.2773 = inttoptr i64 %new_node_ptr.2772 to i64*
  %tag.2774 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  switch i64 %tag.2774, label %error_block [
    i64 0, label %block.CErased.2775
    i64 1, label %block.CGrFloat.2779
    i64 2, label %block.CGrInt.2785
    i64 3, label %block.CGrString.2791
    i64 4, label %block.Cidr_Builtins.MkPair.2797
    i64 5, label %"block.Cidr_Data.Vect.::.2805"
    i64 6, label %block.Cidr_Prelude.Bool.False.2813
    i64 7, label %block.Cidr_Prelude.Bool.True.2817
    i64 8, label %"block.Cidr_Prelude.List.::.2821"
    i64 9, label %block.Cidr_Prelude.List.Nil.2829
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.2833"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.2843"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.2849"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.2857"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2865"
  ]

block.CErased.2775:                               ; preds = %block.exit.2761
  %src.2776 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2777 = insertvalue <{ i64 }> undef, i64 %src.2776, 0
  %ptr_CErased.2778 = bitcast i64* %new_node_ptr.2773 to <{ i64 }>*
  store <{ i64 }> %dst.2777, <{ i64 }>* %ptr_CErased.2778, align 1
  br label %block.exit.2871

block.CGrFloat.2779:                              ; preds = %block.exit.2761
  %src.2780 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2781 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.2780, 0
  %src.2782 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 1, 0
  %dst.2783 = insertvalue <{ i64, [1 x float] }> %dst.2781, float %src.2782, 1, 0
  %ptr_CGrFloat.2784 = bitcast i64* %new_node_ptr.2773 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.2783, <{ i64, [1 x float] }>* %ptr_CGrFloat.2784, align 1
  br label %block.exit.2871

block.CGrInt.2785:                                ; preds = %block.exit.2761
  %src.2786 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2787 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.2786, 0
  %src.2788 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 2, 0
  %dst.2789 = insertvalue <{ i64, [1 x i64] }> %dst.2787, i64 %src.2788, 1, 0
  %ptr_CGrInt.2790 = bitcast i64* %new_node_ptr.2773 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.2789, <{ i64, [1 x i64] }>* %ptr_CGrInt.2790, align 1
  br label %block.exit.2871

block.CGrString.2791:                             ; preds = %block.exit.2761
  %src.2792 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2793 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.2792, 0
  %src.2794 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 3, 0
  %dst.2795 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.2793, { i8*, i64 }* %src.2794, 1, 0
  %ptr_CGrString.2796 = bitcast i64* %new_node_ptr.2773 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.2795, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2796, align 1
  br label %block.exit.2871

block.Cidr_Builtins.MkPair.2797:                  ; preds = %block.exit.2761
  %src.2798 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2799 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2798, 0
  %src.2800 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 1
  %dst.2801 = insertvalue <{ i64, [2 x i64*] }> %dst.2799, i64* %src.2800, 1, 1
  %src.2802 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2803 = insertvalue <{ i64, [2 x i64*] }> %dst.2801, i64* %src.2802, 1, 0
  %ptr_Cidr_Builtins.MkPair.2804 = bitcast i64* %new_node_ptr.2773 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2803, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.2804, align 1
  br label %block.exit.2871

"block.Cidr_Data.Vect.::.2805":                   ; preds = %block.exit.2761
  %src.2806 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2807 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2806, 0
  %src.2808 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 1
  %dst.2809 = insertvalue <{ i64, [2 x i64*] }> %dst.2807, i64* %src.2808, 1, 1
  %src.2810 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2811 = insertvalue <{ i64, [2 x i64*] }> %dst.2809, i64* %src.2810, 1, 0
  %"ptr_Cidr_Data.Vect.::.2812" = bitcast i64* %new_node_ptr.2773 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2811, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2812", align 1
  br label %block.exit.2871

block.Cidr_Prelude.Bool.False.2813:               ; preds = %block.exit.2761
  %src.2814 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2815 = insertvalue <{ i64 }> undef, i64 %src.2814, 0
  %ptr_Cidr_Prelude.Bool.False.2816 = bitcast i64* %new_node_ptr.2773 to <{ i64 }>*
  store <{ i64 }> %dst.2815, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.2816, align 1
  br label %block.exit.2871

block.Cidr_Prelude.Bool.True.2817:                ; preds = %block.exit.2761
  %src.2818 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2819 = insertvalue <{ i64 }> undef, i64 %src.2818, 0
  %ptr_Cidr_Prelude.Bool.True.2820 = bitcast i64* %new_node_ptr.2773 to <{ i64 }>*
  store <{ i64 }> %dst.2819, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.2820, align 1
  br label %block.exit.2871

"block.Cidr_Prelude.List.::.2821":                ; preds = %block.exit.2761
  %src.2822 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2823 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2822, 0
  %src.2824 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 1
  %dst.2825 = insertvalue <{ i64, [2 x i64*] }> %dst.2823, i64* %src.2824, 1, 1
  %src.2826 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2827 = insertvalue <{ i64, [2 x i64*] }> %dst.2825, i64* %src.2826, 1, 0
  %"ptr_Cidr_Prelude.List.::.2828" = bitcast i64* %new_node_ptr.2773 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2827, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.2828", align 1
  br label %block.exit.2871

block.Cidr_Prelude.List.Nil.2829:                 ; preds = %block.exit.2761
  %src.2830 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2831 = insertvalue <{ i64 }> undef, i64 %src.2830, 0
  %ptr_Cidr_Prelude.List.Nil.2832 = bitcast i64* %new_node_ptr.2773 to <{ i64 }>*
  store <{ i64 }> %dst.2831, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.2832, align 1
  br label %block.exit.2871

"block.Cidr_{U_Main.{adder_0}_1}.2833":           ; preds = %block.exit.2761
  %src.2834 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2835 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.2834, 0
  %src.2836 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 2
  %dst.2837 = insertvalue <{ i64, [3 x i64*] }> %dst.2835, i64* %src.2836, 1, 2
  %src.2838 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 1
  %dst.2839 = insertvalue <{ i64, [3 x i64*] }> %dst.2837, i64* %src.2838, 1, 1
  %src.2840 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2841 = insertvalue <{ i64, [3 x i64*] }> %dst.2839, i64* %src.2840, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2842" = bitcast i64* %new_node_ptr.2773 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.2841, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2842", align 1
  br label %block.exit.2871

"block.Cidr_{U_Main.{main_9}_1}.2843":            ; preds = %block.exit.2761
  %src.2844 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2845 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2844, 0
  %src.2846 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2847 = insertvalue <{ i64, [1 x i64*] }> %dst.2845, i64* %src.2846, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2848" = bitcast i64* %new_node_ptr.2773 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2847, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2848", align 1
  br label %block.exit.2871

"block.Cidr_{U_Main.{printFmt_14}_1}.2849":       ; preds = %block.exit.2761
  %src.2850 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2851 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2850, 0
  %src.2852 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 1
  %dst.2853 = insertvalue <{ i64, [2 x i64*] }> %dst.2851, i64* %src.2852, 1, 1
  %src.2854 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2855 = insertvalue <{ i64, [2 x i64*] }> %dst.2853, i64* %src.2854, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2856" = bitcast i64* %new_node_ptr.2773 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2855, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2856", align 1
  br label %block.exit.2871

"block.Cidr_{U_Main.{printFmt_15}_1}.2857":       ; preds = %block.exit.2761
  %src.2858 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2859 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2858, 0
  %src.2860 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 1
  %dst.2861 = insertvalue <{ i64, [2 x i64*] }> %dst.2859, i64* %src.2860, 1, 1
  %src.2862 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2863 = insertvalue <{ i64, [2 x i64*] }> %dst.2861, i64* %src.2862, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2864" = bitcast i64* %new_node_ptr.2773 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2863, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2864", align 1
  br label %block.exit.2871

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2865": ; preds = %block.exit.2761
  %src.2866 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 0
  %dst.2867 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2866, 0
  %src.2868 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_135.2769, 4, 0
  %dst.2869 = insertvalue <{ i64, [1 x i64*] }> %dst.2867, i64* %src.2868, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2870" = bitcast i64* %new_node_ptr.2773 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2869, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2870", align 1
  br label %block.exit.2871

block.exit.2871:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2865", %"block.Cidr_{U_Main.{printFmt_15}_1}.2857", %"block.Cidr_{U_Main.{printFmt_14}_1}.2849", %"block.Cidr_{U_Main.{main_9}_1}.2843", %"block.Cidr_{U_Main.{adder_0}_1}.2833", %block.Cidr_Prelude.List.Nil.2829, %"block.Cidr_Prelude.List.::.2821", %block.Cidr_Prelude.Bool.True.2817, %block.Cidr_Prelude.Bool.False.2813, %"block.Cidr_Data.Vect.::.2805", %block.Cidr_Builtins.MkPair.2797, %block.CGrString.2791, %block.CGrInt.2785, %block.CGrFloat.2779, %block.CErased.2775
  %node_CGrInt.2872 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 7, 1, 0
  %alloc_bytes.2873 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.2874 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.2873 to i64
  %new_node_ptr.2875 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2874 monotonic
  %new_node_ptr.2876 = inttoptr i64 %new_node_ptr.2875 to i64*
  %tag.2877 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.2872, 0
  %ptr_CGrInt.2878 = bitcast i64* %new_node_ptr.2876 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.2872, <{ i64, [1 x i64] }>* %ptr_CGrInt.2878, align 1
  %idr_Main.main10_val_134.2879 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.2773, i64* %new_node_ptr.2876)
  %alloc_bytes.2880 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.2881 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.2880 to i64
  %new_node_ptr.2882 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2881 monotonic
  %new_node_ptr.2883 = inttoptr i64 %new_node_ptr.2882 to i64*
  %tag.2884 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  switch i64 %tag.2884, label %error_block [
    i64 0, label %block.CErased.2885
    i64 1, label %block.CGrFloat.2889
    i64 2, label %block.CGrInt.2895
    i64 3, label %block.CGrString.2901
    i64 4, label %block.Cidr_Builtins.MkPair.2907
    i64 5, label %"block.Cidr_Data.Vect.::.2915"
    i64 6, label %block.Cidr_Prelude.Bool.False.2923
    i64 7, label %block.Cidr_Prelude.Bool.True.2927
    i64 8, label %"block.Cidr_Prelude.List.::.2931"
    i64 9, label %block.Cidr_Prelude.List.Nil.2939
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.2943"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.2953"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.2959"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.2967"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2975"
  ]

block.CErased.2885:                               ; preds = %block.exit.2871
  %src.2886 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2887 = insertvalue <{ i64 }> undef, i64 %src.2886, 0
  %ptr_CErased.2888 = bitcast i64* %new_node_ptr.2883 to <{ i64 }>*
  store <{ i64 }> %dst.2887, <{ i64 }>* %ptr_CErased.2888, align 1
  br label %block.exit.2981

block.CGrFloat.2889:                              ; preds = %block.exit.2871
  %src.2890 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2891 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.2890, 0
  %src.2892 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 1, 0
  %dst.2893 = insertvalue <{ i64, [1 x float] }> %dst.2891, float %src.2892, 1, 0
  %ptr_CGrFloat.2894 = bitcast i64* %new_node_ptr.2883 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.2893, <{ i64, [1 x float] }>* %ptr_CGrFloat.2894, align 1
  br label %block.exit.2981

block.CGrInt.2895:                                ; preds = %block.exit.2871
  %src.2896 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2897 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.2896, 0
  %src.2898 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 2, 0
  %dst.2899 = insertvalue <{ i64, [1 x i64] }> %dst.2897, i64 %src.2898, 1, 0
  %ptr_CGrInt.2900 = bitcast i64* %new_node_ptr.2883 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.2899, <{ i64, [1 x i64] }>* %ptr_CGrInt.2900, align 1
  br label %block.exit.2981

block.CGrString.2901:                             ; preds = %block.exit.2871
  %src.2902 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2903 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.2902, 0
  %src.2904 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 3, 0
  %dst.2905 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.2903, { i8*, i64 }* %src.2904, 1, 0
  %ptr_CGrString.2906 = bitcast i64* %new_node_ptr.2883 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.2905, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.2906, align 1
  br label %block.exit.2981

block.Cidr_Builtins.MkPair.2907:                  ; preds = %block.exit.2871
  %src.2908 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2909 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2908, 0
  %src.2910 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 1
  %dst.2911 = insertvalue <{ i64, [2 x i64*] }> %dst.2909, i64* %src.2910, 1, 1
  %src.2912 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2913 = insertvalue <{ i64, [2 x i64*] }> %dst.2911, i64* %src.2912, 1, 0
  %ptr_Cidr_Builtins.MkPair.2914 = bitcast i64* %new_node_ptr.2883 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2913, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.2914, align 1
  br label %block.exit.2981

"block.Cidr_Data.Vect.::.2915":                   ; preds = %block.exit.2871
  %src.2916 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2917 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2916, 0
  %src.2918 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 1
  %dst.2919 = insertvalue <{ i64, [2 x i64*] }> %dst.2917, i64* %src.2918, 1, 1
  %src.2920 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2921 = insertvalue <{ i64, [2 x i64*] }> %dst.2919, i64* %src.2920, 1, 0
  %"ptr_Cidr_Data.Vect.::.2922" = bitcast i64* %new_node_ptr.2883 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2921, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.2922", align 1
  br label %block.exit.2981

block.Cidr_Prelude.Bool.False.2923:               ; preds = %block.exit.2871
  %src.2924 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2925 = insertvalue <{ i64 }> undef, i64 %src.2924, 0
  %ptr_Cidr_Prelude.Bool.False.2926 = bitcast i64* %new_node_ptr.2883 to <{ i64 }>*
  store <{ i64 }> %dst.2925, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.2926, align 1
  br label %block.exit.2981

block.Cidr_Prelude.Bool.True.2927:                ; preds = %block.exit.2871
  %src.2928 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2929 = insertvalue <{ i64 }> undef, i64 %src.2928, 0
  %ptr_Cidr_Prelude.Bool.True.2930 = bitcast i64* %new_node_ptr.2883 to <{ i64 }>*
  store <{ i64 }> %dst.2929, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.2930, align 1
  br label %block.exit.2981

"block.Cidr_Prelude.List.::.2931":                ; preds = %block.exit.2871
  %src.2932 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2933 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2932, 0
  %src.2934 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 1
  %dst.2935 = insertvalue <{ i64, [2 x i64*] }> %dst.2933, i64* %src.2934, 1, 1
  %src.2936 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2937 = insertvalue <{ i64, [2 x i64*] }> %dst.2935, i64* %src.2936, 1, 0
  %"ptr_Cidr_Prelude.List.::.2938" = bitcast i64* %new_node_ptr.2883 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2937, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.2938", align 1
  br label %block.exit.2981

block.Cidr_Prelude.List.Nil.2939:                 ; preds = %block.exit.2871
  %src.2940 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2941 = insertvalue <{ i64 }> undef, i64 %src.2940, 0
  %ptr_Cidr_Prelude.List.Nil.2942 = bitcast i64* %new_node_ptr.2883 to <{ i64 }>*
  store <{ i64 }> %dst.2941, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.2942, align 1
  br label %block.exit.2981

"block.Cidr_{U_Main.{adder_0}_1}.2943":           ; preds = %block.exit.2871
  %src.2944 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2945 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.2944, 0
  %src.2946 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 2
  %dst.2947 = insertvalue <{ i64, [3 x i64*] }> %dst.2945, i64* %src.2946, 1, 2
  %src.2948 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 1
  %dst.2949 = insertvalue <{ i64, [3 x i64*] }> %dst.2947, i64* %src.2948, 1, 1
  %src.2950 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2951 = insertvalue <{ i64, [3 x i64*] }> %dst.2949, i64* %src.2950, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2952" = bitcast i64* %new_node_ptr.2883 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.2951, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.2952", align 1
  br label %block.exit.2981

"block.Cidr_{U_Main.{main_9}_1}.2953":            ; preds = %block.exit.2871
  %src.2954 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2955 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2954, 0
  %src.2956 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2957 = insertvalue <{ i64, [1 x i64*] }> %dst.2955, i64* %src.2956, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2958" = bitcast i64* %new_node_ptr.2883 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2957, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.2958", align 1
  br label %block.exit.2981

"block.Cidr_{U_Main.{printFmt_14}_1}.2959":       ; preds = %block.exit.2871
  %src.2960 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2961 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2960, 0
  %src.2962 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 1
  %dst.2963 = insertvalue <{ i64, [2 x i64*] }> %dst.2961, i64* %src.2962, 1, 1
  %src.2964 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2965 = insertvalue <{ i64, [2 x i64*] }> %dst.2963, i64* %src.2964, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2966" = bitcast i64* %new_node_ptr.2883 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2965, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.2966", align 1
  br label %block.exit.2981

"block.Cidr_{U_Main.{printFmt_15}_1}.2967":       ; preds = %block.exit.2871
  %src.2968 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2969 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.2968, 0
  %src.2970 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 1
  %dst.2971 = insertvalue <{ i64, [2 x i64*] }> %dst.2969, i64* %src.2970, 1, 1
  %src.2972 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2973 = insertvalue <{ i64, [2 x i64*] }> %dst.2971, i64* %src.2972, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2974" = bitcast i64* %new_node_ptr.2883 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.2973, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.2974", align 1
  br label %block.exit.2981

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2975": ; preds = %block.exit.2871
  %src.2976 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 0
  %dst.2977 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.2976, 0
  %src.2978 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_134.2879, 4, 0
  %dst.2979 = insertvalue <{ i64, [1 x i64*] }> %dst.2977, i64* %src.2978, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2980" = bitcast i64* %new_node_ptr.2883 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.2979, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.2980", align 1
  br label %block.exit.2981

block.exit.2981:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.2975", %"block.Cidr_{U_Main.{printFmt_15}_1}.2967", %"block.Cidr_{U_Main.{printFmt_14}_1}.2959", %"block.Cidr_{U_Main.{main_9}_1}.2953", %"block.Cidr_{U_Main.{adder_0}_1}.2943", %block.Cidr_Prelude.List.Nil.2939, %"block.Cidr_Prelude.List.::.2931", %block.Cidr_Prelude.Bool.True.2927, %block.Cidr_Prelude.Bool.False.2923, %"block.Cidr_Data.Vect.::.2915", %block.Cidr_Builtins.MkPair.2907, %block.CGrString.2901, %block.CGrInt.2895, %block.CGrFloat.2889, %block.CErased.2885
  %idr_Main.main7_val_127.2982 = tail call fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %new_node_ptr.2618, i64* %new_node_ptr.2624, i64* %new_node_ptr.2630, i64* %new_node_ptr.2883, i64* %idr_Main.main0)
  %alloc_bytes.2983 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2984 = ptrtoint <{ i64 }>* %alloc_bytes.2983 to i64
  %new_node_ptr.2985 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2984 monotonic
  %new_node_ptr.2986 = inttoptr i64 %new_node_ptr.2985 to i64*
  %tag.2987 = extractvalue <{ i64 }> %idr_Main.main7_val_127.2982, 0
  %ptr_Cidr_MkUnit.2988 = bitcast i64* %new_node_ptr.2986 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main7_val_127.2982, <{ i64 }>* %ptr_Cidr_MkUnit.2988, align 1
  %alloc_bytes.2989 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2990 = ptrtoint <{ i64 }>* %alloc_bytes.2989 to i64
  %new_node_ptr.2991 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2990 monotonic
  %new_node_ptr.2992 = inttoptr i64 %new_node_ptr.2991 to i64*
  %tag.2993 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.2994 = bitcast i64* %new_node_ptr.2992 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.2994, align 1
  %alloc_bytes.2995 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.2996 = ptrtoint <{ i64 }>* %alloc_bytes.2995 to i64
  %new_node_ptr.2997 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.2996 monotonic
  %new_node_ptr.2998 = inttoptr i64 %new_node_ptr.2997 to i64*
  %tag.2999 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3000 = bitcast i64* %new_node_ptr.2998 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3000, align 1
  %idr_Main.main8_val_157.3001 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.2992, i64* %new_node_ptr.2998)
  %alloc_bytes.3002 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3003 = ptrtoint <{ i64 }>* %alloc_bytes.3002 to i64
  %new_node_ptr.3004 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3003 monotonic
  %new_node_ptr.3005 = inttoptr i64 %new_node_ptr.3004 to i64*
  %tag.3006 = extractvalue <{ i64 }> %idr_Main.main8_val_157.3001, 0
  switch i64 %tag.3006, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3007
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3009
  ]

block.Cidr_Prelude.Basics.No.3007:                ; preds = %block.exit.2981
  %ptr_Cidr_Prelude.Basics.No.3008 = bitcast i64* %new_node_ptr.3005 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main8_val_157.3001, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3008, align 1
  br label %block.exit.3011

block.Cidr_Prelude.Basics.Yes.3009:               ; preds = %block.exit.2981
  %ptr_Cidr_Prelude.Basics.Yes.3010 = bitcast i64* %new_node_ptr.3005 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main8_val_157.3001, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3010, align 1
  br label %block.exit.3011

block.exit.3011:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3009, %block.Cidr_Prelude.Basics.No.3007
  %tag.3012 = load i64, i64* %new_node_ptr.3005, align 1
  switch i64 %tag.3012, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3013
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3016
  ]

block.Cidr_Prelude.Basics.No.3013:                ; preds = %block.exit.3011
  %ptr_Cidr_Prelude.Basics.No.3014 = bitcast i64* %new_node_ptr.3005 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.3015 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3014, align 1
  br label %block.exit.3019

block.Cidr_Prelude.Basics.Yes.3016:               ; preds = %block.exit.3011
  %ptr_Cidr_Prelude.Basics.Yes.3017 = bitcast i64* %new_node_ptr.3005 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.3018 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3017, align 1
  br label %block.exit.3019

block.exit.3019:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3016, %block.Cidr_Prelude.Basics.No.3013
  %idr_Main.main8_val_163.3020 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.3015, %block.Cidr_Prelude.Basics.No.3013 ], [ %node_Cidr_Prelude.Basics.Yes.3018, %block.Cidr_Prelude.Basics.Yes.3016 ]
  %tag.3021 = extractvalue <{ i64 }> %idr_Main.main8_val_163.3020, 0
  switch i64 %tag.3021, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3022
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3023
  ]

block.Cidr_Prelude.Basics.No.3022:                ; preds = %block.exit.3019
  %src.3198 = extractvalue <{ i64 }> <{ i64 9 }>, 0
  %dst.3199 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3198, 0
  br label %block.exit.3197

block.Cidr_Prelude.Basics.Yes.3023:               ; preds = %block.exit.3019
  %node_CGrString.3024 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.2, 1, 0
  %alloc_bytes.3025 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3026 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3025 to i64
  %new_node_ptr.3027 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3026 monotonic
  %new_node_ptr.3028 = inttoptr i64 %new_node_ptr.3027 to i64*
  %tag.3029 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3024, 0
  %ptr_CGrString.3030 = bitcast i64* %new_node_ptr.3028 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3024, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3030, align 1
  %idr_Main.main9_val_164.3031 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.3028)
  %alloc_bytes.3032 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3033 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3032 to i64
  %new_node_ptr.3034 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3033 monotonic
  %new_node_ptr.3035 = inttoptr i64 %new_node_ptr.3034 to i64*
  %tag.3036 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main9_val_164.3031, 0
  %ptr_CGrInt.3037 = bitcast i64* %new_node_ptr.3035 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main9_val_164.3031, <{ i64, [1 x i64] }>* %ptr_CGrInt.3037, align 1
  %alloc_bytes.3038 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3039 = ptrtoint <{ i64 }>* %alloc_bytes.3038 to i64
  %new_node_ptr.3040 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3039 monotonic
  %new_node_ptr.3041 = inttoptr i64 %new_node_ptr.3040 to i64*
  %tag.3042 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.3043 = bitcast i64* %new_node_ptr.3041 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.3043, align 1
  %node_CGrString.3044 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.2, 1, 0
  %alloc_bytes.3045 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3046 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3045 to i64
  %new_node_ptr.3047 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3046 monotonic
  %new_node_ptr.3048 = inttoptr i64 %new_node_ptr.3047 to i64*
  %tag.3049 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3044, 0
  %ptr_CGrString.3050 = bitcast i64* %new_node_ptr.3048 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3044, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3050, align 1
  %idr_Main.main11_val_175.3051 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3048)
  %alloc_bytes.3052 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3053 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3052 to i64
  %new_node_ptr.3054 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3053 monotonic
  %new_node_ptr.3055 = inttoptr i64 %new_node_ptr.3054 to i64*
  %tag.3056 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main11_val_175.3051, 0
  %ptr_CGrString.3057 = bitcast i64* %new_node_ptr.3055 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main11_val_175.3051, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3057, align 1
  %node_CGrString.3058 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.3059 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3060 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3059 to i64
  %new_node_ptr.3061 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3060 monotonic
  %new_node_ptr.3062 = inttoptr i64 %new_node_ptr.3061 to i64*
  %tag.3063 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3058, 0
  %ptr_CGrString.3064 = bitcast i64* %new_node_ptr.3062 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3058, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3064, align 1
  %idr_Main.main11_val_174.3065 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.3055, i64* %new_node_ptr.3062)
  %alloc_bytes.3066 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3067 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3066 to i64
  %new_node_ptr.3068 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3067 monotonic
  %new_node_ptr.3069 = inttoptr i64 %new_node_ptr.3068 to i64*
  %tag.3070 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main11_val_174.3065, 0
  %ptr_CGrInt.3071 = bitcast i64* %new_node_ptr.3069 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main11_val_174.3065, <{ i64, [1 x i64] }>* %ptr_CGrInt.3071, align 1
  %tag.3072 = load i64, i64* %new_node_ptr.3069, align 1
  %ptr_CGrInt.3073 = bitcast i64* %new_node_ptr.3069 to <{ i64, [1 x i64] }>*
  %node_CGrInt.3074 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.3073, align 1
  %tag.3075 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.3074, 0
  switch i64 %tag.3075, label %error_block [
    i64 2, label %block.CGrInt.3076
  ]

block.CGrInt.3076:                                ; preds = %block.Cidr_Prelude.Basics.Yes.3023
  %idr_Main.main_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.3074, 1, 0
  switch i64 %idr_Main.main_cpat_LInt64_0, label %block.default.3077 [
    i64 0, label %block.int_0.3078
  ]

block.default.3077:                               ; preds = %block.CGrInt.3076
  br label %block.exit.3079

block.int_0.3078:                                 ; preds = %block.CGrInt.3076
  br label %block.exit.3079

block.exit.3079:                                  ; preds = %block.int_0.3078, %block.default.3077
  %result.CGrInt.3080 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.3077 ], [ <{ i64 7 }>, %block.int_0.3078 ]
  br label %block.exit.3081

block.exit.3081:                                  ; preds = %block.exit.3079
  %idr_Main.main11_val_173.3082 = phi <{ i64 }> [ %result.CGrInt.3080, %block.exit.3079 ]
  %alloc_bytes.3083 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3084 = ptrtoint <{ i64 }>* %alloc_bytes.3083 to i64
  %new_node_ptr.3085 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3084 monotonic
  %new_node_ptr.3086 = inttoptr i64 %new_node_ptr.3085 to i64*
  %tag.3087 = extractvalue <{ i64 }> %idr_Main.main11_val_173.3082, 0
  switch i64 %tag.3087, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.3088
    i64 7, label %block.Cidr_Prelude.Bool.True.3090
  ]

block.Cidr_Prelude.Bool.False.3088:               ; preds = %block.exit.3081
  %ptr_Cidr_Prelude.Bool.False.3089 = bitcast i64* %new_node_ptr.3086 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main11_val_173.3082, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.3089, align 1
  br label %block.exit.3092

block.Cidr_Prelude.Bool.True.3090:                ; preds = %block.exit.3081
  %ptr_Cidr_Prelude.Bool.True.3091 = bitcast i64* %new_node_ptr.3086 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main11_val_173.3082, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3091, align 1
  br label %block.exit.3092

block.exit.3092:                                  ; preds = %block.Cidr_Prelude.Bool.True.3090, %block.Cidr_Prelude.Bool.False.3088
  %alloc_bytes.3093 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3094 = ptrtoint <{ i64 }>* %alloc_bytes.3093 to i64
  %new_node_ptr.3095 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3094 monotonic
  %new_node_ptr.3096 = inttoptr i64 %new_node_ptr.3095 to i64*
  %tag.3097 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3098 = bitcast i64* %new_node_ptr.3096 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3098, align 1
  %idr_Main.main11_val_172.3099 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.3086, i64* %new_node_ptr.3096)
  %alloc_bytes.3100 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3101 = ptrtoint <{ i64 }>* %alloc_bytes.3100 to i64
  %new_node_ptr.3102 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3101 monotonic
  %new_node_ptr.3103 = inttoptr i64 %new_node_ptr.3102 to i64*
  %tag.3104 = extractvalue <{ i64 }> %idr_Main.main11_val_172.3099, 0
  switch i64 %tag.3104, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3105
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3107
  ]

block.Cidr_Prelude.Basics.No.3105:                ; preds = %block.exit.3092
  %ptr_Cidr_Prelude.Basics.No.3106 = bitcast i64* %new_node_ptr.3103 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main11_val_172.3099, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3106, align 1
  br label %block.exit.3109

block.Cidr_Prelude.Basics.Yes.3107:               ; preds = %block.exit.3092
  %ptr_Cidr_Prelude.Basics.Yes.3108 = bitcast i64* %new_node_ptr.3103 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main11_val_172.3099, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3108, align 1
  br label %block.exit.3109

block.exit.3109:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3107, %block.Cidr_Prelude.Basics.No.3105
  %tag.3110 = load i64, i64* %new_node_ptr.3103, align 1
  switch i64 %tag.3110, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3111
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3114
  ]

block.Cidr_Prelude.Basics.No.3111:                ; preds = %block.exit.3109
  %ptr_Cidr_Prelude.Basics.No.3112 = bitcast i64* %new_node_ptr.3103 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.3113 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3112, align 1
  br label %block.exit.3117

block.Cidr_Prelude.Basics.Yes.3114:               ; preds = %block.exit.3109
  %ptr_Cidr_Prelude.Basics.Yes.3115 = bitcast i64* %new_node_ptr.3103 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.3116 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3115, align 1
  br label %block.exit.3117

block.exit.3117:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3114, %block.Cidr_Prelude.Basics.No.3111
  %idr_Main.main11_val_187.3118 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.3113, %block.Cidr_Prelude.Basics.No.3111 ], [ %node_Cidr_Prelude.Basics.Yes.3116, %block.Cidr_Prelude.Basics.Yes.3114 ]
  %tag.3119 = extractvalue <{ i64 }> %idr_Main.main11_val_187.3118, 0
  switch i64 %tag.3119, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3120
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3121
  ]

block.Cidr_Prelude.Basics.No.3120:                ; preds = %block.exit.3117
  %src.3167 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.3168 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3167, 0
  br label %block.exit.3166

block.Cidr_Prelude.Basics.Yes.3121:               ; preds = %block.exit.3117
  %node_CGrString.3122 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.2, 1, 0
  %alloc_bytes.3123 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3124 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3123 to i64
  %new_node_ptr.3125 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3124 monotonic
  %new_node_ptr.3126 = inttoptr i64 %new_node_ptr.3125 to i64*
  %tag.3127 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3122, 0
  %ptr_CGrString.3128 = bitcast i64* %new_node_ptr.3126 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3122, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3128, align 1
  %idr_Main.main12_val_189.3129 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3126)
  %alloc_bytes.3130 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3131 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3130 to i64
  %new_node_ptr.3132 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3131 monotonic
  %new_node_ptr.3133 = inttoptr i64 %new_node_ptr.3132 to i64*
  %tag.3134 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main12_val_189.3129, 0
  %ptr_CGrString.3135 = bitcast i64* %new_node_ptr.3133 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main12_val_189.3129, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3135, align 1
  %idr_Main.main12_val_188.3136 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.3133)
  %alloc_bytes.3137 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3138 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3137 to i64
  %new_node_ptr.3139 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3138 monotonic
  %new_node_ptr.3140 = inttoptr i64 %new_node_ptr.3139 to i64*
  %tag.3141 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main12_val_188.3136, 0
  %ptr_CGrInt.3142 = bitcast i64* %new_node_ptr.3140 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main12_val_188.3136, <{ i64, [1 x i64] }>* %ptr_CGrInt.3142, align 1
  %node_CGrString.3143 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.2, 1, 0
  %alloc_bytes.3144 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3145 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3144 to i64
  %new_node_ptr.3146 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3145 monotonic
  %new_node_ptr.3147 = inttoptr i64 %new_node_ptr.3146 to i64*
  %tag.3148 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3143, 0
  %ptr_CGrString.3149 = bitcast i64* %new_node_ptr.3147 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3143, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3149, align 1
  %idr_Main.main13_val_195.3150 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3147)
  %alloc_bytes.3151 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3152 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3151 to i64
  %new_node_ptr.3153 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3152 monotonic
  %new_node_ptr.3154 = inttoptr i64 %new_node_ptr.3153 to i64*
  %tag.3155 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_195.3150, 0
  %ptr_CGrString.3156 = bitcast i64* %new_node_ptr.3154 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_195.3150, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3156, align 1
  %idr_Main.main13_val_194.3157 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3154)
  %alloc_bytes.3158 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3159 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3158 to i64
  %new_node_ptr.3160 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3159 monotonic
  %new_node_ptr.3161 = inttoptr i64 %new_node_ptr.3160 to i64*
  %tag.3162 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_194.3157, 0
  %ptr_CGrString.3163 = bitcast i64* %new_node_ptr.3161 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_194.3157, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3163, align 1
  %node_Cidr_Prelude.Strings.StrCons.3164 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.3140, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.3165 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.3164, i64* %new_node_ptr.3161, 1, 1
  br label %block.exit.3166

block.exit.3166:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3121, %block.Cidr_Prelude.Basics.No.3120
  %idr_Main.main11_val_171.3169 = phi <{ i64, [2 x i64*] }> [ %dst.3168, %block.Cidr_Prelude.Basics.No.3120 ], [ %node_Cidr_Prelude.Strings.StrCons.3165, %block.Cidr_Prelude.Basics.Yes.3121 ]
  %alloc_bytes.3170 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3171 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3170 to i64
  %new_node_ptr.3172 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3171 monotonic
  %new_node_ptr.3173 = inttoptr i64 %new_node_ptr.3172 to i64*
  %tag.3174 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main11_val_171.3169, 0
  switch i64 %tag.3174, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.3175
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.3177
  ]

block.Cidr_Prelude.Strings.StrCons.3175:          ; preds = %block.exit.3166
  %ptr_Cidr_Prelude.Strings.StrCons.3176 = bitcast i64* %new_node_ptr.3173 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main11_val_171.3169, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.3176, align 1
  br label %block.exit.3181

block.Cidr_Prelude.Strings.StrNil.3177:           ; preds = %block.exit.3166
  %src.3178 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main11_val_171.3169, 0
  %dst.3179 = insertvalue <{ i64 }> undef, i64 %src.3178, 0
  %ptr_Cidr_Prelude.Strings.StrNil.3180 = bitcast i64* %new_node_ptr.3173 to <{ i64 }>*
  store <{ i64 }> %dst.3179, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.3180, align 1
  br label %block.exit.3181

block.exit.3181:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.3177, %block.Cidr_Prelude.Strings.StrCons.3175
  %idr_Main.main10_val_168.3182 = tail call fastcc <{ i64, [2 x i64*] }> @idr__Prelude.Strings.unpack_with_36(i64* %new_node_ptr.3041, i64* %new_node_ptr.3173)
  %alloc_bytes.3183 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3184 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3183 to i64
  %new_node_ptr.3185 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3184 monotonic
  %new_node_ptr.3186 = inttoptr i64 %new_node_ptr.3185 to i64*
  %tag.3187 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_168.3182, 0
  switch i64 %tag.3187, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.3188"
    i64 9, label %block.Cidr_Prelude.List.Nil.3190
  ]

"block.Cidr_Prelude.List.::.3188":                ; preds = %block.exit.3181
  %"ptr_Cidr_Prelude.List.::.3189" = bitcast i64* %new_node_ptr.3186 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main10_val_168.3182, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.3189", align 1
  br label %block.exit.3194

block.Cidr_Prelude.List.Nil.3190:                 ; preds = %block.exit.3181
  %src.3191 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_168.3182, 0
  %dst.3192 = insertvalue <{ i64 }> undef, i64 %src.3191, 0
  %ptr_Cidr_Prelude.List.Nil.3193 = bitcast i64* %new_node_ptr.3186 to <{ i64 }>*
  store <{ i64 }> %dst.3192, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.3193, align 1
  br label %block.exit.3194

block.exit.3194:                                  ; preds = %block.Cidr_Prelude.List.Nil.3190, %"block.Cidr_Prelude.List.::.3188"
  %"node_Cidr_Prelude.List.::.3195" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.3035, 1, 0
  %"node_Cidr_Prelude.List.::.3196" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.3195", i64* %new_node_ptr.3186, 1, 1
  br label %block.exit.3197

block.exit.3197:                                  ; preds = %block.exit.3194, %block.Cidr_Prelude.Basics.No.3022
  %idr_Main.main8_val_156.3200 = phi <{ i64, [2 x i64*] }> [ %dst.3199, %block.Cidr_Prelude.Basics.No.3022 ], [ %"node_Cidr_Prelude.List.::.3196", %block.exit.3194 ]
  %alloc_bytes.3201 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3202 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3201 to i64
  %new_node_ptr.3203 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3202 monotonic
  %new_node_ptr.3204 = inttoptr i64 %new_node_ptr.3203 to i64*
  %tag.3205 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_156.3200, 0
  switch i64 %tag.3205, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.3206"
    i64 9, label %block.Cidr_Prelude.List.Nil.3208
  ]

"block.Cidr_Prelude.List.::.3206":                ; preds = %block.exit.3197
  %"ptr_Cidr_Prelude.List.::.3207" = bitcast i64* %new_node_ptr.3204 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main8_val_156.3200, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.3207", align 1
  br label %block.exit.3212

block.Cidr_Prelude.List.Nil.3208:                 ; preds = %block.exit.3197
  %src.3209 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_156.3200, 0
  %dst.3210 = insertvalue <{ i64 }> undef, i64 %src.3209, 0
  %ptr_Cidr_Prelude.List.Nil.3211 = bitcast i64* %new_node_ptr.3204 to <{ i64 }>*
  store <{ i64 }> %dst.3210, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.3211, align 1
  br label %block.exit.3212

block.exit.3212:                                  ; preds = %block.Cidr_Prelude.List.Nil.3208, %"block.Cidr_Prelude.List.::.3206"
  %idr_Main.main8_val_155.3213 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %new_node_ptr.3204)
  %alloc_bytes.3214 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3215 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3214 to i64
  %new_node_ptr.3216 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3215 monotonic
  %new_node_ptr.3217 = inttoptr i64 %new_node_ptr.3216 to i64*
  %tag.3218 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_155.3213, 0
  switch i64 %tag.3218, label %error_block [
    i64 30, label %block.Cidr_Main.End.3219
    i64 31, label %block.Cidr_Main.Lit.3223
    i64 32, label %block.Cidr_Main.Number.3225
    i64 33, label %block.Cidr_Main.Str.3231
  ]

block.Cidr_Main.End.3219:                         ; preds = %block.exit.3212
  %src.3220 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_155.3213, 0
  %dst.3221 = insertvalue <{ i64 }> undef, i64 %src.3220, 0
  %ptr_Cidr_Main.End.3222 = bitcast i64* %new_node_ptr.3217 to <{ i64 }>*
  store <{ i64 }> %dst.3221, <{ i64 }>* %ptr_Cidr_Main.End.3222, align 1
  br label %block.exit.3237

block.Cidr_Main.Lit.3223:                         ; preds = %block.exit.3212
  %ptr_Cidr_Main.Lit.3224 = bitcast i64* %new_node_ptr.3217 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main8_val_155.3213, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.3224, align 1
  br label %block.exit.3237

block.Cidr_Main.Number.3225:                      ; preds = %block.exit.3212
  %src.3226 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_155.3213, 0
  %dst.3227 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3226, 0
  %src.3228 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_155.3213, 1, 0
  %dst.3229 = insertvalue <{ i64, [1 x i64*] }> %dst.3227, i64* %src.3228, 1, 0
  %ptr_Cidr_Main.Number.3230 = bitcast i64* %new_node_ptr.3217 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3229, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.3230, align 1
  br label %block.exit.3237

block.Cidr_Main.Str.3231:                         ; preds = %block.exit.3212
  %src.3232 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_155.3213, 0
  %dst.3233 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3232, 0
  %src.3234 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main8_val_155.3213, 1, 0
  %dst.3235 = insertvalue <{ i64, [1 x i64*] }> %dst.3233, i64* %src.3234, 1, 0
  %ptr_Cidr_Main.Str.3236 = bitcast i64* %new_node_ptr.3217 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3235, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.3236, align 1
  br label %block.exit.3237

block.exit.3237:                                  ; preds = %block.Cidr_Main.Str.3231, %block.Cidr_Main.Number.3225, %block.Cidr_Main.Lit.3223, %block.Cidr_Main.End.3219
  %node_CGrString.3238 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.3239 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3240 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3239 to i64
  %new_node_ptr.3241 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3240 monotonic
  %new_node_ptr.3242 = inttoptr i64 %new_node_ptr.3241 to i64*
  %tag.3243 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3238, 0
  %ptr_CGrString.3244 = bitcast i64* %new_node_ptr.3242 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3238, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3244, align 1
  %idr_Main.main8_val_154.3245 = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @idr_Main.printFmt(i64* %new_node_ptr.3217, i64* %new_node_ptr.3242)
  %alloc_bytes.3246 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>, <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>* null, i32 1
  %alloc_bytes.3247 = ptrtoint <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>* %alloc_bytes.3246 to i64
  %new_node_ptr.3248 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3247 monotonic
  %new_node_ptr.3249 = inttoptr i64 %new_node_ptr.3248 to i64*
  %tag.3250 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 0
  switch i64 %tag.3250, label %error_block [
    i64 3, label %block.CGrString.3251
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.3257"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.3265"
  ]

block.CGrString.3251:                             ; preds = %block.exit.3237
  %src.3252 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 0
  %dst.3253 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.3252, 0
  %src.3254 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 1, 0
  %dst.3255 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.3253, { i8*, i64 }* %src.3254, 1, 0
  %ptr_CGrString.3256 = bitcast i64* %new_node_ptr.3249 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.3255, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3256, align 1
  br label %block.exit.3273

"block.Cidr_{U_Main.{printFmt_14}_1}.3257":       ; preds = %block.exit.3237
  %src.3258 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 0
  %dst.3259 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3258, 0
  %src.3260 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 2, 1
  %dst.3261 = insertvalue <{ i64, [2 x i64*] }> %dst.3259, i64* %src.3260, 1, 1
  %src.3262 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 2, 0
  %dst.3263 = insertvalue <{ i64, [2 x i64*] }> %dst.3261, i64* %src.3262, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3264" = bitcast i64* %new_node_ptr.3249 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3263, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3264", align 1
  br label %block.exit.3273

"block.Cidr_{U_Main.{printFmt_15}_1}.3265":       ; preds = %block.exit.3237
  %src.3266 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 0
  %dst.3267 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3266, 0
  %src.3268 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 2, 1
  %dst.3269 = insertvalue <{ i64, [2 x i64*] }> %dst.3267, i64* %src.3268, 1, 1
  %src.3270 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main8_val_154.3245, 2, 0
  %dst.3271 = insertvalue <{ i64, [2 x i64*] }> %dst.3269, i64* %src.3270, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.3272" = bitcast i64* %new_node_ptr.3249 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3271, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.3272", align 1
  br label %block.exit.3273

block.exit.3273:                                  ; preds = %"block.Cidr_{U_Main.{printFmt_15}_1}.3265", %"block.Cidr_{U_Main.{printFmt_14}_1}.3257", %block.CGrString.3251
  %node_CGrString.3274 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.4, 1, 0
  %alloc_bytes.3275 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3276 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3275 to i64
  %new_node_ptr.3277 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3276 monotonic
  %new_node_ptr.3278 = inttoptr i64 %new_node_ptr.3277 to i64*
  %tag.3279 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3274, 0
  %ptr_CGrString.3280 = bitcast i64* %new_node_ptr.3278 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3274, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3280, align 1
  %idr_Main.main8_val_153.3281 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.3249, i64* %new_node_ptr.3278)
  %alloc_bytes.3282 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3283 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3282 to i64
  %new_node_ptr.3284 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3283 monotonic
  %new_node_ptr.3285 = inttoptr i64 %new_node_ptr.3284 to i64*
  %tag.3286 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main8_val_153.3281, 0
  %ptr_CGrString.3287 = bitcast i64* %new_node_ptr.3285 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main8_val_153.3281, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3287, align 1
  %idr_Main.main8_val_152.3288 = tail call fastcc <{ i64 }> @idris_write_str(i64* %idr_Main.main0, i64* %new_node_ptr.3285)
  %alloc_bytes.3289 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3290 = ptrtoint <{ i64 }>* %alloc_bytes.3289 to i64
  %new_node_ptr.3291 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3290 monotonic
  %new_node_ptr.3292 = inttoptr i64 %new_node_ptr.3291 to i64*
  %tag.3293 = extractvalue <{ i64 }> %idr_Main.main8_val_152.3288, 0
  %ptr_CUnit.3294 = bitcast i64* %new_node_ptr.3292 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main8_val_152.3288, <{ i64 }>* %ptr_CUnit.3294, align 1
  %alloc_bytes.3295 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3296 = ptrtoint <{ i64 }>* %alloc_bytes.3295 to i64
  %new_node_ptr.3297 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3296 monotonic
  %new_node_ptr.3298 = inttoptr i64 %new_node_ptr.3297 to i64*
  %tag.3299 = extractvalue <{ i64 }> <{ i64 34 }>, 0
  %ptr_Cidr_MkUnit.3300 = bitcast i64* %new_node_ptr.3298 to <{ i64 }>*
  store <{ i64 }> <{ i64 34 }>, <{ i64 }>* %ptr_Cidr_MkUnit.3300, align 1
  %alloc_bytes.3301 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3302 = ptrtoint <{ i64 }>* %alloc_bytes.3301 to i64
  %new_node_ptr.3303 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3302 monotonic
  %new_node_ptr.3304 = inttoptr i64 %new_node_ptr.3303 to i64*
  %tag.3305 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3306 = bitcast i64* %new_node_ptr.3304 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3306, align 1
  %alloc_bytes.3307 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3308 = ptrtoint <{ i64 }>* %alloc_bytes.3307 to i64
  %new_node_ptr.3309 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3308 monotonic
  %new_node_ptr.3310 = inttoptr i64 %new_node_ptr.3309 to i64*
  %tag.3311 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3312 = bitcast i64* %new_node_ptr.3310 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3312, align 1
  %idr_Main.main9_val_219.3313 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.3304, i64* %new_node_ptr.3310)
  %alloc_bytes.3314 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3315 = ptrtoint <{ i64 }>* %alloc_bytes.3314 to i64
  %new_node_ptr.3316 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3315 monotonic
  %new_node_ptr.3317 = inttoptr i64 %new_node_ptr.3316 to i64*
  %tag.3318 = extractvalue <{ i64 }> %idr_Main.main9_val_219.3313, 0
  switch i64 %tag.3318, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3319
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3321
  ]

block.Cidr_Prelude.Basics.No.3319:                ; preds = %block.exit.3273
  %ptr_Cidr_Prelude.Basics.No.3320 = bitcast i64* %new_node_ptr.3317 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main9_val_219.3313, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3320, align 1
  br label %block.exit.3323

block.Cidr_Prelude.Basics.Yes.3321:               ; preds = %block.exit.3273
  %ptr_Cidr_Prelude.Basics.Yes.3322 = bitcast i64* %new_node_ptr.3317 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main9_val_219.3313, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3322, align 1
  br label %block.exit.3323

block.exit.3323:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3321, %block.Cidr_Prelude.Basics.No.3319
  %tag.3324 = load i64, i64* %new_node_ptr.3317, align 1
  switch i64 %tag.3324, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3325
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3328
  ]

block.Cidr_Prelude.Basics.No.3325:                ; preds = %block.exit.3323
  %ptr_Cidr_Prelude.Basics.No.3326 = bitcast i64* %new_node_ptr.3317 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.3327 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3326, align 1
  br label %block.exit.3331

block.Cidr_Prelude.Basics.Yes.3328:               ; preds = %block.exit.3323
  %ptr_Cidr_Prelude.Basics.Yes.3329 = bitcast i64* %new_node_ptr.3317 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.3330 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3329, align 1
  br label %block.exit.3331

block.exit.3331:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3328, %block.Cidr_Prelude.Basics.No.3325
  %idr_Main.main9_val_225.3332 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.3327, %block.Cidr_Prelude.Basics.No.3325 ], [ %node_Cidr_Prelude.Basics.Yes.3330, %block.Cidr_Prelude.Basics.Yes.3328 ]
  %tag.3333 = extractvalue <{ i64 }> %idr_Main.main9_val_225.3332, 0
  switch i64 %tag.3333, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3334
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3335
  ]

block.Cidr_Prelude.Basics.No.3334:                ; preds = %block.exit.3331
  %src.3510 = extractvalue <{ i64 }> <{ i64 9 }>, 0
  %dst.3511 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3510, 0
  br label %block.exit.3509

block.Cidr_Prelude.Basics.Yes.3335:               ; preds = %block.exit.3331
  %node_CGrString.3336 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.5, 1, 0
  %alloc_bytes.3337 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3338 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3337 to i64
  %new_node_ptr.3339 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3338 monotonic
  %new_node_ptr.3340 = inttoptr i64 %new_node_ptr.3339 to i64*
  %tag.3341 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3336, 0
  %ptr_CGrString.3342 = bitcast i64* %new_node_ptr.3340 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3336, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3342, align 1
  %idr_Main.main10_val_226.3343 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.3340)
  %alloc_bytes.3344 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3345 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3344 to i64
  %new_node_ptr.3346 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3345 monotonic
  %new_node_ptr.3347 = inttoptr i64 %new_node_ptr.3346 to i64*
  %tag.3348 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main10_val_226.3343, 0
  %ptr_CGrInt.3349 = bitcast i64* %new_node_ptr.3347 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main10_val_226.3343, <{ i64, [1 x i64] }>* %ptr_CGrInt.3349, align 1
  %alloc_bytes.3350 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3351 = ptrtoint <{ i64 }>* %alloc_bytes.3350 to i64
  %new_node_ptr.3352 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3351 monotonic
  %new_node_ptr.3353 = inttoptr i64 %new_node_ptr.3352 to i64*
  %tag.3354 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.3355 = bitcast i64* %new_node_ptr.3353 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.3355, align 1
  %node_CGrString.3356 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.5, 1, 0
  %alloc_bytes.3357 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3358 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3357 to i64
  %new_node_ptr.3359 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3358 monotonic
  %new_node_ptr.3360 = inttoptr i64 %new_node_ptr.3359 to i64*
  %tag.3361 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3356, 0
  %ptr_CGrString.3362 = bitcast i64* %new_node_ptr.3360 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3356, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3362, align 1
  %idr_Main.main12_val_237.3363 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3360)
  %alloc_bytes.3364 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3365 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3364 to i64
  %new_node_ptr.3366 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3365 monotonic
  %new_node_ptr.3367 = inttoptr i64 %new_node_ptr.3366 to i64*
  %tag.3368 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main12_val_237.3363, 0
  %ptr_CGrString.3369 = bitcast i64* %new_node_ptr.3367 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main12_val_237.3363, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3369, align 1
  %node_CGrString.3370 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.3371 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3372 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3371 to i64
  %new_node_ptr.3373 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3372 monotonic
  %new_node_ptr.3374 = inttoptr i64 %new_node_ptr.3373 to i64*
  %tag.3375 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3370, 0
  %ptr_CGrString.3376 = bitcast i64* %new_node_ptr.3374 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3370, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3376, align 1
  %idr_Main.main12_val_236.3377 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.3367, i64* %new_node_ptr.3374)
  %alloc_bytes.3378 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3379 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3378 to i64
  %new_node_ptr.3380 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3379 monotonic
  %new_node_ptr.3381 = inttoptr i64 %new_node_ptr.3380 to i64*
  %tag.3382 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main12_val_236.3377, 0
  %ptr_CGrInt.3383 = bitcast i64* %new_node_ptr.3381 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main12_val_236.3377, <{ i64, [1 x i64] }>* %ptr_CGrInt.3383, align 1
  %tag.3384 = load i64, i64* %new_node_ptr.3381, align 1
  %ptr_CGrInt.3385 = bitcast i64* %new_node_ptr.3381 to <{ i64, [1 x i64] }>*
  %node_CGrInt.3386 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.3385, align 1
  %tag.3387 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.3386, 0
  switch i64 %tag.3387, label %error_block [
    i64 2, label %block.CGrInt.3388
  ]

block.CGrInt.3388:                                ; preds = %block.Cidr_Prelude.Basics.Yes.3335
  %idr_Main.main_cpat_LInt64_0_245 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.3386, 1, 0
  switch i64 %idr_Main.main_cpat_LInt64_0_245, label %block.default.3389 [
    i64 0, label %block.int_0.3390
  ]

block.default.3389:                               ; preds = %block.CGrInt.3388
  br label %block.exit.3391

block.int_0.3390:                                 ; preds = %block.CGrInt.3388
  br label %block.exit.3391

block.exit.3391:                                  ; preds = %block.int_0.3390, %block.default.3389
  %result.CGrInt.3392 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.3389 ], [ <{ i64 7 }>, %block.int_0.3390 ]
  br label %block.exit.3393

block.exit.3393:                                  ; preds = %block.exit.3391
  %idr_Main.main12_val_235.3394 = phi <{ i64 }> [ %result.CGrInt.3392, %block.exit.3391 ]
  %alloc_bytes.3395 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3396 = ptrtoint <{ i64 }>* %alloc_bytes.3395 to i64
  %new_node_ptr.3397 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3396 monotonic
  %new_node_ptr.3398 = inttoptr i64 %new_node_ptr.3397 to i64*
  %tag.3399 = extractvalue <{ i64 }> %idr_Main.main12_val_235.3394, 0
  switch i64 %tag.3399, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.3400
    i64 7, label %block.Cidr_Prelude.Bool.True.3402
  ]

block.Cidr_Prelude.Bool.False.3400:               ; preds = %block.exit.3393
  %ptr_Cidr_Prelude.Bool.False.3401 = bitcast i64* %new_node_ptr.3398 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main12_val_235.3394, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.3401, align 1
  br label %block.exit.3404

block.Cidr_Prelude.Bool.True.3402:                ; preds = %block.exit.3393
  %ptr_Cidr_Prelude.Bool.True.3403 = bitcast i64* %new_node_ptr.3398 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main12_val_235.3394, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3403, align 1
  br label %block.exit.3404

block.exit.3404:                                  ; preds = %block.Cidr_Prelude.Bool.True.3402, %block.Cidr_Prelude.Bool.False.3400
  %alloc_bytes.3405 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3406 = ptrtoint <{ i64 }>* %alloc_bytes.3405 to i64
  %new_node_ptr.3407 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3406 monotonic
  %new_node_ptr.3408 = inttoptr i64 %new_node_ptr.3407 to i64*
  %tag.3409 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3410 = bitcast i64* %new_node_ptr.3408 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3410, align 1
  %idr_Main.main12_val_234.3411 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.3398, i64* %new_node_ptr.3408)
  %alloc_bytes.3412 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3413 = ptrtoint <{ i64 }>* %alloc_bytes.3412 to i64
  %new_node_ptr.3414 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3413 monotonic
  %new_node_ptr.3415 = inttoptr i64 %new_node_ptr.3414 to i64*
  %tag.3416 = extractvalue <{ i64 }> %idr_Main.main12_val_234.3411, 0
  switch i64 %tag.3416, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3417
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3419
  ]

block.Cidr_Prelude.Basics.No.3417:                ; preds = %block.exit.3404
  %ptr_Cidr_Prelude.Basics.No.3418 = bitcast i64* %new_node_ptr.3415 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main12_val_234.3411, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3418, align 1
  br label %block.exit.3421

block.Cidr_Prelude.Basics.Yes.3419:               ; preds = %block.exit.3404
  %ptr_Cidr_Prelude.Basics.Yes.3420 = bitcast i64* %new_node_ptr.3415 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main12_val_234.3411, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3420, align 1
  br label %block.exit.3421

block.exit.3421:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3419, %block.Cidr_Prelude.Basics.No.3417
  %tag.3422 = load i64, i64* %new_node_ptr.3415, align 1
  switch i64 %tag.3422, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3423
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3426
  ]

block.Cidr_Prelude.Basics.No.3423:                ; preds = %block.exit.3421
  %ptr_Cidr_Prelude.Basics.No.3424 = bitcast i64* %new_node_ptr.3415 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.3425 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3424, align 1
  br label %block.exit.3429

block.Cidr_Prelude.Basics.Yes.3426:               ; preds = %block.exit.3421
  %ptr_Cidr_Prelude.Basics.Yes.3427 = bitcast i64* %new_node_ptr.3415 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.3428 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3427, align 1
  br label %block.exit.3429

block.exit.3429:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3426, %block.Cidr_Prelude.Basics.No.3423
  %idr_Main.main12_val_250.3430 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.3425, %block.Cidr_Prelude.Basics.No.3423 ], [ %node_Cidr_Prelude.Basics.Yes.3428, %block.Cidr_Prelude.Basics.Yes.3426 ]
  %tag.3431 = extractvalue <{ i64 }> %idr_Main.main12_val_250.3430, 0
  switch i64 %tag.3431, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3432
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3433
  ]

block.Cidr_Prelude.Basics.No.3432:                ; preds = %block.exit.3429
  %src.3479 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.3480 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3479, 0
  br label %block.exit.3478

block.Cidr_Prelude.Basics.Yes.3433:               ; preds = %block.exit.3429
  %node_CGrString.3434 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.5, 1, 0
  %alloc_bytes.3435 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3436 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3435 to i64
  %new_node_ptr.3437 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3436 monotonic
  %new_node_ptr.3438 = inttoptr i64 %new_node_ptr.3437 to i64*
  %tag.3439 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3434, 0
  %ptr_CGrString.3440 = bitcast i64* %new_node_ptr.3438 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3434, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3440, align 1
  %idr_Main.main13_val_252.3441 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3438)
  %alloc_bytes.3442 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3443 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3442 to i64
  %new_node_ptr.3444 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3443 monotonic
  %new_node_ptr.3445 = inttoptr i64 %new_node_ptr.3444 to i64*
  %tag.3446 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_252.3441, 0
  %ptr_CGrString.3447 = bitcast i64* %new_node_ptr.3445 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_252.3441, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3447, align 1
  %idr_Main.main13_val_251.3448 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.3445)
  %alloc_bytes.3449 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3450 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3449 to i64
  %new_node_ptr.3451 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3450 monotonic
  %new_node_ptr.3452 = inttoptr i64 %new_node_ptr.3451 to i64*
  %tag.3453 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main13_val_251.3448, 0
  %ptr_CGrInt.3454 = bitcast i64* %new_node_ptr.3452 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main13_val_251.3448, <{ i64, [1 x i64] }>* %ptr_CGrInt.3454, align 1
  %node_CGrString.3455 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.5, 1, 0
  %alloc_bytes.3456 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3457 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3456 to i64
  %new_node_ptr.3458 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3457 monotonic
  %new_node_ptr.3459 = inttoptr i64 %new_node_ptr.3458 to i64*
  %tag.3460 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3455, 0
  %ptr_CGrString.3461 = bitcast i64* %new_node_ptr.3459 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3455, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3461, align 1
  %idr_Main.main14_val_257.3462 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3459)
  %alloc_bytes.3463 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3464 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3463 to i64
  %new_node_ptr.3465 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3464 monotonic
  %new_node_ptr.3466 = inttoptr i64 %new_node_ptr.3465 to i64*
  %tag.3467 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main14_val_257.3462, 0
  %ptr_CGrString.3468 = bitcast i64* %new_node_ptr.3466 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main14_val_257.3462, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3468, align 1
  %idr_Main.main14_val.3469 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3466)
  %alloc_bytes.3470 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3471 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3470 to i64
  %new_node_ptr.3472 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3471 monotonic
  %new_node_ptr.3473 = inttoptr i64 %new_node_ptr.3472 to i64*
  %tag.3474 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main14_val.3469, 0
  %ptr_CGrString.3475 = bitcast i64* %new_node_ptr.3473 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main14_val.3469, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3475, align 1
  %node_Cidr_Prelude.Strings.StrCons.3476 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.3452, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.3477 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.3476, i64* %new_node_ptr.3473, 1, 1
  br label %block.exit.3478

block.exit.3478:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3433, %block.Cidr_Prelude.Basics.No.3432
  %idr_Main.main12_val_233.3481 = phi <{ i64, [2 x i64*] }> [ %dst.3480, %block.Cidr_Prelude.Basics.No.3432 ], [ %node_Cidr_Prelude.Strings.StrCons.3477, %block.Cidr_Prelude.Basics.Yes.3433 ]
  %alloc_bytes.3482 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3483 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3482 to i64
  %new_node_ptr.3484 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3483 monotonic
  %new_node_ptr.3485 = inttoptr i64 %new_node_ptr.3484 to i64*
  %tag.3486 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main12_val_233.3481, 0
  switch i64 %tag.3486, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.3487
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.3489
  ]

block.Cidr_Prelude.Strings.StrCons.3487:          ; preds = %block.exit.3478
  %ptr_Cidr_Prelude.Strings.StrCons.3488 = bitcast i64* %new_node_ptr.3485 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main12_val_233.3481, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.3488, align 1
  br label %block.exit.3493

block.Cidr_Prelude.Strings.StrNil.3489:           ; preds = %block.exit.3478
  %src.3490 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main12_val_233.3481, 0
  %dst.3491 = insertvalue <{ i64 }> undef, i64 %src.3490, 0
  %ptr_Cidr_Prelude.Strings.StrNil.3492 = bitcast i64* %new_node_ptr.3485 to <{ i64 }>*
  store <{ i64 }> %dst.3491, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.3492, align 1
  br label %block.exit.3493

block.exit.3493:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.3489, %block.Cidr_Prelude.Strings.StrCons.3487
  %idr_Main.main11_val_230.3494 = tail call fastcc <{ i64, [2 x i64*] }> @idr__Prelude.Strings.unpack_with_36(i64* %new_node_ptr.3353, i64* %new_node_ptr.3485)
  %alloc_bytes.3495 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3496 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3495 to i64
  %new_node_ptr.3497 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3496 monotonic
  %new_node_ptr.3498 = inttoptr i64 %new_node_ptr.3497 to i64*
  %tag.3499 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main11_val_230.3494, 0
  switch i64 %tag.3499, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.3500"
    i64 9, label %block.Cidr_Prelude.List.Nil.3502
  ]

"block.Cidr_Prelude.List.::.3500":                ; preds = %block.exit.3493
  %"ptr_Cidr_Prelude.List.::.3501" = bitcast i64* %new_node_ptr.3498 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main11_val_230.3494, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.3501", align 1
  br label %block.exit.3506

block.Cidr_Prelude.List.Nil.3502:                 ; preds = %block.exit.3493
  %src.3503 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main11_val_230.3494, 0
  %dst.3504 = insertvalue <{ i64 }> undef, i64 %src.3503, 0
  %ptr_Cidr_Prelude.List.Nil.3505 = bitcast i64* %new_node_ptr.3498 to <{ i64 }>*
  store <{ i64 }> %dst.3504, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.3505, align 1
  br label %block.exit.3506

block.exit.3506:                                  ; preds = %block.Cidr_Prelude.List.Nil.3502, %"block.Cidr_Prelude.List.::.3500"
  %"node_Cidr_Prelude.List.::.3507" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.3347, 1, 0
  %"node_Cidr_Prelude.List.::.3508" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.3507", i64* %new_node_ptr.3498, 1, 1
  br label %block.exit.3509

block.exit.3509:                                  ; preds = %block.exit.3506, %block.Cidr_Prelude.Basics.No.3334
  %idr_Main.main9_val_218.3512 = phi <{ i64, [2 x i64*] }> [ %dst.3511, %block.Cidr_Prelude.Basics.No.3334 ], [ %"node_Cidr_Prelude.List.::.3508", %block.exit.3506 ]
  %alloc_bytes.3513 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3514 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3513 to i64
  %new_node_ptr.3515 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3514 monotonic
  %new_node_ptr.3516 = inttoptr i64 %new_node_ptr.3515 to i64*
  %tag.3517 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_218.3512, 0
  switch i64 %tag.3517, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.3518"
    i64 9, label %block.Cidr_Prelude.List.Nil.3520
  ]

"block.Cidr_Prelude.List.::.3518":                ; preds = %block.exit.3509
  %"ptr_Cidr_Prelude.List.::.3519" = bitcast i64* %new_node_ptr.3516 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main9_val_218.3512, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.3519", align 1
  br label %block.exit.3524

block.Cidr_Prelude.List.Nil.3520:                 ; preds = %block.exit.3509
  %src.3521 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_218.3512, 0
  %dst.3522 = insertvalue <{ i64 }> undef, i64 %src.3521, 0
  %ptr_Cidr_Prelude.List.Nil.3523 = bitcast i64* %new_node_ptr.3516 to <{ i64 }>*
  store <{ i64 }> %dst.3522, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.3523, align 1
  br label %block.exit.3524

block.exit.3524:                                  ; preds = %block.Cidr_Prelude.List.Nil.3520, %"block.Cidr_Prelude.List.::.3518"
  %idr_Main.main9_val_217.3525 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %new_node_ptr.3516)
  %alloc_bytes.3526 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3527 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3526 to i64
  %new_node_ptr.3528 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3527 monotonic
  %new_node_ptr.3529 = inttoptr i64 %new_node_ptr.3528 to i64*
  %tag.3530 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_217.3525, 0
  switch i64 %tag.3530, label %error_block [
    i64 30, label %block.Cidr_Main.End.3531
    i64 31, label %block.Cidr_Main.Lit.3535
    i64 32, label %block.Cidr_Main.Number.3537
    i64 33, label %block.Cidr_Main.Str.3543
  ]

block.Cidr_Main.End.3531:                         ; preds = %block.exit.3524
  %src.3532 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_217.3525, 0
  %dst.3533 = insertvalue <{ i64 }> undef, i64 %src.3532, 0
  %ptr_Cidr_Main.End.3534 = bitcast i64* %new_node_ptr.3529 to <{ i64 }>*
  store <{ i64 }> %dst.3533, <{ i64 }>* %ptr_Cidr_Main.End.3534, align 1
  br label %block.exit.3549

block.Cidr_Main.Lit.3535:                         ; preds = %block.exit.3524
  %ptr_Cidr_Main.Lit.3536 = bitcast i64* %new_node_ptr.3529 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main9_val_217.3525, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.3536, align 1
  br label %block.exit.3549

block.Cidr_Main.Number.3537:                      ; preds = %block.exit.3524
  %src.3538 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_217.3525, 0
  %dst.3539 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3538, 0
  %src.3540 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_217.3525, 1, 0
  %dst.3541 = insertvalue <{ i64, [1 x i64*] }> %dst.3539, i64* %src.3540, 1, 0
  %ptr_Cidr_Main.Number.3542 = bitcast i64* %new_node_ptr.3529 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3541, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.3542, align 1
  br label %block.exit.3549

block.Cidr_Main.Str.3543:                         ; preds = %block.exit.3524
  %src.3544 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_217.3525, 0
  %dst.3545 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3544, 0
  %src.3546 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main9_val_217.3525, 1, 0
  %dst.3547 = insertvalue <{ i64, [1 x i64*] }> %dst.3545, i64* %src.3546, 1, 0
  %ptr_Cidr_Main.Str.3548 = bitcast i64* %new_node_ptr.3529 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3547, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.3548, align 1
  br label %block.exit.3549

block.exit.3549:                                  ; preds = %block.Cidr_Main.Str.3543, %block.Cidr_Main.Number.3537, %block.Cidr_Main.Lit.3535, %block.Cidr_Main.End.3531
  %node_CGrString.3550 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.3551 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3552 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3551 to i64
  %new_node_ptr.3553 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3552 monotonic
  %new_node_ptr.3554 = inttoptr i64 %new_node_ptr.3553 to i64*
  %tag.3555 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3550, 0
  %ptr_CGrString.3556 = bitcast i64* %new_node_ptr.3554 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3550, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3556, align 1
  %idr_Main.main9_val_216.3557 = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @idr_Main.printFmt(i64* %new_node_ptr.3529, i64* %new_node_ptr.3554)
  %alloc_bytes.3558 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>, <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>* null, i32 1
  %alloc_bytes.3559 = ptrtoint <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>* %alloc_bytes.3558 to i64
  %new_node_ptr.3560 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3559 monotonic
  %new_node_ptr.3561 = inttoptr i64 %new_node_ptr.3560 to i64*
  %tag.3562 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 0
  switch i64 %tag.3562, label %error_block [
    i64 3, label %block.CGrString.3563
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.3569"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.3577"
  ]

block.CGrString.3563:                             ; preds = %block.exit.3549
  %src.3564 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 0
  %dst.3565 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.3564, 0
  %src.3566 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 1, 0
  %dst.3567 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.3565, { i8*, i64 }* %src.3566, 1, 0
  %ptr_CGrString.3568 = bitcast i64* %new_node_ptr.3561 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.3567, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3568, align 1
  br label %block.exit.3585

"block.Cidr_{U_Main.{printFmt_14}_1}.3569":       ; preds = %block.exit.3549
  %src.3570 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 0
  %dst.3571 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3570, 0
  %src.3572 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 2, 1
  %dst.3573 = insertvalue <{ i64, [2 x i64*] }> %dst.3571, i64* %src.3572, 1, 1
  %src.3574 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 2, 0
  %dst.3575 = insertvalue <{ i64, [2 x i64*] }> %dst.3573, i64* %src.3574, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3576" = bitcast i64* %new_node_ptr.3561 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3575, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3576", align 1
  br label %block.exit.3585

"block.Cidr_{U_Main.{printFmt_15}_1}.3577":       ; preds = %block.exit.3549
  %src.3578 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 0
  %dst.3579 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3578, 0
  %src.3580 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 2, 1
  %dst.3581 = insertvalue <{ i64, [2 x i64*] }> %dst.3579, i64* %src.3580, 1, 1
  %src.3582 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main9_val_216.3557, 2, 0
  %dst.3583 = insertvalue <{ i64, [2 x i64*] }> %dst.3581, i64* %src.3582, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.3584" = bitcast i64* %new_node_ptr.3561 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3583, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.3584", align 1
  br label %block.exit.3585

block.exit.3585:                                  ; preds = %"block.Cidr_{U_Main.{printFmt_15}_1}.3577", %"block.Cidr_{U_Main.{printFmt_14}_1}.3569", %block.CGrString.3563
  %node_CGrInt.3586 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 42, 1, 0
  %alloc_bytes.3587 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3588 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3587 to i64
  %new_node_ptr.3589 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3588 monotonic
  %new_node_ptr.3590 = inttoptr i64 %new_node_ptr.3589 to i64*
  %tag.3591 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.3586, 0
  %ptr_CGrInt.3592 = bitcast i64* %new_node_ptr.3590 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.3586, <{ i64, [1 x i64] }>* %ptr_CGrInt.3592, align 1
  %idr_Main.main9_val_215.3593 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.3561, i64* %new_node_ptr.3590)
  %alloc_bytes.3594 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.3595 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.3594 to i64
  %new_node_ptr.3596 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3595 monotonic
  %new_node_ptr.3597 = inttoptr i64 %new_node_ptr.3596 to i64*
  %tag.3598 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  switch i64 %tag.3598, label %error_block [
    i64 0, label %block.CErased.3599
    i64 1, label %block.CGrFloat.3603
    i64 2, label %block.CGrInt.3609
    i64 3, label %block.CGrString.3615
    i64 4, label %block.Cidr_Builtins.MkPair.3621
    i64 5, label %"block.Cidr_Data.Vect.::.3629"
    i64 6, label %block.Cidr_Prelude.Bool.False.3637
    i64 7, label %block.Cidr_Prelude.Bool.True.3641
    i64 8, label %"block.Cidr_Prelude.List.::.3645"
    i64 9, label %block.Cidr_Prelude.List.Nil.3653
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.3657"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.3667"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.3673"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.3681"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.3689"
  ]

block.CErased.3599:                               ; preds = %block.exit.3585
  %src.3600 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3601 = insertvalue <{ i64 }> undef, i64 %src.3600, 0
  %ptr_CErased.3602 = bitcast i64* %new_node_ptr.3597 to <{ i64 }>*
  store <{ i64 }> %dst.3601, <{ i64 }>* %ptr_CErased.3602, align 1
  br label %block.exit.3695

block.CGrFloat.3603:                              ; preds = %block.exit.3585
  %src.3604 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3605 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.3604, 0
  %src.3606 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 1, 0
  %dst.3607 = insertvalue <{ i64, [1 x float] }> %dst.3605, float %src.3606, 1, 0
  %ptr_CGrFloat.3608 = bitcast i64* %new_node_ptr.3597 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.3607, <{ i64, [1 x float] }>* %ptr_CGrFloat.3608, align 1
  br label %block.exit.3695

block.CGrInt.3609:                                ; preds = %block.exit.3585
  %src.3610 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3611 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.3610, 0
  %src.3612 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 2, 0
  %dst.3613 = insertvalue <{ i64, [1 x i64] }> %dst.3611, i64 %src.3612, 1, 0
  %ptr_CGrInt.3614 = bitcast i64* %new_node_ptr.3597 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.3613, <{ i64, [1 x i64] }>* %ptr_CGrInt.3614, align 1
  br label %block.exit.3695

block.CGrString.3615:                             ; preds = %block.exit.3585
  %src.3616 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3617 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.3616, 0
  %src.3618 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 3, 0
  %dst.3619 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.3617, { i8*, i64 }* %src.3618, 1, 0
  %ptr_CGrString.3620 = bitcast i64* %new_node_ptr.3597 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.3619, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3620, align 1
  br label %block.exit.3695

block.Cidr_Builtins.MkPair.3621:                  ; preds = %block.exit.3585
  %src.3622 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3623 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3622, 0
  %src.3624 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 1
  %dst.3625 = insertvalue <{ i64, [2 x i64*] }> %dst.3623, i64* %src.3624, 1, 1
  %src.3626 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3627 = insertvalue <{ i64, [2 x i64*] }> %dst.3625, i64* %src.3626, 1, 0
  %ptr_Cidr_Builtins.MkPair.3628 = bitcast i64* %new_node_ptr.3597 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3627, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.3628, align 1
  br label %block.exit.3695

"block.Cidr_Data.Vect.::.3629":                   ; preds = %block.exit.3585
  %src.3630 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3631 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3630, 0
  %src.3632 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 1
  %dst.3633 = insertvalue <{ i64, [2 x i64*] }> %dst.3631, i64* %src.3632, 1, 1
  %src.3634 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3635 = insertvalue <{ i64, [2 x i64*] }> %dst.3633, i64* %src.3634, 1, 0
  %"ptr_Cidr_Data.Vect.::.3636" = bitcast i64* %new_node_ptr.3597 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3635, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.3636", align 1
  br label %block.exit.3695

block.Cidr_Prelude.Bool.False.3637:               ; preds = %block.exit.3585
  %src.3638 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3639 = insertvalue <{ i64 }> undef, i64 %src.3638, 0
  %ptr_Cidr_Prelude.Bool.False.3640 = bitcast i64* %new_node_ptr.3597 to <{ i64 }>*
  store <{ i64 }> %dst.3639, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.3640, align 1
  br label %block.exit.3695

block.Cidr_Prelude.Bool.True.3641:                ; preds = %block.exit.3585
  %src.3642 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3643 = insertvalue <{ i64 }> undef, i64 %src.3642, 0
  %ptr_Cidr_Prelude.Bool.True.3644 = bitcast i64* %new_node_ptr.3597 to <{ i64 }>*
  store <{ i64 }> %dst.3643, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3644, align 1
  br label %block.exit.3695

"block.Cidr_Prelude.List.::.3645":                ; preds = %block.exit.3585
  %src.3646 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3647 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3646, 0
  %src.3648 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 1
  %dst.3649 = insertvalue <{ i64, [2 x i64*] }> %dst.3647, i64* %src.3648, 1, 1
  %src.3650 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3651 = insertvalue <{ i64, [2 x i64*] }> %dst.3649, i64* %src.3650, 1, 0
  %"ptr_Cidr_Prelude.List.::.3652" = bitcast i64* %new_node_ptr.3597 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3651, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.3652", align 1
  br label %block.exit.3695

block.Cidr_Prelude.List.Nil.3653:                 ; preds = %block.exit.3585
  %src.3654 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3655 = insertvalue <{ i64 }> undef, i64 %src.3654, 0
  %ptr_Cidr_Prelude.List.Nil.3656 = bitcast i64* %new_node_ptr.3597 to <{ i64 }>*
  store <{ i64 }> %dst.3655, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.3656, align 1
  br label %block.exit.3695

"block.Cidr_{U_Main.{adder_0}_1}.3657":           ; preds = %block.exit.3585
  %src.3658 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3659 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.3658, 0
  %src.3660 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 2
  %dst.3661 = insertvalue <{ i64, [3 x i64*] }> %dst.3659, i64* %src.3660, 1, 2
  %src.3662 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 1
  %dst.3663 = insertvalue <{ i64, [3 x i64*] }> %dst.3661, i64* %src.3662, 1, 1
  %src.3664 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3665 = insertvalue <{ i64, [3 x i64*] }> %dst.3663, i64* %src.3664, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.3666" = bitcast i64* %new_node_ptr.3597 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.3665, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.3666", align 1
  br label %block.exit.3695

"block.Cidr_{U_Main.{main_9}_1}.3667":            ; preds = %block.exit.3585
  %src.3668 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3669 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3668, 0
  %src.3670 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3671 = insertvalue <{ i64, [1 x i64*] }> %dst.3669, i64* %src.3670, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.3672" = bitcast i64* %new_node_ptr.3597 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3671, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.3672", align 1
  br label %block.exit.3695

"block.Cidr_{U_Main.{printFmt_14}_1}.3673":       ; preds = %block.exit.3585
  %src.3674 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3675 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3674, 0
  %src.3676 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 1
  %dst.3677 = insertvalue <{ i64, [2 x i64*] }> %dst.3675, i64* %src.3676, 1, 1
  %src.3678 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3679 = insertvalue <{ i64, [2 x i64*] }> %dst.3677, i64* %src.3678, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3680" = bitcast i64* %new_node_ptr.3597 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3679, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3680", align 1
  br label %block.exit.3695

"block.Cidr_{U_Main.{printFmt_15}_1}.3681":       ; preds = %block.exit.3585
  %src.3682 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3683 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3682, 0
  %src.3684 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 1
  %dst.3685 = insertvalue <{ i64, [2 x i64*] }> %dst.3683, i64* %src.3684, 1, 1
  %src.3686 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3687 = insertvalue <{ i64, [2 x i64*] }> %dst.3685, i64* %src.3686, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.3688" = bitcast i64* %new_node_ptr.3597 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3687, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.3688", align 1
  br label %block.exit.3695

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.3689": ; preds = %block.exit.3585
  %src.3690 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 0
  %dst.3691 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3690, 0
  %src.3692 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main9_val_215.3593, 4, 0
  %dst.3693 = insertvalue <{ i64, [1 x i64*] }> %dst.3691, i64* %src.3692, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.3694" = bitcast i64* %new_node_ptr.3597 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3693, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.3694", align 1
  br label %block.exit.3695

block.exit.3695:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.3689", %"block.Cidr_{U_Main.{printFmt_15}_1}.3681", %"block.Cidr_{U_Main.{printFmt_14}_1}.3673", %"block.Cidr_{U_Main.{main_9}_1}.3667", %"block.Cidr_{U_Main.{adder_0}_1}.3657", %block.Cidr_Prelude.List.Nil.3653, %"block.Cidr_Prelude.List.::.3645", %block.Cidr_Prelude.Bool.True.3641, %block.Cidr_Prelude.Bool.False.3637, %"block.Cidr_Data.Vect.::.3629", %block.Cidr_Builtins.MkPair.3621, %block.CGrString.3615, %block.CGrInt.3609, %block.CGrFloat.3603, %block.CErased.3599
  %node_CGrString.3696 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.4, 1, 0
  %alloc_bytes.3697 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3698 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3697 to i64
  %new_node_ptr.3699 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3698 monotonic
  %new_node_ptr.3700 = inttoptr i64 %new_node_ptr.3699 to i64*
  %tag.3701 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3696, 0
  %ptr_CGrString.3702 = bitcast i64* %new_node_ptr.3700 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3696, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3702, align 1
  %idr_Main.main9_val_214.3703 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.3597, i64* %new_node_ptr.3700)
  %alloc_bytes.3704 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3705 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3704 to i64
  %new_node_ptr.3706 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3705 monotonic
  %new_node_ptr.3707 = inttoptr i64 %new_node_ptr.3706 to i64*
  %tag.3708 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main9_val_214.3703, 0
  %ptr_CGrString.3709 = bitcast i64* %new_node_ptr.3707 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main9_val_214.3703, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3709, align 1
  %idr_Main.main9_val_213.3710 = tail call fastcc <{ i64 }> @idris_write_str(i64* %idr_Main.main0, i64* %new_node_ptr.3707)
  %alloc_bytes.3711 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3712 = ptrtoint <{ i64 }>* %alloc_bytes.3711 to i64
  %new_node_ptr.3713 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3712 monotonic
  %new_node_ptr.3714 = inttoptr i64 %new_node_ptr.3713 to i64*
  %tag.3715 = extractvalue <{ i64 }> %idr_Main.main9_val_213.3710, 0
  %ptr_CUnit.3716 = bitcast i64* %new_node_ptr.3714 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main9_val_213.3710, <{ i64 }>* %ptr_CUnit.3716, align 1
  %alloc_bytes.3717 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3718 = ptrtoint <{ i64 }>* %alloc_bytes.3717 to i64
  %new_node_ptr.3719 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3718 monotonic
  %new_node_ptr.3720 = inttoptr i64 %new_node_ptr.3719 to i64*
  %tag.3721 = extractvalue <{ i64 }> <{ i64 34 }>, 0
  %ptr_Cidr_MkUnit.3722 = bitcast i64* %new_node_ptr.3720 to <{ i64 }>*
  store <{ i64 }> <{ i64 34 }>, <{ i64 }>* %ptr_Cidr_MkUnit.3722, align 1
  %alloc_bytes.3723 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3724 = ptrtoint <{ i64 }>* %alloc_bytes.3723 to i64
  %new_node_ptr.3725 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3724 monotonic
  %new_node_ptr.3726 = inttoptr i64 %new_node_ptr.3725 to i64*
  %tag.3727 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3728 = bitcast i64* %new_node_ptr.3726 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3728, align 1
  %alloc_bytes.3729 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3730 = ptrtoint <{ i64 }>* %alloc_bytes.3729 to i64
  %new_node_ptr.3731 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3730 monotonic
  %new_node_ptr.3732 = inttoptr i64 %new_node_ptr.3731 to i64*
  %tag.3733 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3734 = bitcast i64* %new_node_ptr.3732 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3734, align 1
  %idr_Main.main10_val_283.3735 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.3726, i64* %new_node_ptr.3732)
  %alloc_bytes.3736 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3737 = ptrtoint <{ i64 }>* %alloc_bytes.3736 to i64
  %new_node_ptr.3738 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3737 monotonic
  %new_node_ptr.3739 = inttoptr i64 %new_node_ptr.3738 to i64*
  %tag.3740 = extractvalue <{ i64 }> %idr_Main.main10_val_283.3735, 0
  switch i64 %tag.3740, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3741
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3743
  ]

block.Cidr_Prelude.Basics.No.3741:                ; preds = %block.exit.3695
  %ptr_Cidr_Prelude.Basics.No.3742 = bitcast i64* %new_node_ptr.3739 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main10_val_283.3735, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3742, align 1
  br label %block.exit.3745

block.Cidr_Prelude.Basics.Yes.3743:               ; preds = %block.exit.3695
  %ptr_Cidr_Prelude.Basics.Yes.3744 = bitcast i64* %new_node_ptr.3739 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main10_val_283.3735, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3744, align 1
  br label %block.exit.3745

block.exit.3745:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3743, %block.Cidr_Prelude.Basics.No.3741
  %tag.3746 = load i64, i64* %new_node_ptr.3739, align 1
  switch i64 %tag.3746, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3747
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3750
  ]

block.Cidr_Prelude.Basics.No.3747:                ; preds = %block.exit.3745
  %ptr_Cidr_Prelude.Basics.No.3748 = bitcast i64* %new_node_ptr.3739 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.3749 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3748, align 1
  br label %block.exit.3753

block.Cidr_Prelude.Basics.Yes.3750:               ; preds = %block.exit.3745
  %ptr_Cidr_Prelude.Basics.Yes.3751 = bitcast i64* %new_node_ptr.3739 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.3752 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3751, align 1
  br label %block.exit.3753

block.exit.3753:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3750, %block.Cidr_Prelude.Basics.No.3747
  %idr_Main.main10_val_289.3754 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.3749, %block.Cidr_Prelude.Basics.No.3747 ], [ %node_Cidr_Prelude.Basics.Yes.3752, %block.Cidr_Prelude.Basics.Yes.3750 ]
  %tag.3755 = extractvalue <{ i64 }> %idr_Main.main10_val_289.3754, 0
  switch i64 %tag.3755, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3756
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3757
  ]

block.Cidr_Prelude.Basics.No.3756:                ; preds = %block.exit.3753
  %src.3932 = extractvalue <{ i64 }> <{ i64 9 }>, 0
  %dst.3933 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3932, 0
  br label %block.exit.3931

block.Cidr_Prelude.Basics.Yes.3757:               ; preds = %block.exit.3753
  %node_CGrString.3758 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.6, 1, 0
  %alloc_bytes.3759 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3760 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3759 to i64
  %new_node_ptr.3761 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3760 monotonic
  %new_node_ptr.3762 = inttoptr i64 %new_node_ptr.3761 to i64*
  %tag.3763 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3758, 0
  %ptr_CGrString.3764 = bitcast i64* %new_node_ptr.3762 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3758, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3764, align 1
  %idr_Main.main11_val_290.3765 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.3762)
  %alloc_bytes.3766 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3767 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3766 to i64
  %new_node_ptr.3768 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3767 monotonic
  %new_node_ptr.3769 = inttoptr i64 %new_node_ptr.3768 to i64*
  %tag.3770 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main11_val_290.3765, 0
  %ptr_CGrInt.3771 = bitcast i64* %new_node_ptr.3769 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main11_val_290.3765, <{ i64, [1 x i64] }>* %ptr_CGrInt.3771, align 1
  %alloc_bytes.3772 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3773 = ptrtoint <{ i64 }>* %alloc_bytes.3772 to i64
  %new_node_ptr.3774 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3773 monotonic
  %new_node_ptr.3775 = inttoptr i64 %new_node_ptr.3774 to i64*
  %tag.3776 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.3777 = bitcast i64* %new_node_ptr.3775 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.3777, align 1
  %node_CGrString.3778 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.6, 1, 0
  %alloc_bytes.3779 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3780 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3779 to i64
  %new_node_ptr.3781 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3780 monotonic
  %new_node_ptr.3782 = inttoptr i64 %new_node_ptr.3781 to i64*
  %tag.3783 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3778, 0
  %ptr_CGrString.3784 = bitcast i64* %new_node_ptr.3782 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3778, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3784, align 1
  %idr_Main.main13_val_301.3785 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3782)
  %alloc_bytes.3786 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3787 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3786 to i64
  %new_node_ptr.3788 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3787 monotonic
  %new_node_ptr.3789 = inttoptr i64 %new_node_ptr.3788 to i64*
  %tag.3790 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_301.3785, 0
  %ptr_CGrString.3791 = bitcast i64* %new_node_ptr.3789 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main13_val_301.3785, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3791, align 1
  %node_CGrString.3792 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.3793 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3794 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3793 to i64
  %new_node_ptr.3795 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3794 monotonic
  %new_node_ptr.3796 = inttoptr i64 %new_node_ptr.3795 to i64*
  %tag.3797 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3792, 0
  %ptr_CGrString.3798 = bitcast i64* %new_node_ptr.3796 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3792, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3798, align 1
  %idr_Main.main13_val_300.3799 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.3789, i64* %new_node_ptr.3796)
  %alloc_bytes.3800 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3801 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3800 to i64
  %new_node_ptr.3802 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3801 monotonic
  %new_node_ptr.3803 = inttoptr i64 %new_node_ptr.3802 to i64*
  %tag.3804 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main13_val_300.3799, 0
  %ptr_CGrInt.3805 = bitcast i64* %new_node_ptr.3803 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main13_val_300.3799, <{ i64, [1 x i64] }>* %ptr_CGrInt.3805, align 1
  %tag.3806 = load i64, i64* %new_node_ptr.3803, align 1
  %ptr_CGrInt.3807 = bitcast i64* %new_node_ptr.3803 to <{ i64, [1 x i64] }>*
  %node_CGrInt.3808 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.3807, align 1
  %tag.3809 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.3808, 0
  switch i64 %tag.3809, label %error_block [
    i64 2, label %block.CGrInt.3810
  ]

block.CGrInt.3810:                                ; preds = %block.Cidr_Prelude.Basics.Yes.3757
  %idr_Main.main_cpat_LInt64_0_309 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.3808, 1, 0
  switch i64 %idr_Main.main_cpat_LInt64_0_309, label %block.default.3811 [
    i64 0, label %block.int_0.3812
  ]

block.default.3811:                               ; preds = %block.CGrInt.3810
  br label %block.exit.3813

block.int_0.3812:                                 ; preds = %block.CGrInt.3810
  br label %block.exit.3813

block.exit.3813:                                  ; preds = %block.int_0.3812, %block.default.3811
  %result.CGrInt.3814 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.3811 ], [ <{ i64 7 }>, %block.int_0.3812 ]
  br label %block.exit.3815

block.exit.3815:                                  ; preds = %block.exit.3813
  %idr_Main.main13_val_299.3816 = phi <{ i64 }> [ %result.CGrInt.3814, %block.exit.3813 ]
  %alloc_bytes.3817 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3818 = ptrtoint <{ i64 }>* %alloc_bytes.3817 to i64
  %new_node_ptr.3819 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3818 monotonic
  %new_node_ptr.3820 = inttoptr i64 %new_node_ptr.3819 to i64*
  %tag.3821 = extractvalue <{ i64 }> %idr_Main.main13_val_299.3816, 0
  switch i64 %tag.3821, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.3822
    i64 7, label %block.Cidr_Prelude.Bool.True.3824
  ]

block.Cidr_Prelude.Bool.False.3822:               ; preds = %block.exit.3815
  %ptr_Cidr_Prelude.Bool.False.3823 = bitcast i64* %new_node_ptr.3820 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main13_val_299.3816, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.3823, align 1
  br label %block.exit.3826

block.Cidr_Prelude.Bool.True.3824:                ; preds = %block.exit.3815
  %ptr_Cidr_Prelude.Bool.True.3825 = bitcast i64* %new_node_ptr.3820 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main13_val_299.3816, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3825, align 1
  br label %block.exit.3826

block.exit.3826:                                  ; preds = %block.Cidr_Prelude.Bool.True.3824, %block.Cidr_Prelude.Bool.False.3822
  %alloc_bytes.3827 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3828 = ptrtoint <{ i64 }>* %alloc_bytes.3827 to i64
  %new_node_ptr.3829 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3828 monotonic
  %new_node_ptr.3830 = inttoptr i64 %new_node_ptr.3829 to i64*
  %tag.3831 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.3832 = bitcast i64* %new_node_ptr.3830 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.3832, align 1
  %idr_Main.main13_val_298.3833 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.3820, i64* %new_node_ptr.3830)
  %alloc_bytes.3834 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.3835 = ptrtoint <{ i64 }>* %alloc_bytes.3834 to i64
  %new_node_ptr.3836 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3835 monotonic
  %new_node_ptr.3837 = inttoptr i64 %new_node_ptr.3836 to i64*
  %tag.3838 = extractvalue <{ i64 }> %idr_Main.main13_val_298.3833, 0
  switch i64 %tag.3838, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3839
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3841
  ]

block.Cidr_Prelude.Basics.No.3839:                ; preds = %block.exit.3826
  %ptr_Cidr_Prelude.Basics.No.3840 = bitcast i64* %new_node_ptr.3837 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main13_val_298.3833, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3840, align 1
  br label %block.exit.3843

block.Cidr_Prelude.Basics.Yes.3841:               ; preds = %block.exit.3826
  %ptr_Cidr_Prelude.Basics.Yes.3842 = bitcast i64* %new_node_ptr.3837 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main13_val_298.3833, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3842, align 1
  br label %block.exit.3843

block.exit.3843:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3841, %block.Cidr_Prelude.Basics.No.3839
  %tag.3844 = load i64, i64* %new_node_ptr.3837, align 1
  switch i64 %tag.3844, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3845
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3848
  ]

block.Cidr_Prelude.Basics.No.3845:                ; preds = %block.exit.3843
  %ptr_Cidr_Prelude.Basics.No.3846 = bitcast i64* %new_node_ptr.3837 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.3847 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.3846, align 1
  br label %block.exit.3851

block.Cidr_Prelude.Basics.Yes.3848:               ; preds = %block.exit.3843
  %ptr_Cidr_Prelude.Basics.Yes.3849 = bitcast i64* %new_node_ptr.3837 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.3850 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.3849, align 1
  br label %block.exit.3851

block.exit.3851:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3848, %block.Cidr_Prelude.Basics.No.3845
  %idr_Main.main13_val_314.3852 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.3847, %block.Cidr_Prelude.Basics.No.3845 ], [ %node_Cidr_Prelude.Basics.Yes.3850, %block.Cidr_Prelude.Basics.Yes.3848 ]
  %tag.3853 = extractvalue <{ i64 }> %idr_Main.main13_val_314.3852, 0
  switch i64 %tag.3853, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.3854
    i64 27, label %block.Cidr_Prelude.Basics.Yes.3855
  ]

block.Cidr_Prelude.Basics.No.3854:                ; preds = %block.exit.3851
  %src.3901 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.3902 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3901, 0
  br label %block.exit.3900

block.Cidr_Prelude.Basics.Yes.3855:               ; preds = %block.exit.3851
  %node_CGrString.3856 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.6, 1, 0
  %alloc_bytes.3857 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3858 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3857 to i64
  %new_node_ptr.3859 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3858 monotonic
  %new_node_ptr.3860 = inttoptr i64 %new_node_ptr.3859 to i64*
  %tag.3861 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3856, 0
  %ptr_CGrString.3862 = bitcast i64* %new_node_ptr.3860 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3856, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3862, align 1
  %idr_Main.main14_val_316.3863 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3860)
  %alloc_bytes.3864 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3865 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3864 to i64
  %new_node_ptr.3866 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3865 monotonic
  %new_node_ptr.3867 = inttoptr i64 %new_node_ptr.3866 to i64*
  %tag.3868 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main14_val_316.3863, 0
  %ptr_CGrString.3869 = bitcast i64* %new_node_ptr.3867 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main14_val_316.3863, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3869, align 1
  %idr_Main.main14_val_315.3870 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.3867)
  %alloc_bytes.3871 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.3872 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.3871 to i64
  %new_node_ptr.3873 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3872 monotonic
  %new_node_ptr.3874 = inttoptr i64 %new_node_ptr.3873 to i64*
  %tag.3875 = extractvalue <{ i64, [1 x i64] }> %idr_Main.main14_val_315.3870, 0
  %ptr_CGrInt.3876 = bitcast i64* %new_node_ptr.3874 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Main.main14_val_315.3870, <{ i64, [1 x i64] }>* %ptr_CGrInt.3876, align 1
  %node_CGrString.3877 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.6, 1, 0
  %alloc_bytes.3878 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3879 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3878 to i64
  %new_node_ptr.3880 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3879 monotonic
  %new_node_ptr.3881 = inttoptr i64 %new_node_ptr.3880 to i64*
  %tag.3882 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3877, 0
  %ptr_CGrString.3883 = bitcast i64* %new_node_ptr.3881 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3877, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3883, align 1
  %idr_Main.main15_val_321.3884 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3881)
  %alloc_bytes.3885 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3886 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3885 to i64
  %new_node_ptr.3887 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3886 monotonic
  %new_node_ptr.3888 = inttoptr i64 %new_node_ptr.3887 to i64*
  %tag.3889 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main15_val_321.3884, 0
  %ptr_CGrString.3890 = bitcast i64* %new_node_ptr.3888 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main15_val_321.3884, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3890, align 1
  %idr_Main.main15_val.3891 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.3888)
  %alloc_bytes.3892 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3893 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3892 to i64
  %new_node_ptr.3894 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3893 monotonic
  %new_node_ptr.3895 = inttoptr i64 %new_node_ptr.3894 to i64*
  %tag.3896 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main15_val.3891, 0
  %ptr_CGrString.3897 = bitcast i64* %new_node_ptr.3895 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main15_val.3891, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3897, align 1
  %node_Cidr_Prelude.Strings.StrCons.3898 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.3874, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.3899 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.3898, i64* %new_node_ptr.3895, 1, 1
  br label %block.exit.3900

block.exit.3900:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.3855, %block.Cidr_Prelude.Basics.No.3854
  %idr_Main.main13_val_297.3903 = phi <{ i64, [2 x i64*] }> [ %dst.3902, %block.Cidr_Prelude.Basics.No.3854 ], [ %node_Cidr_Prelude.Strings.StrCons.3899, %block.Cidr_Prelude.Basics.Yes.3855 ]
  %alloc_bytes.3904 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3905 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3904 to i64
  %new_node_ptr.3906 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3905 monotonic
  %new_node_ptr.3907 = inttoptr i64 %new_node_ptr.3906 to i64*
  %tag.3908 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main13_val_297.3903, 0
  switch i64 %tag.3908, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.3909
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.3911
  ]

block.Cidr_Prelude.Strings.StrCons.3909:          ; preds = %block.exit.3900
  %ptr_Cidr_Prelude.Strings.StrCons.3910 = bitcast i64* %new_node_ptr.3907 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main13_val_297.3903, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.3910, align 1
  br label %block.exit.3915

block.Cidr_Prelude.Strings.StrNil.3911:           ; preds = %block.exit.3900
  %src.3912 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main13_val_297.3903, 0
  %dst.3913 = insertvalue <{ i64 }> undef, i64 %src.3912, 0
  %ptr_Cidr_Prelude.Strings.StrNil.3914 = bitcast i64* %new_node_ptr.3907 to <{ i64 }>*
  store <{ i64 }> %dst.3913, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.3914, align 1
  br label %block.exit.3915

block.exit.3915:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.3911, %block.Cidr_Prelude.Strings.StrCons.3909
  %idr_Main.main12_val_294.3916 = tail call fastcc <{ i64, [2 x i64*] }> @idr__Prelude.Strings.unpack_with_36(i64* %new_node_ptr.3775, i64* %new_node_ptr.3907)
  %alloc_bytes.3917 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3918 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3917 to i64
  %new_node_ptr.3919 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3918 monotonic
  %new_node_ptr.3920 = inttoptr i64 %new_node_ptr.3919 to i64*
  %tag.3921 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main12_val_294.3916, 0
  switch i64 %tag.3921, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.3922"
    i64 9, label %block.Cidr_Prelude.List.Nil.3924
  ]

"block.Cidr_Prelude.List.::.3922":                ; preds = %block.exit.3915
  %"ptr_Cidr_Prelude.List.::.3923" = bitcast i64* %new_node_ptr.3920 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main12_val_294.3916, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.3923", align 1
  br label %block.exit.3928

block.Cidr_Prelude.List.Nil.3924:                 ; preds = %block.exit.3915
  %src.3925 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main12_val_294.3916, 0
  %dst.3926 = insertvalue <{ i64 }> undef, i64 %src.3925, 0
  %ptr_Cidr_Prelude.List.Nil.3927 = bitcast i64* %new_node_ptr.3920 to <{ i64 }>*
  store <{ i64 }> %dst.3926, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.3927, align 1
  br label %block.exit.3928

block.exit.3928:                                  ; preds = %block.Cidr_Prelude.List.Nil.3924, %"block.Cidr_Prelude.List.::.3922"
  %"node_Cidr_Prelude.List.::.3929" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.3769, 1, 0
  %"node_Cidr_Prelude.List.::.3930" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.3929", i64* %new_node_ptr.3920, 1, 1
  br label %block.exit.3931

block.exit.3931:                                  ; preds = %block.exit.3928, %block.Cidr_Prelude.Basics.No.3756
  %idr_Main.main10_val_282.3934 = phi <{ i64, [2 x i64*] }> [ %dst.3933, %block.Cidr_Prelude.Basics.No.3756 ], [ %"node_Cidr_Prelude.List.::.3930", %block.exit.3928 ]
  %alloc_bytes.3935 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3936 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3935 to i64
  %new_node_ptr.3937 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3936 monotonic
  %new_node_ptr.3938 = inttoptr i64 %new_node_ptr.3937 to i64*
  %tag.3939 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_282.3934, 0
  switch i64 %tag.3939, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.3940"
    i64 9, label %block.Cidr_Prelude.List.Nil.3942
  ]

"block.Cidr_Prelude.List.::.3940":                ; preds = %block.exit.3931
  %"ptr_Cidr_Prelude.List.::.3941" = bitcast i64* %new_node_ptr.3938 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main10_val_282.3934, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.3941", align 1
  br label %block.exit.3946

block.Cidr_Prelude.List.Nil.3942:                 ; preds = %block.exit.3931
  %src.3943 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_282.3934, 0
  %dst.3944 = insertvalue <{ i64 }> undef, i64 %src.3943, 0
  %ptr_Cidr_Prelude.List.Nil.3945 = bitcast i64* %new_node_ptr.3938 to <{ i64 }>*
  store <{ i64 }> %dst.3944, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.3945, align 1
  br label %block.exit.3946

block.exit.3946:                                  ; preds = %block.Cidr_Prelude.List.Nil.3942, %"block.Cidr_Prelude.List.::.3940"
  %idr_Main.main10_val_281.3947 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %new_node_ptr.3938)
  %alloc_bytes.3948 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.3949 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.3948 to i64
  %new_node_ptr.3950 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3949 monotonic
  %new_node_ptr.3951 = inttoptr i64 %new_node_ptr.3950 to i64*
  %tag.3952 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_281.3947, 0
  switch i64 %tag.3952, label %error_block [
    i64 30, label %block.Cidr_Main.End.3953
    i64 31, label %block.Cidr_Main.Lit.3957
    i64 32, label %block.Cidr_Main.Number.3959
    i64 33, label %block.Cidr_Main.Str.3965
  ]

block.Cidr_Main.End.3953:                         ; preds = %block.exit.3946
  %src.3954 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_281.3947, 0
  %dst.3955 = insertvalue <{ i64 }> undef, i64 %src.3954, 0
  %ptr_Cidr_Main.End.3956 = bitcast i64* %new_node_ptr.3951 to <{ i64 }>*
  store <{ i64 }> %dst.3955, <{ i64 }>* %ptr_Cidr_Main.End.3956, align 1
  br label %block.exit.3971

block.Cidr_Main.Lit.3957:                         ; preds = %block.exit.3946
  %ptr_Cidr_Main.Lit.3958 = bitcast i64* %new_node_ptr.3951 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.main10_val_281.3947, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.3958, align 1
  br label %block.exit.3971

block.Cidr_Main.Number.3959:                      ; preds = %block.exit.3946
  %src.3960 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_281.3947, 0
  %dst.3961 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3960, 0
  %src.3962 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_281.3947, 1, 0
  %dst.3963 = insertvalue <{ i64, [1 x i64*] }> %dst.3961, i64* %src.3962, 1, 0
  %ptr_Cidr_Main.Number.3964 = bitcast i64* %new_node_ptr.3951 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3963, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.3964, align 1
  br label %block.exit.3971

block.Cidr_Main.Str.3965:                         ; preds = %block.exit.3946
  %src.3966 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_281.3947, 0
  %dst.3967 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.3966, 0
  %src.3968 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.main10_val_281.3947, 1, 0
  %dst.3969 = insertvalue <{ i64, [1 x i64*] }> %dst.3967, i64* %src.3968, 1, 0
  %ptr_Cidr_Main.Str.3970 = bitcast i64* %new_node_ptr.3951 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.3969, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.3970, align 1
  br label %block.exit.3971

block.exit.3971:                                  ; preds = %block.Cidr_Main.Str.3965, %block.Cidr_Main.Number.3959, %block.Cidr_Main.Lit.3957, %block.Cidr_Main.End.3953
  %node_CGrString.3972 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.3973 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.3974 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.3973 to i64
  %new_node_ptr.3975 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3974 monotonic
  %new_node_ptr.3976 = inttoptr i64 %new_node_ptr.3975 to i64*
  %tag.3977 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3972, 0
  %ptr_CGrString.3978 = bitcast i64* %new_node_ptr.3976 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.3972, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3978, align 1
  %idr_Main.main10_val_280.3979 = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @idr_Main.printFmt(i64* %new_node_ptr.3951, i64* %new_node_ptr.3976)
  %alloc_bytes.3980 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>, <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>* null, i32 1
  %alloc_bytes.3981 = ptrtoint <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }>* %alloc_bytes.3980 to i64
  %new_node_ptr.3982 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.3981 monotonic
  %new_node_ptr.3983 = inttoptr i64 %new_node_ptr.3982 to i64*
  %tag.3984 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 0
  switch i64 %tag.3984, label %error_block [
    i64 3, label %block.CGrString.3985
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.3991"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.3999"
  ]

block.CGrString.3985:                             ; preds = %block.exit.3971
  %src.3986 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 0
  %dst.3987 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.3986, 0
  %src.3988 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 1, 0
  %dst.3989 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.3987, { i8*, i64 }* %src.3988, 1, 0
  %ptr_CGrString.3990 = bitcast i64* %new_node_ptr.3983 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.3989, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.3990, align 1
  br label %block.exit.4007

"block.Cidr_{U_Main.{printFmt_14}_1}.3991":       ; preds = %block.exit.3971
  %src.3992 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 0
  %dst.3993 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.3992, 0
  %src.3994 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 2, 1
  %dst.3995 = insertvalue <{ i64, [2 x i64*] }> %dst.3993, i64* %src.3994, 1, 1
  %src.3996 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 2, 0
  %dst.3997 = insertvalue <{ i64, [2 x i64*] }> %dst.3995, i64* %src.3996, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3998" = bitcast i64* %new_node_ptr.3983 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.3997, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.3998", align 1
  br label %block.exit.4007

"block.Cidr_{U_Main.{printFmt_15}_1}.3999":       ; preds = %block.exit.3971
  %src.4000 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 0
  %dst.4001 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4000, 0
  %src.4002 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 2, 1
  %dst.4003 = insertvalue <{ i64, [2 x i64*] }> %dst.4001, i64* %src.4002, 1, 1
  %src.4004 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %idr_Main.main10_val_280.3979, 2, 0
  %dst.4005 = insertvalue <{ i64, [2 x i64*] }> %dst.4003, i64* %src.4004, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4006" = bitcast i64* %new_node_ptr.3983 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4005, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4006", align 1
  br label %block.exit.4007

block.exit.4007:                                  ; preds = %"block.Cidr_{U_Main.{printFmt_15}_1}.3999", %"block.Cidr_{U_Main.{printFmt_14}_1}.3991", %block.CGrString.3985
  %node_CGrString.4008 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.7, 1, 0
  %alloc_bytes.4009 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4010 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4009 to i64
  %new_node_ptr.4011 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4010 monotonic
  %new_node_ptr.4012 = inttoptr i64 %new_node_ptr.4011 to i64*
  %tag.4013 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4008, 0
  %ptr_CGrString.4014 = bitcast i64* %new_node_ptr.4012 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4008, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4014, align 1
  %idr_Main.main10_val_279.4015 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.3983, i64* %new_node_ptr.4012)
  %alloc_bytes.4016 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.4017 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.4016 to i64
  %new_node_ptr.4018 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4017 monotonic
  %new_node_ptr.4019 = inttoptr i64 %new_node_ptr.4018 to i64*
  %tag.4020 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  switch i64 %tag.4020, label %error_block [
    i64 0, label %block.CErased.4021
    i64 1, label %block.CGrFloat.4025
    i64 2, label %block.CGrInt.4031
    i64 3, label %block.CGrString.4037
    i64 4, label %block.Cidr_Builtins.MkPair.4043
    i64 5, label %"block.Cidr_Data.Vect.::.4051"
    i64 6, label %block.Cidr_Prelude.Bool.False.4059
    i64 7, label %block.Cidr_Prelude.Bool.True.4063
    i64 8, label %"block.Cidr_Prelude.List.::.4067"
    i64 9, label %block.Cidr_Prelude.List.Nil.4075
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.4079"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.4089"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.4095"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.4103"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4111"
  ]

block.CErased.4021:                               ; preds = %block.exit.4007
  %src.4022 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4023 = insertvalue <{ i64 }> undef, i64 %src.4022, 0
  %ptr_CErased.4024 = bitcast i64* %new_node_ptr.4019 to <{ i64 }>*
  store <{ i64 }> %dst.4023, <{ i64 }>* %ptr_CErased.4024, align 1
  br label %block.exit.4117

block.CGrFloat.4025:                              ; preds = %block.exit.4007
  %src.4026 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4027 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.4026, 0
  %src.4028 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 1, 0
  %dst.4029 = insertvalue <{ i64, [1 x float] }> %dst.4027, float %src.4028, 1, 0
  %ptr_CGrFloat.4030 = bitcast i64* %new_node_ptr.4019 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.4029, <{ i64, [1 x float] }>* %ptr_CGrFloat.4030, align 1
  br label %block.exit.4117

block.CGrInt.4031:                                ; preds = %block.exit.4007
  %src.4032 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4033 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.4032, 0
  %src.4034 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 2, 0
  %dst.4035 = insertvalue <{ i64, [1 x i64] }> %dst.4033, i64 %src.4034, 1, 0
  %ptr_CGrInt.4036 = bitcast i64* %new_node_ptr.4019 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.4035, <{ i64, [1 x i64] }>* %ptr_CGrInt.4036, align 1
  br label %block.exit.4117

block.CGrString.4037:                             ; preds = %block.exit.4007
  %src.4038 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4039 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.4038, 0
  %src.4040 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 3, 0
  %dst.4041 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.4039, { i8*, i64 }* %src.4040, 1, 0
  %ptr_CGrString.4042 = bitcast i64* %new_node_ptr.4019 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.4041, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4042, align 1
  br label %block.exit.4117

block.Cidr_Builtins.MkPair.4043:                  ; preds = %block.exit.4007
  %src.4044 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4045 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4044, 0
  %src.4046 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 1
  %dst.4047 = insertvalue <{ i64, [2 x i64*] }> %dst.4045, i64* %src.4046, 1, 1
  %src.4048 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4049 = insertvalue <{ i64, [2 x i64*] }> %dst.4047, i64* %src.4048, 1, 0
  %ptr_Cidr_Builtins.MkPair.4050 = bitcast i64* %new_node_ptr.4019 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4049, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.4050, align 1
  br label %block.exit.4117

"block.Cidr_Data.Vect.::.4051":                   ; preds = %block.exit.4007
  %src.4052 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4053 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4052, 0
  %src.4054 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 1
  %dst.4055 = insertvalue <{ i64, [2 x i64*] }> %dst.4053, i64* %src.4054, 1, 1
  %src.4056 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4057 = insertvalue <{ i64, [2 x i64*] }> %dst.4055, i64* %src.4056, 1, 0
  %"ptr_Cidr_Data.Vect.::.4058" = bitcast i64* %new_node_ptr.4019 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4057, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.4058", align 1
  br label %block.exit.4117

block.Cidr_Prelude.Bool.False.4059:               ; preds = %block.exit.4007
  %src.4060 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4061 = insertvalue <{ i64 }> undef, i64 %src.4060, 0
  %ptr_Cidr_Prelude.Bool.False.4062 = bitcast i64* %new_node_ptr.4019 to <{ i64 }>*
  store <{ i64 }> %dst.4061, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4062, align 1
  br label %block.exit.4117

block.Cidr_Prelude.Bool.True.4063:                ; preds = %block.exit.4007
  %src.4064 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4065 = insertvalue <{ i64 }> undef, i64 %src.4064, 0
  %ptr_Cidr_Prelude.Bool.True.4066 = bitcast i64* %new_node_ptr.4019 to <{ i64 }>*
  store <{ i64 }> %dst.4065, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4066, align 1
  br label %block.exit.4117

"block.Cidr_Prelude.List.::.4067":                ; preds = %block.exit.4007
  %src.4068 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4069 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4068, 0
  %src.4070 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 1
  %dst.4071 = insertvalue <{ i64, [2 x i64*] }> %dst.4069, i64* %src.4070, 1, 1
  %src.4072 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4073 = insertvalue <{ i64, [2 x i64*] }> %dst.4071, i64* %src.4072, 1, 0
  %"ptr_Cidr_Prelude.List.::.4074" = bitcast i64* %new_node_ptr.4019 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4073, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.4074", align 1
  br label %block.exit.4117

block.Cidr_Prelude.List.Nil.4075:                 ; preds = %block.exit.4007
  %src.4076 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4077 = insertvalue <{ i64 }> undef, i64 %src.4076, 0
  %ptr_Cidr_Prelude.List.Nil.4078 = bitcast i64* %new_node_ptr.4019 to <{ i64 }>*
  store <{ i64 }> %dst.4077, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.4078, align 1
  br label %block.exit.4117

"block.Cidr_{U_Main.{adder_0}_1}.4079":           ; preds = %block.exit.4007
  %src.4080 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4081 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.4080, 0
  %src.4082 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 2
  %dst.4083 = insertvalue <{ i64, [3 x i64*] }> %dst.4081, i64* %src.4082, 1, 2
  %src.4084 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 1
  %dst.4085 = insertvalue <{ i64, [3 x i64*] }> %dst.4083, i64* %src.4084, 1, 1
  %src.4086 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4087 = insertvalue <{ i64, [3 x i64*] }> %dst.4085, i64* %src.4086, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4088" = bitcast i64* %new_node_ptr.4019 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.4087, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4088", align 1
  br label %block.exit.4117

"block.Cidr_{U_Main.{main_9}_1}.4089":            ; preds = %block.exit.4007
  %src.4090 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4091 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4090, 0
  %src.4092 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4093 = insertvalue <{ i64, [1 x i64*] }> %dst.4091, i64* %src.4092, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4094" = bitcast i64* %new_node_ptr.4019 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4093, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4094", align 1
  br label %block.exit.4117

"block.Cidr_{U_Main.{printFmt_14}_1}.4095":       ; preds = %block.exit.4007
  %src.4096 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4097 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4096, 0
  %src.4098 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 1
  %dst.4099 = insertvalue <{ i64, [2 x i64*] }> %dst.4097, i64* %src.4098, 1, 1
  %src.4100 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4101 = insertvalue <{ i64, [2 x i64*] }> %dst.4099, i64* %src.4100, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4102" = bitcast i64* %new_node_ptr.4019 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4101, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4102", align 1
  br label %block.exit.4117

"block.Cidr_{U_Main.{printFmt_15}_1}.4103":       ; preds = %block.exit.4007
  %src.4104 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4105 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4104, 0
  %src.4106 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 1
  %dst.4107 = insertvalue <{ i64, [2 x i64*] }> %dst.4105, i64* %src.4106, 1, 1
  %src.4108 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4109 = insertvalue <{ i64, [2 x i64*] }> %dst.4107, i64* %src.4108, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4110" = bitcast i64* %new_node_ptr.4019 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4109, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4110", align 1
  br label %block.exit.4117

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4111": ; preds = %block.exit.4007
  %src.4112 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 0
  %dst.4113 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4112, 0
  %src.4114 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_279.4015, 4, 0
  %dst.4115 = insertvalue <{ i64, [1 x i64*] }> %dst.4113, i64* %src.4114, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4116" = bitcast i64* %new_node_ptr.4019 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4115, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4116", align 1
  br label %block.exit.4117

block.exit.4117:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4111", %"block.Cidr_{U_Main.{printFmt_15}_1}.4103", %"block.Cidr_{U_Main.{printFmt_14}_1}.4095", %"block.Cidr_{U_Main.{main_9}_1}.4089", %"block.Cidr_{U_Main.{adder_0}_1}.4079", %block.Cidr_Prelude.List.Nil.4075, %"block.Cidr_Prelude.List.::.4067", %block.Cidr_Prelude.Bool.True.4063, %block.Cidr_Prelude.Bool.False.4059, %"block.Cidr_Data.Vect.::.4051", %block.Cidr_Builtins.MkPair.4043, %block.CGrString.4037, %block.CGrInt.4031, %block.CGrFloat.4025, %block.CErased.4021
  %node_CGrInt.4118 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 97, 1, 0
  %alloc_bytes.4119 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4120 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4119 to i64
  %new_node_ptr.4121 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4120 monotonic
  %new_node_ptr.4122 = inttoptr i64 %new_node_ptr.4121 to i64*
  %tag.4123 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4118, 0
  %ptr_CGrInt.4124 = bitcast i64* %new_node_ptr.4122 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.4118, <{ i64, [1 x i64] }>* %ptr_CGrInt.4124, align 1
  %idr_Main.main10_val_278.4125 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.4019, i64* %new_node_ptr.4122)
  %alloc_bytes.4126 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.4127 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.4126 to i64
  %new_node_ptr.4128 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4127 monotonic
  %new_node_ptr.4129 = inttoptr i64 %new_node_ptr.4128 to i64*
  %tag.4130 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  switch i64 %tag.4130, label %error_block [
    i64 0, label %block.CErased.4131
    i64 1, label %block.CGrFloat.4135
    i64 2, label %block.CGrInt.4141
    i64 3, label %block.CGrString.4147
    i64 4, label %block.Cidr_Builtins.MkPair.4153
    i64 5, label %"block.Cidr_Data.Vect.::.4161"
    i64 6, label %block.Cidr_Prelude.Bool.False.4169
    i64 7, label %block.Cidr_Prelude.Bool.True.4173
    i64 8, label %"block.Cidr_Prelude.List.::.4177"
    i64 9, label %block.Cidr_Prelude.List.Nil.4185
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.4189"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.4199"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.4205"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.4213"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4221"
  ]

block.CErased.4131:                               ; preds = %block.exit.4117
  %src.4132 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4133 = insertvalue <{ i64 }> undef, i64 %src.4132, 0
  %ptr_CErased.4134 = bitcast i64* %new_node_ptr.4129 to <{ i64 }>*
  store <{ i64 }> %dst.4133, <{ i64 }>* %ptr_CErased.4134, align 1
  br label %block.exit.4227

block.CGrFloat.4135:                              ; preds = %block.exit.4117
  %src.4136 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4137 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.4136, 0
  %src.4138 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 1, 0
  %dst.4139 = insertvalue <{ i64, [1 x float] }> %dst.4137, float %src.4138, 1, 0
  %ptr_CGrFloat.4140 = bitcast i64* %new_node_ptr.4129 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.4139, <{ i64, [1 x float] }>* %ptr_CGrFloat.4140, align 1
  br label %block.exit.4227

block.CGrInt.4141:                                ; preds = %block.exit.4117
  %src.4142 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4143 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.4142, 0
  %src.4144 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 2, 0
  %dst.4145 = insertvalue <{ i64, [1 x i64] }> %dst.4143, i64 %src.4144, 1, 0
  %ptr_CGrInt.4146 = bitcast i64* %new_node_ptr.4129 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.4145, <{ i64, [1 x i64] }>* %ptr_CGrInt.4146, align 1
  br label %block.exit.4227

block.CGrString.4147:                             ; preds = %block.exit.4117
  %src.4148 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4149 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.4148, 0
  %src.4150 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 3, 0
  %dst.4151 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.4149, { i8*, i64 }* %src.4150, 1, 0
  %ptr_CGrString.4152 = bitcast i64* %new_node_ptr.4129 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.4151, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4152, align 1
  br label %block.exit.4227

block.Cidr_Builtins.MkPair.4153:                  ; preds = %block.exit.4117
  %src.4154 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4155 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4154, 0
  %src.4156 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 1
  %dst.4157 = insertvalue <{ i64, [2 x i64*] }> %dst.4155, i64* %src.4156, 1, 1
  %src.4158 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4159 = insertvalue <{ i64, [2 x i64*] }> %dst.4157, i64* %src.4158, 1, 0
  %ptr_Cidr_Builtins.MkPair.4160 = bitcast i64* %new_node_ptr.4129 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4159, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.4160, align 1
  br label %block.exit.4227

"block.Cidr_Data.Vect.::.4161":                   ; preds = %block.exit.4117
  %src.4162 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4163 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4162, 0
  %src.4164 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 1
  %dst.4165 = insertvalue <{ i64, [2 x i64*] }> %dst.4163, i64* %src.4164, 1, 1
  %src.4166 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4167 = insertvalue <{ i64, [2 x i64*] }> %dst.4165, i64* %src.4166, 1, 0
  %"ptr_Cidr_Data.Vect.::.4168" = bitcast i64* %new_node_ptr.4129 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4167, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.4168", align 1
  br label %block.exit.4227

block.Cidr_Prelude.Bool.False.4169:               ; preds = %block.exit.4117
  %src.4170 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4171 = insertvalue <{ i64 }> undef, i64 %src.4170, 0
  %ptr_Cidr_Prelude.Bool.False.4172 = bitcast i64* %new_node_ptr.4129 to <{ i64 }>*
  store <{ i64 }> %dst.4171, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4172, align 1
  br label %block.exit.4227

block.Cidr_Prelude.Bool.True.4173:                ; preds = %block.exit.4117
  %src.4174 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4175 = insertvalue <{ i64 }> undef, i64 %src.4174, 0
  %ptr_Cidr_Prelude.Bool.True.4176 = bitcast i64* %new_node_ptr.4129 to <{ i64 }>*
  store <{ i64 }> %dst.4175, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4176, align 1
  br label %block.exit.4227

"block.Cidr_Prelude.List.::.4177":                ; preds = %block.exit.4117
  %src.4178 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4179 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4178, 0
  %src.4180 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 1
  %dst.4181 = insertvalue <{ i64, [2 x i64*] }> %dst.4179, i64* %src.4180, 1, 1
  %src.4182 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4183 = insertvalue <{ i64, [2 x i64*] }> %dst.4181, i64* %src.4182, 1, 0
  %"ptr_Cidr_Prelude.List.::.4184" = bitcast i64* %new_node_ptr.4129 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4183, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.4184", align 1
  br label %block.exit.4227

block.Cidr_Prelude.List.Nil.4185:                 ; preds = %block.exit.4117
  %src.4186 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4187 = insertvalue <{ i64 }> undef, i64 %src.4186, 0
  %ptr_Cidr_Prelude.List.Nil.4188 = bitcast i64* %new_node_ptr.4129 to <{ i64 }>*
  store <{ i64 }> %dst.4187, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.4188, align 1
  br label %block.exit.4227

"block.Cidr_{U_Main.{adder_0}_1}.4189":           ; preds = %block.exit.4117
  %src.4190 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4191 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.4190, 0
  %src.4192 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 2
  %dst.4193 = insertvalue <{ i64, [3 x i64*] }> %dst.4191, i64* %src.4192, 1, 2
  %src.4194 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 1
  %dst.4195 = insertvalue <{ i64, [3 x i64*] }> %dst.4193, i64* %src.4194, 1, 1
  %src.4196 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4197 = insertvalue <{ i64, [3 x i64*] }> %dst.4195, i64* %src.4196, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4198" = bitcast i64* %new_node_ptr.4129 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.4197, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4198", align 1
  br label %block.exit.4227

"block.Cidr_{U_Main.{main_9}_1}.4199":            ; preds = %block.exit.4117
  %src.4200 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4201 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4200, 0
  %src.4202 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4203 = insertvalue <{ i64, [1 x i64*] }> %dst.4201, i64* %src.4202, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4204" = bitcast i64* %new_node_ptr.4129 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4203, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4204", align 1
  br label %block.exit.4227

"block.Cidr_{U_Main.{printFmt_14}_1}.4205":       ; preds = %block.exit.4117
  %src.4206 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4207 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4206, 0
  %src.4208 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 1
  %dst.4209 = insertvalue <{ i64, [2 x i64*] }> %dst.4207, i64* %src.4208, 1, 1
  %src.4210 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4211 = insertvalue <{ i64, [2 x i64*] }> %dst.4209, i64* %src.4210, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4212" = bitcast i64* %new_node_ptr.4129 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4211, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4212", align 1
  br label %block.exit.4227

"block.Cidr_{U_Main.{printFmt_15}_1}.4213":       ; preds = %block.exit.4117
  %src.4214 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4215 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4214, 0
  %src.4216 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 1
  %dst.4217 = insertvalue <{ i64, [2 x i64*] }> %dst.4215, i64* %src.4216, 1, 1
  %src.4218 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4219 = insertvalue <{ i64, [2 x i64*] }> %dst.4217, i64* %src.4218, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4220" = bitcast i64* %new_node_ptr.4129 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4219, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4220", align 1
  br label %block.exit.4227

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4221": ; preds = %block.exit.4117
  %src.4222 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 0
  %dst.4223 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4222, 0
  %src.4224 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Main.main10_val_278.4125, 4, 0
  %dst.4225 = insertvalue <{ i64, [1 x i64*] }> %dst.4223, i64* %src.4224, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4226" = bitcast i64* %new_node_ptr.4129 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4225, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4226", align 1
  br label %block.exit.4227

block.exit.4227:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4221", %"block.Cidr_{U_Main.{printFmt_15}_1}.4213", %"block.Cidr_{U_Main.{printFmt_14}_1}.4205", %"block.Cidr_{U_Main.{main_9}_1}.4199", %"block.Cidr_{U_Main.{adder_0}_1}.4189", %block.Cidr_Prelude.List.Nil.4185, %"block.Cidr_Prelude.List.::.4177", %block.Cidr_Prelude.Bool.True.4173, %block.Cidr_Prelude.Bool.False.4169, %"block.Cidr_Data.Vect.::.4161", %block.Cidr_Builtins.MkPair.4153, %block.CGrString.4147, %block.CGrInt.4141, %block.CGrFloat.4135, %block.CErased.4131
  %node_CGrString.4228 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.4, 1, 0
  %alloc_bytes.4229 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4230 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4229 to i64
  %new_node_ptr.4231 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4230 monotonic
  %new_node_ptr.4232 = inttoptr i64 %new_node_ptr.4231 to i64*
  %tag.4233 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4228, 0
  %ptr_CGrString.4234 = bitcast i64* %new_node_ptr.4232 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4228, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4234, align 1
  %idr_Main.main10_val_277.4235 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.4129, i64* %new_node_ptr.4232)
  %alloc_bytes.4236 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4237 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4236 to i64
  %new_node_ptr.4238 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4237 monotonic
  %new_node_ptr.4239 = inttoptr i64 %new_node_ptr.4238 to i64*
  %tag.4240 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main10_val_277.4235, 0
  %ptr_CGrString.4241 = bitcast i64* %new_node_ptr.4239 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.main10_val_277.4235, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4241, align 1
  %idr_Main.main10_val_276.4242 = tail call fastcc <{ i64 }> @idris_write_str(i64* %idr_Main.main0, i64* %new_node_ptr.4239)
  %alloc_bytes.4243 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4244 = ptrtoint <{ i64 }>* %alloc_bytes.4243 to i64
  %new_node_ptr.4245 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4244 monotonic
  %new_node_ptr.4246 = inttoptr i64 %new_node_ptr.4245 to i64*
  %tag.4247 = extractvalue <{ i64 }> %idr_Main.main10_val_276.4242, 0
  %ptr_CUnit.4248 = bitcast i64* %new_node_ptr.4246 to <{ i64 }>*
  store <{ i64 }> %idr_Main.main10_val_276.4242, <{ i64 }>* %ptr_CUnit.4248, align 1
  ret <{ i64 }> <{ i64 34 }>

error_block:                                      ; preds = %block.exit.4117, %block.exit.4007, %block.exit.3971, %block.exit.3946, %block.exit.3931, %block.exit.3915, %block.exit.3900, %block.exit.3851, %block.exit.3843, %block.exit.3826, %block.exit.3815, %block.Cidr_Prelude.Basics.Yes.3757, %block.exit.3753, %block.exit.3745, %block.exit.3695, %block.exit.3585, %block.exit.3549, %block.exit.3524, %block.exit.3509, %block.exit.3493, %block.exit.3478, %block.exit.3429, %block.exit.3421, %block.exit.3404, %block.exit.3393, %block.Cidr_Prelude.Basics.Yes.3335, %block.exit.3331, %block.exit.3323, %block.exit.3273, %block.exit.3237, %block.exit.3212, %block.exit.3197, %block.exit.3181, %block.exit.3166, %block.exit.3117, %block.exit.3109, %block.exit.3092, %block.exit.3081, %block.Cidr_Prelude.Basics.Yes.3023, %block.exit.3019, %block.exit.3011, %block.exit.2981, %block.exit.2871, %block.exit.2761, %block.exit.2607, %block.exit.2497, %block.exit.2343, %idr_Main.main.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %idr_Prelude.Show.primNumShow0, i64* %idr_Prelude.Show.primNumShow1, i64* %idr_Prelude.Show.primNumShow2, i64* %idr_Prelude.Show.primNumShow3) #0 {
idr_Prelude.Show.primNumShow.entry:
  %idr_Prelude.Show.primNumShow4_val.4249 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %idr_Prelude.Show.primNumShow1, i64* %idr_Prelude.Show.primNumShow3)
  %alloc_bytes.4250 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.4251 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.4250 to i64
  %new_node_ptr.4252 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4251 monotonic
  %new_node_ptr.4253 = inttoptr i64 %new_node_ptr.4252 to i64*
  %tag.4254 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  switch i64 %tag.4254, label %error_block [
    i64 0, label %block.CErased.4255
    i64 1, label %block.CGrFloat.4259
    i64 2, label %block.CGrInt.4265
    i64 3, label %block.CGrString.4271
    i64 4, label %block.Cidr_Builtins.MkPair.4277
    i64 5, label %"block.Cidr_Data.Vect.::.4285"
    i64 6, label %block.Cidr_Prelude.Bool.False.4293
    i64 7, label %block.Cidr_Prelude.Bool.True.4297
    i64 8, label %"block.Cidr_Prelude.List.::.4301"
    i64 9, label %block.Cidr_Prelude.List.Nil.4309
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.4313"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.4323"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.4329"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.4337"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4345"
  ]

block.CErased.4255:                               ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4256 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4257 = insertvalue <{ i64 }> undef, i64 %src.4256, 0
  %ptr_CErased.4258 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  store <{ i64 }> %dst.4257, <{ i64 }>* %ptr_CErased.4258, align 1
  br label %block.exit.4351

block.CGrFloat.4259:                              ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4260 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4261 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.4260, 0
  %src.4262 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 1, 0
  %dst.4263 = insertvalue <{ i64, [1 x float] }> %dst.4261, float %src.4262, 1, 0
  %ptr_CGrFloat.4264 = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.4263, <{ i64, [1 x float] }>* %ptr_CGrFloat.4264, align 1
  br label %block.exit.4351

block.CGrInt.4265:                                ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4266 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4267 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.4266, 0
  %src.4268 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 2, 0
  %dst.4269 = insertvalue <{ i64, [1 x i64] }> %dst.4267, i64 %src.4268, 1, 0
  %ptr_CGrInt.4270 = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.4269, <{ i64, [1 x i64] }>* %ptr_CGrInt.4270, align 1
  br label %block.exit.4351

block.CGrString.4271:                             ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4272 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4273 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.4272, 0
  %src.4274 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 3, 0
  %dst.4275 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.4273, { i8*, i64 }* %src.4274, 1, 0
  %ptr_CGrString.4276 = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.4275, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4276, align 1
  br label %block.exit.4351

block.Cidr_Builtins.MkPair.4277:                  ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4278 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4279 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4278, 0
  %src.4280 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 1
  %dst.4281 = insertvalue <{ i64, [2 x i64*] }> %dst.4279, i64* %src.4280, 1, 1
  %src.4282 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4283 = insertvalue <{ i64, [2 x i64*] }> %dst.4281, i64* %src.4282, 1, 0
  %ptr_Cidr_Builtins.MkPair.4284 = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4283, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.4284, align 1
  br label %block.exit.4351

"block.Cidr_Data.Vect.::.4285":                   ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4286 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4287 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4286, 0
  %src.4288 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 1
  %dst.4289 = insertvalue <{ i64, [2 x i64*] }> %dst.4287, i64* %src.4288, 1, 1
  %src.4290 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4291 = insertvalue <{ i64, [2 x i64*] }> %dst.4289, i64* %src.4290, 1, 0
  %"ptr_Cidr_Data.Vect.::.4292" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4291, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.4292", align 1
  br label %block.exit.4351

block.Cidr_Prelude.Bool.False.4293:               ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4294 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4295 = insertvalue <{ i64 }> undef, i64 %src.4294, 0
  %ptr_Cidr_Prelude.Bool.False.4296 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  store <{ i64 }> %dst.4295, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4296, align 1
  br label %block.exit.4351

block.Cidr_Prelude.Bool.True.4297:                ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4298 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4299 = insertvalue <{ i64 }> undef, i64 %src.4298, 0
  %ptr_Cidr_Prelude.Bool.True.4300 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  store <{ i64 }> %dst.4299, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4300, align 1
  br label %block.exit.4351

"block.Cidr_Prelude.List.::.4301":                ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4302 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4303 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4302, 0
  %src.4304 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 1
  %dst.4305 = insertvalue <{ i64, [2 x i64*] }> %dst.4303, i64* %src.4304, 1, 1
  %src.4306 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4307 = insertvalue <{ i64, [2 x i64*] }> %dst.4305, i64* %src.4306, 1, 0
  %"ptr_Cidr_Prelude.List.::.4308" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4307, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.4308", align 1
  br label %block.exit.4351

block.Cidr_Prelude.List.Nil.4309:                 ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4310 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4311 = insertvalue <{ i64 }> undef, i64 %src.4310, 0
  %ptr_Cidr_Prelude.List.Nil.4312 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  store <{ i64 }> %dst.4311, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.4312, align 1
  br label %block.exit.4351

"block.Cidr_{U_Main.{adder_0}_1}.4313":           ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4314 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4315 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.4314, 0
  %src.4316 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 2
  %dst.4317 = insertvalue <{ i64, [3 x i64*] }> %dst.4315, i64* %src.4316, 1, 2
  %src.4318 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 1
  %dst.4319 = insertvalue <{ i64, [3 x i64*] }> %dst.4317, i64* %src.4318, 1, 1
  %src.4320 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4321 = insertvalue <{ i64, [3 x i64*] }> %dst.4319, i64* %src.4320, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4322" = bitcast i64* %new_node_ptr.4253 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.4321, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4322", align 1
  br label %block.exit.4351

"block.Cidr_{U_Main.{main_9}_1}.4323":            ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4324 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4325 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4324, 0
  %src.4326 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4327 = insertvalue <{ i64, [1 x i64*] }> %dst.4325, i64* %src.4326, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4328" = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4327, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4328", align 1
  br label %block.exit.4351

"block.Cidr_{U_Main.{printFmt_14}_1}.4329":       ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4330 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4331 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4330, 0
  %src.4332 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 1
  %dst.4333 = insertvalue <{ i64, [2 x i64*] }> %dst.4331, i64* %src.4332, 1, 1
  %src.4334 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4335 = insertvalue <{ i64, [2 x i64*] }> %dst.4333, i64* %src.4334, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4336" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4335, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4336", align 1
  br label %block.exit.4351

"block.Cidr_{U_Main.{printFmt_15}_1}.4337":       ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4338 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4339 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4338, 0
  %src.4340 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 1
  %dst.4341 = insertvalue <{ i64, [2 x i64*] }> %dst.4339, i64* %src.4340, 1, 1
  %src.4342 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4343 = insertvalue <{ i64, [2 x i64*] }> %dst.4341, i64* %src.4342, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4344" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4343, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4344", align 1
  br label %block.exit.4351

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4345": ; preds = %idr_Prelude.Show.primNumShow.entry
  %src.4346 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 0
  %dst.4347 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4346, 0
  %src.4348 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.primNumShow4_val.4249, 4, 0
  %dst.4349 = insertvalue <{ i64, [1 x i64*] }> %dst.4347, i64* %src.4348, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4350" = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4349, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4350", align 1
  br label %block.exit.4351

block.exit.4351:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4345", %"block.Cidr_{U_Main.{printFmt_15}_1}.4337", %"block.Cidr_{U_Main.{printFmt_14}_1}.4329", %"block.Cidr_{U_Main.{main_9}_1}.4323", %"block.Cidr_{U_Main.{adder_0}_1}.4313", %block.Cidr_Prelude.List.Nil.4309, %"block.Cidr_Prelude.List.::.4301", %block.Cidr_Prelude.Bool.True.4297, %block.Cidr_Prelude.Bool.False.4293, %"block.Cidr_Data.Vect.::.4285", %block.Cidr_Builtins.MkPair.4277, %block.CGrString.4271, %block.CGrInt.4265, %block.CGrFloat.4259, %block.CErased.4255
  %tag.4352 = load i64, i64* %idr_Prelude.Show.primNumShow2, align 1
  %ptr_Cidr_Prelude.Show.Open.4353 = bitcast i64* %idr_Prelude.Show.primNumShow2 to <{ i64 }>*
  %node_Cidr_Prelude.Show.Open.4354 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.4353, align 1
  %tag.4355 = extractvalue <{ i64 }> %node_Cidr_Prelude.Show.Open.4354, 0
  switch i64 %tag.4355, label %error_block [
    i64 35, label %block.Cidr_Prelude.Show.Open.4356
  ]

block.Cidr_Prelude.Show.Open.4356:                ; preds = %block.exit.4351
  %node_CGrInt.4357 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 0, 1, 0
  br label %block.exit.4358

block.exit.4358:                                  ; preds = %block.Cidr_Prelude.Show.Open.4356
  %idr_Prelude.Show.primNumShow5_val_344.4359 = phi <{ i64, [1 x i64] }> [ %node_CGrInt.4357, %block.Cidr_Prelude.Show.Open.4356 ]
  %alloc_bytes.4360 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4361 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4360 to i64
  %new_node_ptr.4362 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4361 monotonic
  %new_node_ptr.4363 = inttoptr i64 %new_node_ptr.4362 to i64*
  %tag.4364 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow5_val_344.4359, 0
  %ptr_CGrInt.4365 = bitcast i64* %new_node_ptr.4363 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow5_val_344.4359, <{ i64, [1 x i64] }>* %ptr_CGrInt.4365, align 1
  %node_CGrInt.4366 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 5, 1, 0
  %alloc_bytes.4367 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4368 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4367 to i64
  %new_node_ptr.4369 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4368 monotonic
  %new_node_ptr.4370 = inttoptr i64 %new_node_ptr.4369 to i64*
  %tag.4371 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4366, 0
  %ptr_CGrInt.4372 = bitcast i64* %new_node_ptr.4370 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.4366, <{ i64, [1 x i64] }>* %ptr_CGrInt.4372, align 1
  %idr_Prelude.Show.primNumShow5_val_343.4373 = tail call fastcc <{ i64 }> @"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0"(i64* %new_node_ptr.4363, i64* %new_node_ptr.4370)
  %alloc_bytes.4374 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4375 = ptrtoint <{ i64 }>* %alloc_bytes.4374 to i64
  %new_node_ptr.4376 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4375 monotonic
  %new_node_ptr.4377 = inttoptr i64 %new_node_ptr.4376 to i64*
  %tag.4378 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow5_val_343.4373, 0
  switch i64 %tag.4378, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.4379
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.4381
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.4383
  ]

block.Cidr_Prelude.Interfaces.EQ.4379:            ; preds = %block.exit.4358
  %ptr_Cidr_Prelude.Interfaces.EQ.4380 = bitcast i64* %new_node_ptr.4377 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow5_val_343.4373, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.4380, align 1
  br label %block.exit.4385

block.Cidr_Prelude.Interfaces.GT.4381:            ; preds = %block.exit.4358
  %ptr_Cidr_Prelude.Interfaces.GT.4382 = bitcast i64* %new_node_ptr.4377 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow5_val_343.4373, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.4382, align 1
  br label %block.exit.4385

block.Cidr_Prelude.Interfaces.LT.4383:            ; preds = %block.exit.4358
  %ptr_Cidr_Prelude.Interfaces.LT.4384 = bitcast i64* %new_node_ptr.4377 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow5_val_343.4373, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.4384, align 1
  br label %block.exit.4385

block.exit.4385:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.4383, %block.Cidr_Prelude.Interfaces.GT.4381, %block.Cidr_Prelude.Interfaces.EQ.4379
  %tag.4386 = load i64, i64* %new_node_ptr.4377, align 1
  switch i64 %tag.4386, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.4387
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.4390
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.4393
  ]

block.Cidr_Prelude.Interfaces.EQ.4387:            ; preds = %block.exit.4385
  %ptr_Cidr_Prelude.Interfaces.EQ.4388 = bitcast i64* %new_node_ptr.4377 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.EQ.4389 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.4388, align 1
  br label %block.exit.4396

block.Cidr_Prelude.Interfaces.GT.4390:            ; preds = %block.exit.4385
  %ptr_Cidr_Prelude.Interfaces.GT.4391 = bitcast i64* %new_node_ptr.4377 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.GT.4392 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.4391, align 1
  br label %block.exit.4396

block.Cidr_Prelude.Interfaces.LT.4393:            ; preds = %block.exit.4385
  %ptr_Cidr_Prelude.Interfaces.LT.4394 = bitcast i64* %new_node_ptr.4377 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.LT.4395 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.4394, align 1
  br label %block.exit.4396

block.exit.4396:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.4393, %block.Cidr_Prelude.Interfaces.GT.4390, %block.Cidr_Prelude.Interfaces.EQ.4387
  %idr_Prelude.Show.primNumShow5_val_346.4397 = phi <{ i64 }> [ %node_Cidr_Prelude.Interfaces.EQ.4389, %block.Cidr_Prelude.Interfaces.EQ.4387 ], [ %node_Cidr_Prelude.Interfaces.GT.4392, %block.Cidr_Prelude.Interfaces.GT.4390 ], [ %node_Cidr_Prelude.Interfaces.LT.4395, %block.Cidr_Prelude.Interfaces.LT.4393 ]
  %tag.4398 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow5_val_346.4397, 0
  switch i64 %tag.4398, label %block.default.4399 [
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.4439
  ]

block.default.4399:                               ; preds = %block.exit.4396
  %tag.4400 = load i64, i64* %idr_Prelude.Show.primNumShow2, align 1
  %ptr_Cidr_Prelude.Show.Open.4401 = bitcast i64* %idr_Prelude.Show.primNumShow2 to <{ i64 }>*
  %node_Cidr_Prelude.Show.Open.4402 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.4401, align 1
  %tag.4403 = extractvalue <{ i64 }> %node_Cidr_Prelude.Show.Open.4402, 0
  switch i64 %tag.4403, label %error_block [
    i64 35, label %block.Cidr_Prelude.Show.Open.4404
  ]

block.Cidr_Prelude.Show.Open.4404:                ; preds = %block.default.4399
  %node_CGrInt.4405 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 0, 1, 0
  br label %block.exit.4406

block.exit.4406:                                  ; preds = %block.Cidr_Prelude.Show.Open.4404
  %idr_Prelude.Show.primNumShow6_val_348.4407 = phi <{ i64, [1 x i64] }> [ %node_CGrInt.4405, %block.Cidr_Prelude.Show.Open.4404 ]
  %alloc_bytes.4408 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4409 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4408 to i64
  %new_node_ptr.4410 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4409 monotonic
  %new_node_ptr.4411 = inttoptr i64 %new_node_ptr.4410 to i64*
  %tag.4412 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow6_val_348.4407, 0
  %ptr_CGrInt.4413 = bitcast i64* %new_node_ptr.4411 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow6_val_348.4407, <{ i64, [1 x i64] }>* %ptr_CGrInt.4413, align 1
  %node_CGrInt.4414 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 5, 1, 0
  %alloc_bytes.4415 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4416 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4415 to i64
  %new_node_ptr.4417 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4416 monotonic
  %new_node_ptr.4418 = inttoptr i64 %new_node_ptr.4417 to i64*
  %tag.4419 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4414, 0
  %ptr_CGrInt.4420 = bitcast i64* %new_node_ptr.4418 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.4414, <{ i64, [1 x i64] }>* %ptr_CGrInt.4420, align 1
  %idr_Prelude.Show.primNumShow6_val_347.4421 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %new_node_ptr.4411, i64* %new_node_ptr.4418)
  %alloc_bytes.4422 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4423 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4422 to i64
  %new_node_ptr.4424 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4423 monotonic
  %new_node_ptr.4425 = inttoptr i64 %new_node_ptr.4424 to i64*
  %tag.4426 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow6_val_347.4421, 0
  %ptr_CGrInt.4427 = bitcast i64* %new_node_ptr.4425 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow6_val_347.4421, <{ i64, [1 x i64] }>* %ptr_CGrInt.4427, align 1
  %tag.4428 = load i64, i64* %new_node_ptr.4425, align 1
  %ptr_CGrInt.4429 = bitcast i64* %new_node_ptr.4425 to <{ i64, [1 x i64] }>*
  %node_CGrInt.4430 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.4429, align 1
  %tag.4431 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4430, 0
  switch i64 %tag.4431, label %error_block [
    i64 2, label %block.CGrInt.4432
  ]

block.CGrInt.4432:                                ; preds = %block.exit.4406
  %idr_Prelude.Show.primNumShow_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4430, 1, 0
  switch i64 %idr_Prelude.Show.primNumShow_cpat_LInt64_0, label %block.default.4433 [
    i64 0, label %block.int_0.4434
  ]

block.default.4433:                               ; preds = %block.CGrInt.4432
  br label %block.exit.4435

block.int_0.4434:                                 ; preds = %block.CGrInt.4432
  br label %block.exit.4435

block.exit.4435:                                  ; preds = %block.int_0.4434, %block.default.4433
  %result.CGrInt.4436 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.4433 ], [ <{ i64 6 }>, %block.int_0.4434 ]
  br label %block.exit.4437

block.exit.4437:                                  ; preds = %block.exit.4435
  %result.default.4438 = phi <{ i64 }> [ %result.CGrInt.4436, %block.exit.4435 ]
  br label %block.exit.4440

block.Cidr_Prelude.Interfaces.GT.4439:            ; preds = %block.exit.4396
  br label %block.exit.4440

block.exit.4440:                                  ; preds = %block.Cidr_Prelude.Interfaces.GT.4439, %block.exit.4437
  %idr_Prelude.Show.primNumShow5_val_342.4441 = phi <{ i64 }> [ %result.default.4438, %block.exit.4437 ], [ <{ i64 7 }>, %block.Cidr_Prelude.Interfaces.GT.4439 ]
  %alloc_bytes.4442 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4443 = ptrtoint <{ i64 }>* %alloc_bytes.4442 to i64
  %new_node_ptr.4444 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4443 monotonic
  %new_node_ptr.4445 = inttoptr i64 %new_node_ptr.4444 to i64*
  %tag.4446 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow5_val_342.4441, 0
  switch i64 %tag.4446, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4447
    i64 7, label %block.Cidr_Prelude.Bool.True.4449
  ]

block.Cidr_Prelude.Bool.False.4447:               ; preds = %block.exit.4440
  %ptr_Cidr_Prelude.Bool.False.4448 = bitcast i64* %new_node_ptr.4445 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow5_val_342.4441, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4448, align 1
  br label %block.exit.4451

block.Cidr_Prelude.Bool.True.4449:                ; preds = %block.exit.4440
  %ptr_Cidr_Prelude.Bool.True.4450 = bitcast i64* %new_node_ptr.4445 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow5_val_342.4441, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4450, align 1
  br label %block.exit.4451

block.exit.4451:                                  ; preds = %block.Cidr_Prelude.Bool.True.4449, %block.Cidr_Prelude.Bool.False.4447
  %tag.4452 = load i64, i64* %new_node_ptr.4445, align 1
  switch i64 %tag.4452, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4453
    i64 7, label %block.Cidr_Prelude.Bool.True.4456
  ]

block.Cidr_Prelude.Bool.False.4453:               ; preds = %block.exit.4451
  %ptr_Cidr_Prelude.Bool.False.4454 = bitcast i64* %new_node_ptr.4445 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.4455 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4454, align 1
  br label %block.exit.4459

block.Cidr_Prelude.Bool.True.4456:                ; preds = %block.exit.4451
  %ptr_Cidr_Prelude.Bool.True.4457 = bitcast i64* %new_node_ptr.4445 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.4458 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4457, align 1
  br label %block.exit.4459

block.exit.4459:                                  ; preds = %block.Cidr_Prelude.Bool.True.4456, %block.Cidr_Prelude.Bool.False.4453
  %idr_Prelude.Show.primNumShow5_val_354.4460 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.4455, %block.Cidr_Prelude.Bool.False.4453 ], [ %node_Cidr_Prelude.Bool.True.4458, %block.Cidr_Prelude.Bool.True.4456 ]
  %tag.4461 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow5_val_354.4460, 0
  switch i64 %tag.4461, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4462
    i64 7, label %block.Cidr_Prelude.Bool.True.4463
  ]

block.Cidr_Prelude.Bool.False.4462:               ; preds = %block.exit.4459
  br label %block.exit.4562

block.Cidr_Prelude.Bool.True.4463:                ; preds = %block.exit.4459
  %node_CGrString.4464 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.4465 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4466 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4465 to i64
  %new_node_ptr.4467 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4466 monotonic
  %new_node_ptr.4468 = inttoptr i64 %new_node_ptr.4467 to i64*
  %tag.4469 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4464, 0
  %ptr_CGrString.4470 = bitcast i64* %new_node_ptr.4468 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4464, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4470, align 1
  %idr_Prelude.Show.primNumShow6_val_357.4471 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.4253, i64* %new_node_ptr.4468)
  %alloc_bytes.4472 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4473 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4472 to i64
  %new_node_ptr.4474 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4473 monotonic
  %new_node_ptr.4475 = inttoptr i64 %new_node_ptr.4474 to i64*
  %tag.4476 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow6_val_357.4471, 0
  %ptr_CGrInt.4477 = bitcast i64* %new_node_ptr.4475 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow6_val_357.4471, <{ i64, [1 x i64] }>* %ptr_CGrInt.4477, align 1
  %tag.4478 = load i64, i64* %new_node_ptr.4475, align 1
  %ptr_CGrInt.4479 = bitcast i64* %new_node_ptr.4475 to <{ i64, [1 x i64] }>*
  %node_CGrInt.4480 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.4479, align 1
  %tag.4481 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4480, 0
  switch i64 %tag.4481, label %error_block [
    i64 2, label %block.CGrInt.4482
  ]

block.CGrInt.4482:                                ; preds = %block.Cidr_Prelude.Bool.True.4463
  %idr_Prelude.Show.primNumShow_cpat_LInt64_0_362 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4480, 1, 0
  switch i64 %idr_Prelude.Show.primNumShow_cpat_LInt64_0_362, label %block.default.4483 [
    i64 0, label %block.int_0.4484
  ]

block.default.4483:                               ; preds = %block.CGrInt.4482
  br label %block.exit.4485

block.int_0.4484:                                 ; preds = %block.CGrInt.4482
  br label %block.exit.4485

block.exit.4485:                                  ; preds = %block.int_0.4484, %block.default.4483
  %result.CGrInt.4486 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.4483 ], [ <{ i64 7 }>, %block.int_0.4484 ]
  br label %block.exit.4487

block.exit.4487:                                  ; preds = %block.exit.4485
  %idr_Prelude.Show.primNumShow6_val_356.4488 = phi <{ i64 }> [ %result.CGrInt.4486, %block.exit.4485 ]
  %alloc_bytes.4489 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4490 = ptrtoint <{ i64 }>* %alloc_bytes.4489 to i64
  %new_node_ptr.4491 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4490 monotonic
  %new_node_ptr.4492 = inttoptr i64 %new_node_ptr.4491 to i64*
  %tag.4493 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow6_val_356.4488, 0
  switch i64 %tag.4493, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4494
    i64 7, label %block.Cidr_Prelude.Bool.True.4496
  ]

block.Cidr_Prelude.Bool.False.4494:               ; preds = %block.exit.4487
  %ptr_Cidr_Prelude.Bool.False.4495 = bitcast i64* %new_node_ptr.4492 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow6_val_356.4488, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4495, align 1
  br label %block.exit.4498

block.Cidr_Prelude.Bool.True.4496:                ; preds = %block.exit.4487
  %ptr_Cidr_Prelude.Bool.True.4497 = bitcast i64* %new_node_ptr.4492 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow6_val_356.4488, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4497, align 1
  br label %block.exit.4498

block.exit.4498:                                  ; preds = %block.Cidr_Prelude.Bool.True.4496, %block.Cidr_Prelude.Bool.False.4494
  %alloc_bytes.4499 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4500 = ptrtoint <{ i64 }>* %alloc_bytes.4499 to i64
  %new_node_ptr.4501 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4500 monotonic
  %new_node_ptr.4502 = inttoptr i64 %new_node_ptr.4501 to i64*
  %tag.4503 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.4504 = bitcast i64* %new_node_ptr.4502 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4504, align 1
  %idr_Prelude.Show.primNumShow6_val_355.4505 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.4492, i64* %new_node_ptr.4502)
  %alloc_bytes.4506 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4507 = ptrtoint <{ i64 }>* %alloc_bytes.4506 to i64
  %new_node_ptr.4508 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4507 monotonic
  %new_node_ptr.4509 = inttoptr i64 %new_node_ptr.4508 to i64*
  %tag.4510 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow6_val_355.4505, 0
  switch i64 %tag.4510, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.4511
    i64 27, label %block.Cidr_Prelude.Basics.Yes.4513
  ]

block.Cidr_Prelude.Basics.No.4511:                ; preds = %block.exit.4498
  %ptr_Cidr_Prelude.Basics.No.4512 = bitcast i64* %new_node_ptr.4509 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow6_val_355.4505, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.4512, align 1
  br label %block.exit.4515

block.Cidr_Prelude.Basics.Yes.4513:               ; preds = %block.exit.4498
  %ptr_Cidr_Prelude.Basics.Yes.4514 = bitcast i64* %new_node_ptr.4509 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow6_val_355.4505, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.4514, align 1
  br label %block.exit.4515

block.exit.4515:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.4513, %block.Cidr_Prelude.Basics.No.4511
  %tag.4516 = load i64, i64* %new_node_ptr.4509, align 1
  switch i64 %tag.4516, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.4517
    i64 27, label %block.Cidr_Prelude.Basics.Yes.4520
  ]

block.Cidr_Prelude.Basics.No.4517:                ; preds = %block.exit.4515
  %ptr_Cidr_Prelude.Basics.No.4518 = bitcast i64* %new_node_ptr.4509 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.4519 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.4518, align 1
  br label %block.exit.4523

block.Cidr_Prelude.Basics.Yes.4520:               ; preds = %block.exit.4515
  %ptr_Cidr_Prelude.Basics.Yes.4521 = bitcast i64* %new_node_ptr.4509 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.4522 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.4521, align 1
  br label %block.exit.4523

block.exit.4523:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.4520, %block.Cidr_Prelude.Basics.No.4517
  %idr_Prelude.Show.primNumShow6_val_367.4524 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.4519, %block.Cidr_Prelude.Basics.No.4517 ], [ %node_Cidr_Prelude.Basics.Yes.4522, %block.Cidr_Prelude.Basics.Yes.4520 ]
  %tag.4525 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow6_val_367.4524, 0
  switch i64 %tag.4525, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.4526
    i64 27, label %block.Cidr_Prelude.Basics.Yes.4527
  ]

block.Cidr_Prelude.Basics.No.4526:                ; preds = %block.exit.4523
  br label %block.exit.4560

block.Cidr_Prelude.Basics.Yes.4527:               ; preds = %block.exit.4523
  %idr_Prelude.Show.primNumShow7_val_369.4528 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.4253)
  %alloc_bytes.4529 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4530 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4529 to i64
  %new_node_ptr.4531 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4530 monotonic
  %new_node_ptr.4532 = inttoptr i64 %new_node_ptr.4531 to i64*
  %tag.4533 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow7_val_369.4528, 0
  %ptr_CGrInt.4534 = bitcast i64* %new_node_ptr.4532 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow7_val_369.4528, <{ i64, [1 x i64] }>* %ptr_CGrInt.4534, align 1
  %node_CGrInt.4535 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 45, 1, 0
  %alloc_bytes.4536 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4537 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4536 to i64
  %new_node_ptr.4538 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4537 monotonic
  %new_node_ptr.4539 = inttoptr i64 %new_node_ptr.4538 to i64*
  %tag.4540 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4535, 0
  %ptr_CGrInt.4541 = bitcast i64* %new_node_ptr.4539 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.4535, <{ i64, [1 x i64] }>* %ptr_CGrInt.4541, align 1
  %idr_Prelude.Show.primNumShow7_val_368.4542 = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %new_node_ptr.4532, i64* %new_node_ptr.4539)
  %alloc_bytes.4543 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4544 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4543 to i64
  %new_node_ptr.4545 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4544 monotonic
  %new_node_ptr.4546 = inttoptr i64 %new_node_ptr.4545 to i64*
  %tag.4547 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow7_val_368.4542, 0
  %ptr_CGrInt.4548 = bitcast i64* %new_node_ptr.4546 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.primNumShow7_val_368.4542, <{ i64, [1 x i64] }>* %ptr_CGrInt.4548, align 1
  %tag.4549 = load i64, i64* %new_node_ptr.4546, align 1
  %ptr_CGrInt.4550 = bitcast i64* %new_node_ptr.4546 to <{ i64, [1 x i64] }>*
  %node_CGrInt.4551 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.4550, align 1
  %tag.4552 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4551, 0
  switch i64 %tag.4552, label %error_block [
    i64 2, label %block.CGrInt.4553
  ]

block.CGrInt.4553:                                ; preds = %block.Cidr_Prelude.Basics.Yes.4527
  %idr_Prelude.Show.primNumShow_cpat_LInt64_0_373 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4551, 1, 0
  switch i64 %idr_Prelude.Show.primNumShow_cpat_LInt64_0_373, label %block.default.4554 [
    i64 0, label %block.int_0.4555
  ]

block.default.4554:                               ; preds = %block.CGrInt.4553
  br label %block.exit.4556

block.int_0.4555:                                 ; preds = %block.CGrInt.4553
  br label %block.exit.4556

block.exit.4556:                                  ; preds = %block.int_0.4555, %block.default.4554
  %result.CGrInt.4557 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.4554 ], [ <{ i64 6 }>, %block.int_0.4555 ]
  br label %block.exit.4558

block.exit.4558:                                  ; preds = %block.exit.4556
  %result.Cidr_Prelude.Basics.Yes.4559 = phi <{ i64 }> [ %result.CGrInt.4557, %block.exit.4556 ]
  br label %block.exit.4560

block.exit.4560:                                  ; preds = %block.exit.4558, %block.Cidr_Prelude.Basics.No.4526
  %result.Cidr_Prelude.Bool.True.4561 = phi <{ i64 }> [ <{ i64 6 }>, %block.Cidr_Prelude.Basics.No.4526 ], [ %result.Cidr_Prelude.Basics.Yes.4559, %block.exit.4558 ]
  br label %block.exit.4562

block.exit.4562:                                  ; preds = %block.exit.4560, %block.Cidr_Prelude.Bool.False.4462
  %idr_Prelude.Show.primNumShow5_val.4563 = phi <{ i64 }> [ <{ i64 6 }>, %block.Cidr_Prelude.Bool.False.4462 ], [ %result.Cidr_Prelude.Bool.True.4561, %block.exit.4560 ]
  %alloc_bytes.4564 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4565 = ptrtoint <{ i64 }>* %alloc_bytes.4564 to i64
  %new_node_ptr.4566 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4565 monotonic
  %new_node_ptr.4567 = inttoptr i64 %new_node_ptr.4566 to i64*
  %tag.4568 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow5_val.4563, 0
  switch i64 %tag.4568, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4569
    i64 7, label %block.Cidr_Prelude.Bool.True.4571
  ]

block.Cidr_Prelude.Bool.False.4569:               ; preds = %block.exit.4562
  %ptr_Cidr_Prelude.Bool.False.4570 = bitcast i64* %new_node_ptr.4567 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow5_val.4563, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4570, align 1
  br label %block.exit.4573

block.Cidr_Prelude.Bool.True.4571:                ; preds = %block.exit.4562
  %ptr_Cidr_Prelude.Bool.True.4572 = bitcast i64* %new_node_ptr.4567 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.primNumShow5_val.4563, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4572, align 1
  br label %block.exit.4573

block.exit.4573:                                  ; preds = %block.Cidr_Prelude.Bool.True.4571, %block.Cidr_Prelude.Bool.False.4569
  %tag.4574 = load i64, i64* %new_node_ptr.4567, align 1
  switch i64 %tag.4574, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4575
    i64 7, label %block.Cidr_Prelude.Bool.True.4578
  ]

block.Cidr_Prelude.Bool.False.4575:               ; preds = %block.exit.4573
  %ptr_Cidr_Prelude.Bool.False.4576 = bitcast i64* %new_node_ptr.4567 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.4577 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4576, align 1
  br label %block.exit.4581

block.Cidr_Prelude.Bool.True.4578:                ; preds = %block.exit.4573
  %ptr_Cidr_Prelude.Bool.True.4579 = bitcast i64* %new_node_ptr.4567 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.4580 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4579, align 1
  br label %block.exit.4581

block.exit.4581:                                  ; preds = %block.Cidr_Prelude.Bool.True.4578, %block.Cidr_Prelude.Bool.False.4575
  %idr_Prelude.Show.primNumShow5_val_375.4582 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.4577, %block.Cidr_Prelude.Bool.False.4575 ], [ %node_Cidr_Prelude.Bool.True.4580, %block.Cidr_Prelude.Bool.True.4578 ]
  %tag.4583 = extractvalue <{ i64 }> %idr_Prelude.Show.primNumShow5_val_375.4582, 0
  switch i64 %tag.4583, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4584
    i64 7, label %block.Cidr_Prelude.Bool.True.4699
  ]

block.Cidr_Prelude.Bool.False.4584:               ; preds = %block.exit.4581
  %tag.4585 = load i64, i64* %new_node_ptr.4253, align 1
  switch i64 %tag.4585, label %error_block [
    i64 0, label %block.CErased.4586
    i64 1, label %block.CGrFloat.4591
    i64 2, label %block.CGrInt.4598
    i64 3, label %block.CGrString.4605
    i64 4, label %block.Cidr_Builtins.MkPair.4612
    i64 5, label %"block.Cidr_Data.Vect.::.4621"
    i64 6, label %block.Cidr_Prelude.Bool.False.4630
    i64 7, label %block.Cidr_Prelude.Bool.True.4635
    i64 8, label %"block.Cidr_Prelude.List.::.4640"
    i64 9, label %block.Cidr_Prelude.List.Nil.4649
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.4654"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.4665"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.4672"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.4681"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4690"
  ]

block.CErased.4586:                               ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_CErased.4587 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  %node_CErased.4588 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.4587, align 1
  %src.4589 = extractvalue <{ i64 }> %node_CErased.4588, 0
  %dst.4590 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4589, 0
  br label %block.exit.4697

block.CGrFloat.4591:                              ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_CGrFloat.4592 = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x float] }>*
  %node_CGrFloat.4593 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.4592, align 1
  %src.4594 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.4593, 0
  %dst.4595 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4594, 0
  %src.4596 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.4593, 1, 0
  %dst.4597 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4595, float %src.4596, 1, 0
  br label %block.exit.4697

block.CGrInt.4598:                                ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_CGrInt.4599 = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x i64] }>*
  %node_CGrInt.4600 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.4599, align 1
  %src.4601 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4600, 0
  %dst.4602 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4601, 0
  %src.4603 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4600, 1, 0
  %dst.4604 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4602, i64 %src.4603, 2, 0
  br label %block.exit.4697

block.CGrString.4605:                             ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_CGrString.4606 = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.4607 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4606, align 1
  %src.4608 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4607, 0
  %dst.4609 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4608, 0
  %src.4610 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4607, 1, 0
  %dst.4611 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4609, { i8*, i64 }* %src.4610, 3, 0
  br label %block.exit.4697

block.Cidr_Builtins.MkPair.4612:                  ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_Cidr_Builtins.MkPair.4613 = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.4614 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.4613, align 1
  %src.4615 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.4614, 0
  %dst.4616 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4615, 0
  %src.4617 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.4614, 1, 1
  %dst.4618 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4616, i64* %src.4617, 4, 1
  %src.4619 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.4614, 1, 0
  %dst.4620 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4618, i64* %src.4619, 4, 0
  br label %block.exit.4697

"block.Cidr_Data.Vect.::.4621":                   ; preds = %block.Cidr_Prelude.Bool.False.4584
  %"ptr_Cidr_Data.Vect.::.4622" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.4623" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.4622", align 1
  %src.4624 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.4623", 0
  %dst.4625 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4624, 0
  %src.4626 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.4623", 1, 1
  %dst.4627 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4625, i64* %src.4626, 4, 1
  %src.4628 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.4623", 1, 0
  %dst.4629 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4627, i64* %src.4628, 4, 0
  br label %block.exit.4697

block.Cidr_Prelude.Bool.False.4630:               ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_Cidr_Prelude.Bool.False.4631 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.4632 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4631, align 1
  %src.4633 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.4632, 0
  %dst.4634 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4633, 0
  br label %block.exit.4697

block.Cidr_Prelude.Bool.True.4635:                ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_Cidr_Prelude.Bool.True.4636 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.4637 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4636, align 1
  %src.4638 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.4637, 0
  %dst.4639 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4638, 0
  br label %block.exit.4697

"block.Cidr_Prelude.List.::.4640":                ; preds = %block.Cidr_Prelude.Bool.False.4584
  %"ptr_Cidr_Prelude.List.::.4641" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.4642" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.4641", align 1
  %src.4643 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.4642", 0
  %dst.4644 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4643, 0
  %src.4645 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.4642", 1, 1
  %dst.4646 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4644, i64* %src.4645, 4, 1
  %src.4647 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.4642", 1, 0
  %dst.4648 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4646, i64* %src.4647, 4, 0
  br label %block.exit.4697

block.Cidr_Prelude.List.Nil.4649:                 ; preds = %block.Cidr_Prelude.Bool.False.4584
  %ptr_Cidr_Prelude.List.Nil.4650 = bitcast i64* %new_node_ptr.4253 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.4651 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.4650, align 1
  %src.4652 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.4651, 0
  %dst.4653 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4652, 0
  br label %block.exit.4697

"block.Cidr_{U_Main.{adder_0}_1}.4654":           ; preds = %block.Cidr_Prelude.Bool.False.4584
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4655" = bitcast i64* %new_node_ptr.4253 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.4656" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4655", align 1
  %src.4657 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.4656", 0
  %dst.4658 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4657, 0
  %src.4659 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.4656", 1, 2
  %dst.4660 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4658, i64* %src.4659, 4, 2
  %src.4661 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.4656", 1, 1
  %dst.4662 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4660, i64* %src.4661, 4, 1
  %src.4663 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.4656", 1, 0
  %dst.4664 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4662, i64* %src.4663, 4, 0
  br label %block.exit.4697

"block.Cidr_{U_Main.{main_9}_1}.4665":            ; preds = %block.Cidr_Prelude.Bool.False.4584
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4666" = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.4667" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4666", align 1
  %src.4668 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.4667", 0
  %dst.4669 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4668, 0
  %src.4670 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.4667", 1, 0
  %dst.4671 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4669, i64* %src.4670, 4, 0
  br label %block.exit.4697

"block.Cidr_{U_Main.{printFmt_14}_1}.4672":       ; preds = %block.Cidr_Prelude.Bool.False.4584
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4673" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4674" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4673", align 1
  %src.4675 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4674", 0
  %dst.4676 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4675, 0
  %src.4677 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4674", 1, 1
  %dst.4678 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4676, i64* %src.4677, 4, 1
  %src.4679 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4674", 1, 0
  %dst.4680 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4678, i64* %src.4679, 4, 0
  br label %block.exit.4697

"block.Cidr_{U_Main.{printFmt_15}_1}.4681":       ; preds = %block.Cidr_Prelude.Bool.False.4584
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4682" = bitcast i64* %new_node_ptr.4253 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4683" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4682", align 1
  %src.4684 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4683", 0
  %dst.4685 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4684, 0
  %src.4686 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4683", 1, 1
  %dst.4687 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4685, i64* %src.4686, 4, 1
  %src.4688 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4683", 1, 0
  %dst.4689 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4687, i64* %src.4688, 4, 0
  br label %block.exit.4697

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4690": ; preds = %block.Cidr_Prelude.Bool.False.4584
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4691" = bitcast i64* %new_node_ptr.4253 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4692" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4691", align 1
  %src.4693 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4692", 0
  %dst.4694 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4693, 0
  %src.4695 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4692", 1, 0
  %dst.4696 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4694, i64* %src.4695, 4, 0
  br label %block.exit.4697

block.exit.4697:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4690", %"block.Cidr_{U_Main.{printFmt_15}_1}.4681", %"block.Cidr_{U_Main.{printFmt_14}_1}.4672", %"block.Cidr_{U_Main.{main_9}_1}.4665", %"block.Cidr_{U_Main.{adder_0}_1}.4654", %block.Cidr_Prelude.List.Nil.4649, %"block.Cidr_Prelude.List.::.4640", %block.Cidr_Prelude.Bool.True.4635, %block.Cidr_Prelude.Bool.False.4630, %"block.Cidr_Data.Vect.::.4621", %block.Cidr_Builtins.MkPair.4612, %block.CGrString.4605, %block.CGrInt.4598, %block.CGrFloat.4591, %block.CErased.4586
  %result.Cidr_Prelude.Bool.False.4698 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.4590, %block.CErased.4586 ], [ %dst.4597, %block.CGrFloat.4591 ], [ %dst.4604, %block.CGrInt.4598 ], [ %dst.4611, %block.CGrString.4605 ], [ %dst.4620, %block.Cidr_Builtins.MkPair.4612 ], [ %dst.4629, %"block.Cidr_Data.Vect.::.4621" ], [ %dst.4634, %block.Cidr_Prelude.Bool.False.4630 ], [ %dst.4639, %block.Cidr_Prelude.Bool.True.4635 ], [ %dst.4648, %"block.Cidr_Prelude.List.::.4640" ], [ %dst.4653, %block.Cidr_Prelude.List.Nil.4649 ], [ %dst.4664, %"block.Cidr_{U_Main.{adder_0}_1}.4654" ], [ %dst.4671, %"block.Cidr_{U_Main.{main_9}_1}.4665" ], [ %dst.4680, %"block.Cidr_{U_Main.{printFmt_14}_1}.4672" ], [ %dst.4689, %"block.Cidr_{U_Main.{printFmt_15}_1}.4681" ], [ %dst.4696, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4690" ]
  br label %block.exit.4722

block.Cidr_Prelude.Bool.True.4699:                ; preds = %block.exit.4581
  %node_CGrString.4700 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.8, 1, 0
  %alloc_bytes.4701 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4702 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4701 to i64
  %new_node_ptr.4703 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4702 monotonic
  %new_node_ptr.4704 = inttoptr i64 %new_node_ptr.4703 to i64*
  %tag.4705 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4700, 0
  %ptr_CGrString.4706 = bitcast i64* %new_node_ptr.4704 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4700, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4706, align 1
  %node_CGrString.4707 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.9, 1, 0
  %alloc_bytes.4708 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4709 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4708 to i64
  %new_node_ptr.4710 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4709 monotonic
  %new_node_ptr.4711 = inttoptr i64 %new_node_ptr.4710 to i64*
  %tag.4712 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4707, 0
  %ptr_CGrString.4713 = bitcast i64* %new_node_ptr.4711 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4707, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4713, align 1
  %idr_Prelude.Show.primNumShow7_val_378.4714 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.4253, i64* %new_node_ptr.4711)
  %alloc_bytes.4715 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4716 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4715 to i64
  %new_node_ptr.4717 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4716 monotonic
  %new_node_ptr.4718 = inttoptr i64 %new_node_ptr.4717 to i64*
  %tag.4719 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Show.primNumShow7_val_378.4714, 0
  %ptr_CGrString.4720 = bitcast i64* %new_node_ptr.4718 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Show.primNumShow7_val_378.4714, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4720, align 1
  %result.Cidr_Prelude.Bool.True.4721 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.4704, i64* %new_node_ptr.4718)
  %src.4723 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %result.Cidr_Prelude.Bool.True.4721, 0
  %dst.4724 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4723, 0
  %src.4725 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %result.Cidr_Prelude.Bool.True.4721, 1, 0
  %dst.4726 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.4724, { i8*, i64 }* %src.4725, 3, 0
  br label %block.exit.4722

block.exit.4722:                                  ; preds = %block.Cidr_Prelude.Bool.True.4699, %block.exit.4697
  %result.idr_Prelude.Show.primNumShow.4727 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %result.Cidr_Prelude.Bool.False.4698, %block.exit.4697 ], [ %dst.4726, %block.Cidr_Prelude.Bool.True.4699 ]
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %result.idr_Prelude.Show.primNumShow.4727

error_block:                                      ; preds = %block.Cidr_Prelude.Bool.False.4584, %block.exit.4581, %block.exit.4573, %block.exit.4562, %block.Cidr_Prelude.Basics.Yes.4527, %block.exit.4523, %block.exit.4515, %block.exit.4498, %block.exit.4487, %block.Cidr_Prelude.Bool.True.4463, %block.exit.4459, %block.exit.4451, %block.exit.4440, %block.exit.4406, %block.default.4399, %block.exit.4385, %block.exit.4358, %block.exit.4351, %idr_Prelude.Show.primNumShow.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__floatToStr(i64* %idr_prim__floatToStr0) #0 {
idr_prim__floatToStr.entry:
  %result.idr_prim__floatToStr.4728 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_float_str(i64* %idr_prim__floatToStr0)
  ret <{ i64, [1 x { i8*, i64 }*] }> %result.idr_prim__floatToStr.4728

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__strCons(i64* %idr_prim__strCons0, i64* %idr_prim__strCons1) #0 {
idr_prim__strCons.entry:
  %result.idr_prim__strCons.4729 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %idr_prim__strCons0, i64* %idr_prim__strCons1)
  ret <{ i64, [1 x { i8*, i64 }*] }> %result.idr_prim__strCons.4729

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__toStrInt(i64* %idr_prim__toStrInt0) #0 {
idr_prim__toStrInt.entry:
  %result.idr_prim__toStrInt.4730 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_int_str(i64* %idr_prim__toStrInt0)
  ret <{ i64, [1 x { i8*, i64 }*] }> %result.idr_prim__toStrInt.4730

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @idr_Main.printFmt(i64* %idr_Main.printFmt0, i64* %idr_Main.printFmt1) #0 {
idr_Main.printFmt.entry:
  %tag.4731 = load i64, i64* %idr_Main.printFmt0, align 1
  switch i64 %tag.4731, label %error_block [
    i64 30, label %block.Cidr_Main.End.4732
    i64 31, label %block.Cidr_Main.Lit.4737
    i64 32, label %block.Cidr_Main.Number.4740
    i64 33, label %block.Cidr_Main.Str.4747
  ]

block.Cidr_Main.End.4732:                         ; preds = %idr_Main.printFmt.entry
  %ptr_Cidr_Main.End.4733 = bitcast i64* %idr_Main.printFmt0 to <{ i64 }>*
  %node_Cidr_Main.End.4734 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Main.End.4733, align 1
  %src.4735 = extractvalue <{ i64 }> %node_Cidr_Main.End.4734, 0
  %dst.4736 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4735, 0
  br label %block.exit.4754

block.Cidr_Main.Lit.4737:                         ; preds = %idr_Main.printFmt.entry
  %ptr_Cidr_Main.Lit.4738 = bitcast i64* %idr_Main.printFmt0 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Main.Lit.4739 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.4738, align 1
  br label %block.exit.4754

block.Cidr_Main.Number.4740:                      ; preds = %idr_Main.printFmt.entry
  %ptr_Cidr_Main.Number.4741 = bitcast i64* %idr_Main.printFmt0 to <{ i64, [1 x i64*] }>*
  %node_Cidr_Main.Number.4742 = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.4741, align 1
  %src.4743 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Number.4742, 0
  %dst.4744 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4743, 0
  %src.4745 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Number.4742, 1, 0
  %dst.4746 = insertvalue <{ i64, [2 x i64*] }> %dst.4744, i64* %src.4745, 1, 0
  br label %block.exit.4754

block.Cidr_Main.Str.4747:                         ; preds = %idr_Main.printFmt.entry
  %ptr_Cidr_Main.Str.4748 = bitcast i64* %idr_Main.printFmt0 to <{ i64, [1 x i64*] }>*
  %node_Cidr_Main.Str.4749 = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.4748, align 1
  %src.4750 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Str.4749, 0
  %dst.4751 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4750, 0
  %src.4752 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Str.4749, 1, 0
  %dst.4753 = insertvalue <{ i64, [2 x i64*] }> %dst.4751, i64* %src.4752, 1, 0
  br label %block.exit.4754

block.exit.4754:                                  ; preds = %block.Cidr_Main.Str.4747, %block.Cidr_Main.Number.4740, %block.Cidr_Main.Lit.4737, %block.Cidr_Main.End.4732
  %idr_Main.printFmt0_val.4755 = phi <{ i64, [2 x i64*] }> [ %dst.4736, %block.Cidr_Main.End.4732 ], [ %node_Cidr_Main.Lit.4739, %block.Cidr_Main.Lit.4737 ], [ %dst.4746, %block.Cidr_Main.Number.4740 ], [ %dst.4753, %block.Cidr_Main.Str.4747 ]
  %tag.4756 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.printFmt0_val.4755, 0
  switch i64 %tag.4756, label %error_block [
    i64 30, label %block.Cidr_Main.End.4757
    i64 31, label %block.Cidr_Main.Lit.4761
    i64 32, label %block.Cidr_Main.Number.4770
    i64 33, label %block.Cidr_Main.Str.4773
  ]

block.Cidr_Main.End.4757:                         ; preds = %block.exit.4754
  %tag.4758 = load i64, i64* %idr_Main.printFmt1, align 1
  %ptr_CGrString.4759 = bitcast i64* %idr_Main.printFmt1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.4760 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4759, align 1
  %src.4777 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4760, 0
  %dst.4778 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> undef, i64 %src.4777, 0
  %src.4779 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4760, 1, 0
  %dst.4780 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %dst.4778, { i8*, i64 }* %src.4779, 1, 0
  br label %block.exit.4776

block.Cidr_Main.Lit.4761:                         ; preds = %block.exit.4754
  %idr_Main.printFmt2 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.printFmt0_val.4755, 1, 0
  %idr_Main.printFmt3 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.printFmt0_val.4755, 1, 1
  %idr_Main.printFmt4_val.4762 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %idr_Main.printFmt1, i64* %idr_Main.printFmt2)
  %alloc_bytes.4763 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4764 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4763 to i64
  %new_node_ptr.4765 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4764 monotonic
  %new_node_ptr.4766 = inttoptr i64 %new_node_ptr.4765 to i64*
  %tag.4767 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.printFmt4_val.4762, 0
  %ptr_CGrString.4768 = bitcast i64* %new_node_ptr.4766 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.printFmt4_val.4762, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4768, align 1
  %result.Cidr_Main.Lit.4769 = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @idr_Main.printFmt(i64* %idr_Main.printFmt3, i64* %new_node_ptr.4766)
  br label %block.exit.4776

block.Cidr_Main.Number.4770:                      ; preds = %block.exit.4754
  %idr_Main.printFmt2_382 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.printFmt0_val.4755, 1, 0
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4771" = insertvalue <{ i64, [2 x i64*] }> <{ i64 12, [2 x i64*] undef }>, i64* %idr_Main.printFmt2_382, 1, 0
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4772" = insertvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4771", i64* %idr_Main.printFmt1, 1, 1
  %src.4781 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4772", 0
  %dst.4782 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> undef, i64 %src.4781, 0
  %src.4783 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4772", 1, 1
  %dst.4784 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %dst.4782, i64* %src.4783, 2, 1
  %src.4785 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.4772", 1, 0
  %dst.4786 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %dst.4784, i64* %src.4785, 2, 0
  br label %block.exit.4776

block.Cidr_Main.Str.4773:                         ; preds = %block.exit.4754
  %idr_Main.printFmt2_383 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.printFmt0_val.4755, 1, 0
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4774" = insertvalue <{ i64, [2 x i64*] }> <{ i64 13, [2 x i64*] undef }>, i64* %idr_Main.printFmt2_383, 1, 0
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4775" = insertvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4774", i64* %idr_Main.printFmt1, 1, 1
  %src.4787 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4775", 0
  %dst.4788 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> undef, i64 %src.4787, 0
  %src.4789 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4775", 1, 1
  %dst.4790 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %dst.4788, i64* %src.4789, 2, 1
  %src.4791 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.4775", 1, 0
  %dst.4792 = insertvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %dst.4790, i64* %src.4791, 2, 0
  br label %block.exit.4776

block.exit.4776:                                  ; preds = %block.Cidr_Main.Str.4773, %block.Cidr_Main.Number.4770, %block.Cidr_Main.Lit.4761, %block.Cidr_Main.End.4757
  %result.idr_Main.printFmt.4793 = phi <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> [ %dst.4780, %block.Cidr_Main.End.4757 ], [ %result.Cidr_Main.Lit.4769, %block.Cidr_Main.Lit.4761 ], [ %dst.4786, %block.Cidr_Main.Number.4770 ], [ %dst.4792, %block.Cidr_Main.Str.4773 ]
  ret <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %result.idr_Main.printFmt.4793

error_block:                                      ; preds = %block.exit.4754, %idr_Main.printFmt.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @"idr_Prelude.Interactive.printLn'"(i64* %"idr_Prelude.Interactive.printLn'0", i64* %"idr_Prelude.Interactive.printLn'1", i64* %"idr_Prelude.Interactive.printLn'2", i64* %"idr_Prelude.Interactive.printLn'3", i64* %"idr_Prelude.Interactive.printLn'4") #0 {
"idr_Prelude.Interactive.printLn'.entry":
  %"idr_Prelude.Interactive.printLn'5_val_385.4794" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %"idr_Prelude.Interactive.printLn'2", i64* %"idr_Prelude.Interactive.printLn'3")
  %alloc_bytes.4795 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.4796 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.4795 to i64
  %new_node_ptr.4797 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4796 monotonic
  %new_node_ptr.4798 = inttoptr i64 %new_node_ptr.4797 to i64*
  %tag.4799 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  switch i64 %tag.4799, label %error_block [
    i64 0, label %block.CErased.4800
    i64 1, label %block.CGrFloat.4804
    i64 2, label %block.CGrInt.4810
    i64 3, label %block.CGrString.4816
    i64 4, label %block.Cidr_Builtins.MkPair.4822
    i64 5, label %"block.Cidr_Data.Vect.::.4830"
    i64 6, label %block.Cidr_Prelude.Bool.False.4838
    i64 7, label %block.Cidr_Prelude.Bool.True.4842
    i64 8, label %"block.Cidr_Prelude.List.::.4846"
    i64 9, label %block.Cidr_Prelude.List.Nil.4854
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.4858"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.4868"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.4874"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.4882"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4890"
  ]

block.CErased.4800:                               ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4801 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4802 = insertvalue <{ i64 }> undef, i64 %src.4801, 0
  %ptr_CErased.4803 = bitcast i64* %new_node_ptr.4798 to <{ i64 }>*
  store <{ i64 }> %dst.4802, <{ i64 }>* %ptr_CErased.4803, align 1
  br label %block.exit.4896

block.CGrFloat.4804:                              ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4805 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4806 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.4805, 0
  %src.4807 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 1, 0
  %dst.4808 = insertvalue <{ i64, [1 x float] }> %dst.4806, float %src.4807, 1, 0
  %ptr_CGrFloat.4809 = bitcast i64* %new_node_ptr.4798 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.4808, <{ i64, [1 x float] }>* %ptr_CGrFloat.4809, align 1
  br label %block.exit.4896

block.CGrInt.4810:                                ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4811 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4812 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.4811, 0
  %src.4813 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 2, 0
  %dst.4814 = insertvalue <{ i64, [1 x i64] }> %dst.4812, i64 %src.4813, 1, 0
  %ptr_CGrInt.4815 = bitcast i64* %new_node_ptr.4798 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.4814, <{ i64, [1 x i64] }>* %ptr_CGrInt.4815, align 1
  br label %block.exit.4896

block.CGrString.4816:                             ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4817 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4818 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.4817, 0
  %src.4819 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 3, 0
  %dst.4820 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.4818, { i8*, i64 }* %src.4819, 1, 0
  %ptr_CGrString.4821 = bitcast i64* %new_node_ptr.4798 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.4820, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4821, align 1
  br label %block.exit.4896

block.Cidr_Builtins.MkPair.4822:                  ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4823 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4824 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4823, 0
  %src.4825 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 1
  %dst.4826 = insertvalue <{ i64, [2 x i64*] }> %dst.4824, i64* %src.4825, 1, 1
  %src.4827 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4828 = insertvalue <{ i64, [2 x i64*] }> %dst.4826, i64* %src.4827, 1, 0
  %ptr_Cidr_Builtins.MkPair.4829 = bitcast i64* %new_node_ptr.4798 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4828, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.4829, align 1
  br label %block.exit.4896

"block.Cidr_Data.Vect.::.4830":                   ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4831 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4832 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4831, 0
  %src.4833 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 1
  %dst.4834 = insertvalue <{ i64, [2 x i64*] }> %dst.4832, i64* %src.4833, 1, 1
  %src.4835 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4836 = insertvalue <{ i64, [2 x i64*] }> %dst.4834, i64* %src.4835, 1, 0
  %"ptr_Cidr_Data.Vect.::.4837" = bitcast i64* %new_node_ptr.4798 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4836, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.4837", align 1
  br label %block.exit.4896

block.Cidr_Prelude.Bool.False.4838:               ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4839 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4840 = insertvalue <{ i64 }> undef, i64 %src.4839, 0
  %ptr_Cidr_Prelude.Bool.False.4841 = bitcast i64* %new_node_ptr.4798 to <{ i64 }>*
  store <{ i64 }> %dst.4840, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4841, align 1
  br label %block.exit.4896

block.Cidr_Prelude.Bool.True.4842:                ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4843 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4844 = insertvalue <{ i64 }> undef, i64 %src.4843, 0
  %ptr_Cidr_Prelude.Bool.True.4845 = bitcast i64* %new_node_ptr.4798 to <{ i64 }>*
  store <{ i64 }> %dst.4844, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4845, align 1
  br label %block.exit.4896

"block.Cidr_Prelude.List.::.4846":                ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4847 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4848 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4847, 0
  %src.4849 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 1
  %dst.4850 = insertvalue <{ i64, [2 x i64*] }> %dst.4848, i64* %src.4849, 1, 1
  %src.4851 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4852 = insertvalue <{ i64, [2 x i64*] }> %dst.4850, i64* %src.4851, 1, 0
  %"ptr_Cidr_Prelude.List.::.4853" = bitcast i64* %new_node_ptr.4798 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4852, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.4853", align 1
  br label %block.exit.4896

block.Cidr_Prelude.List.Nil.4854:                 ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4855 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4856 = insertvalue <{ i64 }> undef, i64 %src.4855, 0
  %ptr_Cidr_Prelude.List.Nil.4857 = bitcast i64* %new_node_ptr.4798 to <{ i64 }>*
  store <{ i64 }> %dst.4856, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.4857, align 1
  br label %block.exit.4896

"block.Cidr_{U_Main.{adder_0}_1}.4858":           ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4859 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4860 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.4859, 0
  %src.4861 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 2
  %dst.4862 = insertvalue <{ i64, [3 x i64*] }> %dst.4860, i64* %src.4861, 1, 2
  %src.4863 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 1
  %dst.4864 = insertvalue <{ i64, [3 x i64*] }> %dst.4862, i64* %src.4863, 1, 1
  %src.4865 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4866 = insertvalue <{ i64, [3 x i64*] }> %dst.4864, i64* %src.4865, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4867" = bitcast i64* %new_node_ptr.4798 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.4866, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.4867", align 1
  br label %block.exit.4896

"block.Cidr_{U_Main.{main_9}_1}.4868":            ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4869 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4870 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4869, 0
  %src.4871 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4872 = insertvalue <{ i64, [1 x i64*] }> %dst.4870, i64* %src.4871, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4873" = bitcast i64* %new_node_ptr.4798 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4872, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.4873", align 1
  br label %block.exit.4896

"block.Cidr_{U_Main.{printFmt_14}_1}.4874":       ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4875 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4876 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4875, 0
  %src.4877 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 1
  %dst.4878 = insertvalue <{ i64, [2 x i64*] }> %dst.4876, i64* %src.4877, 1, 1
  %src.4879 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4880 = insertvalue <{ i64, [2 x i64*] }> %dst.4878, i64* %src.4879, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4881" = bitcast i64* %new_node_ptr.4798 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4880, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.4881", align 1
  br label %block.exit.4896

"block.Cidr_{U_Main.{printFmt_15}_1}.4882":       ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4883 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4884 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.4883, 0
  %src.4885 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 1
  %dst.4886 = insertvalue <{ i64, [2 x i64*] }> %dst.4884, i64* %src.4885, 1, 1
  %src.4887 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4888 = insertvalue <{ i64, [2 x i64*] }> %dst.4886, i64* %src.4887, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4889" = bitcast i64* %new_node_ptr.4798 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.4888, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.4889", align 1
  br label %block.exit.4896

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4890": ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  %src.4891 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 0
  %dst.4892 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.4891, 0
  %src.4893 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Interactive.printLn'5_val_385.4794", 4, 0
  %dst.4894 = insertvalue <{ i64, [1 x i64*] }> %dst.4892, i64* %src.4893, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4895" = bitcast i64* %new_node_ptr.4798 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.4894, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.4895", align 1
  br label %block.exit.4896

block.exit.4896:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.4890", %"block.Cidr_{U_Main.{printFmt_15}_1}.4882", %"block.Cidr_{U_Main.{printFmt_14}_1}.4874", %"block.Cidr_{U_Main.{main_9}_1}.4868", %"block.Cidr_{U_Main.{adder_0}_1}.4858", %block.Cidr_Prelude.List.Nil.4854, %"block.Cidr_Prelude.List.::.4846", %block.Cidr_Prelude.Bool.True.4842, %block.Cidr_Prelude.Bool.False.4838, %"block.Cidr_Data.Vect.::.4830", %block.Cidr_Builtins.MkPair.4822, %block.CGrString.4816, %block.CGrInt.4810, %block.CGrFloat.4804, %block.CErased.4800
  %node_CGrString.4897 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.4, 1, 0
  %alloc_bytes.4898 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4899 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4898 to i64
  %new_node_ptr.4900 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4899 monotonic
  %new_node_ptr.4901 = inttoptr i64 %new_node_ptr.4900 to i64*
  %tag.4902 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4897, 0
  %ptr_CGrString.4903 = bitcast i64* %new_node_ptr.4901 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4897, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4903, align 1
  %"idr_Prelude.Interactive.printLn'5_val_384.4904" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.4798, i64* %new_node_ptr.4901)
  %alloc_bytes.4905 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4906 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4905 to i64
  %new_node_ptr.4907 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4906 monotonic
  %new_node_ptr.4908 = inttoptr i64 %new_node_ptr.4907 to i64*
  %tag.4909 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Interactive.printLn'5_val_384.4904", 0
  %ptr_CGrString.4910 = bitcast i64* %new_node_ptr.4908 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Interactive.printLn'5_val_384.4904", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4910, align 1
  %"idr_Prelude.Interactive.printLn'5_val.4911" = tail call fastcc <{ i64 }> @idris_write_str(i64* %"idr_Prelude.Interactive.printLn'4", i64* %new_node_ptr.4908)
  %alloc_bytes.4912 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4913 = ptrtoint <{ i64 }>* %alloc_bytes.4912 to i64
  %new_node_ptr.4914 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4913 monotonic
  %new_node_ptr.4915 = inttoptr i64 %new_node_ptr.4914 to i64*
  %tag.4916 = extractvalue <{ i64 }> %"idr_Prelude.Interactive.printLn'5_val.4911", 0
  %ptr_CUnit.4917 = bitcast i64* %new_node_ptr.4915 to <{ i64 }>*
  store <{ i64 }> %"idr_Prelude.Interactive.printLn'5_val.4911", <{ i64 }>* %ptr_CUnit.4917, align 1
  ret <{ i64 }> <{ i64 34 }>

error_block:                                      ; preds = %"idr_Prelude.Interactive.printLn'.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_Prelude.Show.protectEsc(i64* %idr_Prelude.Show.protectEsc0, i64* %idr_Prelude.Show.protectEsc1, i64* %idr_Prelude.Show.protectEsc2) #0 {
idr_Prelude.Show.protectEsc.entry:
  %node_CGrString.4918 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.4919 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.4920 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.4919 to i64
  %new_node_ptr.4921 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4920 monotonic
  %new_node_ptr.4922 = inttoptr i64 %new_node_ptr.4921 to i64*
  %tag.4923 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4918, 0
  %ptr_CGrString.4924 = bitcast i64* %new_node_ptr.4922 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.4918, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.4924, align 1
  %idr_Prelude.Show.protectEsc3_val_392.4925 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %idr_Prelude.Show.protectEsc2, i64* %new_node_ptr.4922)
  %alloc_bytes.4926 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4927 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4926 to i64
  %new_node_ptr.4928 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4927 monotonic
  %new_node_ptr.4929 = inttoptr i64 %new_node_ptr.4928 to i64*
  %tag.4930 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.protectEsc3_val_392.4925, 0
  %ptr_CGrInt.4931 = bitcast i64* %new_node_ptr.4929 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.protectEsc3_val_392.4925, <{ i64, [1 x i64] }>* %ptr_CGrInt.4931, align 1
  %tag.4932 = load i64, i64* %new_node_ptr.4929, align 1
  %ptr_CGrInt.4933 = bitcast i64* %new_node_ptr.4929 to <{ i64, [1 x i64] }>*
  %node_CGrInt.4934 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.4933, align 1
  %tag.4935 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4934, 0
  switch i64 %tag.4935, label %error_block [
    i64 2, label %block.CGrInt.4936
  ]

block.CGrInt.4936:                                ; preds = %idr_Prelude.Show.protectEsc.entry
  %idr_Prelude.Show.protectEsc_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.4934, 1, 0
  switch i64 %idr_Prelude.Show.protectEsc_cpat_LInt64_0, label %block.default.4937 [
    i64 0, label %block.int_0.4938
  ]

block.default.4937:                               ; preds = %block.CGrInt.4936
  br label %block.exit.4939

block.int_0.4938:                                 ; preds = %block.CGrInt.4936
  br label %block.exit.4939

block.exit.4939:                                  ; preds = %block.int_0.4938, %block.default.4937
  %result.CGrInt.4940 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.4937 ], [ <{ i64 7 }>, %block.int_0.4938 ]
  br label %block.exit.4941

block.exit.4941:                                  ; preds = %block.exit.4939
  %idr_Prelude.Show.protectEsc3_val_391.4942 = phi <{ i64 }> [ %result.CGrInt.4940, %block.exit.4939 ]
  %alloc_bytes.4943 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4944 = ptrtoint <{ i64 }>* %alloc_bytes.4943 to i64
  %new_node_ptr.4945 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4944 monotonic
  %new_node_ptr.4946 = inttoptr i64 %new_node_ptr.4945 to i64*
  %tag.4947 = extractvalue <{ i64 }> %idr_Prelude.Show.protectEsc3_val_391.4942, 0
  switch i64 %tag.4947, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.4948
    i64 7, label %block.Cidr_Prelude.Bool.True.4950
  ]

block.Cidr_Prelude.Bool.False.4948:               ; preds = %block.exit.4941
  %ptr_Cidr_Prelude.Bool.False.4949 = bitcast i64* %new_node_ptr.4946 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.protectEsc3_val_391.4942, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.4949, align 1
  br label %block.exit.4952

block.Cidr_Prelude.Bool.True.4950:                ; preds = %block.exit.4941
  %ptr_Cidr_Prelude.Bool.True.4951 = bitcast i64* %new_node_ptr.4946 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.protectEsc3_val_391.4942, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4951, align 1
  br label %block.exit.4952

block.exit.4952:                                  ; preds = %block.Cidr_Prelude.Bool.True.4950, %block.Cidr_Prelude.Bool.False.4948
  %alloc_bytes.4953 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4954 = ptrtoint <{ i64 }>* %alloc_bytes.4953 to i64
  %new_node_ptr.4955 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4954 monotonic
  %new_node_ptr.4956 = inttoptr i64 %new_node_ptr.4955 to i64*
  %tag.4957 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.4958 = bitcast i64* %new_node_ptr.4956 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.4958, align 1
  %idr_Prelude.Show.protectEsc3_val_390.4959 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.4946, i64* %new_node_ptr.4956)
  %alloc_bytes.4960 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.4961 = ptrtoint <{ i64 }>* %alloc_bytes.4960 to i64
  %new_node_ptr.4962 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4961 monotonic
  %new_node_ptr.4963 = inttoptr i64 %new_node_ptr.4962 to i64*
  %tag.4964 = extractvalue <{ i64 }> %idr_Prelude.Show.protectEsc3_val_390.4959, 0
  switch i64 %tag.4964, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.4965
    i64 27, label %block.Cidr_Prelude.Basics.Yes.4967
  ]

block.Cidr_Prelude.Basics.No.4965:                ; preds = %block.exit.4952
  %ptr_Cidr_Prelude.Basics.No.4966 = bitcast i64* %new_node_ptr.4963 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.protectEsc3_val_390.4959, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.4966, align 1
  br label %block.exit.4969

block.Cidr_Prelude.Basics.Yes.4967:               ; preds = %block.exit.4952
  %ptr_Cidr_Prelude.Basics.Yes.4968 = bitcast i64* %new_node_ptr.4963 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.protectEsc3_val_390.4959, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.4968, align 1
  br label %block.exit.4969

block.exit.4969:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.4967, %block.Cidr_Prelude.Basics.No.4965
  %tag.4970 = load i64, i64* %new_node_ptr.4963, align 1
  switch i64 %tag.4970, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.4971
    i64 27, label %block.Cidr_Prelude.Basics.Yes.4974
  ]

block.Cidr_Prelude.Basics.No.4971:                ; preds = %block.exit.4969
  %ptr_Cidr_Prelude.Basics.No.4972 = bitcast i64* %new_node_ptr.4963 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.4973 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.4972, align 1
  br label %block.exit.4977

block.Cidr_Prelude.Basics.Yes.4974:               ; preds = %block.exit.4969
  %ptr_Cidr_Prelude.Basics.Yes.4975 = bitcast i64* %new_node_ptr.4963 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.4976 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.4975, align 1
  br label %block.exit.4977

block.exit.4977:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.4974, %block.Cidr_Prelude.Basics.No.4971
  %idr_Prelude.Show.protectEsc3_val_398.4978 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.4973, %block.Cidr_Prelude.Basics.No.4971 ], [ %node_Cidr_Prelude.Basics.Yes.4976, %block.Cidr_Prelude.Basics.Yes.4974 ]
  %tag.4979 = extractvalue <{ i64 }> %idr_Prelude.Show.protectEsc3_val_398.4978, 0
  switch i64 %tag.4979, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.4980
    i64 27, label %block.Cidr_Prelude.Basics.Yes.4981
  ]

block.Cidr_Prelude.Basics.No.4980:                ; preds = %block.exit.4977
  %src.4991 = extractvalue <{ i64 }> <{ i64 6 }>, 0
  %dst.4992 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.4991, 0
  br label %block.exit.4990

block.Cidr_Prelude.Basics.Yes.4981:               ; preds = %block.exit.4977
  %idr_Prelude.Show.protectEsc4_val_399.4982 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %idr_Prelude.Show.protectEsc2)
  %alloc_bytes.4983 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.4984 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.4983 to i64
  %new_node_ptr.4985 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4984 monotonic
  %new_node_ptr.4986 = inttoptr i64 %new_node_ptr.4985 to i64*
  %tag.4987 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.protectEsc4_val_399.4982, 0
  %ptr_CGrInt.4988 = bitcast i64* %new_node_ptr.4986 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.protectEsc4_val_399.4982, <{ i64, [1 x i64] }>* %ptr_CGrInt.4988, align 1
  %result.Cidr_Prelude.Basics.Yes.4989 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %idr_Prelude.Show.protectEsc0, i64* %new_node_ptr.4986)
  br label %block.exit.4990

block.exit.4990:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.4981, %block.Cidr_Prelude.Basics.No.4980
  %idr_Prelude.Show.protectEsc3_val_389.4993 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.4992, %block.Cidr_Prelude.Basics.No.4980 ], [ %result.Cidr_Prelude.Basics.Yes.4989, %block.Cidr_Prelude.Basics.Yes.4981 ]
  %alloc_bytes.4994 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.4995 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.4994 to i64
  %new_node_ptr.4996 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.4995 monotonic
  %new_node_ptr.4997 = inttoptr i64 %new_node_ptr.4996 to i64*
  %tag.4998 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  switch i64 %tag.4998, label %error_block [
    i64 0, label %block.CErased.4999
    i64 1, label %block.CGrFloat.5003
    i64 2, label %block.CGrInt.5009
    i64 3, label %block.CGrString.5015
    i64 4, label %block.Cidr_Builtins.MkPair.5021
    i64 5, label %"block.Cidr_Data.Vect.::.5029"
    i64 6, label %block.Cidr_Prelude.Bool.False.5037
    i64 7, label %block.Cidr_Prelude.Bool.True.5041
    i64 8, label %"block.Cidr_Prelude.List.::.5045"
    i64 9, label %block.Cidr_Prelude.List.Nil.5053
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.5057"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.5067"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.5073"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.5081"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5089"
  ]

block.CErased.4999:                               ; preds = %block.exit.4990
  %src.5000 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5001 = insertvalue <{ i64 }> undef, i64 %src.5000, 0
  %ptr_CErased.5002 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  store <{ i64 }> %dst.5001, <{ i64 }>* %ptr_CErased.5002, align 1
  br label %block.exit.5095

block.CGrFloat.5003:                              ; preds = %block.exit.4990
  %src.5004 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5005 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.5004, 0
  %src.5006 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 1, 0
  %dst.5007 = insertvalue <{ i64, [1 x float] }> %dst.5005, float %src.5006, 1, 0
  %ptr_CGrFloat.5008 = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.5007, <{ i64, [1 x float] }>* %ptr_CGrFloat.5008, align 1
  br label %block.exit.5095

block.CGrInt.5009:                                ; preds = %block.exit.4990
  %src.5010 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5011 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.5010, 0
  %src.5012 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 2, 0
  %dst.5013 = insertvalue <{ i64, [1 x i64] }> %dst.5011, i64 %src.5012, 1, 0
  %ptr_CGrInt.5014 = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.5013, <{ i64, [1 x i64] }>* %ptr_CGrInt.5014, align 1
  br label %block.exit.5095

block.CGrString.5015:                             ; preds = %block.exit.4990
  %src.5016 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5017 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.5016, 0
  %src.5018 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 3, 0
  %dst.5019 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.5017, { i8*, i64 }* %src.5018, 1, 0
  %ptr_CGrString.5020 = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.5019, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5020, align 1
  br label %block.exit.5095

block.Cidr_Builtins.MkPair.5021:                  ; preds = %block.exit.4990
  %src.5022 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5023 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5022, 0
  %src.5024 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 1
  %dst.5025 = insertvalue <{ i64, [2 x i64*] }> %dst.5023, i64* %src.5024, 1, 1
  %src.5026 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5027 = insertvalue <{ i64, [2 x i64*] }> %dst.5025, i64* %src.5026, 1, 0
  %ptr_Cidr_Builtins.MkPair.5028 = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5027, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.5028, align 1
  br label %block.exit.5095

"block.Cidr_Data.Vect.::.5029":                   ; preds = %block.exit.4990
  %src.5030 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5031 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5030, 0
  %src.5032 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 1
  %dst.5033 = insertvalue <{ i64, [2 x i64*] }> %dst.5031, i64* %src.5032, 1, 1
  %src.5034 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5035 = insertvalue <{ i64, [2 x i64*] }> %dst.5033, i64* %src.5034, 1, 0
  %"ptr_Cidr_Data.Vect.::.5036" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5035, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.5036", align 1
  br label %block.exit.5095

block.Cidr_Prelude.Bool.False.5037:               ; preds = %block.exit.4990
  %src.5038 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5039 = insertvalue <{ i64 }> undef, i64 %src.5038, 0
  %ptr_Cidr_Prelude.Bool.False.5040 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  store <{ i64 }> %dst.5039, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.5040, align 1
  br label %block.exit.5095

block.Cidr_Prelude.Bool.True.5041:                ; preds = %block.exit.4990
  %src.5042 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5043 = insertvalue <{ i64 }> undef, i64 %src.5042, 0
  %ptr_Cidr_Prelude.Bool.True.5044 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  store <{ i64 }> %dst.5043, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.5044, align 1
  br label %block.exit.5095

"block.Cidr_Prelude.List.::.5045":                ; preds = %block.exit.4990
  %src.5046 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5047 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5046, 0
  %src.5048 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 1
  %dst.5049 = insertvalue <{ i64, [2 x i64*] }> %dst.5047, i64* %src.5048, 1, 1
  %src.5050 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5051 = insertvalue <{ i64, [2 x i64*] }> %dst.5049, i64* %src.5050, 1, 0
  %"ptr_Cidr_Prelude.List.::.5052" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5051, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5052", align 1
  br label %block.exit.5095

block.Cidr_Prelude.List.Nil.5053:                 ; preds = %block.exit.4990
  %src.5054 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5055 = insertvalue <{ i64 }> undef, i64 %src.5054, 0
  %ptr_Cidr_Prelude.List.Nil.5056 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  store <{ i64 }> %dst.5055, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.5056, align 1
  br label %block.exit.5095

"block.Cidr_{U_Main.{adder_0}_1}.5057":           ; preds = %block.exit.4990
  %src.5058 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5059 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.5058, 0
  %src.5060 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 2
  %dst.5061 = insertvalue <{ i64, [3 x i64*] }> %dst.5059, i64* %src.5060, 1, 2
  %src.5062 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 1
  %dst.5063 = insertvalue <{ i64, [3 x i64*] }> %dst.5061, i64* %src.5062, 1, 1
  %src.5064 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5065 = insertvalue <{ i64, [3 x i64*] }> %dst.5063, i64* %src.5064, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5066" = bitcast i64* %new_node_ptr.4997 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.5065, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5066", align 1
  br label %block.exit.5095

"block.Cidr_{U_Main.{main_9}_1}.5067":            ; preds = %block.exit.4990
  %src.5068 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5069 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5068, 0
  %src.5070 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5071 = insertvalue <{ i64, [1 x i64*] }> %dst.5069, i64* %src.5070, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5072" = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5071, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5072", align 1
  br label %block.exit.5095

"block.Cidr_{U_Main.{printFmt_14}_1}.5073":       ; preds = %block.exit.4990
  %src.5074 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5075 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5074, 0
  %src.5076 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 1
  %dst.5077 = insertvalue <{ i64, [2 x i64*] }> %dst.5075, i64* %src.5076, 1, 1
  %src.5078 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5079 = insertvalue <{ i64, [2 x i64*] }> %dst.5077, i64* %src.5078, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5080" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5079, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5080", align 1
  br label %block.exit.5095

"block.Cidr_{U_Main.{printFmt_15}_1}.5081":       ; preds = %block.exit.4990
  %src.5082 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5083 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5082, 0
  %src.5084 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 1
  %dst.5085 = insertvalue <{ i64, [2 x i64*] }> %dst.5083, i64* %src.5084, 1, 1
  %src.5086 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5087 = insertvalue <{ i64, [2 x i64*] }> %dst.5085, i64* %src.5086, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5088" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5087, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5088", align 1
  br label %block.exit.5095

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5089": ; preds = %block.exit.4990
  %src.5090 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 0
  %dst.5091 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5090, 0
  %src.5092 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_389.4993, 4, 0
  %dst.5093 = insertvalue <{ i64, [1 x i64*] }> %dst.5091, i64* %src.5092, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5094" = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5093, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5094", align 1
  br label %block.exit.5095

block.exit.5095:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5089", %"block.Cidr_{U_Main.{printFmt_15}_1}.5081", %"block.Cidr_{U_Main.{printFmt_14}_1}.5073", %"block.Cidr_{U_Main.{main_9}_1}.5067", %"block.Cidr_{U_Main.{adder_0}_1}.5057", %block.Cidr_Prelude.List.Nil.5053, %"block.Cidr_Prelude.List.::.5045", %block.Cidr_Prelude.Bool.True.5041, %block.Cidr_Prelude.Bool.False.5037, %"block.Cidr_Data.Vect.::.5029", %block.Cidr_Builtins.MkPair.5021, %block.CGrString.5015, %block.CGrInt.5009, %block.CGrFloat.5003, %block.CErased.4999
  %tag.5096 = load i64, i64* %new_node_ptr.4997, align 1
  switch i64 %tag.5096, label %error_block [
    i64 0, label %block.CErased.5097
    i64 1, label %block.CGrFloat.5102
    i64 2, label %block.CGrInt.5109
    i64 3, label %block.CGrString.5116
    i64 4, label %block.Cidr_Builtins.MkPair.5123
    i64 5, label %"block.Cidr_Data.Vect.::.5132"
    i64 6, label %block.Cidr_Prelude.Bool.False.5141
    i64 7, label %block.Cidr_Prelude.Bool.True.5146
    i64 8, label %"block.Cidr_Prelude.List.::.5151"
    i64 9, label %block.Cidr_Prelude.List.Nil.5160
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.5165"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.5176"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.5183"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.5192"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5201"
  ]

block.CErased.5097:                               ; preds = %block.exit.5095
  %ptr_CErased.5098 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  %node_CErased.5099 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.5098, align 1
  %src.5100 = extractvalue <{ i64 }> %node_CErased.5099, 0
  %dst.5101 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5100, 0
  br label %block.exit.5208

block.CGrFloat.5102:                              ; preds = %block.exit.5095
  %ptr_CGrFloat.5103 = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x float] }>*
  %node_CGrFloat.5104 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.5103, align 1
  %src.5105 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.5104, 0
  %dst.5106 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5105, 0
  %src.5107 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.5104, 1, 0
  %dst.5108 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5106, float %src.5107, 1, 0
  br label %block.exit.5208

block.CGrInt.5109:                                ; preds = %block.exit.5095
  %ptr_CGrInt.5110 = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x i64] }>*
  %node_CGrInt.5111 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.5110, align 1
  %src.5112 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5111, 0
  %dst.5113 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5112, 0
  %src.5114 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5111, 1, 0
  %dst.5115 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5113, i64 %src.5114, 2, 0
  br label %block.exit.5208

block.CGrString.5116:                             ; preds = %block.exit.5095
  %ptr_CGrString.5117 = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.5118 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5117, align 1
  %src.5119 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5118, 0
  %dst.5120 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5119, 0
  %src.5121 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5118, 1, 0
  %dst.5122 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5120, { i8*, i64 }* %src.5121, 3, 0
  br label %block.exit.5208

block.Cidr_Builtins.MkPair.5123:                  ; preds = %block.exit.5095
  %ptr_Cidr_Builtins.MkPair.5124 = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.5125 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.5124, align 1
  %src.5126 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.5125, 0
  %dst.5127 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5126, 0
  %src.5128 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.5125, 1, 1
  %dst.5129 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5127, i64* %src.5128, 4, 1
  %src.5130 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.5125, 1, 0
  %dst.5131 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5129, i64* %src.5130, 4, 0
  br label %block.exit.5208

"block.Cidr_Data.Vect.::.5132":                   ; preds = %block.exit.5095
  %"ptr_Cidr_Data.Vect.::.5133" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.5134" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.5133", align 1
  %src.5135 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.5134", 0
  %dst.5136 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5135, 0
  %src.5137 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.5134", 1, 1
  %dst.5138 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5136, i64* %src.5137, 4, 1
  %src.5139 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.5134", 1, 0
  %dst.5140 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5138, i64* %src.5139, 4, 0
  br label %block.exit.5208

block.Cidr_Prelude.Bool.False.5141:               ; preds = %block.exit.5095
  %ptr_Cidr_Prelude.Bool.False.5142 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.5143 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.5142, align 1
  %src.5144 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.5143, 0
  %dst.5145 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5144, 0
  br label %block.exit.5208

block.Cidr_Prelude.Bool.True.5146:                ; preds = %block.exit.5095
  %ptr_Cidr_Prelude.Bool.True.5147 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.5148 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.5147, align 1
  %src.5149 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.5148, 0
  %dst.5150 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5149, 0
  br label %block.exit.5208

"block.Cidr_Prelude.List.::.5151":                ; preds = %block.exit.5095
  %"ptr_Cidr_Prelude.List.::.5152" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.5153" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5152", align 1
  %src.5154 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.5153", 0
  %dst.5155 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5154, 0
  %src.5156 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.5153", 1, 1
  %dst.5157 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5155, i64* %src.5156, 4, 1
  %src.5158 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.5153", 1, 0
  %dst.5159 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5157, i64* %src.5158, 4, 0
  br label %block.exit.5208

block.Cidr_Prelude.List.Nil.5160:                 ; preds = %block.exit.5095
  %ptr_Cidr_Prelude.List.Nil.5161 = bitcast i64* %new_node_ptr.4997 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.5162 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.5161, align 1
  %src.5163 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.5162, 0
  %dst.5164 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5163, 0
  br label %block.exit.5208

"block.Cidr_{U_Main.{adder_0}_1}.5165":           ; preds = %block.exit.5095
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5166" = bitcast i64* %new_node_ptr.4997 to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.5167" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5166", align 1
  %src.5168 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.5167", 0
  %dst.5169 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5168, 0
  %src.5170 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.5167", 1, 2
  %dst.5171 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5169, i64* %src.5170, 4, 2
  %src.5172 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.5167", 1, 1
  %dst.5173 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5171, i64* %src.5172, 4, 1
  %src.5174 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.5167", 1, 0
  %dst.5175 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5173, i64* %src.5174, 4, 0
  br label %block.exit.5208

"block.Cidr_{U_Main.{main_9}_1}.5176":            ; preds = %block.exit.5095
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5177" = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.5178" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5177", align 1
  %src.5179 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.5178", 0
  %dst.5180 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5179, 0
  %src.5181 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.5178", 1, 0
  %dst.5182 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5180, i64* %src.5181, 4, 0
  br label %block.exit.5208

"block.Cidr_{U_Main.{printFmt_14}_1}.5183":       ; preds = %block.exit.5095
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5184" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.5185" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5184", align 1
  %src.5186 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.5185", 0
  %dst.5187 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5186, 0
  %src.5188 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.5185", 1, 1
  %dst.5189 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5187, i64* %src.5188, 4, 1
  %src.5190 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.5185", 1, 0
  %dst.5191 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5189, i64* %src.5190, 4, 0
  br label %block.exit.5208

"block.Cidr_{U_Main.{printFmt_15}_1}.5192":       ; preds = %block.exit.5095
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5193" = bitcast i64* %new_node_ptr.4997 to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.5194" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5193", align 1
  %src.5195 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.5194", 0
  %dst.5196 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5195, 0
  %src.5197 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.5194", 1, 1
  %dst.5198 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5196, i64* %src.5197, 4, 1
  %src.5199 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.5194", 1, 0
  %dst.5200 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5198, i64* %src.5199, 4, 0
  br label %block.exit.5208

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5201": ; preds = %block.exit.5095
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5202" = bitcast i64* %new_node_ptr.4997 to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5203" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5202", align 1
  %src.5204 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5203", 0
  %dst.5205 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5204, 0
  %src.5206 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5203", 1, 0
  %dst.5207 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5205, i64* %src.5206, 4, 0
  br label %block.exit.5208

block.exit.5208:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5201", %"block.Cidr_{U_Main.{printFmt_15}_1}.5192", %"block.Cidr_{U_Main.{printFmt_14}_1}.5183", %"block.Cidr_{U_Main.{main_9}_1}.5176", %"block.Cidr_{U_Main.{adder_0}_1}.5165", %block.Cidr_Prelude.List.Nil.5160, %"block.Cidr_Prelude.List.::.5151", %block.Cidr_Prelude.Bool.True.5146, %block.Cidr_Prelude.Bool.False.5141, %"block.Cidr_Data.Vect.::.5132", %block.Cidr_Builtins.MkPair.5123, %block.CGrString.5116, %block.CGrInt.5109, %block.CGrFloat.5102, %block.CErased.5097
  %idr_Prelude.Show.protectEsc3_val_402.5209 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.5101, %block.CErased.5097 ], [ %dst.5108, %block.CGrFloat.5102 ], [ %dst.5115, %block.CGrInt.5109 ], [ %dst.5122, %block.CGrString.5116 ], [ %dst.5131, %block.Cidr_Builtins.MkPair.5123 ], [ %dst.5140, %"block.Cidr_Data.Vect.::.5132" ], [ %dst.5145, %block.Cidr_Prelude.Bool.False.5141 ], [ %dst.5150, %block.Cidr_Prelude.Bool.True.5146 ], [ %dst.5159, %"block.Cidr_Prelude.List.::.5151" ], [ %dst.5164, %block.Cidr_Prelude.List.Nil.5160 ], [ %dst.5175, %"block.Cidr_{U_Main.{adder_0}_1}.5165" ], [ %dst.5182, %"block.Cidr_{U_Main.{main_9}_1}.5176" ], [ %dst.5191, %"block.Cidr_{U_Main.{printFmt_14}_1}.5183" ], [ %dst.5200, %"block.Cidr_{U_Main.{printFmt_15}_1}.5192" ], [ %dst.5207, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5201" ]
  %tag.5210 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.protectEsc3_val_402.5209, 0
  switch i64 %tag.5210, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.5211
    i64 7, label %block.Cidr_Prelude.Bool.True.5213
  ]

block.Cidr_Prelude.Bool.False.5211:               ; preds = %block.exit.5208
  %node_CGrString.5212 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.5215

block.Cidr_Prelude.Bool.True.5213:                ; preds = %block.exit.5208
  %node_CGrString.5214 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.10, 1, 0
  br label %block.exit.5215

block.exit.5215:                                  ; preds = %block.Cidr_Prelude.Bool.True.5213, %block.Cidr_Prelude.Bool.False.5211
  %idr_Prelude.Show.protectEsc3_val_388.5216 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.5212, %block.Cidr_Prelude.Bool.False.5211 ], [ %node_CGrString.5214, %block.Cidr_Prelude.Bool.True.5213 ]
  %alloc_bytes.5217 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5218 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5217 to i64
  %new_node_ptr.5219 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5218 monotonic
  %new_node_ptr.5220 = inttoptr i64 %new_node_ptr.5219 to i64*
  %tag.5221 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Show.protectEsc3_val_388.5216, 0
  %ptr_CGrString.5222 = bitcast i64* %new_node_ptr.5220 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Show.protectEsc3_val_388.5216, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5222, align 1
  %idr_Prelude.Show.protectEsc3_val.5223 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.5220, i64* %idr_Prelude.Show.protectEsc2)
  %alloc_bytes.5224 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5225 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5224 to i64
  %new_node_ptr.5226 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5225 monotonic
  %new_node_ptr.5227 = inttoptr i64 %new_node_ptr.5226 to i64*
  %tag.5228 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Show.protectEsc3_val.5223, 0
  %ptr_CGrString.5229 = bitcast i64* %new_node_ptr.5227 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Show.protectEsc3_val.5223, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5229, align 1
  %result.idr_Prelude.Show.protectEsc.5230 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %idr_Prelude.Show.protectEsc1, i64* %new_node_ptr.5227)
  ret <{ i64, [1 x { i8*, i64 }*] }> %result.idr_Prelude.Show.protectEsc.5230

error_block:                                      ; preds = %block.exit.5208, %block.exit.5095, %block.exit.4990, %block.exit.4977, %block.exit.4969, %block.exit.4952, %block.exit.4941, %idr_Prelude.Show.protectEsc.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [2 x i64*] }> @idr_Prelude.Show.showLitChar(i64* %idr_Prelude.Show.showLitChar0) #0 {
idr_Prelude.Show.showLitChar.entry:
  %tag.5231 = load i64, i64* %idr_Prelude.Show.showLitChar0, align 1
  %ptr_CGrInt.5232 = bitcast i64* %idr_Prelude.Show.showLitChar0 to <{ i64, [1 x i64] }>*
  %node_CGrInt.5233 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.5232, align 1
  %tag.5234 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5233, 0
  switch i64 %tag.5234, label %error_block [
    i64 2, label %block.CGrInt.5235
  ]

block.CGrInt.5235:                                ; preds = %idr_Prelude.Show.showLitChar.entry
  %idr_Prelude.Show.showLitChar_cpat_LInt64_7 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5233, 1, 0
  switch i64 %idr_Prelude.Show.showLitChar_cpat_LInt64_7, label %block.default.5236 [
    i64 7, label %block.int_7.5339
    i64 8, label %block.int_8.5340
    i64 9, label %block.int_9.5341
    i64 10, label %block.int_10.5342
    i64 11, label %block.int_11.5343
    i64 12, label %block.int_12.5344
    i64 13, label %block.int_13.5345
    i64 14, label %block.int_14.5346
    i64 92, label %block.int_92.5362
    i64 127, label %block.int_127.5363
  ]

block.default.5236:                               ; preds = %block.CGrInt.5235
  %alloc_bytes.5237 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.5238 = ptrtoint <{ i64 }>* %alloc_bytes.5237 to i64
  %new_node_ptr.5239 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5238 monotonic
  %new_node_ptr.5240 = inttoptr i64 %new_node_ptr.5239 to i64*
  %tag.5241 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.5242 = bitcast i64* %new_node_ptr.5240 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.5242, align 1
  %idr_Prelude.Show.showLitChar2_val_409.5243 = tail call fastcc <{ i64, [1 x i64] }> @idris_ch_int(i64* %idr_Prelude.Show.showLitChar0)
  %alloc_bytes.5244 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.5245 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.5244 to i64
  %new_node_ptr.5246 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5245 monotonic
  %new_node_ptr.5247 = inttoptr i64 %new_node_ptr.5246 to i64*
  %tag.5248 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.showLitChar2_val_409.5243, 0
  %ptr_CGrInt.5249 = bitcast i64* %new_node_ptr.5247 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.showLitChar2_val_409.5243, <{ i64, [1 x i64] }>* %ptr_CGrInt.5249, align 1
  %idr_Prelude.Show.showLitChar2_val_408.5250 = tail call fastcc <{ i64, [1 x i64] }> @idris_ls_ext(i64* %new_node_ptr.5247)
  %alloc_bytes.5251 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.5252 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.5251 to i64
  %new_node_ptr.5253 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5252 monotonic
  %new_node_ptr.5254 = inttoptr i64 %new_node_ptr.5253 to i64*
  %tag.5255 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Show.showLitChar2_val_408.5250, 0
  %ptr_CGrInt.5256 = bitcast i64* %new_node_ptr.5254 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Show.showLitChar2_val_408.5250, <{ i64, [1 x i64] }>* %ptr_CGrInt.5256, align 1
  %alloc_bytes.5257 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.5258 = ptrtoint <{ i64 }>* %alloc_bytes.5257 to i64
  %new_node_ptr.5259 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5258 monotonic
  %new_node_ptr.5260 = inttoptr i64 %new_node_ptr.5259 to i64*
  %tag.5261 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.5262 = bitcast i64* %new_node_ptr.5260 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.5262, align 1
  %idr_Prelude.Show.showLitChar3_val.5263 = tail call fastcc <{ i64, [2 x i64*] }> @"idr_Prelude.Show.showLitChar:asciiTab:10"(i64* %new_node_ptr.5260)
  %alloc_bytes.5264 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5265 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5264 to i64
  %new_node_ptr.5266 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5265 monotonic
  %new_node_ptr.5267 = inttoptr i64 %new_node_ptr.5266 to i64*
  %tag.5268 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitChar3_val.5263, 0
  %"ptr_Cidr_Prelude.List.::.5269" = bitcast i64* %new_node_ptr.5267 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitChar3_val.5263, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5269", align 1
  %idr_Prelude.Show.showLitChar1_val_405.5270 = tail call fastcc <{ i64, [1 x i64*] }> @"idr_Prelude.Show.showLitChar:getAt:10"(i64* %new_node_ptr.5240, i64* %new_node_ptr.5254, i64* %new_node_ptr.5267)
  %alloc_bytes.5271 = getelementptr inbounds <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* null, i32 1
  %alloc_bytes.5272 = ptrtoint <{ i64, [1 x i64*] }>* %alloc_bytes.5271 to i64
  %new_node_ptr.5273 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5272 monotonic
  %new_node_ptr.5274 = inttoptr i64 %new_node_ptr.5273 to i64*
  %tag.5275 = extractvalue <{ i64, [1 x i64*] }> %idr_Prelude.Show.showLitChar1_val_405.5270, 0
  switch i64 %tag.5275, label %error_block [
    i64 36, label %block.Cidr_Prelude.Maybe.Just.5276
    i64 37, label %block.Cidr_Prelude.Maybe.Nothing.5278
  ]

block.Cidr_Prelude.Maybe.Just.5276:               ; preds = %block.default.5236
  %ptr_Cidr_Prelude.Maybe.Just.5277 = bitcast i64* %new_node_ptr.5274 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %idr_Prelude.Show.showLitChar1_val_405.5270, <{ i64, [1 x i64*] }>* %ptr_Cidr_Prelude.Maybe.Just.5277, align 1
  br label %block.exit.5282

block.Cidr_Prelude.Maybe.Nothing.5278:            ; preds = %block.default.5236
  %src.5279 = extractvalue <{ i64, [1 x i64*] }> %idr_Prelude.Show.showLitChar1_val_405.5270, 0
  %dst.5280 = insertvalue <{ i64 }> undef, i64 %src.5279, 0
  %ptr_Cidr_Prelude.Maybe.Nothing.5281 = bitcast i64* %new_node_ptr.5274 to <{ i64 }>*
  store <{ i64 }> %dst.5280, <{ i64 }>* %ptr_Cidr_Prelude.Maybe.Nothing.5281, align 1
  br label %block.exit.5282

block.exit.5282:                                  ; preds = %block.Cidr_Prelude.Maybe.Nothing.5278, %block.Cidr_Prelude.Maybe.Just.5276
  %tag.5283 = load i64, i64* %new_node_ptr.5274, align 1
  switch i64 %tag.5283, label %error_block [
    i64 36, label %block.Cidr_Prelude.Maybe.Just.5284
    i64 37, label %block.Cidr_Prelude.Maybe.Nothing.5287
  ]

block.Cidr_Prelude.Maybe.Just.5284:               ; preds = %block.exit.5282
  %ptr_Cidr_Prelude.Maybe.Just.5285 = bitcast i64* %new_node_ptr.5274 to <{ i64, [1 x i64*] }>*
  %node_Cidr_Prelude.Maybe.Just.5286 = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %ptr_Cidr_Prelude.Maybe.Just.5285, align 1
  br label %block.exit.5292

block.Cidr_Prelude.Maybe.Nothing.5287:            ; preds = %block.exit.5282
  %ptr_Cidr_Prelude.Maybe.Nothing.5288 = bitcast i64* %new_node_ptr.5274 to <{ i64 }>*
  %node_Cidr_Prelude.Maybe.Nothing.5289 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Maybe.Nothing.5288, align 1
  %src.5290 = extractvalue <{ i64 }> %node_Cidr_Prelude.Maybe.Nothing.5289, 0
  %dst.5291 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5290, 0
  br label %block.exit.5292

block.exit.5292:                                  ; preds = %block.Cidr_Prelude.Maybe.Nothing.5287, %block.Cidr_Prelude.Maybe.Just.5284
  %idr_Prelude.Show.showLitChar1_val_415.5293 = phi <{ i64, [1 x i64*] }> [ %node_Cidr_Prelude.Maybe.Just.5286, %block.Cidr_Prelude.Maybe.Just.5284 ], [ %dst.5291, %block.Cidr_Prelude.Maybe.Nothing.5287 ]
  %tag.5294 = extractvalue <{ i64, [1 x i64*] }> %idr_Prelude.Show.showLitChar1_val_415.5293, 0
  switch i64 %tag.5294, label %error_block [
    i64 36, label %block.Cidr_Prelude.Maybe.Just.5295
    i64 37, label %block.Cidr_Prelude.Maybe.Nothing.5297
  ]

block.Cidr_Prelude.Maybe.Just.5295:               ; preds = %block.exit.5292
  %idr_Prelude.Show.showLitChar2_416 = extractvalue <{ i64, [1 x i64*] }> %idr_Prelude.Show.showLitChar1_val_415.5293, 1, 0
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.5296" = insertvalue <{ i64, [1 x i64*] }> <{ i64 38, [1 x i64*] undef }>, i64* %idr_Prelude.Show.showLitChar2_416, 1, 0
  br label %block.exit.5337

block.Cidr_Prelude.Maybe.Nothing.5297:            ; preds = %block.exit.5292
  %node_CGrInt.5298 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 127, 1, 0
  %alloc_bytes.5299 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.5300 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.5299 to i64
  %new_node_ptr.5301 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5300 monotonic
  %new_node_ptr.5302 = inttoptr i64 %new_node_ptr.5301 to i64*
  %tag.5303 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5298, 0
  %ptr_CGrInt.5304 = bitcast i64* %new_node_ptr.5302 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.5298, <{ i64, [1 x i64] }>* %ptr_CGrInt.5304, align 1
  %idr_Prelude.Show.showLitChar2_val_417.5305 = tail call fastcc <{ i64 }> @"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0"(i64* %idr_Prelude.Show.showLitChar0, i64* %new_node_ptr.5302)
  %alloc_bytes.5306 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.5307 = ptrtoint <{ i64 }>* %alloc_bytes.5306 to i64
  %new_node_ptr.5308 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5307 monotonic
  %new_node_ptr.5309 = inttoptr i64 %new_node_ptr.5308 to i64*
  %tag.5310 = extractvalue <{ i64 }> %idr_Prelude.Show.showLitChar2_val_417.5305, 0
  switch i64 %tag.5310, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.5311
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.5313
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.5315
  ]

block.Cidr_Prelude.Interfaces.EQ.5311:            ; preds = %block.Cidr_Prelude.Maybe.Nothing.5297
  %ptr_Cidr_Prelude.Interfaces.EQ.5312 = bitcast i64* %new_node_ptr.5309 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.showLitChar2_val_417.5305, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.5312, align 1
  br label %block.exit.5317

block.Cidr_Prelude.Interfaces.GT.5313:            ; preds = %block.Cidr_Prelude.Maybe.Nothing.5297
  %ptr_Cidr_Prelude.Interfaces.GT.5314 = bitcast i64* %new_node_ptr.5309 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.showLitChar2_val_417.5305, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.5314, align 1
  br label %block.exit.5317

block.Cidr_Prelude.Interfaces.LT.5315:            ; preds = %block.Cidr_Prelude.Maybe.Nothing.5297
  %ptr_Cidr_Prelude.Interfaces.LT.5316 = bitcast i64* %new_node_ptr.5309 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Show.showLitChar2_val_417.5305, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.5316, align 1
  br label %block.exit.5317

block.exit.5317:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.5315, %block.Cidr_Prelude.Interfaces.GT.5313, %block.Cidr_Prelude.Interfaces.EQ.5311
  %tag.5318 = load i64, i64* %new_node_ptr.5309, align 1
  switch i64 %tag.5318, label %error_block [
    i64 18, label %block.Cidr_Prelude.Interfaces.EQ.5319
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.5322
    i64 20, label %block.Cidr_Prelude.Interfaces.LT.5325
  ]

block.Cidr_Prelude.Interfaces.EQ.5319:            ; preds = %block.exit.5317
  %ptr_Cidr_Prelude.Interfaces.EQ.5320 = bitcast i64* %new_node_ptr.5309 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.EQ.5321 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.EQ.5320, align 1
  br label %block.exit.5328

block.Cidr_Prelude.Interfaces.GT.5322:            ; preds = %block.exit.5317
  %ptr_Cidr_Prelude.Interfaces.GT.5323 = bitcast i64* %new_node_ptr.5309 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.GT.5324 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.GT.5323, align 1
  br label %block.exit.5328

block.Cidr_Prelude.Interfaces.LT.5325:            ; preds = %block.exit.5317
  %ptr_Cidr_Prelude.Interfaces.LT.5326 = bitcast i64* %new_node_ptr.5309 to <{ i64 }>*
  %node_Cidr_Prelude.Interfaces.LT.5327 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Interfaces.LT.5326, align 1
  br label %block.exit.5328

block.exit.5328:                                  ; preds = %block.Cidr_Prelude.Interfaces.LT.5325, %block.Cidr_Prelude.Interfaces.GT.5322, %block.Cidr_Prelude.Interfaces.EQ.5319
  %idr_Prelude.Show.showLitChar2_val_421.5329 = phi <{ i64 }> [ %node_Cidr_Prelude.Interfaces.EQ.5321, %block.Cidr_Prelude.Interfaces.EQ.5319 ], [ %node_Cidr_Prelude.Interfaces.GT.5324, %block.Cidr_Prelude.Interfaces.GT.5322 ], [ %node_Cidr_Prelude.Interfaces.LT.5327, %block.Cidr_Prelude.Interfaces.LT.5325 ]
  %tag.5330 = extractvalue <{ i64 }> %idr_Prelude.Show.showLitChar2_val_421.5329, 0
  switch i64 %tag.5330, label %block.default.5331 [
    i64 19, label %block.Cidr_Prelude.Interfaces.GT.5333
  ]

block.default.5331:                               ; preds = %block.exit.5328
  %"node_C\22idr_{U_prim__strCons_1}\22.5332" = insertvalue <{ i64, [1 x i64*] }> <{ i64 39, [1 x i64*] undef }>, i64* %idr_Prelude.Show.showLitChar0, 1, 0
  br label %block.exit.5335

block.Cidr_Prelude.Interfaces.GT.5333:            ; preds = %block.exit.5328
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.5334" = insertvalue <{ i64, [1 x i64*] }> <{ i64 40, [1 x i64*] undef }>, i64* %idr_Prelude.Show.showLitChar0, 1, 0
  br label %block.exit.5335

block.exit.5335:                                  ; preds = %block.Cidr_Prelude.Interfaces.GT.5333, %block.default.5331
  %result.Cidr_Prelude.Maybe.Nothing.5336 = phi <{ i64, [1 x i64*] }> [ %"node_C\22idr_{U_prim__strCons_1}\22.5332", %block.default.5331 ], [ %"node_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.5334", %block.Cidr_Prelude.Interfaces.GT.5333 ]
  br label %block.exit.5337

block.exit.5337:                                  ; preds = %block.exit.5335, %block.Cidr_Prelude.Maybe.Just.5295
  %result.default.5338 = phi <{ i64, [1 x i64*] }> [ %"node_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.5296", %block.Cidr_Prelude.Maybe.Just.5295 ], [ %result.Cidr_Prelude.Maybe.Nothing.5336, %block.exit.5335 ]
  %src.5365 = extractvalue <{ i64, [1 x i64*] }> %result.default.5338, 0
  %dst.5366 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5365, 0
  %src.5367 = extractvalue <{ i64, [1 x i64*] }> %result.default.5338, 1, 0
  %dst.5368 = insertvalue <{ i64, [2 x i64*] }> %dst.5366, i64* %src.5367, 1, 0
  br label %block.exit.5364

block.int_7.5339:                                 ; preds = %block.CGrInt.5235
  %src.5369 = extractvalue <{ i64 }> <{ i64 41 }>, 0
  %dst.5370 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5369, 0
  br label %block.exit.5364

block.int_8.5340:                                 ; preds = %block.CGrInt.5235
  %src.5371 = extractvalue <{ i64 }> <{ i64 42 }>, 0
  %dst.5372 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5371, 0
  br label %block.exit.5364

block.int_9.5341:                                 ; preds = %block.CGrInt.5235
  %src.5373 = extractvalue <{ i64 }> <{ i64 43 }>, 0
  %dst.5374 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5373, 0
  br label %block.exit.5364

block.int_10.5342:                                ; preds = %block.CGrInt.5235
  %src.5375 = extractvalue <{ i64 }> <{ i64 44 }>, 0
  %dst.5376 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5375, 0
  br label %block.exit.5364

block.int_11.5343:                                ; preds = %block.CGrInt.5235
  %src.5377 = extractvalue <{ i64 }> <{ i64 45 }>, 0
  %dst.5378 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5377, 0
  br label %block.exit.5364

block.int_12.5344:                                ; preds = %block.CGrInt.5235
  %src.5379 = extractvalue <{ i64 }> <{ i64 46 }>, 0
  %dst.5380 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5379, 0
  br label %block.exit.5364

block.int_13.5345:                                ; preds = %block.CGrInt.5235
  %src.5381 = extractvalue <{ i64 }> <{ i64 47 }>, 0
  %dst.5382 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5381, 0
  br label %block.exit.5364

block.int_14.5346:                                ; preds = %block.CGrInt.5235
  %alloc_bytes.5347 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.5348 = ptrtoint <{ i64 }>* %alloc_bytes.5347 to i64
  %new_node_ptr.5349 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5348 monotonic
  %new_node_ptr.5350 = inttoptr i64 %new_node_ptr.5349 to i64*
  %tag.5351 = extractvalue <{ i64 }> <{ i64 48 }>, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_23}_1}\22.5352" = bitcast i64* %new_node_ptr.5350 to <{ i64 }>*
  store <{ i64 }> <{ i64 48 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_23}_1}\22.5352", align 1
  %node_CGrString.5353 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.11, 1, 0
  %alloc_bytes.5354 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5355 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5354 to i64
  %new_node_ptr.5356 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5355 monotonic
  %new_node_ptr.5357 = inttoptr i64 %new_node_ptr.5356 to i64*
  %tag.5358 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5353, 0
  %ptr_CGrString.5359 = bitcast i64* %new_node_ptr.5357 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5353, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5359, align 1
  %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.5360" = insertvalue <{ i64, [2 x i64*] }> <{ i64 49, [2 x i64*] undef }>, i64* %new_node_ptr.5350, 1, 0
  %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.5361" = insertvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.5360", i64* %new_node_ptr.5357, 1, 1
  br label %block.exit.5364

block.int_92.5362:                                ; preds = %block.CGrInt.5235
  %src.5383 = extractvalue <{ i64 }> <{ i64 50 }>, 0
  %dst.5384 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5383, 0
  br label %block.exit.5364

block.int_127.5363:                               ; preds = %block.CGrInt.5235
  %src.5385 = extractvalue <{ i64 }> <{ i64 51 }>, 0
  %dst.5386 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5385, 0
  br label %block.exit.5364

block.exit.5364:                                  ; preds = %block.int_127.5363, %block.int_92.5362, %block.int_14.5346, %block.int_13.5345, %block.int_12.5344, %block.int_11.5343, %block.int_10.5342, %block.int_9.5341, %block.int_8.5340, %block.int_7.5339, %block.exit.5337
  %result.CGrInt.5387 = phi <{ i64, [2 x i64*] }> [ %dst.5368, %block.exit.5337 ], [ %dst.5370, %block.int_7.5339 ], [ %dst.5372, %block.int_8.5340 ], [ %dst.5374, %block.int_9.5341 ], [ %dst.5376, %block.int_10.5342 ], [ %dst.5378, %block.int_11.5343 ], [ %dst.5380, %block.int_12.5344 ], [ %dst.5382, %block.int_13.5345 ], [ %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.5361", %block.int_14.5346 ], [ %dst.5384, %block.int_92.5362 ], [ %dst.5386, %block.int_127.5363 ]
  br label %block.exit.5388

block.exit.5388:                                  ; preds = %block.exit.5364
  %result.idr_Prelude.Show.showLitChar.5389 = phi <{ i64, [2 x i64*] }> [ %result.CGrInt.5387, %block.exit.5364 ]
  ret <{ i64, [2 x i64*] }> %result.idr_Prelude.Show.showLitChar.5389

error_block:                                      ; preds = %block.exit.5317, %block.Cidr_Prelude.Maybe.Nothing.5297, %block.exit.5292, %block.exit.5282, %block.default.5236, %idr_Prelude.Show.showLitChar.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.showLitString(i64* %idr_Prelude.Show.showLitString0, i64* %idr_Prelude.Show.showLitString1) #0 {
idr_Prelude.Show.showLitString.entry:
  %tag.5390 = load i64, i64* %idr_Prelude.Show.showLitString0, align 1
  switch i64 %tag.5390, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.5391"
    i64 9, label %block.Cidr_Prelude.List.Nil.5394
  ]

"block.Cidr_Prelude.List.::.5391":                ; preds = %idr_Prelude.Show.showLitString.entry
  %"ptr_Cidr_Prelude.List.::.5392" = bitcast i64* %idr_Prelude.Show.showLitString0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.5393" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5392", align 1
  br label %block.exit.5399

block.Cidr_Prelude.List.Nil.5394:                 ; preds = %idr_Prelude.Show.showLitString.entry
  %ptr_Cidr_Prelude.List.Nil.5395 = bitcast i64* %idr_Prelude.Show.showLitString0 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.5396 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.5395, align 1
  %src.5397 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.5396, 0
  %dst.5398 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5397, 0
  br label %block.exit.5399

block.exit.5399:                                  ; preds = %block.Cidr_Prelude.List.Nil.5394, %"block.Cidr_Prelude.List.::.5391"
  %idr_Prelude.Show.showLitString0_val.5400 = phi <{ i64, [2 x i64*] }> [ %"node_Cidr_Prelude.List.::.5393", %"block.Cidr_Prelude.List.::.5391" ], [ %dst.5398, %block.Cidr_Prelude.List.Nil.5394 ]
  %tag.5401 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString0_val.5400, 0
  switch i64 %tag.5401, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.5402"
    i64 9, label %block.Cidr_Prelude.List.Nil.5696
  ]

"block.Cidr_Prelude.List.::.5402":                ; preds = %block.exit.5399
  %idr_Prelude.Show.showLitString2 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString0_val.5400, 1, 0
  %idr_Prelude.Show.showLitString3 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString0_val.5400, 1, 1
  %tag.5403 = load i64, i64* %idr_Prelude.Show.showLitString2, align 1
  %ptr_CGrInt.5404 = bitcast i64* %idr_Prelude.Show.showLitString2 to <{ i64, [1 x i64] }>*
  %node_CGrInt.5405 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.5404, align 1
  %tag.5406 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5405, 0
  switch i64 %tag.5406, label %error_block [
    i64 2, label %block.CGrInt.5407
  ]

block.CGrInt.5407:                                ; preds = %"block.Cidr_Prelude.List.::.5402"
  %idr_Prelude.Show.showLitString_cpat_LInt64_34 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5405, 1, 0
  switch i64 %idr_Prelude.Show.showLitString_cpat_LInt64_34, label %block.default.5408 [
    i64 34, label %block.int_34.5576
  ]

block.default.5408:                               ; preds = %block.CGrInt.5407
  %idr_Prelude.Show.showLitString4_val_441.5409 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Prelude.Show.showLitChar(i64* %idr_Prelude.Show.showLitString2)
  %alloc_bytes.5410 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5411 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5410 to i64
  %new_node_ptr.5412 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5411 monotonic
  %new_node_ptr.5413 = inttoptr i64 %new_node_ptr.5412 to i64*
  %tag.5414 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  switch i64 %tag.5414, label %error_block [
    i64 49, label %"block.Cidr_{U_Prelude.Show.protectEsc_1}.5415"
    i64 41, label %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.5417"
    i64 42, label %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.5421"
    i64 43, label %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.5425"
    i64 44, label %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.5429"
    i64 45, label %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.5433"
    i64 46, label %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.5437"
    i64 47, label %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.5441"
    i64 50, label %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.5445"
    i64 51, label %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.5449"
    i64 38, label %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.5453"
    i64 40, label %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.5459"
    i64 39, label %"block.Cidr_{U_prim__strCons_1}.5465"
  ]

"block.Cidr_{U_Prelude.Show.protectEsc_1}.5415":  ; preds = %block.default.5408
  %"ptr_C\22idr_{U_Prelude.Show.protectEsc_1}\22.5416" = bitcast i64* %new_node_ptr.5413 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.protectEsc_1}\22.5416", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.5417": ; preds = %block.default.5408
  %src.5418 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5419 = insertvalue <{ i64 }> undef, i64 %src.5418, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_16}_1}\22.5420" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5419, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_16}_1}\22.5420", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.5421": ; preds = %block.default.5408
  %src.5422 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5423 = insertvalue <{ i64 }> undef, i64 %src.5422, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_17}_1}\22.5424" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5423, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_17}_1}\22.5424", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.5425": ; preds = %block.default.5408
  %src.5426 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5427 = insertvalue <{ i64 }> undef, i64 %src.5426, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_18}_1}\22.5428" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5427, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_18}_1}\22.5428", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.5429": ; preds = %block.default.5408
  %src.5430 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5431 = insertvalue <{ i64 }> undef, i64 %src.5430, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_19}_1}\22.5432" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5431, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_19}_1}\22.5432", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.5433": ; preds = %block.default.5408
  %src.5434 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5435 = insertvalue <{ i64 }> undef, i64 %src.5434, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_20}_1}\22.5436" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5435, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_20}_1}\22.5436", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.5437": ; preds = %block.default.5408
  %src.5438 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5439 = insertvalue <{ i64 }> undef, i64 %src.5438, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_21}_1}\22.5440" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5439, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_21}_1}\22.5440", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.5441": ; preds = %block.default.5408
  %src.5442 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5443 = insertvalue <{ i64 }> undef, i64 %src.5442, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_22}_1}\22.5444" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5443, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_22}_1}\22.5444", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.5445": ; preds = %block.default.5408
  %src.5446 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5447 = insertvalue <{ i64 }> undef, i64 %src.5446, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_24}_1}\22.5448" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5447, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_24}_1}\22.5448", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.5449": ; preds = %block.default.5408
  %src.5450 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5451 = insertvalue <{ i64 }> undef, i64 %src.5450, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_25}_1}\22.5452" = bitcast i64* %new_node_ptr.5413 to <{ i64 }>*
  store <{ i64 }> %dst.5451, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_25}_1}\22.5452", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.5453": ; preds = %block.default.5408
  %src.5454 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5455 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5454, 0
  %src.5456 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 1, 0
  %dst.5457 = insertvalue <{ i64, [1 x i64*] }> %dst.5455, i64* %src.5456, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.5458" = bitcast i64* %new_node_ptr.5413 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5457, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.5458", align 1
  br label %block.exit.5471

"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.5459": ; preds = %block.default.5408
  %src.5460 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5461 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5460, 0
  %src.5462 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 1, 0
  %dst.5463 = insertvalue <{ i64, [1 x i64*] }> %dst.5461, i64* %src.5462, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.5464" = bitcast i64* %new_node_ptr.5413 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5463, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.5464", align 1
  br label %block.exit.5471

"block.Cidr_{U_prim__strCons_1}.5465":            ; preds = %block.default.5408
  %src.5466 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 0
  %dst.5467 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5466, 0
  %src.5468 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Show.showLitString4_val_441.5409, 1, 0
  %dst.5469 = insertvalue <{ i64, [1 x i64*] }> %dst.5467, i64* %src.5468, 1, 0
  %"ptr_C\22idr_{U_prim__strCons_1}\22.5470" = bitcast i64* %new_node_ptr.5413 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5469, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_prim__strCons_1}\22.5470", align 1
  br label %block.exit.5471

block.exit.5471:                                  ; preds = %"block.Cidr_{U_prim__strCons_1}.5465", %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.5459", %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.5453", %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.5449", %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.5445", %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.5441", %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.5437", %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.5433", %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.5429", %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.5425", %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.5421", %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.5417", %"block.Cidr_{U_Prelude.Show.protectEsc_1}.5415"
  %idr_Prelude.Show.showLitString5_val_443.5472 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.showLitString(i64* %idr_Prelude.Show.showLitString3, i64* %idr_Prelude.Show.showLitString1)
  %alloc_bytes.5473 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.5474 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.5473 to i64
  %new_node_ptr.5475 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5474 monotonic
  %new_node_ptr.5476 = inttoptr i64 %new_node_ptr.5475 to i64*
  %tag.5477 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  switch i64 %tag.5477, label %error_block [
    i64 0, label %block.CErased.5478
    i64 1, label %block.CGrFloat.5482
    i64 2, label %block.CGrInt.5488
    i64 3, label %block.CGrString.5494
    i64 4, label %block.Cidr_Builtins.MkPair.5500
    i64 5, label %"block.Cidr_Data.Vect.::.5508"
    i64 6, label %block.Cidr_Prelude.Bool.False.5516
    i64 7, label %block.Cidr_Prelude.Bool.True.5520
    i64 8, label %"block.Cidr_Prelude.List.::.5524"
    i64 9, label %block.Cidr_Prelude.List.Nil.5532
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.5536"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.5546"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.5552"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.5560"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5568"
  ]

block.CErased.5478:                               ; preds = %block.exit.5471
  %src.5479 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5480 = insertvalue <{ i64 }> undef, i64 %src.5479, 0
  %ptr_CErased.5481 = bitcast i64* %new_node_ptr.5476 to <{ i64 }>*
  store <{ i64 }> %dst.5480, <{ i64 }>* %ptr_CErased.5481, align 1
  br label %block.exit.5574

block.CGrFloat.5482:                              ; preds = %block.exit.5471
  %src.5483 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5484 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.5483, 0
  %src.5485 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 1, 0
  %dst.5486 = insertvalue <{ i64, [1 x float] }> %dst.5484, float %src.5485, 1, 0
  %ptr_CGrFloat.5487 = bitcast i64* %new_node_ptr.5476 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.5486, <{ i64, [1 x float] }>* %ptr_CGrFloat.5487, align 1
  br label %block.exit.5574

block.CGrInt.5488:                                ; preds = %block.exit.5471
  %src.5489 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5490 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.5489, 0
  %src.5491 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 2, 0
  %dst.5492 = insertvalue <{ i64, [1 x i64] }> %dst.5490, i64 %src.5491, 1, 0
  %ptr_CGrInt.5493 = bitcast i64* %new_node_ptr.5476 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.5492, <{ i64, [1 x i64] }>* %ptr_CGrInt.5493, align 1
  br label %block.exit.5574

block.CGrString.5494:                             ; preds = %block.exit.5471
  %src.5495 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5496 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.5495, 0
  %src.5497 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 3, 0
  %dst.5498 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.5496, { i8*, i64 }* %src.5497, 1, 0
  %ptr_CGrString.5499 = bitcast i64* %new_node_ptr.5476 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.5498, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5499, align 1
  br label %block.exit.5574

block.Cidr_Builtins.MkPair.5500:                  ; preds = %block.exit.5471
  %src.5501 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5502 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5501, 0
  %src.5503 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 1
  %dst.5504 = insertvalue <{ i64, [2 x i64*] }> %dst.5502, i64* %src.5503, 1, 1
  %src.5505 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5506 = insertvalue <{ i64, [2 x i64*] }> %dst.5504, i64* %src.5505, 1, 0
  %ptr_Cidr_Builtins.MkPair.5507 = bitcast i64* %new_node_ptr.5476 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5506, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.5507, align 1
  br label %block.exit.5574

"block.Cidr_Data.Vect.::.5508":                   ; preds = %block.exit.5471
  %src.5509 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5510 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5509, 0
  %src.5511 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 1
  %dst.5512 = insertvalue <{ i64, [2 x i64*] }> %dst.5510, i64* %src.5511, 1, 1
  %src.5513 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5514 = insertvalue <{ i64, [2 x i64*] }> %dst.5512, i64* %src.5513, 1, 0
  %"ptr_Cidr_Data.Vect.::.5515" = bitcast i64* %new_node_ptr.5476 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5514, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.5515", align 1
  br label %block.exit.5574

block.Cidr_Prelude.Bool.False.5516:               ; preds = %block.exit.5471
  %src.5517 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5518 = insertvalue <{ i64 }> undef, i64 %src.5517, 0
  %ptr_Cidr_Prelude.Bool.False.5519 = bitcast i64* %new_node_ptr.5476 to <{ i64 }>*
  store <{ i64 }> %dst.5518, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.5519, align 1
  br label %block.exit.5574

block.Cidr_Prelude.Bool.True.5520:                ; preds = %block.exit.5471
  %src.5521 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5522 = insertvalue <{ i64 }> undef, i64 %src.5521, 0
  %ptr_Cidr_Prelude.Bool.True.5523 = bitcast i64* %new_node_ptr.5476 to <{ i64 }>*
  store <{ i64 }> %dst.5522, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.5523, align 1
  br label %block.exit.5574

"block.Cidr_Prelude.List.::.5524":                ; preds = %block.exit.5471
  %src.5525 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5526 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5525, 0
  %src.5527 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 1
  %dst.5528 = insertvalue <{ i64, [2 x i64*] }> %dst.5526, i64* %src.5527, 1, 1
  %src.5529 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5530 = insertvalue <{ i64, [2 x i64*] }> %dst.5528, i64* %src.5529, 1, 0
  %"ptr_Cidr_Prelude.List.::.5531" = bitcast i64* %new_node_ptr.5476 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5530, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5531", align 1
  br label %block.exit.5574

block.Cidr_Prelude.List.Nil.5532:                 ; preds = %block.exit.5471
  %src.5533 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5534 = insertvalue <{ i64 }> undef, i64 %src.5533, 0
  %ptr_Cidr_Prelude.List.Nil.5535 = bitcast i64* %new_node_ptr.5476 to <{ i64 }>*
  store <{ i64 }> %dst.5534, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.5535, align 1
  br label %block.exit.5574

"block.Cidr_{U_Main.{adder_0}_1}.5536":           ; preds = %block.exit.5471
  %src.5537 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5538 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.5537, 0
  %src.5539 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 2
  %dst.5540 = insertvalue <{ i64, [3 x i64*] }> %dst.5538, i64* %src.5539, 1, 2
  %src.5541 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 1
  %dst.5542 = insertvalue <{ i64, [3 x i64*] }> %dst.5540, i64* %src.5541, 1, 1
  %src.5543 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5544 = insertvalue <{ i64, [3 x i64*] }> %dst.5542, i64* %src.5543, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5545" = bitcast i64* %new_node_ptr.5476 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.5544, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5545", align 1
  br label %block.exit.5574

"block.Cidr_{U_Main.{main_9}_1}.5546":            ; preds = %block.exit.5471
  %src.5547 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5548 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5547, 0
  %src.5549 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5550 = insertvalue <{ i64, [1 x i64*] }> %dst.5548, i64* %src.5549, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5551" = bitcast i64* %new_node_ptr.5476 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5550, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5551", align 1
  br label %block.exit.5574

"block.Cidr_{U_Main.{printFmt_14}_1}.5552":       ; preds = %block.exit.5471
  %src.5553 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5554 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5553, 0
  %src.5555 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 1
  %dst.5556 = insertvalue <{ i64, [2 x i64*] }> %dst.5554, i64* %src.5555, 1, 1
  %src.5557 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5558 = insertvalue <{ i64, [2 x i64*] }> %dst.5556, i64* %src.5557, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5559" = bitcast i64* %new_node_ptr.5476 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5558, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5559", align 1
  br label %block.exit.5574

"block.Cidr_{U_Main.{printFmt_15}_1}.5560":       ; preds = %block.exit.5471
  %src.5561 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5562 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5561, 0
  %src.5563 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 1
  %dst.5564 = insertvalue <{ i64, [2 x i64*] }> %dst.5562, i64* %src.5563, 1, 1
  %src.5565 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5566 = insertvalue <{ i64, [2 x i64*] }> %dst.5564, i64* %src.5565, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5567" = bitcast i64* %new_node_ptr.5476 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5566, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5567", align 1
  br label %block.exit.5574

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5568": ; preds = %block.exit.5471
  %src.5569 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 0
  %dst.5570 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5569, 0
  %src.5571 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val_443.5472, 4, 0
  %dst.5572 = insertvalue <{ i64, [1 x i64*] }> %dst.5570, i64* %src.5571, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5573" = bitcast i64* %new_node_ptr.5476 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5572, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5573", align 1
  br label %block.exit.5574

block.exit.5574:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5568", %"block.Cidr_{U_Main.{printFmt_15}_1}.5560", %"block.Cidr_{U_Main.{printFmt_14}_1}.5552", %"block.Cidr_{U_Main.{main_9}_1}.5546", %"block.Cidr_{U_Main.{adder_0}_1}.5536", %block.Cidr_Prelude.List.Nil.5532, %"block.Cidr_Prelude.List.::.5524", %block.Cidr_Prelude.Bool.True.5520, %block.Cidr_Prelude.Bool.False.5516, %"block.Cidr_Data.Vect.::.5508", %block.Cidr_Builtins.MkPair.5500, %block.CGrString.5494, %block.CGrInt.5488, %block.CGrFloat.5482, %block.CErased.5478
  %result.default.5575 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.5413, i64* %new_node_ptr.5476)
  br label %block.exit.5688

block.int_34.5576:                                ; preds = %block.CGrInt.5407
  %node_CGrString.5577 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.12, 1, 0
  %alloc_bytes.5578 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5579 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5578 to i64
  %new_node_ptr.5580 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5579 monotonic
  %new_node_ptr.5581 = inttoptr i64 %new_node_ptr.5580 to i64*
  %tag.5582 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5577, 0
  %ptr_CGrString.5583 = bitcast i64* %new_node_ptr.5581 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5577, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5583, align 1
  %idr_Prelude.Show.showLitString5_val.5584 = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.showLitString(i64* %idr_Prelude.Show.showLitString3, i64* %idr_Prelude.Show.showLitString1)
  %alloc_bytes.5585 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.5586 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.5585 to i64
  %new_node_ptr.5587 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5586 monotonic
  %new_node_ptr.5588 = inttoptr i64 %new_node_ptr.5587 to i64*
  %tag.5589 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  switch i64 %tag.5589, label %error_block [
    i64 0, label %block.CErased.5590
    i64 1, label %block.CGrFloat.5594
    i64 2, label %block.CGrInt.5600
    i64 3, label %block.CGrString.5606
    i64 4, label %block.Cidr_Builtins.MkPair.5612
    i64 5, label %"block.Cidr_Data.Vect.::.5620"
    i64 6, label %block.Cidr_Prelude.Bool.False.5628
    i64 7, label %block.Cidr_Prelude.Bool.True.5632
    i64 8, label %"block.Cidr_Prelude.List.::.5636"
    i64 9, label %block.Cidr_Prelude.List.Nil.5644
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.5648"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.5658"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.5664"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.5672"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5680"
  ]

block.CErased.5590:                               ; preds = %block.int_34.5576
  %src.5591 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5592 = insertvalue <{ i64 }> undef, i64 %src.5591, 0
  %ptr_CErased.5593 = bitcast i64* %new_node_ptr.5588 to <{ i64 }>*
  store <{ i64 }> %dst.5592, <{ i64 }>* %ptr_CErased.5593, align 1
  br label %block.exit.5686

block.CGrFloat.5594:                              ; preds = %block.int_34.5576
  %src.5595 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5596 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.5595, 0
  %src.5597 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 1, 0
  %dst.5598 = insertvalue <{ i64, [1 x float] }> %dst.5596, float %src.5597, 1, 0
  %ptr_CGrFloat.5599 = bitcast i64* %new_node_ptr.5588 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.5598, <{ i64, [1 x float] }>* %ptr_CGrFloat.5599, align 1
  br label %block.exit.5686

block.CGrInt.5600:                                ; preds = %block.int_34.5576
  %src.5601 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5602 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.5601, 0
  %src.5603 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 2, 0
  %dst.5604 = insertvalue <{ i64, [1 x i64] }> %dst.5602, i64 %src.5603, 1, 0
  %ptr_CGrInt.5605 = bitcast i64* %new_node_ptr.5588 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.5604, <{ i64, [1 x i64] }>* %ptr_CGrInt.5605, align 1
  br label %block.exit.5686

block.CGrString.5606:                             ; preds = %block.int_34.5576
  %src.5607 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5608 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.5607, 0
  %src.5609 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 3, 0
  %dst.5610 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.5608, { i8*, i64 }* %src.5609, 1, 0
  %ptr_CGrString.5611 = bitcast i64* %new_node_ptr.5588 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.5610, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5611, align 1
  br label %block.exit.5686

block.Cidr_Builtins.MkPair.5612:                  ; preds = %block.int_34.5576
  %src.5613 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5614 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5613, 0
  %src.5615 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 1
  %dst.5616 = insertvalue <{ i64, [2 x i64*] }> %dst.5614, i64* %src.5615, 1, 1
  %src.5617 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5618 = insertvalue <{ i64, [2 x i64*] }> %dst.5616, i64* %src.5617, 1, 0
  %ptr_Cidr_Builtins.MkPair.5619 = bitcast i64* %new_node_ptr.5588 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5618, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.5619, align 1
  br label %block.exit.5686

"block.Cidr_Data.Vect.::.5620":                   ; preds = %block.int_34.5576
  %src.5621 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5622 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5621, 0
  %src.5623 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 1
  %dst.5624 = insertvalue <{ i64, [2 x i64*] }> %dst.5622, i64* %src.5623, 1, 1
  %src.5625 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5626 = insertvalue <{ i64, [2 x i64*] }> %dst.5624, i64* %src.5625, 1, 0
  %"ptr_Cidr_Data.Vect.::.5627" = bitcast i64* %new_node_ptr.5588 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5626, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.5627", align 1
  br label %block.exit.5686

block.Cidr_Prelude.Bool.False.5628:               ; preds = %block.int_34.5576
  %src.5629 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5630 = insertvalue <{ i64 }> undef, i64 %src.5629, 0
  %ptr_Cidr_Prelude.Bool.False.5631 = bitcast i64* %new_node_ptr.5588 to <{ i64 }>*
  store <{ i64 }> %dst.5630, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.5631, align 1
  br label %block.exit.5686

block.Cidr_Prelude.Bool.True.5632:                ; preds = %block.int_34.5576
  %src.5633 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5634 = insertvalue <{ i64 }> undef, i64 %src.5633, 0
  %ptr_Cidr_Prelude.Bool.True.5635 = bitcast i64* %new_node_ptr.5588 to <{ i64 }>*
  store <{ i64 }> %dst.5634, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.5635, align 1
  br label %block.exit.5686

"block.Cidr_Prelude.List.::.5636":                ; preds = %block.int_34.5576
  %src.5637 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5638 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5637, 0
  %src.5639 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 1
  %dst.5640 = insertvalue <{ i64, [2 x i64*] }> %dst.5638, i64* %src.5639, 1, 1
  %src.5641 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5642 = insertvalue <{ i64, [2 x i64*] }> %dst.5640, i64* %src.5641, 1, 0
  %"ptr_Cidr_Prelude.List.::.5643" = bitcast i64* %new_node_ptr.5588 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5642, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5643", align 1
  br label %block.exit.5686

block.Cidr_Prelude.List.Nil.5644:                 ; preds = %block.int_34.5576
  %src.5645 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5646 = insertvalue <{ i64 }> undef, i64 %src.5645, 0
  %ptr_Cidr_Prelude.List.Nil.5647 = bitcast i64* %new_node_ptr.5588 to <{ i64 }>*
  store <{ i64 }> %dst.5646, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.5647, align 1
  br label %block.exit.5686

"block.Cidr_{U_Main.{adder_0}_1}.5648":           ; preds = %block.int_34.5576
  %src.5649 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5650 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.5649, 0
  %src.5651 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 2
  %dst.5652 = insertvalue <{ i64, [3 x i64*] }> %dst.5650, i64* %src.5651, 1, 2
  %src.5653 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 1
  %dst.5654 = insertvalue <{ i64, [3 x i64*] }> %dst.5652, i64* %src.5653, 1, 1
  %src.5655 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5656 = insertvalue <{ i64, [3 x i64*] }> %dst.5654, i64* %src.5655, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5657" = bitcast i64* %new_node_ptr.5588 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.5656, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.5657", align 1
  br label %block.exit.5686

"block.Cidr_{U_Main.{main_9}_1}.5658":            ; preds = %block.int_34.5576
  %src.5659 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5660 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5659, 0
  %src.5661 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5662 = insertvalue <{ i64, [1 x i64*] }> %dst.5660, i64* %src.5661, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5663" = bitcast i64* %new_node_ptr.5588 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5662, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.5663", align 1
  br label %block.exit.5686

"block.Cidr_{U_Main.{printFmt_14}_1}.5664":       ; preds = %block.int_34.5576
  %src.5665 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5666 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5665, 0
  %src.5667 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 1
  %dst.5668 = insertvalue <{ i64, [2 x i64*] }> %dst.5666, i64* %src.5667, 1, 1
  %src.5669 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5670 = insertvalue <{ i64, [2 x i64*] }> %dst.5668, i64* %src.5669, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5671" = bitcast i64* %new_node_ptr.5588 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5670, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.5671", align 1
  br label %block.exit.5686

"block.Cidr_{U_Main.{printFmt_15}_1}.5672":       ; preds = %block.int_34.5576
  %src.5673 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5674 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5673, 0
  %src.5675 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 1
  %dst.5676 = insertvalue <{ i64, [2 x i64*] }> %dst.5674, i64* %src.5675, 1, 1
  %src.5677 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5678 = insertvalue <{ i64, [2 x i64*] }> %dst.5676, i64* %src.5677, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5679" = bitcast i64* %new_node_ptr.5588 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.5678, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.5679", align 1
  br label %block.exit.5686

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5680": ; preds = %block.int_34.5576
  %src.5681 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 0
  %dst.5682 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5681, 0
  %src.5683 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %idr_Prelude.Show.showLitString5_val.5584, 4, 0
  %dst.5684 = insertvalue <{ i64, [1 x i64*] }> %dst.5682, i64* %src.5683, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5685" = bitcast i64* %new_node_ptr.5588 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5684, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.5685", align 1
  br label %block.exit.5686

block.exit.5686:                                  ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.5680", %"block.Cidr_{U_Main.{printFmt_15}_1}.5672", %"block.Cidr_{U_Main.{printFmt_14}_1}.5664", %"block.Cidr_{U_Main.{main_9}_1}.5658", %"block.Cidr_{U_Main.{adder_0}_1}.5648", %block.Cidr_Prelude.List.Nil.5644, %"block.Cidr_Prelude.List.::.5636", %block.Cidr_Prelude.Bool.True.5632, %block.Cidr_Prelude.Bool.False.5628, %"block.Cidr_Data.Vect.::.5620", %block.Cidr_Builtins.MkPair.5612, %block.CGrString.5606, %block.CGrInt.5600, %block.CGrFloat.5594, %block.CErased.5590
  %result.int_34.5687 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.5581, i64* %new_node_ptr.5588)
  %src.5689 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %result.int_34.5687, 0
  %dst.5690 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5689, 0
  %src.5691 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %result.int_34.5687, 1, 0
  %dst.5692 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5690, { i8*, i64 }* %src.5691, 3, 0
  br label %block.exit.5688

block.exit.5688:                                  ; preds = %block.exit.5686, %block.exit.5574
  %result.CGrInt.5693 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %result.default.5575, %block.exit.5574 ], [ %dst.5692, %block.exit.5686 ]
  br label %block.exit.5694

block.exit.5694:                                  ; preds = %block.exit.5688
  %"result.Cidr_Prelude.List.::.5695" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %result.CGrInt.5693, %block.exit.5688 ]
  br label %block.exit.5700

block.Cidr_Prelude.List.Nil.5696:                 ; preds = %block.exit.5399
  %tag.5697 = load i64, i64* %idr_Prelude.Show.showLitString1, align 1
  %ptr_CGrString.5698 = bitcast i64* %idr_Prelude.Show.showLitString1 to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.5699 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5698, align 1
  %src.5701 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5699, 0
  %dst.5702 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.5701, 0
  %src.5703 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5699, 1, 0
  %dst.5704 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.5702, { i8*, i64 }* %src.5703, 3, 0
  br label %block.exit.5700

block.exit.5700:                                  ; preds = %block.Cidr_Prelude.List.Nil.5696, %block.exit.5694
  %result.idr_Prelude.Show.showLitString.5705 = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %"result.Cidr_Prelude.List.::.5695", %block.exit.5694 ], [ %dst.5704, %block.Cidr_Prelude.List.Nil.5696 ]
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %result.idr_Prelude.Show.showLitString.5705

error_block:                                      ; preds = %block.int_34.5576, %block.exit.5471, %block.default.5408, %"block.Cidr_Prelude.List.::.5402", %block.exit.5399, %idr_Prelude.Show.showLitString.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %idr_Main.toFormat0) #0 {
idr_Main.toFormat.entry:
  %tag.5706 = load i64, i64* %idr_Main.toFormat0, align 1
  switch i64 %tag.5706, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.5707"
    i64 9, label %block.Cidr_Prelude.List.Nil.5710
  ]

"block.Cidr_Prelude.List.::.5707":                ; preds = %idr_Main.toFormat.entry
  %"ptr_Cidr_Prelude.List.::.5708" = bitcast i64* %idr_Main.toFormat0 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.5709" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5708", align 1
  br label %block.exit.5715

block.Cidr_Prelude.List.Nil.5710:                 ; preds = %idr_Main.toFormat.entry
  %ptr_Cidr_Prelude.List.Nil.5711 = bitcast i64* %idr_Main.toFormat0 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.5712 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.5711, align 1
  %src.5713 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.5712, 0
  %dst.5714 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5713, 0
  br label %block.exit.5715

block.exit.5715:                                  ; preds = %block.Cidr_Prelude.List.Nil.5710, %"block.Cidr_Prelude.List.::.5707"
  %idr_Main.toFormat0_val.5716 = phi <{ i64, [2 x i64*] }> [ %"node_Cidr_Prelude.List.::.5709", %"block.Cidr_Prelude.List.::.5707" ], [ %dst.5714, %block.Cidr_Prelude.List.Nil.5710 ]
  %tag.5717 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat0_val.5716, 0
  switch i64 %tag.5717, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.5718"
    i64 9, label %block.Cidr_Prelude.List.Nil.5991
  ]

"block.Cidr_Prelude.List.::.5718":                ; preds = %block.exit.5715
  %idr_Main.toFormat1 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat0_val.5716, 1, 0
  %idr_Main.toFormat2 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat0_val.5716, 1, 1
  %tag.5719 = load i64, i64* %idr_Main.toFormat1, align 1
  %ptr_CGrInt.5720 = bitcast i64* %idr_Main.toFormat1 to <{ i64, [1 x i64] }>*
  %node_CGrInt.5721 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.5720, align 1
  %tag.5722 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5721, 0
  switch i64 %tag.5722, label %error_block [
    i64 2, label %block.CGrInt.5723
  ]

block.CGrInt.5723:                                ; preds = %"block.Cidr_Prelude.List.::.5718"
  %idr_Main.toFormat_cpat_LInt64_37 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5721, 1, 0
  switch i64 %idr_Main.toFormat_cpat_LInt64_37, label %block.default.5724 [
    i64 37, label %block.int_37.5830
  ]

block.default.5724:                               ; preds = %block.CGrInt.5723
  %idr_Main.toFormat3_val_462.5725 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %idr_Main.toFormat2)
  %alloc_bytes.5726 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5727 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5726 to i64
  %new_node_ptr.5728 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5727 monotonic
  %new_node_ptr.5729 = inttoptr i64 %new_node_ptr.5728 to i64*
  %tag.5730 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_462.5725, 0
  switch i64 %tag.5730, label %error_block [
    i64 30, label %block.Cidr_Main.End.5731
    i64 31, label %block.Cidr_Main.Lit.5735
    i64 32, label %block.Cidr_Main.Number.5737
    i64 33, label %block.Cidr_Main.Str.5743
  ]

block.Cidr_Main.End.5731:                         ; preds = %block.default.5724
  %src.5732 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_462.5725, 0
  %dst.5733 = insertvalue <{ i64 }> undef, i64 %src.5732, 0
  %ptr_Cidr_Main.End.5734 = bitcast i64* %new_node_ptr.5729 to <{ i64 }>*
  store <{ i64 }> %dst.5733, <{ i64 }>* %ptr_Cidr_Main.End.5734, align 1
  br label %block.exit.5749

block.Cidr_Main.Lit.5735:                         ; preds = %block.default.5724
  %ptr_Cidr_Main.Lit.5736 = bitcast i64* %new_node_ptr.5729 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_462.5725, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.5736, align 1
  br label %block.exit.5749

block.Cidr_Main.Number.5737:                      ; preds = %block.default.5724
  %src.5738 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_462.5725, 0
  %dst.5739 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5738, 0
  %src.5740 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_462.5725, 1, 0
  %dst.5741 = insertvalue <{ i64, [1 x i64*] }> %dst.5739, i64* %src.5740, 1, 0
  %ptr_Cidr_Main.Number.5742 = bitcast i64* %new_node_ptr.5729 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5741, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.5742, align 1
  br label %block.exit.5749

block.Cidr_Main.Str.5743:                         ; preds = %block.default.5724
  %src.5744 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_462.5725, 0
  %dst.5745 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5744, 0
  %src.5746 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_462.5725, 1, 0
  %dst.5747 = insertvalue <{ i64, [1 x i64*] }> %dst.5745, i64* %src.5746, 1, 0
  %ptr_Cidr_Main.Str.5748 = bitcast i64* %new_node_ptr.5729 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5747, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.5748, align 1
  br label %block.exit.5749

block.exit.5749:                                  ; preds = %block.Cidr_Main.Str.5743, %block.Cidr_Main.Number.5737, %block.Cidr_Main.Lit.5735, %block.Cidr_Main.End.5731
  %tag.5750 = load i64, i64* %new_node_ptr.5729, align 1
  switch i64 %tag.5750, label %error_block [
    i64 30, label %block.Cidr_Main.End.5751
    i64 31, label %block.Cidr_Main.Lit.5756
    i64 32, label %block.Cidr_Main.Number.5759
    i64 33, label %block.Cidr_Main.Str.5766
  ]

block.Cidr_Main.End.5751:                         ; preds = %block.exit.5749
  %ptr_Cidr_Main.End.5752 = bitcast i64* %new_node_ptr.5729 to <{ i64 }>*
  %node_Cidr_Main.End.5753 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Main.End.5752, align 1
  %src.5754 = extractvalue <{ i64 }> %node_Cidr_Main.End.5753, 0
  %dst.5755 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5754, 0
  br label %block.exit.5773

block.Cidr_Main.Lit.5756:                         ; preds = %block.exit.5749
  %ptr_Cidr_Main.Lit.5757 = bitcast i64* %new_node_ptr.5729 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Main.Lit.5758 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.5757, align 1
  br label %block.exit.5773

block.Cidr_Main.Number.5759:                      ; preds = %block.exit.5749
  %ptr_Cidr_Main.Number.5760 = bitcast i64* %new_node_ptr.5729 to <{ i64, [1 x i64*] }>*
  %node_Cidr_Main.Number.5761 = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.5760, align 1
  %src.5762 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Number.5761, 0
  %dst.5763 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5762, 0
  %src.5764 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Number.5761, 1, 0
  %dst.5765 = insertvalue <{ i64, [2 x i64*] }> %dst.5763, i64* %src.5764, 1, 0
  br label %block.exit.5773

block.Cidr_Main.Str.5766:                         ; preds = %block.exit.5749
  %ptr_Cidr_Main.Str.5767 = bitcast i64* %new_node_ptr.5729 to <{ i64, [1 x i64*] }>*
  %node_Cidr_Main.Str.5768 = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.5767, align 1
  %src.5769 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Str.5768, 0
  %dst.5770 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5769, 0
  %src.5771 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Str.5768, 1, 0
  %dst.5772 = insertvalue <{ i64, [2 x i64*] }> %dst.5770, i64* %src.5771, 1, 0
  br label %block.exit.5773

block.exit.5773:                                  ; preds = %block.Cidr_Main.Str.5766, %block.Cidr_Main.Number.5759, %block.Cidr_Main.Lit.5756, %block.Cidr_Main.End.5751
  %idr_Main.toFormat3_val_464.5774 = phi <{ i64, [2 x i64*] }> [ %dst.5755, %block.Cidr_Main.End.5751 ], [ %node_Cidr_Main.Lit.5758, %block.Cidr_Main.Lit.5756 ], [ %dst.5765, %block.Cidr_Main.Number.5759 ], [ %dst.5772, %block.Cidr_Main.Str.5766 ]
  %tag.5775 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_464.5774, 0
  switch i64 %tag.5775, label %block.default.5776 [
    i64 31, label %block.Cidr_Main.Lit.5818
  ]

block.default.5776:                               ; preds = %block.exit.5773
  %node_CGrString.5777 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.5778 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5779 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5778 to i64
  %new_node_ptr.5780 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5779 monotonic
  %new_node_ptr.5781 = inttoptr i64 %new_node_ptr.5780 to i64*
  %tag.5782 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5777, 0
  %ptr_CGrString.5783 = bitcast i64* %new_node_ptr.5781 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5777, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5783, align 1
  %idr_Main.toFormat4_val_469.5784 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %idr_Main.toFormat1, i64* %new_node_ptr.5781)
  %alloc_bytes.5785 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5786 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5785 to i64
  %new_node_ptr.5787 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5786 monotonic
  %new_node_ptr.5788 = inttoptr i64 %new_node_ptr.5787 to i64*
  %tag.5789 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.toFormat4_val_469.5784, 0
  %ptr_CGrString.5790 = bitcast i64* %new_node_ptr.5788 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.toFormat4_val_469.5784, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5790, align 1
  %idr_Main.toFormat5_val_473.5791 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %idr_Main.toFormat2)
  %alloc_bytes.5792 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5793 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5792 to i64
  %new_node_ptr.5794 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5793 monotonic
  %new_node_ptr.5795 = inttoptr i64 %new_node_ptr.5794 to i64*
  %tag.5796 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_473.5791, 0
  switch i64 %tag.5796, label %error_block [
    i64 30, label %block.Cidr_Main.End.5797
    i64 31, label %block.Cidr_Main.Lit.5801
    i64 32, label %block.Cidr_Main.Number.5803
    i64 33, label %block.Cidr_Main.Str.5809
  ]

block.Cidr_Main.End.5797:                         ; preds = %block.default.5776
  %src.5798 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_473.5791, 0
  %dst.5799 = insertvalue <{ i64 }> undef, i64 %src.5798, 0
  %ptr_Cidr_Main.End.5800 = bitcast i64* %new_node_ptr.5795 to <{ i64 }>*
  store <{ i64 }> %dst.5799, <{ i64 }>* %ptr_Cidr_Main.End.5800, align 1
  br label %block.exit.5815

block.Cidr_Main.Lit.5801:                         ; preds = %block.default.5776
  %ptr_Cidr_Main.Lit.5802 = bitcast i64* %new_node_ptr.5795 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_473.5791, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.5802, align 1
  br label %block.exit.5815

block.Cidr_Main.Number.5803:                      ; preds = %block.default.5776
  %src.5804 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_473.5791, 0
  %dst.5805 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5804, 0
  %src.5806 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_473.5791, 1, 0
  %dst.5807 = insertvalue <{ i64, [1 x i64*] }> %dst.5805, i64* %src.5806, 1, 0
  %ptr_Cidr_Main.Number.5808 = bitcast i64* %new_node_ptr.5795 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5807, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.5808, align 1
  br label %block.exit.5815

block.Cidr_Main.Str.5809:                         ; preds = %block.default.5776
  %src.5810 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_473.5791, 0
  %dst.5811 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5810, 0
  %src.5812 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_473.5791, 1, 0
  %dst.5813 = insertvalue <{ i64, [1 x i64*] }> %dst.5811, i64* %src.5812, 1, 0
  %ptr_Cidr_Main.Str.5814 = bitcast i64* %new_node_ptr.5795 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5813, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.5814, align 1
  br label %block.exit.5815

block.exit.5815:                                  ; preds = %block.Cidr_Main.Str.5809, %block.Cidr_Main.Number.5803, %block.Cidr_Main.Lit.5801, %block.Cidr_Main.End.5797
  %node_Cidr_Main.Lit.5816 = insertvalue <{ i64, [2 x i64*] }> <{ i64 31, [2 x i64*] undef }>, i64* %new_node_ptr.5788, 1, 0
  %node_Cidr_Main.Lit.5817 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Main.Lit.5816, i64* %new_node_ptr.5795, 1, 1
  br label %block.exit.5828

block.Cidr_Main.Lit.5818:                         ; preds = %block.exit.5773
  %idr_Main.toFormat4_465 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_464.5774, 1, 0
  %idr_Main.toFormat5_466 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat3_val_464.5774, 1, 1
  %idr_Main.toFormat6_val_467.5819 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %idr_Main.toFormat1, i64* %idr_Main.toFormat4_465)
  %alloc_bytes.5820 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5821 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5820 to i64
  %new_node_ptr.5822 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5821 monotonic
  %new_node_ptr.5823 = inttoptr i64 %new_node_ptr.5822 to i64*
  %tag.5824 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.toFormat6_val_467.5819, 0
  %ptr_CGrString.5825 = bitcast i64* %new_node_ptr.5823 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Main.toFormat6_val_467.5819, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5825, align 1
  %node_Cidr_Main.Lit.5826 = insertvalue <{ i64, [2 x i64*] }> <{ i64 31, [2 x i64*] undef }>, i64* %new_node_ptr.5823, 1, 0
  %node_Cidr_Main.Lit.5827 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Main.Lit.5826, i64* %idr_Main.toFormat5_466, 1, 1
  br label %block.exit.5828

block.exit.5828:                                  ; preds = %block.Cidr_Main.Lit.5818, %block.exit.5815
  %result.default.5829 = phi <{ i64, [2 x i64*] }> [ %node_Cidr_Main.Lit.5817, %block.exit.5815 ], [ %node_Cidr_Main.Lit.5827, %block.Cidr_Main.Lit.5818 ]
  br label %block.exit.5987

block.int_37.5830:                                ; preds = %block.CGrInt.5723
  %tag.5831 = load i64, i64* %idr_Main.toFormat2, align 1
  switch i64 %tag.5831, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.5832"
    i64 9, label %block.Cidr_Prelude.List.Nil.5835
  ]

"block.Cidr_Prelude.List.::.5832":                ; preds = %block.int_37.5830
  %"ptr_Cidr_Prelude.List.::.5833" = bitcast i64* %idr_Main.toFormat2 to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.5834" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.5833", align 1
  br label %block.exit.5840

block.Cidr_Prelude.List.Nil.5835:                 ; preds = %block.int_37.5830
  %ptr_Cidr_Prelude.List.Nil.5836 = bitcast i64* %idr_Main.toFormat2 to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.5837 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.5836, align 1
  %src.5838 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.5837, 0
  %dst.5839 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5838, 0
  br label %block.exit.5840

block.exit.5840:                                  ; preds = %block.Cidr_Prelude.List.Nil.5835, %"block.Cidr_Prelude.List.::.5832"
  %idr_Main.toFormat2_val.5841 = phi <{ i64, [2 x i64*] }> [ %"node_Cidr_Prelude.List.::.5834", %"block.Cidr_Prelude.List.::.5832" ], [ %dst.5839, %block.Cidr_Prelude.List.Nil.5835 ]
  %tag.5842 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat2_val.5841, 0
  switch i64 %tag.5842, label %block.default.5843 [
    i64 8, label %"block.Cidr_Prelude.List.::.5878"
  ]

block.default.5843:                               ; preds = %block.exit.5840
  %node_CGrString.5844 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.13, 1, 0
  %alloc_bytes.5845 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5846 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5845 to i64
  %new_node_ptr.5847 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5846 monotonic
  %new_node_ptr.5848 = inttoptr i64 %new_node_ptr.5847 to i64*
  %tag.5849 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5844, 0
  %ptr_CGrString.5850 = bitcast i64* %new_node_ptr.5848 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5844, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5850, align 1
  %idr_Main.toFormat4_val.5851 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %idr_Main.toFormat2)
  %alloc_bytes.5852 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5853 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5852 to i64
  %new_node_ptr.5854 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5853 monotonic
  %new_node_ptr.5855 = inttoptr i64 %new_node_ptr.5854 to i64*
  %tag.5856 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat4_val.5851, 0
  switch i64 %tag.5856, label %error_block [
    i64 30, label %block.Cidr_Main.End.5857
    i64 31, label %block.Cidr_Main.Lit.5861
    i64 32, label %block.Cidr_Main.Number.5863
    i64 33, label %block.Cidr_Main.Str.5869
  ]

block.Cidr_Main.End.5857:                         ; preds = %block.default.5843
  %src.5858 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat4_val.5851, 0
  %dst.5859 = insertvalue <{ i64 }> undef, i64 %src.5858, 0
  %ptr_Cidr_Main.End.5860 = bitcast i64* %new_node_ptr.5855 to <{ i64 }>*
  store <{ i64 }> %dst.5859, <{ i64 }>* %ptr_Cidr_Main.End.5860, align 1
  br label %block.exit.5875

block.Cidr_Main.Lit.5861:                         ; preds = %block.default.5843
  %ptr_Cidr_Main.Lit.5862 = bitcast i64* %new_node_ptr.5855 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.toFormat4_val.5851, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.5862, align 1
  br label %block.exit.5875

block.Cidr_Main.Number.5863:                      ; preds = %block.default.5843
  %src.5864 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat4_val.5851, 0
  %dst.5865 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5864, 0
  %src.5866 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat4_val.5851, 1, 0
  %dst.5867 = insertvalue <{ i64, [1 x i64*] }> %dst.5865, i64* %src.5866, 1, 0
  %ptr_Cidr_Main.Number.5868 = bitcast i64* %new_node_ptr.5855 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5867, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.5868, align 1
  br label %block.exit.5875

block.Cidr_Main.Str.5869:                         ; preds = %block.default.5843
  %src.5870 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat4_val.5851, 0
  %dst.5871 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5870, 0
  %src.5872 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat4_val.5851, 1, 0
  %dst.5873 = insertvalue <{ i64, [1 x i64*] }> %dst.5871, i64* %src.5872, 1, 0
  %ptr_Cidr_Main.Str.5874 = bitcast i64* %new_node_ptr.5855 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5873, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.5874, align 1
  br label %block.exit.5875

block.exit.5875:                                  ; preds = %block.Cidr_Main.Str.5869, %block.Cidr_Main.Number.5863, %block.Cidr_Main.Lit.5861, %block.Cidr_Main.End.5857
  %node_Cidr_Main.Lit.5876 = insertvalue <{ i64, [2 x i64*] }> <{ i64 31, [2 x i64*] undef }>, i64* %new_node_ptr.5848, 1, 0
  %node_Cidr_Main.Lit.5877 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Main.Lit.5876, i64* %new_node_ptr.5855, 1, 1
  br label %block.exit.5985

"block.Cidr_Prelude.List.::.5878":                ; preds = %block.exit.5840
  %idr_Main.toFormat3 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat2_val.5841, 1, 0
  %idr_Main.toFormat4 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat2_val.5841, 1, 1
  %tag.5879 = load i64, i64* %idr_Main.toFormat3, align 1
  %ptr_CGrInt.5880 = bitcast i64* %idr_Main.toFormat3 to <{ i64, [1 x i64] }>*
  %node_CGrInt.5881 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.5880, align 1
  %tag.5882 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5881, 0
  switch i64 %tag.5882, label %error_block [
    i64 2, label %block.CGrInt.5883
  ]

block.CGrInt.5883:                                ; preds = %"block.Cidr_Prelude.List.::.5878"
  %idr_Main.toFormat_cpat_LInt64_100 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.5881, 1, 0
  switch i64 %idr_Main.toFormat_cpat_LInt64_100, label %block.default.5884 [
    i64 100, label %block.int_100.5919
    i64 115, label %block.int_115.5946
  ]

block.default.5884:                               ; preds = %block.CGrInt.5883
  %node_CGrString.5885 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.13, 1, 0
  %alloc_bytes.5886 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.5887 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.5886 to i64
  %new_node_ptr.5888 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5887 monotonic
  %new_node_ptr.5889 = inttoptr i64 %new_node_ptr.5888 to i64*
  %tag.5890 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5885, 0
  %ptr_CGrString.5891 = bitcast i64* %new_node_ptr.5889 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.5885, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.5891, align 1
  %idr_Main.toFormat6_val.5892 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %idr_Main.toFormat2)
  %alloc_bytes.5893 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5894 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5893 to i64
  %new_node_ptr.5895 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5894 monotonic
  %new_node_ptr.5896 = inttoptr i64 %new_node_ptr.5895 to i64*
  %tag.5897 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat6_val.5892, 0
  switch i64 %tag.5897, label %error_block [
    i64 30, label %block.Cidr_Main.End.5898
    i64 31, label %block.Cidr_Main.Lit.5902
    i64 32, label %block.Cidr_Main.Number.5904
    i64 33, label %block.Cidr_Main.Str.5910
  ]

block.Cidr_Main.End.5898:                         ; preds = %block.default.5884
  %src.5899 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat6_val.5892, 0
  %dst.5900 = insertvalue <{ i64 }> undef, i64 %src.5899, 0
  %ptr_Cidr_Main.End.5901 = bitcast i64* %new_node_ptr.5896 to <{ i64 }>*
  store <{ i64 }> %dst.5900, <{ i64 }>* %ptr_Cidr_Main.End.5901, align 1
  br label %block.exit.5916

block.Cidr_Main.Lit.5902:                         ; preds = %block.default.5884
  %ptr_Cidr_Main.Lit.5903 = bitcast i64* %new_node_ptr.5896 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.toFormat6_val.5892, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.5903, align 1
  br label %block.exit.5916

block.Cidr_Main.Number.5904:                      ; preds = %block.default.5884
  %src.5905 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat6_val.5892, 0
  %dst.5906 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5905, 0
  %src.5907 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat6_val.5892, 1, 0
  %dst.5908 = insertvalue <{ i64, [1 x i64*] }> %dst.5906, i64* %src.5907, 1, 0
  %ptr_Cidr_Main.Number.5909 = bitcast i64* %new_node_ptr.5896 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5908, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.5909, align 1
  br label %block.exit.5916

block.Cidr_Main.Str.5910:                         ; preds = %block.default.5884
  %src.5911 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat6_val.5892, 0
  %dst.5912 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5911, 0
  %src.5913 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat6_val.5892, 1, 0
  %dst.5914 = insertvalue <{ i64, [1 x i64*] }> %dst.5912, i64* %src.5913, 1, 0
  %ptr_Cidr_Main.Str.5915 = bitcast i64* %new_node_ptr.5896 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5914, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.5915, align 1
  br label %block.exit.5916

block.exit.5916:                                  ; preds = %block.Cidr_Main.Str.5910, %block.Cidr_Main.Number.5904, %block.Cidr_Main.Lit.5902, %block.Cidr_Main.End.5898
  %node_Cidr_Main.Lit.5917 = insertvalue <{ i64, [2 x i64*] }> <{ i64 31, [2 x i64*] undef }>, i64* %new_node_ptr.5889, 1, 0
  %node_Cidr_Main.Lit.5918 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Main.Lit.5917, i64* %new_node_ptr.5896, 1, 1
  br label %block.exit.5973

block.int_100.5919:                               ; preds = %block.CGrInt.5883
  %idr_Main.toFormat5_val.5920 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %idr_Main.toFormat4)
  %alloc_bytes.5921 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5922 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5921 to i64
  %new_node_ptr.5923 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5922 monotonic
  %new_node_ptr.5924 = inttoptr i64 %new_node_ptr.5923 to i64*
  %tag.5925 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val.5920, 0
  switch i64 %tag.5925, label %error_block [
    i64 30, label %block.Cidr_Main.End.5926
    i64 31, label %block.Cidr_Main.Lit.5930
    i64 32, label %block.Cidr_Main.Number.5932
    i64 33, label %block.Cidr_Main.Str.5938
  ]

block.Cidr_Main.End.5926:                         ; preds = %block.int_100.5919
  %src.5927 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val.5920, 0
  %dst.5928 = insertvalue <{ i64 }> undef, i64 %src.5927, 0
  %ptr_Cidr_Main.End.5929 = bitcast i64* %new_node_ptr.5924 to <{ i64 }>*
  store <{ i64 }> %dst.5928, <{ i64 }>* %ptr_Cidr_Main.End.5929, align 1
  br label %block.exit.5944

block.Cidr_Main.Lit.5930:                         ; preds = %block.int_100.5919
  %ptr_Cidr_Main.Lit.5931 = bitcast i64* %new_node_ptr.5924 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val.5920, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.5931, align 1
  br label %block.exit.5944

block.Cidr_Main.Number.5932:                      ; preds = %block.int_100.5919
  %src.5933 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val.5920, 0
  %dst.5934 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5933, 0
  %src.5935 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val.5920, 1, 0
  %dst.5936 = insertvalue <{ i64, [1 x i64*] }> %dst.5934, i64* %src.5935, 1, 0
  %ptr_Cidr_Main.Number.5937 = bitcast i64* %new_node_ptr.5924 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5936, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.5937, align 1
  br label %block.exit.5944

block.Cidr_Main.Str.5938:                         ; preds = %block.int_100.5919
  %src.5939 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val.5920, 0
  %dst.5940 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5939, 0
  %src.5941 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val.5920, 1, 0
  %dst.5942 = insertvalue <{ i64, [1 x i64*] }> %dst.5940, i64* %src.5941, 1, 0
  %ptr_Cidr_Main.Str.5943 = bitcast i64* %new_node_ptr.5924 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5942, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.5943, align 1
  br label %block.exit.5944

block.exit.5944:                                  ; preds = %block.Cidr_Main.Str.5938, %block.Cidr_Main.Number.5932, %block.Cidr_Main.Lit.5930, %block.Cidr_Main.End.5926
  %node_Cidr_Main.Number.5945 = insertvalue <{ i64, [1 x i64*] }> <{ i64 32, [1 x i64*] undef }>, i64* %new_node_ptr.5924, 1, 0
  %src.5974 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Number.5945, 0
  %dst.5975 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5974, 0
  %src.5976 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Number.5945, 1, 0
  %dst.5977 = insertvalue <{ i64, [2 x i64*] }> %dst.5975, i64* %src.5976, 1, 0
  br label %block.exit.5973

block.int_115.5946:                               ; preds = %block.CGrInt.5883
  %idr_Main.toFormat5_val_451.5947 = tail call fastcc <{ i64, [2 x i64*] }> @idr_Main.toFormat(i64* %idr_Main.toFormat4)
  %alloc_bytes.5948 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.5949 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.5948 to i64
  %new_node_ptr.5950 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5949 monotonic
  %new_node_ptr.5951 = inttoptr i64 %new_node_ptr.5950 to i64*
  %tag.5952 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_451.5947, 0
  switch i64 %tag.5952, label %error_block [
    i64 30, label %block.Cidr_Main.End.5953
    i64 31, label %block.Cidr_Main.Lit.5957
    i64 32, label %block.Cidr_Main.Number.5959
    i64 33, label %block.Cidr_Main.Str.5965
  ]

block.Cidr_Main.End.5953:                         ; preds = %block.int_115.5946
  %src.5954 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_451.5947, 0
  %dst.5955 = insertvalue <{ i64 }> undef, i64 %src.5954, 0
  %ptr_Cidr_Main.End.5956 = bitcast i64* %new_node_ptr.5951 to <{ i64 }>*
  store <{ i64 }> %dst.5955, <{ i64 }>* %ptr_Cidr_Main.End.5956, align 1
  br label %block.exit.5971

block.Cidr_Main.Lit.5957:                         ; preds = %block.int_115.5946
  %ptr_Cidr_Main.Lit.5958 = bitcast i64* %new_node_ptr.5951 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_451.5947, <{ i64, [2 x i64*] }>* %ptr_Cidr_Main.Lit.5958, align 1
  br label %block.exit.5971

block.Cidr_Main.Number.5959:                      ; preds = %block.int_115.5946
  %src.5960 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_451.5947, 0
  %dst.5961 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5960, 0
  %src.5962 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_451.5947, 1, 0
  %dst.5963 = insertvalue <{ i64, [1 x i64*] }> %dst.5961, i64* %src.5962, 1, 0
  %ptr_Cidr_Main.Number.5964 = bitcast i64* %new_node_ptr.5951 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5963, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Number.5964, align 1
  br label %block.exit.5971

block.Cidr_Main.Str.5965:                         ; preds = %block.int_115.5946
  %src.5966 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_451.5947, 0
  %dst.5967 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.5966, 0
  %src.5968 = extractvalue <{ i64, [2 x i64*] }> %idr_Main.toFormat5_val_451.5947, 1, 0
  %dst.5969 = insertvalue <{ i64, [1 x i64*] }> %dst.5967, i64* %src.5968, 1, 0
  %ptr_Cidr_Main.Str.5970 = bitcast i64* %new_node_ptr.5951 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.5969, <{ i64, [1 x i64*] }>* %ptr_Cidr_Main.Str.5970, align 1
  br label %block.exit.5971

block.exit.5971:                                  ; preds = %block.Cidr_Main.Str.5965, %block.Cidr_Main.Number.5959, %block.Cidr_Main.Lit.5957, %block.Cidr_Main.End.5953
  %node_Cidr_Main.Str.5972 = insertvalue <{ i64, [1 x i64*] }> <{ i64 33, [1 x i64*] undef }>, i64* %new_node_ptr.5951, 1, 0
  %src.5978 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Str.5972, 0
  %dst.5979 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5978, 0
  %src.5980 = extractvalue <{ i64, [1 x i64*] }> %node_Cidr_Main.Str.5972, 1, 0
  %dst.5981 = insertvalue <{ i64, [2 x i64*] }> %dst.5979, i64* %src.5980, 1, 0
  br label %block.exit.5973

block.exit.5973:                                  ; preds = %block.exit.5971, %block.exit.5944, %block.exit.5916
  %result.CGrInt.5982 = phi <{ i64, [2 x i64*] }> [ %node_Cidr_Main.Lit.5918, %block.exit.5916 ], [ %dst.5977, %block.exit.5944 ], [ %dst.5981, %block.exit.5971 ]
  br label %block.exit.5983

block.exit.5983:                                  ; preds = %block.exit.5973
  %"result.Cidr_Prelude.List.::.5984" = phi <{ i64, [2 x i64*] }> [ %result.CGrInt.5982, %block.exit.5973 ]
  br label %block.exit.5985

block.exit.5985:                                  ; preds = %block.exit.5983, %block.exit.5875
  %result.int_37.5986 = phi <{ i64, [2 x i64*] }> [ %node_Cidr_Main.Lit.5877, %block.exit.5875 ], [ %"result.Cidr_Prelude.List.::.5984", %block.exit.5983 ]
  br label %block.exit.5987

block.exit.5987:                                  ; preds = %block.exit.5985, %block.exit.5828
  %result.CGrInt.5988 = phi <{ i64, [2 x i64*] }> [ %result.default.5829, %block.exit.5828 ], [ %result.int_37.5986, %block.exit.5985 ]
  br label %block.exit.5989

block.exit.5989:                                  ; preds = %block.exit.5987
  %"result.Cidr_Prelude.List.::.5990" = phi <{ i64, [2 x i64*] }> [ %result.CGrInt.5988, %block.exit.5987 ]
  br label %block.exit.5992

block.Cidr_Prelude.List.Nil.5991:                 ; preds = %block.exit.5715
  %src.5993 = extractvalue <{ i64 }> <{ i64 30 }>, 0
  %dst.5994 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.5993, 0
  br label %block.exit.5992

block.exit.5992:                                  ; preds = %block.Cidr_Prelude.List.Nil.5991, %block.exit.5989
  %result.idr_Main.toFormat.5995 = phi <{ i64, [2 x i64*] }> [ %"result.Cidr_Prelude.List.::.5990", %block.exit.5989 ], [ %dst.5994, %block.Cidr_Prelude.List.Nil.5991 ]
  ret <{ i64, [2 x i64*] }> %result.idr_Main.toFormat.5995

error_block:                                      ; preds = %block.int_115.5946, %block.int_100.5919, %block.default.5884, %"block.Cidr_Prelude.List.::.5878", %block.default.5843, %block.int_37.5830, %block.default.5776, %block.exit.5749, %block.default.5724, %"block.Cidr_Prelude.List.::.5718", %block.exit.5715, %idr_Main.toFormat.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [2 x i64*] }> @idr_Main.tri() #0 {
idr_Main.tri.entry:
  %node_CGrFloat.5996 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.5997 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.5998 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.5997 to i64
  %new_node_ptr.5999 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.5998 monotonic
  %new_node_ptr.6000 = inttoptr i64 %new_node_ptr.5999 to i64*
  %tag.6001 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.5996, 0
  %ptr_CGrFloat.6002 = bitcast i64* %new_node_ptr.6000 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.5996, <{ i64, [1 x float] }>* %ptr_CGrFloat.6002, align 1
  %node_CGrFloat.6003 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6004 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6005 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6004 to i64
  %new_node_ptr.6006 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6005 monotonic
  %new_node_ptr.6007 = inttoptr i64 %new_node_ptr.6006 to i64*
  %tag.6008 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6003, 0
  %ptr_CGrFloat.6009 = bitcast i64* %new_node_ptr.6007 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6003, <{ i64, [1 x float] }>* %ptr_CGrFloat.6009, align 1
  %node_Cidr_Builtins.MkPair.6010 = insertvalue <{ i64, [2 x i64*] }> <{ i64 4, [2 x i64*] undef }>, i64* %new_node_ptr.6000, 1, 0
  %node_Cidr_Builtins.MkPair.6011 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6010, i64* %new_node_ptr.6007, 1, 1
  %alloc_bytes.6012 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6013 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6012 to i64
  %new_node_ptr.6014 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6013 monotonic
  %new_node_ptr.6015 = inttoptr i64 %new_node_ptr.6014 to i64*
  %tag.6016 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6011, 0
  %ptr_Cidr_Builtins.MkPair.6017 = bitcast i64* %new_node_ptr.6015 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6011, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.6017, align 1
  %node_CGrFloat.6018 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 3.000000e+00, 1, 0
  %alloc_bytes.6019 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6020 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6019 to i64
  %new_node_ptr.6021 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6020 monotonic
  %new_node_ptr.6022 = inttoptr i64 %new_node_ptr.6021 to i64*
  %tag.6023 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6018, 0
  %ptr_CGrFloat.6024 = bitcast i64* %new_node_ptr.6022 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6018, <{ i64, [1 x float] }>* %ptr_CGrFloat.6024, align 1
  %node_CGrFloat.6025 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6026 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6027 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6026 to i64
  %new_node_ptr.6028 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6027 monotonic
  %new_node_ptr.6029 = inttoptr i64 %new_node_ptr.6028 to i64*
  %tag.6030 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6025, 0
  %ptr_CGrFloat.6031 = bitcast i64* %new_node_ptr.6029 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6025, <{ i64, [1 x float] }>* %ptr_CGrFloat.6031, align 1
  %node_Cidr_Builtins.MkPair.6032 = insertvalue <{ i64, [2 x i64*] }> <{ i64 4, [2 x i64*] undef }>, i64* %new_node_ptr.6022, 1, 0
  %node_Cidr_Builtins.MkPair.6033 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6032, i64* %new_node_ptr.6029, 1, 1
  %alloc_bytes.6034 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6035 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6034 to i64
  %new_node_ptr.6036 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6035 monotonic
  %new_node_ptr.6037 = inttoptr i64 %new_node_ptr.6036 to i64*
  %tag.6038 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6033, 0
  %ptr_Cidr_Builtins.MkPair.6039 = bitcast i64* %new_node_ptr.6037 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6033, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.6039, align 1
  %node_CGrFloat.6040 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6041 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6042 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6041 to i64
  %new_node_ptr.6043 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6042 monotonic
  %new_node_ptr.6044 = inttoptr i64 %new_node_ptr.6043 to i64*
  %tag.6045 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6040, 0
  %ptr_CGrFloat.6046 = bitcast i64* %new_node_ptr.6044 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6040, <{ i64, [1 x float] }>* %ptr_CGrFloat.6046, align 1
  %node_CGrFloat.6047 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 4.000000e+00, 1, 0
  %alloc_bytes.6048 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6049 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6048 to i64
  %new_node_ptr.6050 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6049 monotonic
  %new_node_ptr.6051 = inttoptr i64 %new_node_ptr.6050 to i64*
  %tag.6052 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6047, 0
  %ptr_CGrFloat.6053 = bitcast i64* %new_node_ptr.6051 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6047, <{ i64, [1 x float] }>* %ptr_CGrFloat.6053, align 1
  %node_Cidr_Builtins.MkPair.6054 = insertvalue <{ i64, [2 x i64*] }> <{ i64 4, [2 x i64*] undef }>, i64* %new_node_ptr.6044, 1, 0
  %node_Cidr_Builtins.MkPair.6055 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6054, i64* %new_node_ptr.6051, 1, 1
  %alloc_bytes.6056 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6057 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6056 to i64
  %new_node_ptr.6058 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6057 monotonic
  %new_node_ptr.6059 = inttoptr i64 %new_node_ptr.6058 to i64*
  %tag.6060 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6055, 0
  %ptr_Cidr_Builtins.MkPair.6061 = bitcast i64* %new_node_ptr.6059 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6055, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.6061, align 1
  %alloc_bytes.6062 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6063 = ptrtoint <{ i64 }>* %alloc_bytes.6062 to i64
  %new_node_ptr.6064 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6063 monotonic
  %new_node_ptr.6065 = inttoptr i64 %new_node_ptr.6064 to i64*
  %tag.6066 = extractvalue <{ i64 }> <{ i64 16 }>, 0
  %ptr_Cidr_Data.Vect.Nil.6067 = bitcast i64* %new_node_ptr.6065 to <{ i64 }>*
  store <{ i64 }> <{ i64 16 }>, <{ i64 }>* %ptr_Cidr_Data.Vect.Nil.6067, align 1
  %"node_Cidr_Data.Vect.::.6068" = insertvalue <{ i64, [2 x i64*] }> <{ i64 5, [2 x i64*] undef }>, i64* %new_node_ptr.6059, 1, 0
  %"node_Cidr_Data.Vect.::.6069" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6068", i64* %new_node_ptr.6065, 1, 1
  %alloc_bytes.6070 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6071 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6070 to i64
  %new_node_ptr.6072 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6071 monotonic
  %new_node_ptr.6073 = inttoptr i64 %new_node_ptr.6072 to i64*
  %tag.6074 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6069", 0
  %"ptr_Cidr_Data.Vect.::.6075" = bitcast i64* %new_node_ptr.6073 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6069", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.6075", align 1
  %"node_Cidr_Data.Vect.::.6076" = insertvalue <{ i64, [2 x i64*] }> <{ i64 5, [2 x i64*] undef }>, i64* %new_node_ptr.6037, 1, 0
  %"node_Cidr_Data.Vect.::.6077" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6076", i64* %new_node_ptr.6073, 1, 1
  %alloc_bytes.6078 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6079 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6078 to i64
  %new_node_ptr.6080 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6079 monotonic
  %new_node_ptr.6081 = inttoptr i64 %new_node_ptr.6080 to i64*
  %tag.6082 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6077", 0
  %"ptr_Cidr_Data.Vect.::.6083" = bitcast i64* %new_node_ptr.6081 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6077", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.6083", align 1
  %"node_Cidr_Data.Vect.::.6084" = insertvalue <{ i64, [2 x i64*] }> <{ i64 5, [2 x i64*] undef }>, i64* %new_node_ptr.6015, 1, 0
  %"node_Cidr_Data.Vect.::.6085" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6084", i64* %new_node_ptr.6081, 1, 1
  ret <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6085"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [2 x i64*] }> @idr_Main.tri2() #0 {
idr_Main.tri2.entry:
  %node_CGrFloat.6086 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6087 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6088 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6087 to i64
  %new_node_ptr.6089 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6088 monotonic
  %new_node_ptr.6090 = inttoptr i64 %new_node_ptr.6089 to i64*
  %tag.6091 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6086, 0
  %ptr_CGrFloat.6092 = bitcast i64* %new_node_ptr.6090 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6086, <{ i64, [1 x float] }>* %ptr_CGrFloat.6092, align 1
  %node_CGrFloat.6093 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6094 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6095 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6094 to i64
  %new_node_ptr.6096 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6095 monotonic
  %new_node_ptr.6097 = inttoptr i64 %new_node_ptr.6096 to i64*
  %tag.6098 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6093, 0
  %ptr_CGrFloat.6099 = bitcast i64* %new_node_ptr.6097 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6093, <{ i64, [1 x float] }>* %ptr_CGrFloat.6099, align 1
  %node_Cidr_Builtins.MkPair.6100 = insertvalue <{ i64, [2 x i64*] }> <{ i64 4, [2 x i64*] undef }>, i64* %new_node_ptr.6090, 1, 0
  %node_Cidr_Builtins.MkPair.6101 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6100, i64* %new_node_ptr.6097, 1, 1
  %alloc_bytes.6102 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6103 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6102 to i64
  %new_node_ptr.6104 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6103 monotonic
  %new_node_ptr.6105 = inttoptr i64 %new_node_ptr.6104 to i64*
  %tag.6106 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6101, 0
  %ptr_Cidr_Builtins.MkPair.6107 = bitcast i64* %new_node_ptr.6105 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6101, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.6107, align 1
  %node_CGrFloat.6108 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6109 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6110 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6109 to i64
  %new_node_ptr.6111 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6110 monotonic
  %new_node_ptr.6112 = inttoptr i64 %new_node_ptr.6111 to i64*
  %tag.6113 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6108, 0
  %ptr_CGrFloat.6114 = bitcast i64* %new_node_ptr.6112 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6108, <{ i64, [1 x float] }>* %ptr_CGrFloat.6114, align 1
  %node_CGrFloat.6115 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6116 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6117 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6116 to i64
  %new_node_ptr.6118 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6117 monotonic
  %new_node_ptr.6119 = inttoptr i64 %new_node_ptr.6118 to i64*
  %tag.6120 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6115, 0
  %ptr_CGrFloat.6121 = bitcast i64* %new_node_ptr.6119 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6115, <{ i64, [1 x float] }>* %ptr_CGrFloat.6121, align 1
  %node_Cidr_Builtins.MkPair.6122 = insertvalue <{ i64, [2 x i64*] }> <{ i64 4, [2 x i64*] undef }>, i64* %new_node_ptr.6112, 1, 0
  %node_Cidr_Builtins.MkPair.6123 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6122, i64* %new_node_ptr.6119, 1, 1
  %alloc_bytes.6124 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6125 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6124 to i64
  %new_node_ptr.6126 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6125 monotonic
  %new_node_ptr.6127 = inttoptr i64 %new_node_ptr.6126 to i64*
  %tag.6128 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6123, 0
  %ptr_Cidr_Builtins.MkPair.6129 = bitcast i64* %new_node_ptr.6127 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6123, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.6129, align 1
  %node_CGrFloat.6130 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6131 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6132 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6131 to i64
  %new_node_ptr.6133 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6132 monotonic
  %new_node_ptr.6134 = inttoptr i64 %new_node_ptr.6133 to i64*
  %tag.6135 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6130, 0
  %ptr_CGrFloat.6136 = bitcast i64* %new_node_ptr.6134 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6130, <{ i64, [1 x float] }>* %ptr_CGrFloat.6136, align 1
  %node_CGrFloat.6137 = insertvalue <{ i64, [1 x float] }> <{ i64 1, [1 x float] undef }>, float 0.000000e+00, 1, 0
  %alloc_bytes.6138 = getelementptr inbounds <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* null, i32 1
  %alloc_bytes.6139 = ptrtoint <{ i64, [1 x float] }>* %alloc_bytes.6138 to i64
  %new_node_ptr.6140 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6139 monotonic
  %new_node_ptr.6141 = inttoptr i64 %new_node_ptr.6140 to i64*
  %tag.6142 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.6137, 0
  %ptr_CGrFloat.6143 = bitcast i64* %new_node_ptr.6141 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %node_CGrFloat.6137, <{ i64, [1 x float] }>* %ptr_CGrFloat.6143, align 1
  %node_Cidr_Builtins.MkPair.6144 = insertvalue <{ i64, [2 x i64*] }> <{ i64 4, [2 x i64*] undef }>, i64* %new_node_ptr.6134, 1, 0
  %node_Cidr_Builtins.MkPair.6145 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6144, i64* %new_node_ptr.6141, 1, 1
  %alloc_bytes.6146 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6147 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6146 to i64
  %new_node_ptr.6148 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6147 monotonic
  %new_node_ptr.6149 = inttoptr i64 %new_node_ptr.6148 to i64*
  %tag.6150 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6145, 0
  %ptr_Cidr_Builtins.MkPair.6151 = bitcast i64* %new_node_ptr.6149 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.6145, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.6151, align 1
  %alloc_bytes.6152 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6153 = ptrtoint <{ i64 }>* %alloc_bytes.6152 to i64
  %new_node_ptr.6154 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6153 monotonic
  %new_node_ptr.6155 = inttoptr i64 %new_node_ptr.6154 to i64*
  %tag.6156 = extractvalue <{ i64 }> <{ i64 16 }>, 0
  %ptr_Cidr_Data.Vect.Nil.6157 = bitcast i64* %new_node_ptr.6155 to <{ i64 }>*
  store <{ i64 }> <{ i64 16 }>, <{ i64 }>* %ptr_Cidr_Data.Vect.Nil.6157, align 1
  %"node_Cidr_Data.Vect.::.6158" = insertvalue <{ i64, [2 x i64*] }> <{ i64 5, [2 x i64*] undef }>, i64* %new_node_ptr.6149, 1, 0
  %"node_Cidr_Data.Vect.::.6159" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6158", i64* %new_node_ptr.6155, 1, 1
  %alloc_bytes.6160 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6161 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6160 to i64
  %new_node_ptr.6162 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6161 monotonic
  %new_node_ptr.6163 = inttoptr i64 %new_node_ptr.6162 to i64*
  %tag.6164 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6159", 0
  %"ptr_Cidr_Data.Vect.::.6165" = bitcast i64* %new_node_ptr.6163 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6159", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.6165", align 1
  %"node_Cidr_Data.Vect.::.6166" = insertvalue <{ i64, [2 x i64*] }> <{ i64 5, [2 x i64*] undef }>, i64* %new_node_ptr.6127, 1, 0
  %"node_Cidr_Data.Vect.::.6167" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6166", i64* %new_node_ptr.6163, 1, 1
  %alloc_bytes.6168 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.6169 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.6168 to i64
  %new_node_ptr.6170 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6169 monotonic
  %new_node_ptr.6171 = inttoptr i64 %new_node_ptr.6170 to i64*
  %tag.6172 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6167", 0
  %"ptr_Cidr_Data.Vect.::.6173" = bitcast i64* %new_node_ptr.6171 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6167", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.6173", align 1
  %"node_Cidr_Data.Vect.::.6174" = insertvalue <{ i64, [2 x i64*] }> <{ i64 5, [2 x i64*] undef }>, i64* %new_node_ptr.6105, 1, 0
  %"node_Cidr_Data.Vect.::.6175" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6174", i64* %new_node_ptr.6171, 1, 1
  ret <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.6175"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_Prelude.Strings.trim(i64* %idr_Prelude.Strings.trim0) #0 {
idr_Prelude.Strings.trim.entry:
  %idr_Prelude.Strings.trim1_val_528.6176 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6177 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6178 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6177 to i64
  %new_node_ptr.6179 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6178 monotonic
  %new_node_ptr.6180 = inttoptr i64 %new_node_ptr.6179 to i64*
  %tag.6181 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim1_val_528.6176, 0
  %ptr_CGrString.6182 = bitcast i64* %new_node_ptr.6180 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim1_val_528.6176, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6182, align 1
  %node_CGrString.6183 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.6184 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6185 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6184 to i64
  %new_node_ptr.6186 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6185 monotonic
  %new_node_ptr.6187 = inttoptr i64 %new_node_ptr.6186 to i64*
  %tag.6188 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6183, 0
  %ptr_CGrString.6189 = bitcast i64* %new_node_ptr.6187 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6183, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6189, align 1
  %idr_Prelude.Strings.trim1_val_527.6190 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.6180, i64* %new_node_ptr.6187)
  %alloc_bytes.6191 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6192 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6191 to i64
  %new_node_ptr.6193 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6192 monotonic
  %new_node_ptr.6194 = inttoptr i64 %new_node_ptr.6193 to i64*
  %tag.6195 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim1_val_527.6190, 0
  %ptr_CGrInt.6196 = bitcast i64* %new_node_ptr.6194 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim1_val_527.6190, <{ i64, [1 x i64] }>* %ptr_CGrInt.6196, align 1
  %tag.6197 = load i64, i64* %new_node_ptr.6194, align 1
  %ptr_CGrInt.6198 = bitcast i64* %new_node_ptr.6194 to <{ i64, [1 x i64] }>*
  %node_CGrInt.6199 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.6198, align 1
  %tag.6200 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6199, 0
  switch i64 %tag.6200, label %error_block [
    i64 2, label %block.CGrInt.6201
  ]

block.CGrInt.6201:                                ; preds = %idr_Prelude.Strings.trim.entry
  %idr_Prelude.Strings.trim_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6199, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0, label %block.default.6202 [
    i64 0, label %block.int_0.6203
  ]

block.default.6202:                               ; preds = %block.CGrInt.6201
  br label %block.exit.6204

block.int_0.6203:                                 ; preds = %block.CGrInt.6201
  br label %block.exit.6204

block.exit.6204:                                  ; preds = %block.int_0.6203, %block.default.6202
  %result.CGrInt.6205 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.6202 ], [ <{ i64 7 }>, %block.int_0.6203 ]
  br label %block.exit.6206

block.exit.6206:                                  ; preds = %block.exit.6204
  %idr_Prelude.Strings.trim1_val_526.6207 = phi <{ i64 }> [ %result.CGrInt.6205, %block.exit.6204 ]
  %alloc_bytes.6208 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6209 = ptrtoint <{ i64 }>* %alloc_bytes.6208 to i64
  %new_node_ptr.6210 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6209 monotonic
  %new_node_ptr.6211 = inttoptr i64 %new_node_ptr.6210 to i64*
  %tag.6212 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim1_val_526.6207, 0
  switch i64 %tag.6212, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6213
    i64 7, label %block.Cidr_Prelude.Bool.True.6215
  ]

block.Cidr_Prelude.Bool.False.6213:               ; preds = %block.exit.6206
  %ptr_Cidr_Prelude.Bool.False.6214 = bitcast i64* %new_node_ptr.6211 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val_526.6207, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6214, align 1
  br label %block.exit.6217

block.Cidr_Prelude.Bool.True.6215:                ; preds = %block.exit.6206
  %ptr_Cidr_Prelude.Bool.True.6216 = bitcast i64* %new_node_ptr.6211 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val_526.6207, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6216, align 1
  br label %block.exit.6217

block.exit.6217:                                  ; preds = %block.Cidr_Prelude.Bool.True.6215, %block.Cidr_Prelude.Bool.False.6213
  %alloc_bytes.6218 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6219 = ptrtoint <{ i64 }>* %alloc_bytes.6218 to i64
  %new_node_ptr.6220 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6219 monotonic
  %new_node_ptr.6221 = inttoptr i64 %new_node_ptr.6220 to i64*
  %tag.6222 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.6223 = bitcast i64* %new_node_ptr.6221 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6223, align 1
  %idr_Prelude.Strings.trim1_val_525.6224 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.6211, i64* %new_node_ptr.6221)
  %alloc_bytes.6225 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6226 = ptrtoint <{ i64 }>* %alloc_bytes.6225 to i64
  %new_node_ptr.6227 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6226 monotonic
  %new_node_ptr.6228 = inttoptr i64 %new_node_ptr.6227 to i64*
  %tag.6229 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim1_val_525.6224, 0
  switch i64 %tag.6229, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6230
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6232
  ]

block.Cidr_Prelude.Basics.No.6230:                ; preds = %block.exit.6217
  %ptr_Cidr_Prelude.Basics.No.6231 = bitcast i64* %new_node_ptr.6228 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val_525.6224, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6231, align 1
  br label %block.exit.6234

block.Cidr_Prelude.Basics.Yes.6232:               ; preds = %block.exit.6217
  %ptr_Cidr_Prelude.Basics.Yes.6233 = bitcast i64* %new_node_ptr.6228 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val_525.6224, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6233, align 1
  br label %block.exit.6234

block.exit.6234:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6232, %block.Cidr_Prelude.Basics.No.6230
  %tag.6235 = load i64, i64* %new_node_ptr.6228, align 1
  switch i64 %tag.6235, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6236
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6239
  ]

block.Cidr_Prelude.Basics.No.6236:                ; preds = %block.exit.6234
  %ptr_Cidr_Prelude.Basics.No.6237 = bitcast i64* %new_node_ptr.6228 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.6238 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6237, align 1
  br label %block.exit.6242

block.Cidr_Prelude.Basics.Yes.6239:               ; preds = %block.exit.6234
  %ptr_Cidr_Prelude.Basics.Yes.6240 = bitcast i64* %new_node_ptr.6228 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.6241 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6240, align 1
  br label %block.exit.6242

block.exit.6242:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6239, %block.Cidr_Prelude.Basics.No.6236
  %idr_Prelude.Strings.trim1_val_535.6243 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.6238, %block.Cidr_Prelude.Basics.No.6236 ], [ %node_Cidr_Prelude.Basics.Yes.6241, %block.Cidr_Prelude.Basics.Yes.6239 ]
  %tag.6244 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim1_val_535.6243, 0
  switch i64 %tag.6244, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6245
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6247
  ]

block.Cidr_Prelude.Basics.No.6245:                ; preds = %block.exit.6242
  %node_CGrString.6246 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.7118

block.Cidr_Prelude.Basics.Yes.6247:               ; preds = %block.exit.6242
  %idr_Prelude.Strings.trim2_val_538.6248 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6249 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6250 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6249 to i64
  %new_node_ptr.6251 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6250 monotonic
  %new_node_ptr.6252 = inttoptr i64 %new_node_ptr.6251 to i64*
  %tag.6253 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_538.6248, 0
  %ptr_CGrString.6254 = bitcast i64* %new_node_ptr.6252 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_538.6248, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6254, align 1
  %idr_Prelude.Strings.trim2_val_537.6255 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6252)
  %alloc_bytes.6256 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6257 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6256 to i64
  %new_node_ptr.6258 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6257 monotonic
  %new_node_ptr.6259 = inttoptr i64 %new_node_ptr.6258 to i64*
  %tag.6260 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim2_val_537.6255, 0
  %ptr_CGrInt.6261 = bitcast i64* %new_node_ptr.6259 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim2_val_537.6255, <{ i64, [1 x i64] }>* %ptr_CGrInt.6261, align 1
  %idr_Prelude.Strings.trim2_val_536.6262 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.6259)
  %alloc_bytes.6263 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6264 = ptrtoint <{ i64 }>* %alloc_bytes.6263 to i64
  %new_node_ptr.6265 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6264 monotonic
  %new_node_ptr.6266 = inttoptr i64 %new_node_ptr.6265 to i64*
  %tag.6267 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim2_val_536.6262, 0
  switch i64 %tag.6267, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6268
    i64 7, label %block.Cidr_Prelude.Bool.True.6270
  ]

block.Cidr_Prelude.Bool.False.6268:               ; preds = %block.Cidr_Prelude.Basics.Yes.6247
  %ptr_Cidr_Prelude.Bool.False.6269 = bitcast i64* %new_node_ptr.6266 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_536.6262, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6269, align 1
  br label %block.exit.6272

block.Cidr_Prelude.Bool.True.6270:                ; preds = %block.Cidr_Prelude.Basics.Yes.6247
  %ptr_Cidr_Prelude.Bool.True.6271 = bitcast i64* %new_node_ptr.6266 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_536.6262, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6271, align 1
  br label %block.exit.6272

block.exit.6272:                                  ; preds = %block.Cidr_Prelude.Bool.True.6270, %block.Cidr_Prelude.Bool.False.6268
  %tag.6273 = load i64, i64* %new_node_ptr.6266, align 1
  switch i64 %tag.6273, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6274
    i64 7, label %block.Cidr_Prelude.Bool.True.6277
  ]

block.Cidr_Prelude.Bool.False.6274:               ; preds = %block.exit.6272
  %ptr_Cidr_Prelude.Bool.False.6275 = bitcast i64* %new_node_ptr.6266 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.6276 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6275, align 1
  br label %block.exit.6280

block.Cidr_Prelude.Bool.True.6277:                ; preds = %block.exit.6272
  %ptr_Cidr_Prelude.Bool.True.6278 = bitcast i64* %new_node_ptr.6266 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.6279 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6278, align 1
  br label %block.exit.6280

block.exit.6280:                                  ; preds = %block.Cidr_Prelude.Bool.True.6277, %block.Cidr_Prelude.Bool.False.6274
  %idr_Prelude.Strings.trim2_val_542.6281 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.6276, %block.Cidr_Prelude.Bool.False.6274 ], [ %node_Cidr_Prelude.Bool.True.6279, %block.Cidr_Prelude.Bool.True.6277 ]
  %tag.6282 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim2_val_542.6281, 0
  switch i64 %tag.6282, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6283
    i64 7, label %block.Cidr_Prelude.Bool.True.6313
  ]

block.Cidr_Prelude.Bool.False.6283:               ; preds = %block.exit.6280
  %idr_Prelude.Strings.trim3_val_543.6284 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6285 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6286 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6285 to i64
  %new_node_ptr.6287 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6286 monotonic
  %new_node_ptr.6288 = inttoptr i64 %new_node_ptr.6287 to i64*
  %tag.6289 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_543.6284, 0
  %ptr_CGrString.6290 = bitcast i64* %new_node_ptr.6288 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_543.6284, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6290, align 1
  %idr_Prelude.Strings.trim3_val.6291 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6288)
  %alloc_bytes.6292 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6293 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6292 to i64
  %new_node_ptr.6294 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6293 monotonic
  %new_node_ptr.6295 = inttoptr i64 %new_node_ptr.6294 to i64*
  %tag.6296 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val.6291, 0
  %ptr_CGrInt.6297 = bitcast i64* %new_node_ptr.6295 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val.6291, <{ i64, [1 x i64] }>* %ptr_CGrInt.6297, align 1
  %idr_Prelude.Strings.trim4_val_545.6298 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6299 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6300 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6299 to i64
  %new_node_ptr.6301 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6300 monotonic
  %new_node_ptr.6302 = inttoptr i64 %new_node_ptr.6301 to i64*
  %tag.6303 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_545.6298, 0
  %ptr_CGrString.6304 = bitcast i64* %new_node_ptr.6302 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_545.6298, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6304, align 1
  %idr_Prelude.Strings.trim4_val.6305 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6302)
  %alloc_bytes.6306 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6307 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6306 to i64
  %new_node_ptr.6308 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6307 monotonic
  %new_node_ptr.6309 = inttoptr i64 %new_node_ptr.6308 to i64*
  %tag.6310 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val.6305, 0
  %ptr_CGrString.6311 = bitcast i64* %new_node_ptr.6309 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val.6305, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6311, align 1
  %result.Cidr_Prelude.Bool.False.6312 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.6295, i64* %new_node_ptr.6309)
  br label %block.exit.7116

block.Cidr_Prelude.Bool.True.6313:                ; preds = %block.exit.6280
  %idr_Prelude.Strings.trim3_val_551.6314 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6315 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6316 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6315 to i64
  %new_node_ptr.6317 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6316 monotonic
  %new_node_ptr.6318 = inttoptr i64 %new_node_ptr.6317 to i64*
  %tag.6319 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_551.6314, 0
  %ptr_CGrString.6320 = bitcast i64* %new_node_ptr.6318 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_551.6314, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6320, align 1
  %idr_Prelude.Strings.trim3_val_550.6321 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6318)
  %alloc_bytes.6322 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6323 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6322 to i64
  %new_node_ptr.6324 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6323 monotonic
  %new_node_ptr.6325 = inttoptr i64 %new_node_ptr.6324 to i64*
  %tag.6326 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_550.6321, 0
  %ptr_CGrString.6327 = bitcast i64* %new_node_ptr.6325 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_550.6321, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6327, align 1
  %node_CGrString.6328 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.6329 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6330 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6329 to i64
  %new_node_ptr.6331 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6330 monotonic
  %new_node_ptr.6332 = inttoptr i64 %new_node_ptr.6331 to i64*
  %tag.6333 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6328, 0
  %ptr_CGrString.6334 = bitcast i64* %new_node_ptr.6332 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6328, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6334, align 1
  %idr_Prelude.Strings.trim3_val_549.6335 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.6325, i64* %new_node_ptr.6332)
  %alloc_bytes.6336 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6337 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6336 to i64
  %new_node_ptr.6338 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6337 monotonic
  %new_node_ptr.6339 = inttoptr i64 %new_node_ptr.6338 to i64*
  %tag.6340 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_549.6335, 0
  %ptr_CGrInt.6341 = bitcast i64* %new_node_ptr.6339 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_549.6335, <{ i64, [1 x i64] }>* %ptr_CGrInt.6341, align 1
  %tag.6342 = load i64, i64* %new_node_ptr.6339, align 1
  %ptr_CGrInt.6343 = bitcast i64* %new_node_ptr.6339 to <{ i64, [1 x i64] }>*
  %node_CGrInt.6344 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.6343, align 1
  %tag.6345 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6344, 0
  switch i64 %tag.6345, label %error_block [
    i64 2, label %block.CGrInt.6346
  ]

block.CGrInt.6346:                                ; preds = %block.Cidr_Prelude.Bool.True.6313
  %idr_Prelude.Strings.trim_cpat_LInt64_0_558 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6344, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_558, label %block.default.6347 [
    i64 0, label %block.int_0.6348
  ]

block.default.6347:                               ; preds = %block.CGrInt.6346
  br label %block.exit.6349

block.int_0.6348:                                 ; preds = %block.CGrInt.6346
  br label %block.exit.6349

block.exit.6349:                                  ; preds = %block.int_0.6348, %block.default.6347
  %result.CGrInt.6350 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.6347 ], [ <{ i64 7 }>, %block.int_0.6348 ]
  br label %block.exit.6351

block.exit.6351:                                  ; preds = %block.exit.6349
  %idr_Prelude.Strings.trim3_val_548.6352 = phi <{ i64 }> [ %result.CGrInt.6350, %block.exit.6349 ]
  %alloc_bytes.6353 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6354 = ptrtoint <{ i64 }>* %alloc_bytes.6353 to i64
  %new_node_ptr.6355 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6354 monotonic
  %new_node_ptr.6356 = inttoptr i64 %new_node_ptr.6355 to i64*
  %tag.6357 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_548.6352, 0
  switch i64 %tag.6357, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6358
    i64 7, label %block.Cidr_Prelude.Bool.True.6360
  ]

block.Cidr_Prelude.Bool.False.6358:               ; preds = %block.exit.6351
  %ptr_Cidr_Prelude.Bool.False.6359 = bitcast i64* %new_node_ptr.6356 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_548.6352, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6359, align 1
  br label %block.exit.6362

block.Cidr_Prelude.Bool.True.6360:                ; preds = %block.exit.6351
  %ptr_Cidr_Prelude.Bool.True.6361 = bitcast i64* %new_node_ptr.6356 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_548.6352, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6361, align 1
  br label %block.exit.6362

block.exit.6362:                                  ; preds = %block.Cidr_Prelude.Bool.True.6360, %block.Cidr_Prelude.Bool.False.6358
  %alloc_bytes.6363 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6364 = ptrtoint <{ i64 }>* %alloc_bytes.6363 to i64
  %new_node_ptr.6365 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6364 monotonic
  %new_node_ptr.6366 = inttoptr i64 %new_node_ptr.6365 to i64*
  %tag.6367 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.6368 = bitcast i64* %new_node_ptr.6366 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6368, align 1
  %idr_Prelude.Strings.trim3_val_547.6369 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.6356, i64* %new_node_ptr.6366)
  %alloc_bytes.6370 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6371 = ptrtoint <{ i64 }>* %alloc_bytes.6370 to i64
  %new_node_ptr.6372 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6371 monotonic
  %new_node_ptr.6373 = inttoptr i64 %new_node_ptr.6372 to i64*
  %tag.6374 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_547.6369, 0
  switch i64 %tag.6374, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6375
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6377
  ]

block.Cidr_Prelude.Basics.No.6375:                ; preds = %block.exit.6362
  %ptr_Cidr_Prelude.Basics.No.6376 = bitcast i64* %new_node_ptr.6373 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_547.6369, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6376, align 1
  br label %block.exit.6379

block.Cidr_Prelude.Basics.Yes.6377:               ; preds = %block.exit.6362
  %ptr_Cidr_Prelude.Basics.Yes.6378 = bitcast i64* %new_node_ptr.6373 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_547.6369, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6378, align 1
  br label %block.exit.6379

block.exit.6379:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6377, %block.Cidr_Prelude.Basics.No.6375
  %tag.6380 = load i64, i64* %new_node_ptr.6373, align 1
  switch i64 %tag.6380, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6381
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6384
  ]

block.Cidr_Prelude.Basics.No.6381:                ; preds = %block.exit.6379
  %ptr_Cidr_Prelude.Basics.No.6382 = bitcast i64* %new_node_ptr.6373 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.6383 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6382, align 1
  br label %block.exit.6387

block.Cidr_Prelude.Basics.Yes.6384:               ; preds = %block.exit.6379
  %ptr_Cidr_Prelude.Basics.Yes.6385 = bitcast i64* %new_node_ptr.6373 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.6386 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6385, align 1
  br label %block.exit.6387

block.exit.6387:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6384, %block.Cidr_Prelude.Basics.No.6381
  %idr_Prelude.Strings.trim3_val_563.6388 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.6383, %block.Cidr_Prelude.Basics.No.6381 ], [ %node_Cidr_Prelude.Basics.Yes.6386, %block.Cidr_Prelude.Basics.Yes.6384 ]
  %tag.6389 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_563.6388, 0
  switch i64 %tag.6389, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6390
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6392
  ]

block.Cidr_Prelude.Basics.No.6390:                ; preds = %block.exit.6387
  %node_CGrString.6391 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.7114

block.Cidr_Prelude.Basics.Yes.6392:               ; preds = %block.exit.6387
  %idr_Prelude.Strings.trim4_val_567.6393 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6394 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6395 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6394 to i64
  %new_node_ptr.6396 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6395 monotonic
  %new_node_ptr.6397 = inttoptr i64 %new_node_ptr.6396 to i64*
  %tag.6398 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_567.6393, 0
  %ptr_CGrString.6399 = bitcast i64* %new_node_ptr.6397 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_567.6393, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6399, align 1
  %idr_Prelude.Strings.trim4_val_566.6400 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6397)
  %alloc_bytes.6401 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6402 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6401 to i64
  %new_node_ptr.6403 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6402 monotonic
  %new_node_ptr.6404 = inttoptr i64 %new_node_ptr.6403 to i64*
  %tag.6405 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_566.6400, 0
  %ptr_CGrString.6406 = bitcast i64* %new_node_ptr.6404 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_566.6400, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6406, align 1
  %idr_Prelude.Strings.trim4_val_565.6407 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6404)
  %alloc_bytes.6408 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6409 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6408 to i64
  %new_node_ptr.6410 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6409 monotonic
  %new_node_ptr.6411 = inttoptr i64 %new_node_ptr.6410 to i64*
  %tag.6412 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_565.6407, 0
  %ptr_CGrInt.6413 = bitcast i64* %new_node_ptr.6411 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_565.6407, <{ i64, [1 x i64] }>* %ptr_CGrInt.6413, align 1
  %idr_Prelude.Strings.trim4_val_564.6414 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.6411)
  %alloc_bytes.6415 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6416 = ptrtoint <{ i64 }>* %alloc_bytes.6415 to i64
  %new_node_ptr.6417 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6416 monotonic
  %new_node_ptr.6418 = inttoptr i64 %new_node_ptr.6417 to i64*
  %tag.6419 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_564.6414, 0
  switch i64 %tag.6419, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6420
    i64 7, label %block.Cidr_Prelude.Bool.True.6422
  ]

block.Cidr_Prelude.Bool.False.6420:               ; preds = %block.Cidr_Prelude.Basics.Yes.6392
  %ptr_Cidr_Prelude.Bool.False.6421 = bitcast i64* %new_node_ptr.6418 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_564.6414, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6421, align 1
  br label %block.exit.6424

block.Cidr_Prelude.Bool.True.6422:                ; preds = %block.Cidr_Prelude.Basics.Yes.6392
  %ptr_Cidr_Prelude.Bool.True.6423 = bitcast i64* %new_node_ptr.6418 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_564.6414, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6423, align 1
  br label %block.exit.6424

block.exit.6424:                                  ; preds = %block.Cidr_Prelude.Bool.True.6422, %block.Cidr_Prelude.Bool.False.6420
  %tag.6425 = load i64, i64* %new_node_ptr.6418, align 1
  switch i64 %tag.6425, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6426
    i64 7, label %block.Cidr_Prelude.Bool.True.6429
  ]

block.Cidr_Prelude.Bool.False.6426:               ; preds = %block.exit.6424
  %ptr_Cidr_Prelude.Bool.False.6427 = bitcast i64* %new_node_ptr.6418 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.6428 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6427, align 1
  br label %block.exit.6432

block.Cidr_Prelude.Bool.True.6429:                ; preds = %block.exit.6424
  %ptr_Cidr_Prelude.Bool.True.6430 = bitcast i64* %new_node_ptr.6418 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.6431 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6430, align 1
  br label %block.exit.6432

block.exit.6432:                                  ; preds = %block.Cidr_Prelude.Bool.True.6429, %block.Cidr_Prelude.Bool.False.6426
  %idr_Prelude.Strings.trim4_val_572.6433 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.6428, %block.Cidr_Prelude.Bool.False.6426 ], [ %node_Cidr_Prelude.Bool.True.6431, %block.Cidr_Prelude.Bool.True.6429 ]
  %tag.6434 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_572.6433, 0
  switch i64 %tag.6434, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6435
    i64 7, label %block.Cidr_Prelude.Bool.True.6479
  ]

block.Cidr_Prelude.Bool.False.6435:               ; preds = %block.exit.6432
  %idr_Prelude.Strings.trim5_val_574.6436 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6437 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6438 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6437 to i64
  %new_node_ptr.6439 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6438 monotonic
  %new_node_ptr.6440 = inttoptr i64 %new_node_ptr.6439 to i64*
  %tag.6441 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_574.6436, 0
  %ptr_CGrString.6442 = bitcast i64* %new_node_ptr.6440 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_574.6436, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6442, align 1
  %idr_Prelude.Strings.trim5_val_573.6443 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6440)
  %alloc_bytes.6444 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6445 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6444 to i64
  %new_node_ptr.6446 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6445 monotonic
  %new_node_ptr.6447 = inttoptr i64 %new_node_ptr.6446 to i64*
  %tag.6448 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_573.6443, 0
  %ptr_CGrString.6449 = bitcast i64* %new_node_ptr.6447 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_573.6443, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6449, align 1
  %idr_Prelude.Strings.trim5_val.6450 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6447)
  %alloc_bytes.6451 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6452 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6451 to i64
  %new_node_ptr.6453 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6452 monotonic
  %new_node_ptr.6454 = inttoptr i64 %new_node_ptr.6453 to i64*
  %tag.6455 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val.6450, 0
  %ptr_CGrInt.6456 = bitcast i64* %new_node_ptr.6454 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val.6450, <{ i64, [1 x i64] }>* %ptr_CGrInt.6456, align 1
  %idr_Prelude.Strings.trim6_val_578.6457 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6458 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6459 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6458 to i64
  %new_node_ptr.6460 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6459 monotonic
  %new_node_ptr.6461 = inttoptr i64 %new_node_ptr.6460 to i64*
  %tag.6462 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_578.6457, 0
  %ptr_CGrString.6463 = bitcast i64* %new_node_ptr.6461 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_578.6457, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6463, align 1
  %idr_Prelude.Strings.trim6_val_577.6464 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6461)
  %alloc_bytes.6465 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6466 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6465 to i64
  %new_node_ptr.6467 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6466 monotonic
  %new_node_ptr.6468 = inttoptr i64 %new_node_ptr.6467 to i64*
  %tag.6469 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_577.6464, 0
  %ptr_CGrString.6470 = bitcast i64* %new_node_ptr.6468 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_577.6464, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6470, align 1
  %idr_Prelude.Strings.trim6_val.6471 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6468)
  %alloc_bytes.6472 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6473 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6472 to i64
  %new_node_ptr.6474 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6473 monotonic
  %new_node_ptr.6475 = inttoptr i64 %new_node_ptr.6474 to i64*
  %tag.6476 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val.6471, 0
  %ptr_CGrString.6477 = bitcast i64* %new_node_ptr.6475 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val.6471, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6477, align 1
  %result.Cidr_Prelude.Bool.False.6478 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.6454, i64* %new_node_ptr.6475)
  br label %block.exit.7112

block.Cidr_Prelude.Bool.True.6479:                ; preds = %block.exit.6432
  %idr_Prelude.Strings.trim5_val_586.6480 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6481 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6482 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6481 to i64
  %new_node_ptr.6483 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6482 monotonic
  %new_node_ptr.6484 = inttoptr i64 %new_node_ptr.6483 to i64*
  %tag.6485 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_586.6480, 0
  %ptr_CGrString.6486 = bitcast i64* %new_node_ptr.6484 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_586.6480, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6486, align 1
  %idr_Prelude.Strings.trim5_val_585.6487 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6484)
  %alloc_bytes.6488 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6489 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6488 to i64
  %new_node_ptr.6490 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6489 monotonic
  %new_node_ptr.6491 = inttoptr i64 %new_node_ptr.6490 to i64*
  %tag.6492 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_585.6487, 0
  %ptr_CGrString.6493 = bitcast i64* %new_node_ptr.6491 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_585.6487, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6493, align 1
  %idr_Prelude.Strings.trim5_val_584.6494 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6491)
  %alloc_bytes.6495 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6496 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6495 to i64
  %new_node_ptr.6497 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6496 monotonic
  %new_node_ptr.6498 = inttoptr i64 %new_node_ptr.6497 to i64*
  %tag.6499 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_584.6494, 0
  %ptr_CGrString.6500 = bitcast i64* %new_node_ptr.6498 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_584.6494, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6500, align 1
  %node_CGrString.6501 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.6502 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6503 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6502 to i64
  %new_node_ptr.6504 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6503 monotonic
  %new_node_ptr.6505 = inttoptr i64 %new_node_ptr.6504 to i64*
  %tag.6506 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6501, 0
  %ptr_CGrString.6507 = bitcast i64* %new_node_ptr.6505 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6501, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6507, align 1
  %idr_Prelude.Strings.trim5_val_583.6508 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.6498, i64* %new_node_ptr.6505)
  %alloc_bytes.6509 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6510 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6509 to i64
  %new_node_ptr.6511 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6510 monotonic
  %new_node_ptr.6512 = inttoptr i64 %new_node_ptr.6511 to i64*
  %tag.6513 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_583.6508, 0
  %ptr_CGrInt.6514 = bitcast i64* %new_node_ptr.6512 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_583.6508, <{ i64, [1 x i64] }>* %ptr_CGrInt.6514, align 1
  %tag.6515 = load i64, i64* %new_node_ptr.6512, align 1
  %ptr_CGrInt.6516 = bitcast i64* %new_node_ptr.6512 to <{ i64, [1 x i64] }>*
  %node_CGrInt.6517 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.6516, align 1
  %tag.6518 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6517, 0
  switch i64 %tag.6518, label %error_block [
    i64 2, label %block.CGrInt.6519
  ]

block.CGrInt.6519:                                ; preds = %block.Cidr_Prelude.Bool.True.6479
  %idr_Prelude.Strings.trim_cpat_LInt64_0_594 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6517, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_594, label %block.default.6520 [
    i64 0, label %block.int_0.6521
  ]

block.default.6520:                               ; preds = %block.CGrInt.6519
  br label %block.exit.6522

block.int_0.6521:                                 ; preds = %block.CGrInt.6519
  br label %block.exit.6522

block.exit.6522:                                  ; preds = %block.int_0.6521, %block.default.6520
  %result.CGrInt.6523 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.6520 ], [ <{ i64 7 }>, %block.int_0.6521 ]
  br label %block.exit.6524

block.exit.6524:                                  ; preds = %block.exit.6522
  %idr_Prelude.Strings.trim5_val_582.6525 = phi <{ i64 }> [ %result.CGrInt.6523, %block.exit.6522 ]
  %alloc_bytes.6526 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6527 = ptrtoint <{ i64 }>* %alloc_bytes.6526 to i64
  %new_node_ptr.6528 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6527 monotonic
  %new_node_ptr.6529 = inttoptr i64 %new_node_ptr.6528 to i64*
  %tag.6530 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_582.6525, 0
  switch i64 %tag.6530, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6531
    i64 7, label %block.Cidr_Prelude.Bool.True.6533
  ]

block.Cidr_Prelude.Bool.False.6531:               ; preds = %block.exit.6524
  %ptr_Cidr_Prelude.Bool.False.6532 = bitcast i64* %new_node_ptr.6529 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_582.6525, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6532, align 1
  br label %block.exit.6535

block.Cidr_Prelude.Bool.True.6533:                ; preds = %block.exit.6524
  %ptr_Cidr_Prelude.Bool.True.6534 = bitcast i64* %new_node_ptr.6529 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_582.6525, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6534, align 1
  br label %block.exit.6535

block.exit.6535:                                  ; preds = %block.Cidr_Prelude.Bool.True.6533, %block.Cidr_Prelude.Bool.False.6531
  %alloc_bytes.6536 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6537 = ptrtoint <{ i64 }>* %alloc_bytes.6536 to i64
  %new_node_ptr.6538 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6537 monotonic
  %new_node_ptr.6539 = inttoptr i64 %new_node_ptr.6538 to i64*
  %tag.6540 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.6541 = bitcast i64* %new_node_ptr.6539 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6541, align 1
  %idr_Prelude.Strings.trim5_val_581.6542 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.6529, i64* %new_node_ptr.6539)
  %alloc_bytes.6543 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6544 = ptrtoint <{ i64 }>* %alloc_bytes.6543 to i64
  %new_node_ptr.6545 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6544 monotonic
  %new_node_ptr.6546 = inttoptr i64 %new_node_ptr.6545 to i64*
  %tag.6547 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_581.6542, 0
  switch i64 %tag.6547, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6548
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6550
  ]

block.Cidr_Prelude.Basics.No.6548:                ; preds = %block.exit.6535
  %ptr_Cidr_Prelude.Basics.No.6549 = bitcast i64* %new_node_ptr.6546 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_581.6542, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6549, align 1
  br label %block.exit.6552

block.Cidr_Prelude.Basics.Yes.6550:               ; preds = %block.exit.6535
  %ptr_Cidr_Prelude.Basics.Yes.6551 = bitcast i64* %new_node_ptr.6546 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_581.6542, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6551, align 1
  br label %block.exit.6552

block.exit.6552:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6550, %block.Cidr_Prelude.Basics.No.6548
  %tag.6553 = load i64, i64* %new_node_ptr.6546, align 1
  switch i64 %tag.6553, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6554
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6557
  ]

block.Cidr_Prelude.Basics.No.6554:                ; preds = %block.exit.6552
  %ptr_Cidr_Prelude.Basics.No.6555 = bitcast i64* %new_node_ptr.6546 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.6556 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6555, align 1
  br label %block.exit.6560

block.Cidr_Prelude.Basics.Yes.6557:               ; preds = %block.exit.6552
  %ptr_Cidr_Prelude.Basics.Yes.6558 = bitcast i64* %new_node_ptr.6546 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.6559 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6558, align 1
  br label %block.exit.6560

block.exit.6560:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6557, %block.Cidr_Prelude.Basics.No.6554
  %idr_Prelude.Strings.trim5_val_599.6561 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.6556, %block.Cidr_Prelude.Basics.No.6554 ], [ %node_Cidr_Prelude.Basics.Yes.6559, %block.Cidr_Prelude.Basics.Yes.6557 ]
  %tag.6562 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_599.6561, 0
  switch i64 %tag.6562, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6563
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6565
  ]

block.Cidr_Prelude.Basics.No.6563:                ; preds = %block.exit.6560
  %node_CGrString.6564 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.7110

block.Cidr_Prelude.Basics.Yes.6565:               ; preds = %block.exit.6560
  %idr_Prelude.Strings.trim6_val_604.6566 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6567 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6568 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6567 to i64
  %new_node_ptr.6569 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6568 monotonic
  %new_node_ptr.6570 = inttoptr i64 %new_node_ptr.6569 to i64*
  %tag.6571 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_604.6566, 0
  %ptr_CGrString.6572 = bitcast i64* %new_node_ptr.6570 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_604.6566, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6572, align 1
  %idr_Prelude.Strings.trim6_val_603.6573 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6570)
  %alloc_bytes.6574 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6575 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6574 to i64
  %new_node_ptr.6576 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6575 monotonic
  %new_node_ptr.6577 = inttoptr i64 %new_node_ptr.6576 to i64*
  %tag.6578 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_603.6573, 0
  %ptr_CGrString.6579 = bitcast i64* %new_node_ptr.6577 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_603.6573, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6579, align 1
  %idr_Prelude.Strings.trim6_val_602.6580 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6577)
  %alloc_bytes.6581 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6582 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6581 to i64
  %new_node_ptr.6583 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6582 monotonic
  %new_node_ptr.6584 = inttoptr i64 %new_node_ptr.6583 to i64*
  %tag.6585 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_602.6580, 0
  %ptr_CGrString.6586 = bitcast i64* %new_node_ptr.6584 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_602.6580, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6586, align 1
  %idr_Prelude.Strings.trim6_val_601.6587 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6584)
  %alloc_bytes.6588 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6589 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6588 to i64
  %new_node_ptr.6590 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6589 monotonic
  %new_node_ptr.6591 = inttoptr i64 %new_node_ptr.6590 to i64*
  %tag.6592 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_601.6587, 0
  %ptr_CGrInt.6593 = bitcast i64* %new_node_ptr.6591 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_601.6587, <{ i64, [1 x i64] }>* %ptr_CGrInt.6593, align 1
  %idr_Prelude.Strings.trim6_val_600.6594 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.6591)
  %alloc_bytes.6595 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6596 = ptrtoint <{ i64 }>* %alloc_bytes.6595 to i64
  %new_node_ptr.6597 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6596 monotonic
  %new_node_ptr.6598 = inttoptr i64 %new_node_ptr.6597 to i64*
  %tag.6599 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_600.6594, 0
  switch i64 %tag.6599, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6600
    i64 7, label %block.Cidr_Prelude.Bool.True.6602
  ]

block.Cidr_Prelude.Bool.False.6600:               ; preds = %block.Cidr_Prelude.Basics.Yes.6565
  %ptr_Cidr_Prelude.Bool.False.6601 = bitcast i64* %new_node_ptr.6598 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_600.6594, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6601, align 1
  br label %block.exit.6604

block.Cidr_Prelude.Bool.True.6602:                ; preds = %block.Cidr_Prelude.Basics.Yes.6565
  %ptr_Cidr_Prelude.Bool.True.6603 = bitcast i64* %new_node_ptr.6598 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_600.6594, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6603, align 1
  br label %block.exit.6604

block.exit.6604:                                  ; preds = %block.Cidr_Prelude.Bool.True.6602, %block.Cidr_Prelude.Bool.False.6600
  %tag.6605 = load i64, i64* %new_node_ptr.6598, align 1
  switch i64 %tag.6605, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6606
    i64 7, label %block.Cidr_Prelude.Bool.True.6609
  ]

block.Cidr_Prelude.Bool.False.6606:               ; preds = %block.exit.6604
  %ptr_Cidr_Prelude.Bool.False.6607 = bitcast i64* %new_node_ptr.6598 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.6608 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6607, align 1
  br label %block.exit.6612

block.Cidr_Prelude.Bool.True.6609:                ; preds = %block.exit.6604
  %ptr_Cidr_Prelude.Bool.True.6610 = bitcast i64* %new_node_ptr.6598 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.6611 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6610, align 1
  br label %block.exit.6612

block.exit.6612:                                  ; preds = %block.Cidr_Prelude.Bool.True.6609, %block.Cidr_Prelude.Bool.False.6606
  %idr_Prelude.Strings.trim6_val_610.6613 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.6608, %block.Cidr_Prelude.Bool.False.6606 ], [ %node_Cidr_Prelude.Bool.True.6611, %block.Cidr_Prelude.Bool.True.6609 ]
  %tag.6614 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_610.6613, 0
  switch i64 %tag.6614, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6615
    i64 7, label %block.Cidr_Prelude.Bool.True.6673
  ]

block.Cidr_Prelude.Bool.False.6615:               ; preds = %block.exit.6612
  %idr_Prelude.Strings.trim7_val_613.6616 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6617 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6618 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6617 to i64
  %new_node_ptr.6619 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6618 monotonic
  %new_node_ptr.6620 = inttoptr i64 %new_node_ptr.6619 to i64*
  %tag.6621 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_613.6616, 0
  %ptr_CGrString.6622 = bitcast i64* %new_node_ptr.6620 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_613.6616, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6622, align 1
  %idr_Prelude.Strings.trim7_val_612.6623 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6620)
  %alloc_bytes.6624 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6625 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6624 to i64
  %new_node_ptr.6626 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6625 monotonic
  %new_node_ptr.6627 = inttoptr i64 %new_node_ptr.6626 to i64*
  %tag.6628 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_612.6623, 0
  %ptr_CGrString.6629 = bitcast i64* %new_node_ptr.6627 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_612.6623, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6629, align 1
  %idr_Prelude.Strings.trim7_val_611.6630 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6627)
  %alloc_bytes.6631 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6632 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6631 to i64
  %new_node_ptr.6633 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6632 monotonic
  %new_node_ptr.6634 = inttoptr i64 %new_node_ptr.6633 to i64*
  %tag.6635 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_611.6630, 0
  %ptr_CGrString.6636 = bitcast i64* %new_node_ptr.6634 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_611.6630, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6636, align 1
  %idr_Prelude.Strings.trim7_val.6637 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6634)
  %alloc_bytes.6638 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6639 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6638 to i64
  %new_node_ptr.6640 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6639 monotonic
  %new_node_ptr.6641 = inttoptr i64 %new_node_ptr.6640 to i64*
  %tag.6642 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val.6637, 0
  %ptr_CGrInt.6643 = bitcast i64* %new_node_ptr.6641 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val.6637, <{ i64, [1 x i64] }>* %ptr_CGrInt.6643, align 1
  %idr_Prelude.Strings.trim8_val_619.6644 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6645 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6646 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6645 to i64
  %new_node_ptr.6647 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6646 monotonic
  %new_node_ptr.6648 = inttoptr i64 %new_node_ptr.6647 to i64*
  %tag.6649 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_619.6644, 0
  %ptr_CGrString.6650 = bitcast i64* %new_node_ptr.6648 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_619.6644, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6650, align 1
  %idr_Prelude.Strings.trim8_val_618.6651 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6648)
  %alloc_bytes.6652 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6653 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6652 to i64
  %new_node_ptr.6654 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6653 monotonic
  %new_node_ptr.6655 = inttoptr i64 %new_node_ptr.6654 to i64*
  %tag.6656 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_618.6651, 0
  %ptr_CGrString.6657 = bitcast i64* %new_node_ptr.6655 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_618.6651, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6657, align 1
  %idr_Prelude.Strings.trim8_val_617.6658 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6655)
  %alloc_bytes.6659 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6660 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6659 to i64
  %new_node_ptr.6661 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6660 monotonic
  %new_node_ptr.6662 = inttoptr i64 %new_node_ptr.6661 to i64*
  %tag.6663 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_617.6658, 0
  %ptr_CGrString.6664 = bitcast i64* %new_node_ptr.6662 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_617.6658, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6664, align 1
  %idr_Prelude.Strings.trim8_val.6665 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6662)
  %alloc_bytes.6666 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6667 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6666 to i64
  %new_node_ptr.6668 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6667 monotonic
  %new_node_ptr.6669 = inttoptr i64 %new_node_ptr.6668 to i64*
  %tag.6670 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val.6665, 0
  %ptr_CGrString.6671 = bitcast i64* %new_node_ptr.6669 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val.6665, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6671, align 1
  %result.Cidr_Prelude.Bool.False.6672 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.6641, i64* %new_node_ptr.6669)
  br label %block.exit.7108

block.Cidr_Prelude.Bool.True.6673:                ; preds = %block.exit.6612
  %idr_Prelude.Strings.trim7_val_629.6674 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6675 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6676 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6675 to i64
  %new_node_ptr.6677 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6676 monotonic
  %new_node_ptr.6678 = inttoptr i64 %new_node_ptr.6677 to i64*
  %tag.6679 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_629.6674, 0
  %ptr_CGrString.6680 = bitcast i64* %new_node_ptr.6678 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_629.6674, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6680, align 1
  %idr_Prelude.Strings.trim7_val_628.6681 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6678)
  %alloc_bytes.6682 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6683 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6682 to i64
  %new_node_ptr.6684 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6683 monotonic
  %new_node_ptr.6685 = inttoptr i64 %new_node_ptr.6684 to i64*
  %tag.6686 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_628.6681, 0
  %ptr_CGrString.6687 = bitcast i64* %new_node_ptr.6685 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_628.6681, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6687, align 1
  %idr_Prelude.Strings.trim7_val_627.6688 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6685)
  %alloc_bytes.6689 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6690 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6689 to i64
  %new_node_ptr.6691 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6690 monotonic
  %new_node_ptr.6692 = inttoptr i64 %new_node_ptr.6691 to i64*
  %tag.6693 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_627.6688, 0
  %ptr_CGrString.6694 = bitcast i64* %new_node_ptr.6692 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_627.6688, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6694, align 1
  %idr_Prelude.Strings.trim7_val_626.6695 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6692)
  %alloc_bytes.6696 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6697 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6696 to i64
  %new_node_ptr.6698 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6697 monotonic
  %new_node_ptr.6699 = inttoptr i64 %new_node_ptr.6698 to i64*
  %tag.6700 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_626.6695, 0
  %ptr_CGrString.6701 = bitcast i64* %new_node_ptr.6699 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_626.6695, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6701, align 1
  %node_CGrString.6702 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.6703 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6704 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6703 to i64
  %new_node_ptr.6705 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6704 monotonic
  %new_node_ptr.6706 = inttoptr i64 %new_node_ptr.6705 to i64*
  %tag.6707 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6702, 0
  %ptr_CGrString.6708 = bitcast i64* %new_node_ptr.6706 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6702, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6708, align 1
  %idr_Prelude.Strings.trim7_val_625.6709 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.6699, i64* %new_node_ptr.6706)
  %alloc_bytes.6710 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6711 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6710 to i64
  %new_node_ptr.6712 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6711 monotonic
  %new_node_ptr.6713 = inttoptr i64 %new_node_ptr.6712 to i64*
  %tag.6714 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_625.6709, 0
  %ptr_CGrInt.6715 = bitcast i64* %new_node_ptr.6713 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_625.6709, <{ i64, [1 x i64] }>* %ptr_CGrInt.6715, align 1
  %tag.6716 = load i64, i64* %new_node_ptr.6713, align 1
  %ptr_CGrInt.6717 = bitcast i64* %new_node_ptr.6713 to <{ i64, [1 x i64] }>*
  %node_CGrInt.6718 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.6717, align 1
  %tag.6719 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6718, 0
  switch i64 %tag.6719, label %error_block [
    i64 2, label %block.CGrInt.6720
  ]

block.CGrInt.6720:                                ; preds = %block.Cidr_Prelude.Bool.True.6673
  %idr_Prelude.Strings.trim_cpat_LInt64_0_638 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6718, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_638, label %block.default.6721 [
    i64 0, label %block.int_0.6722
  ]

block.default.6721:                               ; preds = %block.CGrInt.6720
  br label %block.exit.6723

block.int_0.6722:                                 ; preds = %block.CGrInt.6720
  br label %block.exit.6723

block.exit.6723:                                  ; preds = %block.int_0.6722, %block.default.6721
  %result.CGrInt.6724 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.6721 ], [ <{ i64 7 }>, %block.int_0.6722 ]
  br label %block.exit.6725

block.exit.6725:                                  ; preds = %block.exit.6723
  %idr_Prelude.Strings.trim7_val_624.6726 = phi <{ i64 }> [ %result.CGrInt.6724, %block.exit.6723 ]
  %alloc_bytes.6727 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6728 = ptrtoint <{ i64 }>* %alloc_bytes.6727 to i64
  %new_node_ptr.6729 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6728 monotonic
  %new_node_ptr.6730 = inttoptr i64 %new_node_ptr.6729 to i64*
  %tag.6731 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_624.6726, 0
  switch i64 %tag.6731, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6732
    i64 7, label %block.Cidr_Prelude.Bool.True.6734
  ]

block.Cidr_Prelude.Bool.False.6732:               ; preds = %block.exit.6725
  %ptr_Cidr_Prelude.Bool.False.6733 = bitcast i64* %new_node_ptr.6730 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_624.6726, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6733, align 1
  br label %block.exit.6736

block.Cidr_Prelude.Bool.True.6734:                ; preds = %block.exit.6725
  %ptr_Cidr_Prelude.Bool.True.6735 = bitcast i64* %new_node_ptr.6730 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_624.6726, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6735, align 1
  br label %block.exit.6736

block.exit.6736:                                  ; preds = %block.Cidr_Prelude.Bool.True.6734, %block.Cidr_Prelude.Bool.False.6732
  %alloc_bytes.6737 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6738 = ptrtoint <{ i64 }>* %alloc_bytes.6737 to i64
  %new_node_ptr.6739 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6738 monotonic
  %new_node_ptr.6740 = inttoptr i64 %new_node_ptr.6739 to i64*
  %tag.6741 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.6742 = bitcast i64* %new_node_ptr.6740 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6742, align 1
  %idr_Prelude.Strings.trim7_val_623.6743 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.6730, i64* %new_node_ptr.6740)
  %alloc_bytes.6744 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6745 = ptrtoint <{ i64 }>* %alloc_bytes.6744 to i64
  %new_node_ptr.6746 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6745 monotonic
  %new_node_ptr.6747 = inttoptr i64 %new_node_ptr.6746 to i64*
  %tag.6748 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_623.6743, 0
  switch i64 %tag.6748, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6749
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6751
  ]

block.Cidr_Prelude.Basics.No.6749:                ; preds = %block.exit.6736
  %ptr_Cidr_Prelude.Basics.No.6750 = bitcast i64* %new_node_ptr.6747 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_623.6743, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6750, align 1
  br label %block.exit.6753

block.Cidr_Prelude.Basics.Yes.6751:               ; preds = %block.exit.6736
  %ptr_Cidr_Prelude.Basics.Yes.6752 = bitcast i64* %new_node_ptr.6747 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_623.6743, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6752, align 1
  br label %block.exit.6753

block.exit.6753:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6751, %block.Cidr_Prelude.Basics.No.6749
  %tag.6754 = load i64, i64* %new_node_ptr.6747, align 1
  switch i64 %tag.6754, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6755
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6758
  ]

block.Cidr_Prelude.Basics.No.6755:                ; preds = %block.exit.6753
  %ptr_Cidr_Prelude.Basics.No.6756 = bitcast i64* %new_node_ptr.6747 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.6757 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6756, align 1
  br label %block.exit.6761

block.Cidr_Prelude.Basics.Yes.6758:               ; preds = %block.exit.6753
  %ptr_Cidr_Prelude.Basics.Yes.6759 = bitcast i64* %new_node_ptr.6747 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.6760 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6759, align 1
  br label %block.exit.6761

block.exit.6761:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6758, %block.Cidr_Prelude.Basics.No.6755
  %idr_Prelude.Strings.trim7_val_643.6762 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.6757, %block.Cidr_Prelude.Basics.No.6755 ], [ %node_Cidr_Prelude.Basics.Yes.6760, %block.Cidr_Prelude.Basics.Yes.6758 ]
  %tag.6763 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_643.6762, 0
  switch i64 %tag.6763, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6764
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6766
  ]

block.Cidr_Prelude.Basics.No.6764:                ; preds = %block.exit.6761
  %node_CGrString.6765 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.7106

block.Cidr_Prelude.Basics.Yes.6766:               ; preds = %block.exit.6761
  %idr_Prelude.Strings.trim8_val_649.6767 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6768 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6769 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6768 to i64
  %new_node_ptr.6770 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6769 monotonic
  %new_node_ptr.6771 = inttoptr i64 %new_node_ptr.6770 to i64*
  %tag.6772 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_649.6767, 0
  %ptr_CGrString.6773 = bitcast i64* %new_node_ptr.6771 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_649.6767, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6773, align 1
  %idr_Prelude.Strings.trim8_val_648.6774 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6771)
  %alloc_bytes.6775 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6776 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6775 to i64
  %new_node_ptr.6777 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6776 monotonic
  %new_node_ptr.6778 = inttoptr i64 %new_node_ptr.6777 to i64*
  %tag.6779 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_648.6774, 0
  %ptr_CGrString.6780 = bitcast i64* %new_node_ptr.6778 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_648.6774, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6780, align 1
  %idr_Prelude.Strings.trim8_val_647.6781 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6778)
  %alloc_bytes.6782 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6783 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6782 to i64
  %new_node_ptr.6784 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6783 monotonic
  %new_node_ptr.6785 = inttoptr i64 %new_node_ptr.6784 to i64*
  %tag.6786 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_647.6781, 0
  %ptr_CGrString.6787 = bitcast i64* %new_node_ptr.6785 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_647.6781, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6787, align 1
  %idr_Prelude.Strings.trim8_val_646.6788 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6785)
  %alloc_bytes.6789 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6790 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6789 to i64
  %new_node_ptr.6791 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6790 monotonic
  %new_node_ptr.6792 = inttoptr i64 %new_node_ptr.6791 to i64*
  %tag.6793 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_646.6788, 0
  %ptr_CGrString.6794 = bitcast i64* %new_node_ptr.6792 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_646.6788, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6794, align 1
  %idr_Prelude.Strings.trim8_val_645.6795 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6792)
  %alloc_bytes.6796 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6797 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6796 to i64
  %new_node_ptr.6798 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6797 monotonic
  %new_node_ptr.6799 = inttoptr i64 %new_node_ptr.6798 to i64*
  %tag.6800 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_645.6795, 0
  %ptr_CGrInt.6801 = bitcast i64* %new_node_ptr.6799 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_645.6795, <{ i64, [1 x i64] }>* %ptr_CGrInt.6801, align 1
  %idr_Prelude.Strings.trim8_val_644.6802 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.6799)
  %alloc_bytes.6803 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6804 = ptrtoint <{ i64 }>* %alloc_bytes.6803 to i64
  %new_node_ptr.6805 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6804 monotonic
  %new_node_ptr.6806 = inttoptr i64 %new_node_ptr.6805 to i64*
  %tag.6807 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_644.6802, 0
  switch i64 %tag.6807, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6808
    i64 7, label %block.Cidr_Prelude.Bool.True.6810
  ]

block.Cidr_Prelude.Bool.False.6808:               ; preds = %block.Cidr_Prelude.Basics.Yes.6766
  %ptr_Cidr_Prelude.Bool.False.6809 = bitcast i64* %new_node_ptr.6806 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_644.6802, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6809, align 1
  br label %block.exit.6812

block.Cidr_Prelude.Bool.True.6810:                ; preds = %block.Cidr_Prelude.Basics.Yes.6766
  %ptr_Cidr_Prelude.Bool.True.6811 = bitcast i64* %new_node_ptr.6806 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_644.6802, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6811, align 1
  br label %block.exit.6812

block.exit.6812:                                  ; preds = %block.Cidr_Prelude.Bool.True.6810, %block.Cidr_Prelude.Bool.False.6808
  %tag.6813 = load i64, i64* %new_node_ptr.6806, align 1
  switch i64 %tag.6813, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6814
    i64 7, label %block.Cidr_Prelude.Bool.True.6817
  ]

block.Cidr_Prelude.Bool.False.6814:               ; preds = %block.exit.6812
  %ptr_Cidr_Prelude.Bool.False.6815 = bitcast i64* %new_node_ptr.6806 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.6816 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6815, align 1
  br label %block.exit.6820

block.Cidr_Prelude.Bool.True.6817:                ; preds = %block.exit.6812
  %ptr_Cidr_Prelude.Bool.True.6818 = bitcast i64* %new_node_ptr.6806 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.6819 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6818, align 1
  br label %block.exit.6820

block.exit.6820:                                  ; preds = %block.Cidr_Prelude.Bool.True.6817, %block.Cidr_Prelude.Bool.False.6814
  %idr_Prelude.Strings.trim8_val_656.6821 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.6816, %block.Cidr_Prelude.Bool.False.6814 ], [ %node_Cidr_Prelude.Bool.True.6819, %block.Cidr_Prelude.Bool.True.6817 ]
  %tag.6822 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_656.6821, 0
  switch i64 %tag.6822, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6823
    i64 7, label %block.Cidr_Prelude.Bool.True.6895
  ]

block.Cidr_Prelude.Bool.False.6823:               ; preds = %block.exit.6820
  %idr_Prelude.Strings.trim9_val_660.6824 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6825 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6826 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6825 to i64
  %new_node_ptr.6827 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6826 monotonic
  %new_node_ptr.6828 = inttoptr i64 %new_node_ptr.6827 to i64*
  %tag.6829 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_660.6824, 0
  %ptr_CGrString.6830 = bitcast i64* %new_node_ptr.6828 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_660.6824, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6830, align 1
  %idr_Prelude.Strings.trim9_val_659.6831 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6828)
  %alloc_bytes.6832 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6833 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6832 to i64
  %new_node_ptr.6834 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6833 monotonic
  %new_node_ptr.6835 = inttoptr i64 %new_node_ptr.6834 to i64*
  %tag.6836 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_659.6831, 0
  %ptr_CGrString.6837 = bitcast i64* %new_node_ptr.6835 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_659.6831, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6837, align 1
  %idr_Prelude.Strings.trim9_val_658.6838 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6835)
  %alloc_bytes.6839 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6840 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6839 to i64
  %new_node_ptr.6841 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6840 monotonic
  %new_node_ptr.6842 = inttoptr i64 %new_node_ptr.6841 to i64*
  %tag.6843 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_658.6838, 0
  %ptr_CGrString.6844 = bitcast i64* %new_node_ptr.6842 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_658.6838, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6844, align 1
  %idr_Prelude.Strings.trim9_val_657.6845 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6842)
  %alloc_bytes.6846 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6847 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6846 to i64
  %new_node_ptr.6848 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6847 monotonic
  %new_node_ptr.6849 = inttoptr i64 %new_node_ptr.6848 to i64*
  %tag.6850 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_657.6845, 0
  %ptr_CGrString.6851 = bitcast i64* %new_node_ptr.6849 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_657.6845, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6851, align 1
  %idr_Prelude.Strings.trim9_val.6852 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.6849)
  %alloc_bytes.6853 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6854 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6853 to i64
  %new_node_ptr.6855 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6854 monotonic
  %new_node_ptr.6856 = inttoptr i64 %new_node_ptr.6855 to i64*
  %tag.6857 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val.6852, 0
  %ptr_CGrInt.6858 = bitcast i64* %new_node_ptr.6856 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val.6852, <{ i64, [1 x i64] }>* %ptr_CGrInt.6858, align 1
  %idr_Prelude.Strings.trim10_val_668.6859 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6860 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6861 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6860 to i64
  %new_node_ptr.6862 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6861 monotonic
  %new_node_ptr.6863 = inttoptr i64 %new_node_ptr.6862 to i64*
  %tag.6864 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_668.6859, 0
  %ptr_CGrString.6865 = bitcast i64* %new_node_ptr.6863 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_668.6859, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6865, align 1
  %idr_Prelude.Strings.trim10_val_667.6866 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6863)
  %alloc_bytes.6867 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6868 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6867 to i64
  %new_node_ptr.6869 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6868 monotonic
  %new_node_ptr.6870 = inttoptr i64 %new_node_ptr.6869 to i64*
  %tag.6871 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_667.6866, 0
  %ptr_CGrString.6872 = bitcast i64* %new_node_ptr.6870 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_667.6866, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6872, align 1
  %idr_Prelude.Strings.trim10_val_666.6873 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6870)
  %alloc_bytes.6874 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6875 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6874 to i64
  %new_node_ptr.6876 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6875 monotonic
  %new_node_ptr.6877 = inttoptr i64 %new_node_ptr.6876 to i64*
  %tag.6878 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_666.6873, 0
  %ptr_CGrString.6879 = bitcast i64* %new_node_ptr.6877 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_666.6873, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6879, align 1
  %idr_Prelude.Strings.trim10_val_665.6880 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6877)
  %alloc_bytes.6881 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6882 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6881 to i64
  %new_node_ptr.6883 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6882 monotonic
  %new_node_ptr.6884 = inttoptr i64 %new_node_ptr.6883 to i64*
  %tag.6885 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_665.6880, 0
  %ptr_CGrString.6886 = bitcast i64* %new_node_ptr.6884 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_665.6880, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6886, align 1
  %idr_Prelude.Strings.trim10_val.6887 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6884)
  %alloc_bytes.6888 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6889 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6888 to i64
  %new_node_ptr.6890 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6889 monotonic
  %new_node_ptr.6891 = inttoptr i64 %new_node_ptr.6890 to i64*
  %tag.6892 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val.6887, 0
  %ptr_CGrString.6893 = bitcast i64* %new_node_ptr.6891 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val.6887, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6893, align 1
  %result.Cidr_Prelude.Bool.False.6894 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.6856, i64* %new_node_ptr.6891)
  br label %block.exit.7104

block.Cidr_Prelude.Bool.True.6895:                ; preds = %block.exit.6820
  %alloc_bytes.6896 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6897 = ptrtoint <{ i64 }>* %alloc_bytes.6896 to i64
  %new_node_ptr.6898 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6897 monotonic
  %new_node_ptr.6899 = inttoptr i64 %new_node_ptr.6898 to i64*
  %tag.6900 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.6901 = bitcast i64* %new_node_ptr.6899 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.6901, align 1
  %idr_Prelude.Strings.trim10_val_683.6902 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.6903 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6904 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6903 to i64
  %new_node_ptr.6905 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6904 monotonic
  %new_node_ptr.6906 = inttoptr i64 %new_node_ptr.6905 to i64*
  %tag.6907 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_683.6902, 0
  %ptr_CGrString.6908 = bitcast i64* %new_node_ptr.6906 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_683.6902, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6908, align 1
  %idr_Prelude.Strings.trim10_val_682.6909 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6906)
  %alloc_bytes.6910 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6911 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6910 to i64
  %new_node_ptr.6912 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6911 monotonic
  %new_node_ptr.6913 = inttoptr i64 %new_node_ptr.6912 to i64*
  %tag.6914 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_682.6909, 0
  %ptr_CGrString.6915 = bitcast i64* %new_node_ptr.6913 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_682.6909, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6915, align 1
  %idr_Prelude.Strings.trim10_val_681.6916 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6913)
  %alloc_bytes.6917 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6918 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6917 to i64
  %new_node_ptr.6919 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6918 monotonic
  %new_node_ptr.6920 = inttoptr i64 %new_node_ptr.6919 to i64*
  %tag.6921 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_681.6916, 0
  %ptr_CGrString.6922 = bitcast i64* %new_node_ptr.6920 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_681.6916, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6922, align 1
  %idr_Prelude.Strings.trim10_val_680.6923 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6920)
  %alloc_bytes.6924 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6925 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6924 to i64
  %new_node_ptr.6926 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6925 monotonic
  %new_node_ptr.6927 = inttoptr i64 %new_node_ptr.6926 to i64*
  %tag.6928 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_680.6923, 0
  %ptr_CGrString.6929 = bitcast i64* %new_node_ptr.6927 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_680.6923, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6929, align 1
  %idr_Prelude.Strings.trim10_val_679.6930 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.6927)
  %alloc_bytes.6931 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6932 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6931 to i64
  %new_node_ptr.6933 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6932 monotonic
  %new_node_ptr.6934 = inttoptr i64 %new_node_ptr.6933 to i64*
  %tag.6935 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_679.6930, 0
  %ptr_CGrString.6936 = bitcast i64* %new_node_ptr.6934 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_679.6930, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6936, align 1
  %node_CGrString.6937 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.6938 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.6939 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.6938 to i64
  %new_node_ptr.6940 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6939 monotonic
  %new_node_ptr.6941 = inttoptr i64 %new_node_ptr.6940 to i64*
  %tag.6942 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6937, 0
  %ptr_CGrString.6943 = bitcast i64* %new_node_ptr.6941 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.6937, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.6943, align 1
  %idr_Prelude.Strings.trim10_val_678.6944 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.6934, i64* %new_node_ptr.6941)
  %alloc_bytes.6945 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.6946 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.6945 to i64
  %new_node_ptr.6947 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6946 monotonic
  %new_node_ptr.6948 = inttoptr i64 %new_node_ptr.6947 to i64*
  %tag.6949 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_678.6944, 0
  %ptr_CGrInt.6950 = bitcast i64* %new_node_ptr.6948 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_678.6944, <{ i64, [1 x i64] }>* %ptr_CGrInt.6950, align 1
  %tag.6951 = load i64, i64* %new_node_ptr.6948, align 1
  %ptr_CGrInt.6952 = bitcast i64* %new_node_ptr.6948 to <{ i64, [1 x i64] }>*
  %node_CGrInt.6953 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.6952, align 1
  %tag.6954 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6953, 0
  switch i64 %tag.6954, label %error_block [
    i64 2, label %block.CGrInt.6955
  ]

block.CGrInt.6955:                                ; preds = %block.Cidr_Prelude.Bool.True.6895
  %idr_Prelude.Strings.trim_cpat_LInt64_0_691 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.6953, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_691, label %block.default.6956 [
    i64 0, label %block.int_0.6957
  ]

block.default.6956:                               ; preds = %block.CGrInt.6955
  br label %block.exit.6958

block.int_0.6957:                                 ; preds = %block.CGrInt.6955
  br label %block.exit.6958

block.exit.6958:                                  ; preds = %block.int_0.6957, %block.default.6956
  %result.CGrInt.6959 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.6956 ], [ <{ i64 7 }>, %block.int_0.6957 ]
  br label %block.exit.6960

block.exit.6960:                                  ; preds = %block.exit.6958
  %idr_Prelude.Strings.trim10_val_677.6961 = phi <{ i64 }> [ %result.CGrInt.6959, %block.exit.6958 ]
  %alloc_bytes.6962 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6963 = ptrtoint <{ i64 }>* %alloc_bytes.6962 to i64
  %new_node_ptr.6964 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6963 monotonic
  %new_node_ptr.6965 = inttoptr i64 %new_node_ptr.6964 to i64*
  %tag.6966 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim10_val_677.6961, 0
  switch i64 %tag.6966, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.6967
    i64 7, label %block.Cidr_Prelude.Bool.True.6969
  ]

block.Cidr_Prelude.Bool.False.6967:               ; preds = %block.exit.6960
  %ptr_Cidr_Prelude.Bool.False.6968 = bitcast i64* %new_node_ptr.6965 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_677.6961, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.6968, align 1
  br label %block.exit.6971

block.Cidr_Prelude.Bool.True.6969:                ; preds = %block.exit.6960
  %ptr_Cidr_Prelude.Bool.True.6970 = bitcast i64* %new_node_ptr.6965 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_677.6961, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6970, align 1
  br label %block.exit.6971

block.exit.6971:                                  ; preds = %block.Cidr_Prelude.Bool.True.6969, %block.Cidr_Prelude.Bool.False.6967
  %alloc_bytes.6972 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6973 = ptrtoint <{ i64 }>* %alloc_bytes.6972 to i64
  %new_node_ptr.6974 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6973 monotonic
  %new_node_ptr.6975 = inttoptr i64 %new_node_ptr.6974 to i64*
  %tag.6976 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.6977 = bitcast i64* %new_node_ptr.6975 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.6977, align 1
  %idr_Prelude.Strings.trim10_val_676.6978 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.6965, i64* %new_node_ptr.6975)
  %alloc_bytes.6979 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.6980 = ptrtoint <{ i64 }>* %alloc_bytes.6979 to i64
  %new_node_ptr.6981 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.6980 monotonic
  %new_node_ptr.6982 = inttoptr i64 %new_node_ptr.6981 to i64*
  %tag.6983 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim10_val_676.6978, 0
  switch i64 %tag.6983, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6984
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6986
  ]

block.Cidr_Prelude.Basics.No.6984:                ; preds = %block.exit.6971
  %ptr_Cidr_Prelude.Basics.No.6985 = bitcast i64* %new_node_ptr.6982 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_676.6978, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6985, align 1
  br label %block.exit.6988

block.Cidr_Prelude.Basics.Yes.6986:               ; preds = %block.exit.6971
  %ptr_Cidr_Prelude.Basics.Yes.6987 = bitcast i64* %new_node_ptr.6982 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_676.6978, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6987, align 1
  br label %block.exit.6988

block.exit.6988:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6986, %block.Cidr_Prelude.Basics.No.6984
  %tag.6989 = load i64, i64* %new_node_ptr.6982, align 1
  switch i64 %tag.6989, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6990
    i64 27, label %block.Cidr_Prelude.Basics.Yes.6993
  ]

block.Cidr_Prelude.Basics.No.6990:                ; preds = %block.exit.6988
  %ptr_Cidr_Prelude.Basics.No.6991 = bitcast i64* %new_node_ptr.6982 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.6992 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.6991, align 1
  br label %block.exit.6996

block.Cidr_Prelude.Basics.Yes.6993:               ; preds = %block.exit.6988
  %ptr_Cidr_Prelude.Basics.Yes.6994 = bitcast i64* %new_node_ptr.6982 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.6995 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.6994, align 1
  br label %block.exit.6996

block.exit.6996:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.6993, %block.Cidr_Prelude.Basics.No.6990
  %idr_Prelude.Strings.trim10_val_696.6997 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.6992, %block.Cidr_Prelude.Basics.No.6990 ], [ %node_Cidr_Prelude.Basics.Yes.6995, %block.Cidr_Prelude.Basics.Yes.6993 ]
  %tag.6998 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim10_val_696.6997, 0
  switch i64 %tag.6998, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.6999
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7000
  ]

block.Cidr_Prelude.Basics.No.6999:                ; preds = %block.exit.6996
  %src.7088 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.7089 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.7088, 0
  br label %block.exit.7087

block.Cidr_Prelude.Basics.Yes.7000:               ; preds = %block.exit.6996
  %idr_Prelude.Strings.trim11_val_702.7001 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7002 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7003 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7002 to i64
  %new_node_ptr.7004 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7003 monotonic
  %new_node_ptr.7005 = inttoptr i64 %new_node_ptr.7004 to i64*
  %tag.7006 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_702.7001, 0
  %ptr_CGrString.7007 = bitcast i64* %new_node_ptr.7005 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_702.7001, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7007, align 1
  %idr_Prelude.Strings.trim11_val_701.7008 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7005)
  %alloc_bytes.7009 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7010 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7009 to i64
  %new_node_ptr.7011 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7010 monotonic
  %new_node_ptr.7012 = inttoptr i64 %new_node_ptr.7011 to i64*
  %tag.7013 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_701.7008, 0
  %ptr_CGrString.7014 = bitcast i64* %new_node_ptr.7012 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_701.7008, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7014, align 1
  %idr_Prelude.Strings.trim11_val_700.7015 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7012)
  %alloc_bytes.7016 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7017 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7016 to i64
  %new_node_ptr.7018 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7017 monotonic
  %new_node_ptr.7019 = inttoptr i64 %new_node_ptr.7018 to i64*
  %tag.7020 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_700.7015, 0
  %ptr_CGrString.7021 = bitcast i64* %new_node_ptr.7019 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_700.7015, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7021, align 1
  %idr_Prelude.Strings.trim11_val_699.7022 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7019)
  %alloc_bytes.7023 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7024 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7023 to i64
  %new_node_ptr.7025 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7024 monotonic
  %new_node_ptr.7026 = inttoptr i64 %new_node_ptr.7025 to i64*
  %tag.7027 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_699.7022, 0
  %ptr_CGrString.7028 = bitcast i64* %new_node_ptr.7026 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_699.7022, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7028, align 1
  %idr_Prelude.Strings.trim11_val_698.7029 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7026)
  %alloc_bytes.7030 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7031 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7030 to i64
  %new_node_ptr.7032 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7031 monotonic
  %new_node_ptr.7033 = inttoptr i64 %new_node_ptr.7032 to i64*
  %tag.7034 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_698.7029, 0
  %ptr_CGrString.7035 = bitcast i64* %new_node_ptr.7033 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_698.7029, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7035, align 1
  %idr_Prelude.Strings.trim11_val_697.7036 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7033)
  %alloc_bytes.7037 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7038 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7037 to i64
  %new_node_ptr.7039 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7038 monotonic
  %new_node_ptr.7040 = inttoptr i64 %new_node_ptr.7039 to i64*
  %tag.7041 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim11_val_697.7036, 0
  %ptr_CGrInt.7042 = bitcast i64* %new_node_ptr.7040 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim11_val_697.7036, <{ i64, [1 x i64] }>* %ptr_CGrInt.7042, align 1
  %idr_Prelude.Strings.trim12_val_713.7043 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7044 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7045 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7044 to i64
  %new_node_ptr.7046 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7045 monotonic
  %new_node_ptr.7047 = inttoptr i64 %new_node_ptr.7046 to i64*
  %tag.7048 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_713.7043, 0
  %ptr_CGrString.7049 = bitcast i64* %new_node_ptr.7047 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_713.7043, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7049, align 1
  %idr_Prelude.Strings.trim12_val_712.7050 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7047)
  %alloc_bytes.7051 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7052 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7051 to i64
  %new_node_ptr.7053 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7052 monotonic
  %new_node_ptr.7054 = inttoptr i64 %new_node_ptr.7053 to i64*
  %tag.7055 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_712.7050, 0
  %ptr_CGrString.7056 = bitcast i64* %new_node_ptr.7054 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_712.7050, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7056, align 1
  %idr_Prelude.Strings.trim12_val_711.7057 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7054)
  %alloc_bytes.7058 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7059 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7058 to i64
  %new_node_ptr.7060 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7059 monotonic
  %new_node_ptr.7061 = inttoptr i64 %new_node_ptr.7060 to i64*
  %tag.7062 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_711.7057, 0
  %ptr_CGrString.7063 = bitcast i64* %new_node_ptr.7061 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_711.7057, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7063, align 1
  %idr_Prelude.Strings.trim12_val_710.7064 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7061)
  %alloc_bytes.7065 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7066 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7065 to i64
  %new_node_ptr.7067 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7066 monotonic
  %new_node_ptr.7068 = inttoptr i64 %new_node_ptr.7067 to i64*
  %tag.7069 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_710.7064, 0
  %ptr_CGrString.7070 = bitcast i64* %new_node_ptr.7068 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_710.7064, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7070, align 1
  %idr_Prelude.Strings.trim12_val_709.7071 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7068)
  %alloc_bytes.7072 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7073 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7072 to i64
  %new_node_ptr.7074 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7073 monotonic
  %new_node_ptr.7075 = inttoptr i64 %new_node_ptr.7074 to i64*
  %tag.7076 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_709.7071, 0
  %ptr_CGrString.7077 = bitcast i64* %new_node_ptr.7075 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_709.7071, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7077, align 1
  %idr_Prelude.Strings.trim12_val.7078 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7075)
  %alloc_bytes.7079 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7080 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7079 to i64
  %new_node_ptr.7081 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7080 monotonic
  %new_node_ptr.7082 = inttoptr i64 %new_node_ptr.7081 to i64*
  %tag.7083 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val.7078, 0
  %ptr_CGrString.7084 = bitcast i64* %new_node_ptr.7082 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val.7078, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7084, align 1
  %node_Cidr_Prelude.Strings.StrCons.7085 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.7040, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.7086 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.7085, i64* %new_node_ptr.7082, 1, 1
  br label %block.exit.7087

block.exit.7087:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7000, %block.Cidr_Prelude.Basics.No.6999
  %idr_Prelude.Strings.trim10_val_675.7090 = phi <{ i64, [2 x i64*] }> [ %dst.7089, %block.Cidr_Prelude.Basics.No.6999 ], [ %node_Cidr_Prelude.Strings.StrCons.7086, %block.Cidr_Prelude.Basics.Yes.7000 ]
  %alloc_bytes.7091 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.7092 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.7091 to i64
  %new_node_ptr.7093 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7092 monotonic
  %new_node_ptr.7094 = inttoptr i64 %new_node_ptr.7093 to i64*
  %tag.7095 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim10_val_675.7090, 0
  switch i64 %tag.7095, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.7096
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.7098
  ]

block.Cidr_Prelude.Strings.StrCons.7096:          ; preds = %block.exit.7087
  %ptr_Cidr_Prelude.Strings.StrCons.7097 = bitcast i64* %new_node_ptr.7094 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim10_val_675.7090, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.7097, align 1
  br label %block.exit.7102

block.Cidr_Prelude.Strings.StrNil.7098:           ; preds = %block.exit.7087
  %src.7099 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim10_val_675.7090, 0
  %dst.7100 = insertvalue <{ i64 }> undef, i64 %src.7099, 0
  %ptr_Cidr_Prelude.Strings.StrNil.7101 = bitcast i64* %new_node_ptr.7094 to <{ i64 }>*
  store <{ i64 }> %dst.7100, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.7101, align 1
  br label %block.exit.7102

block.exit.7102:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.7098, %block.Cidr_Prelude.Strings.StrCons.7096
  %result.Cidr_Prelude.Bool.True.7103 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.6899, i64* %new_node_ptr.7094)
  br label %block.exit.7104

block.exit.7104:                                  ; preds = %block.exit.7102, %block.Cidr_Prelude.Bool.False.6823
  %result.Cidr_Prelude.Basics.Yes.7105 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.6894, %block.Cidr_Prelude.Bool.False.6823 ], [ %result.Cidr_Prelude.Bool.True.7103, %block.exit.7102 ]
  br label %block.exit.7106

block.exit.7106:                                  ; preds = %block.exit.7104, %block.Cidr_Prelude.Basics.No.6764
  %result.Cidr_Prelude.Bool.True.7107 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.6765, %block.Cidr_Prelude.Basics.No.6764 ], [ %result.Cidr_Prelude.Basics.Yes.7105, %block.exit.7104 ]
  br label %block.exit.7108

block.exit.7108:                                  ; preds = %block.exit.7106, %block.Cidr_Prelude.Bool.False.6615
  %result.Cidr_Prelude.Basics.Yes.7109 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.6672, %block.Cidr_Prelude.Bool.False.6615 ], [ %result.Cidr_Prelude.Bool.True.7107, %block.exit.7106 ]
  br label %block.exit.7110

block.exit.7110:                                  ; preds = %block.exit.7108, %block.Cidr_Prelude.Basics.No.6563
  %result.Cidr_Prelude.Bool.True.7111 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.6564, %block.Cidr_Prelude.Basics.No.6563 ], [ %result.Cidr_Prelude.Basics.Yes.7109, %block.exit.7108 ]
  br label %block.exit.7112

block.exit.7112:                                  ; preds = %block.exit.7110, %block.Cidr_Prelude.Bool.False.6435
  %result.Cidr_Prelude.Basics.Yes.7113 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.6478, %block.Cidr_Prelude.Bool.False.6435 ], [ %result.Cidr_Prelude.Bool.True.7111, %block.exit.7110 ]
  br label %block.exit.7114

block.exit.7114:                                  ; preds = %block.exit.7112, %block.Cidr_Prelude.Basics.No.6390
  %result.Cidr_Prelude.Bool.True.7115 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.6391, %block.Cidr_Prelude.Basics.No.6390 ], [ %result.Cidr_Prelude.Basics.Yes.7113, %block.exit.7112 ]
  br label %block.exit.7116

block.exit.7116:                                  ; preds = %block.exit.7114, %block.Cidr_Prelude.Bool.False.6283
  %result.Cidr_Prelude.Basics.Yes.7117 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.6312, %block.Cidr_Prelude.Bool.False.6283 ], [ %result.Cidr_Prelude.Bool.True.7115, %block.exit.7114 ]
  br label %block.exit.7118

block.exit.7118:                                  ; preds = %block.exit.7116, %block.Cidr_Prelude.Basics.No.6245
  %idr_Prelude.Strings.trim1_val_524.7119 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.6246, %block.Cidr_Prelude.Basics.No.6245 ], [ %result.Cidr_Prelude.Basics.Yes.7117, %block.exit.7116 ]
  %alloc_bytes.7120 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7121 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7120 to i64
  %new_node_ptr.7122 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7121 monotonic
  %new_node_ptr.7123 = inttoptr i64 %new_node_ptr.7122 to i64*
  %tag.7124 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim1_val_524.7119, 0
  %ptr_CGrString.7125 = bitcast i64* %new_node_ptr.7123 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim1_val_524.7119, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7125, align 1
  %idr_Prelude.Strings.trim1_val_523.7126 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %new_node_ptr.7123)
  %alloc_bytes.7127 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7128 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7127 to i64
  %new_node_ptr.7129 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7128 monotonic
  %new_node_ptr.7130 = inttoptr i64 %new_node_ptr.7129 to i64*
  %tag.7131 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim1_val_523.7126, 0
  %ptr_CGrString.7132 = bitcast i64* %new_node_ptr.7130 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim1_val_523.7126, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7132, align 1
  %node_CGrString.7133 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.7134 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7135 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7134 to i64
  %new_node_ptr.7136 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7135 monotonic
  %new_node_ptr.7137 = inttoptr i64 %new_node_ptr.7136 to i64*
  %tag.7138 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7133, 0
  %ptr_CGrString.7139 = bitcast i64* %new_node_ptr.7137 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7133, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7139, align 1
  %idr_Prelude.Strings.trim1_val_522.7140 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.7130, i64* %new_node_ptr.7137)
  %alloc_bytes.7141 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7142 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7141 to i64
  %new_node_ptr.7143 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7142 monotonic
  %new_node_ptr.7144 = inttoptr i64 %new_node_ptr.7143 to i64*
  %tag.7145 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim1_val_522.7140, 0
  %ptr_CGrInt.7146 = bitcast i64* %new_node_ptr.7144 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim1_val_522.7140, <{ i64, [1 x i64] }>* %ptr_CGrInt.7146, align 1
  %tag.7147 = load i64, i64* %new_node_ptr.7144, align 1
  %ptr_CGrInt.7148 = bitcast i64* %new_node_ptr.7144 to <{ i64, [1 x i64] }>*
  %node_CGrInt.7149 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.7148, align 1
  %tag.7150 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7149, 0
  switch i64 %tag.7150, label %error_block [
    i64 2, label %block.CGrInt.7151
  ]

block.CGrInt.7151:                                ; preds = %block.exit.7118
  %idr_Prelude.Strings.trim_cpat_LInt64_0_726 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7149, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_726, label %block.default.7152 [
    i64 0, label %block.int_0.7153
  ]

block.default.7152:                               ; preds = %block.CGrInt.7151
  br label %block.exit.7154

block.int_0.7153:                                 ; preds = %block.CGrInt.7151
  br label %block.exit.7154

block.exit.7154:                                  ; preds = %block.int_0.7153, %block.default.7152
  %result.CGrInt.7155 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.7152 ], [ <{ i64 7 }>, %block.int_0.7153 ]
  br label %block.exit.7156

block.exit.7156:                                  ; preds = %block.exit.7154
  %idr_Prelude.Strings.trim1_val_521.7157 = phi <{ i64 }> [ %result.CGrInt.7155, %block.exit.7154 ]
  %alloc_bytes.7158 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7159 = ptrtoint <{ i64 }>* %alloc_bytes.7158 to i64
  %new_node_ptr.7160 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7159 monotonic
  %new_node_ptr.7161 = inttoptr i64 %new_node_ptr.7160 to i64*
  %tag.7162 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim1_val_521.7157, 0
  switch i64 %tag.7162, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7163
    i64 7, label %block.Cidr_Prelude.Bool.True.7165
  ]

block.Cidr_Prelude.Bool.False.7163:               ; preds = %block.exit.7156
  %ptr_Cidr_Prelude.Bool.False.7164 = bitcast i64* %new_node_ptr.7161 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val_521.7157, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7164, align 1
  br label %block.exit.7167

block.Cidr_Prelude.Bool.True.7165:                ; preds = %block.exit.7156
  %ptr_Cidr_Prelude.Bool.True.7166 = bitcast i64* %new_node_ptr.7161 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val_521.7157, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7166, align 1
  br label %block.exit.7167

block.exit.7167:                                  ; preds = %block.Cidr_Prelude.Bool.True.7165, %block.Cidr_Prelude.Bool.False.7163
  %alloc_bytes.7168 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7169 = ptrtoint <{ i64 }>* %alloc_bytes.7168 to i64
  %new_node_ptr.7170 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7169 monotonic
  %new_node_ptr.7171 = inttoptr i64 %new_node_ptr.7170 to i64*
  %tag.7172 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.7173 = bitcast i64* %new_node_ptr.7171 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7173, align 1
  %idr_Prelude.Strings.trim1_val.7174 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.7161, i64* %new_node_ptr.7171)
  %alloc_bytes.7175 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7176 = ptrtoint <{ i64 }>* %alloc_bytes.7175 to i64
  %new_node_ptr.7177 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7176 monotonic
  %new_node_ptr.7178 = inttoptr i64 %new_node_ptr.7177 to i64*
  %tag.7179 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim1_val.7174, 0
  switch i64 %tag.7179, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7180
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7182
  ]

block.Cidr_Prelude.Basics.No.7180:                ; preds = %block.exit.7167
  %ptr_Cidr_Prelude.Basics.No.7181 = bitcast i64* %new_node_ptr.7178 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val.7174, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7181, align 1
  br label %block.exit.7184

block.Cidr_Prelude.Basics.Yes.7182:               ; preds = %block.exit.7167
  %ptr_Cidr_Prelude.Basics.Yes.7183 = bitcast i64* %new_node_ptr.7178 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim1_val.7174, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7183, align 1
  br label %block.exit.7184

block.exit.7184:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7182, %block.Cidr_Prelude.Basics.No.7180
  %tag.7185 = load i64, i64* %new_node_ptr.7178, align 1
  switch i64 %tag.7185, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7186
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7189
  ]

block.Cidr_Prelude.Basics.No.7186:                ; preds = %block.exit.7184
  %ptr_Cidr_Prelude.Basics.No.7187 = bitcast i64* %new_node_ptr.7178 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.7188 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7187, align 1
  br label %block.exit.7192

block.Cidr_Prelude.Basics.Yes.7189:               ; preds = %block.exit.7184
  %ptr_Cidr_Prelude.Basics.Yes.7190 = bitcast i64* %new_node_ptr.7178 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.7191 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7190, align 1
  br label %block.exit.7192

block.exit.7192:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7189, %block.Cidr_Prelude.Basics.No.7186
  %idr_Prelude.Strings.trim1_val_731.7193 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.7188, %block.Cidr_Prelude.Basics.No.7186 ], [ %node_Cidr_Prelude.Basics.Yes.7191, %block.Cidr_Prelude.Basics.Yes.7189 ]
  %tag.7194 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim1_val_731.7193, 0
  switch i64 %tag.7194, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7195
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7197
  ]

block.Cidr_Prelude.Basics.No.7195:                ; preds = %block.exit.7192
  %node_CGrString.7196 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.10315

block.Cidr_Prelude.Basics.Yes.7197:               ; preds = %block.exit.7192
  %idr_Prelude.Strings.trim2_val_739.7198 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7199 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7200 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7199 to i64
  %new_node_ptr.7201 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7200 monotonic
  %new_node_ptr.7202 = inttoptr i64 %new_node_ptr.7201 to i64*
  %tag.7203 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_739.7198, 0
  %ptr_CGrString.7204 = bitcast i64* %new_node_ptr.7202 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_739.7198, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7204, align 1
  %node_CGrString.7205 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.7206 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7207 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7206 to i64
  %new_node_ptr.7208 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7207 monotonic
  %new_node_ptr.7209 = inttoptr i64 %new_node_ptr.7208 to i64*
  %tag.7210 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7205, 0
  %ptr_CGrString.7211 = bitcast i64* %new_node_ptr.7209 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7205, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7211, align 1
  %idr_Prelude.Strings.trim2_val_738.7212 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.7202, i64* %new_node_ptr.7209)
  %alloc_bytes.7213 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7214 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7213 to i64
  %new_node_ptr.7215 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7214 monotonic
  %new_node_ptr.7216 = inttoptr i64 %new_node_ptr.7215 to i64*
  %tag.7217 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim2_val_738.7212, 0
  %ptr_CGrInt.7218 = bitcast i64* %new_node_ptr.7216 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim2_val_738.7212, <{ i64, [1 x i64] }>* %ptr_CGrInt.7218, align 1
  %tag.7219 = load i64, i64* %new_node_ptr.7216, align 1
  %ptr_CGrInt.7220 = bitcast i64* %new_node_ptr.7216 to <{ i64, [1 x i64] }>*
  %node_CGrInt.7221 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.7220, align 1
  %tag.7222 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7221, 0
  switch i64 %tag.7222, label %error_block [
    i64 2, label %block.CGrInt.7223
  ]

block.CGrInt.7223:                                ; preds = %block.Cidr_Prelude.Basics.Yes.7197
  %idr_Prelude.Strings.trim_cpat_LInt64_0_745 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7221, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_745, label %block.default.7224 [
    i64 0, label %block.int_0.7225
  ]

block.default.7224:                               ; preds = %block.CGrInt.7223
  br label %block.exit.7226

block.int_0.7225:                                 ; preds = %block.CGrInt.7223
  br label %block.exit.7226

block.exit.7226:                                  ; preds = %block.int_0.7225, %block.default.7224
  %result.CGrInt.7227 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.7224 ], [ <{ i64 7 }>, %block.int_0.7225 ]
  br label %block.exit.7228

block.exit.7228:                                  ; preds = %block.exit.7226
  %idr_Prelude.Strings.trim2_val_737.7229 = phi <{ i64 }> [ %result.CGrInt.7227, %block.exit.7226 ]
  %alloc_bytes.7230 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7231 = ptrtoint <{ i64 }>* %alloc_bytes.7230 to i64
  %new_node_ptr.7232 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7231 monotonic
  %new_node_ptr.7233 = inttoptr i64 %new_node_ptr.7232 to i64*
  %tag.7234 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim2_val_737.7229, 0
  switch i64 %tag.7234, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7235
    i64 7, label %block.Cidr_Prelude.Bool.True.7237
  ]

block.Cidr_Prelude.Bool.False.7235:               ; preds = %block.exit.7228
  %ptr_Cidr_Prelude.Bool.False.7236 = bitcast i64* %new_node_ptr.7233 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_737.7229, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7236, align 1
  br label %block.exit.7239

block.Cidr_Prelude.Bool.True.7237:                ; preds = %block.exit.7228
  %ptr_Cidr_Prelude.Bool.True.7238 = bitcast i64* %new_node_ptr.7233 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_737.7229, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7238, align 1
  br label %block.exit.7239

block.exit.7239:                                  ; preds = %block.Cidr_Prelude.Bool.True.7237, %block.Cidr_Prelude.Bool.False.7235
  %alloc_bytes.7240 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7241 = ptrtoint <{ i64 }>* %alloc_bytes.7240 to i64
  %new_node_ptr.7242 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7241 monotonic
  %new_node_ptr.7243 = inttoptr i64 %new_node_ptr.7242 to i64*
  %tag.7244 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.7245 = bitcast i64* %new_node_ptr.7243 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7245, align 1
  %idr_Prelude.Strings.trim2_val_736.7246 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.7233, i64* %new_node_ptr.7243)
  %alloc_bytes.7247 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7248 = ptrtoint <{ i64 }>* %alloc_bytes.7247 to i64
  %new_node_ptr.7249 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7248 monotonic
  %new_node_ptr.7250 = inttoptr i64 %new_node_ptr.7249 to i64*
  %tag.7251 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim2_val_736.7246, 0
  switch i64 %tag.7251, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7252
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7254
  ]

block.Cidr_Prelude.Basics.No.7252:                ; preds = %block.exit.7239
  %ptr_Cidr_Prelude.Basics.No.7253 = bitcast i64* %new_node_ptr.7250 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_736.7246, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7253, align 1
  br label %block.exit.7256

block.Cidr_Prelude.Basics.Yes.7254:               ; preds = %block.exit.7239
  %ptr_Cidr_Prelude.Basics.Yes.7255 = bitcast i64* %new_node_ptr.7250 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_736.7246, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7255, align 1
  br label %block.exit.7256

block.exit.7256:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7254, %block.Cidr_Prelude.Basics.No.7252
  %tag.7257 = load i64, i64* %new_node_ptr.7250, align 1
  switch i64 %tag.7257, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7258
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7261
  ]

block.Cidr_Prelude.Basics.No.7258:                ; preds = %block.exit.7256
  %ptr_Cidr_Prelude.Basics.No.7259 = bitcast i64* %new_node_ptr.7250 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.7260 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7259, align 1
  br label %block.exit.7264

block.Cidr_Prelude.Basics.Yes.7261:               ; preds = %block.exit.7256
  %ptr_Cidr_Prelude.Basics.Yes.7262 = bitcast i64* %new_node_ptr.7250 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.7263 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7262, align 1
  br label %block.exit.7264

block.exit.7264:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7261, %block.Cidr_Prelude.Basics.No.7258
  %idr_Prelude.Strings.trim2_val_750.7265 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.7260, %block.Cidr_Prelude.Basics.No.7258 ], [ %node_Cidr_Prelude.Basics.Yes.7263, %block.Cidr_Prelude.Basics.Yes.7261 ]
  %tag.7266 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim2_val_750.7265, 0
  switch i64 %tag.7266, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7267
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7269
  ]

block.Cidr_Prelude.Basics.No.7267:                ; preds = %block.exit.7264
  %node_CGrString.7268 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.7674

block.Cidr_Prelude.Basics.Yes.7269:               ; preds = %block.exit.7264
  %idr_Prelude.Strings.trim3_val_753.7270 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7271 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7272 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7271 to i64
  %new_node_ptr.7273 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7272 monotonic
  %new_node_ptr.7274 = inttoptr i64 %new_node_ptr.7273 to i64*
  %tag.7275 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_753.7270, 0
  %ptr_CGrString.7276 = bitcast i64* %new_node_ptr.7274 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_753.7270, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7276, align 1
  %idr_Prelude.Strings.trim3_val_752.7277 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7274)
  %alloc_bytes.7278 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7279 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7278 to i64
  %new_node_ptr.7280 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7279 monotonic
  %new_node_ptr.7281 = inttoptr i64 %new_node_ptr.7280 to i64*
  %tag.7282 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_752.7277, 0
  %ptr_CGrInt.7283 = bitcast i64* %new_node_ptr.7281 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_752.7277, <{ i64, [1 x i64] }>* %ptr_CGrInt.7283, align 1
  %idr_Prelude.Strings.trim3_val_751.7284 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.7281)
  %alloc_bytes.7285 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7286 = ptrtoint <{ i64 }>* %alloc_bytes.7285 to i64
  %new_node_ptr.7287 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7286 monotonic
  %new_node_ptr.7288 = inttoptr i64 %new_node_ptr.7287 to i64*
  %tag.7289 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_751.7284, 0
  switch i64 %tag.7289, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7290
    i64 7, label %block.Cidr_Prelude.Bool.True.7292
  ]

block.Cidr_Prelude.Bool.False.7290:               ; preds = %block.Cidr_Prelude.Basics.Yes.7269
  %ptr_Cidr_Prelude.Bool.False.7291 = bitcast i64* %new_node_ptr.7288 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_751.7284, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7291, align 1
  br label %block.exit.7294

block.Cidr_Prelude.Bool.True.7292:                ; preds = %block.Cidr_Prelude.Basics.Yes.7269
  %ptr_Cidr_Prelude.Bool.True.7293 = bitcast i64* %new_node_ptr.7288 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_751.7284, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7293, align 1
  br label %block.exit.7294

block.exit.7294:                                  ; preds = %block.Cidr_Prelude.Bool.True.7292, %block.Cidr_Prelude.Bool.False.7290
  %tag.7295 = load i64, i64* %new_node_ptr.7288, align 1
  switch i64 %tag.7295, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7296
    i64 7, label %block.Cidr_Prelude.Bool.True.7299
  ]

block.Cidr_Prelude.Bool.False.7296:               ; preds = %block.exit.7294
  %ptr_Cidr_Prelude.Bool.False.7297 = bitcast i64* %new_node_ptr.7288 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.7298 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7297, align 1
  br label %block.exit.7302

block.Cidr_Prelude.Bool.True.7299:                ; preds = %block.exit.7294
  %ptr_Cidr_Prelude.Bool.True.7300 = bitcast i64* %new_node_ptr.7288 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.7301 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7300, align 1
  br label %block.exit.7302

block.exit.7302:                                  ; preds = %block.Cidr_Prelude.Bool.True.7299, %block.Cidr_Prelude.Bool.False.7296
  %idr_Prelude.Strings.trim3_val_757.7303 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.7298, %block.Cidr_Prelude.Bool.False.7296 ], [ %node_Cidr_Prelude.Bool.True.7301, %block.Cidr_Prelude.Bool.True.7299 ]
  %tag.7304 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_757.7303, 0
  switch i64 %tag.7304, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7305
    i64 7, label %block.Cidr_Prelude.Bool.True.7335
  ]

block.Cidr_Prelude.Bool.False.7305:               ; preds = %block.exit.7302
  %idr_Prelude.Strings.trim4_val_759.7306 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7307 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7308 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7307 to i64
  %new_node_ptr.7309 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7308 monotonic
  %new_node_ptr.7310 = inttoptr i64 %new_node_ptr.7309 to i64*
  %tag.7311 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_759.7306, 0
  %ptr_CGrString.7312 = bitcast i64* %new_node_ptr.7310 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_759.7306, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7312, align 1
  %idr_Prelude.Strings.trim4_val_758.7313 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7310)
  %alloc_bytes.7314 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7315 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7314 to i64
  %new_node_ptr.7316 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7315 monotonic
  %new_node_ptr.7317 = inttoptr i64 %new_node_ptr.7316 to i64*
  %tag.7318 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_758.7313, 0
  %ptr_CGrInt.7319 = bitcast i64* %new_node_ptr.7317 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_758.7313, <{ i64, [1 x i64] }>* %ptr_CGrInt.7319, align 1
  %idr_Prelude.Strings.trim5_val_763.7320 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7321 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7322 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7321 to i64
  %new_node_ptr.7323 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7322 monotonic
  %new_node_ptr.7324 = inttoptr i64 %new_node_ptr.7323 to i64*
  %tag.7325 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_763.7320, 0
  %ptr_CGrString.7326 = bitcast i64* %new_node_ptr.7324 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_763.7320, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7326, align 1
  %idr_Prelude.Strings.trim5_val_762.7327 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7324)
  %alloc_bytes.7328 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7329 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7328 to i64
  %new_node_ptr.7330 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7329 monotonic
  %new_node_ptr.7331 = inttoptr i64 %new_node_ptr.7330 to i64*
  %tag.7332 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_762.7327, 0
  %ptr_CGrString.7333 = bitcast i64* %new_node_ptr.7331 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_762.7327, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7333, align 1
  %result.Cidr_Prelude.Bool.False.7334 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.7317, i64* %new_node_ptr.7331)
  br label %block.exit.7672

block.Cidr_Prelude.Bool.True.7335:                ; preds = %block.exit.7302
  %idr_Prelude.Strings.trim4_val_770.7336 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7337 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7338 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7337 to i64
  %new_node_ptr.7339 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7338 monotonic
  %new_node_ptr.7340 = inttoptr i64 %new_node_ptr.7339 to i64*
  %tag.7341 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_770.7336, 0
  %ptr_CGrString.7342 = bitcast i64* %new_node_ptr.7340 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_770.7336, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7342, align 1
  %idr_Prelude.Strings.trim4_val_769.7343 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7340)
  %alloc_bytes.7344 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7345 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7344 to i64
  %new_node_ptr.7346 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7345 monotonic
  %new_node_ptr.7347 = inttoptr i64 %new_node_ptr.7346 to i64*
  %tag.7348 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_769.7343, 0
  %ptr_CGrString.7349 = bitcast i64* %new_node_ptr.7347 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_769.7343, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7349, align 1
  %node_CGrString.7350 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.7351 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7352 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7351 to i64
  %new_node_ptr.7353 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7352 monotonic
  %new_node_ptr.7354 = inttoptr i64 %new_node_ptr.7353 to i64*
  %tag.7355 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7350, 0
  %ptr_CGrString.7356 = bitcast i64* %new_node_ptr.7354 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7350, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7356, align 1
  %idr_Prelude.Strings.trim4_val_768.7357 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.7347, i64* %new_node_ptr.7354)
  %alloc_bytes.7358 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7359 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7358 to i64
  %new_node_ptr.7360 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7359 monotonic
  %new_node_ptr.7361 = inttoptr i64 %new_node_ptr.7360 to i64*
  %tag.7362 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_768.7357, 0
  %ptr_CGrInt.7363 = bitcast i64* %new_node_ptr.7361 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_768.7357, <{ i64, [1 x i64] }>* %ptr_CGrInt.7363, align 1
  %tag.7364 = load i64, i64* %new_node_ptr.7361, align 1
  %ptr_CGrInt.7365 = bitcast i64* %new_node_ptr.7361 to <{ i64, [1 x i64] }>*
  %node_CGrInt.7366 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.7365, align 1
  %tag.7367 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7366, 0
  switch i64 %tag.7367, label %error_block [
    i64 2, label %block.CGrInt.7368
  ]

block.CGrInt.7368:                                ; preds = %block.Cidr_Prelude.Bool.True.7335
  %idr_Prelude.Strings.trim_cpat_LInt64_0_777 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7366, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_777, label %block.default.7369 [
    i64 0, label %block.int_0.7370
  ]

block.default.7369:                               ; preds = %block.CGrInt.7368
  br label %block.exit.7371

block.int_0.7370:                                 ; preds = %block.CGrInt.7368
  br label %block.exit.7371

block.exit.7371:                                  ; preds = %block.int_0.7370, %block.default.7369
  %result.CGrInt.7372 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.7369 ], [ <{ i64 7 }>, %block.int_0.7370 ]
  br label %block.exit.7373

block.exit.7373:                                  ; preds = %block.exit.7371
  %idr_Prelude.Strings.trim4_val_767.7374 = phi <{ i64 }> [ %result.CGrInt.7372, %block.exit.7371 ]
  %alloc_bytes.7375 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7376 = ptrtoint <{ i64 }>* %alloc_bytes.7375 to i64
  %new_node_ptr.7377 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7376 monotonic
  %new_node_ptr.7378 = inttoptr i64 %new_node_ptr.7377 to i64*
  %tag.7379 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_767.7374, 0
  switch i64 %tag.7379, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7380
    i64 7, label %block.Cidr_Prelude.Bool.True.7382
  ]

block.Cidr_Prelude.Bool.False.7380:               ; preds = %block.exit.7373
  %ptr_Cidr_Prelude.Bool.False.7381 = bitcast i64* %new_node_ptr.7378 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_767.7374, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7381, align 1
  br label %block.exit.7384

block.Cidr_Prelude.Bool.True.7382:                ; preds = %block.exit.7373
  %ptr_Cidr_Prelude.Bool.True.7383 = bitcast i64* %new_node_ptr.7378 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_767.7374, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7383, align 1
  br label %block.exit.7384

block.exit.7384:                                  ; preds = %block.Cidr_Prelude.Bool.True.7382, %block.Cidr_Prelude.Bool.False.7380
  %alloc_bytes.7385 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7386 = ptrtoint <{ i64 }>* %alloc_bytes.7385 to i64
  %new_node_ptr.7387 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7386 monotonic
  %new_node_ptr.7388 = inttoptr i64 %new_node_ptr.7387 to i64*
  %tag.7389 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.7390 = bitcast i64* %new_node_ptr.7388 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7390, align 1
  %idr_Prelude.Strings.trim4_val_766.7391 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.7378, i64* %new_node_ptr.7388)
  %alloc_bytes.7392 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7393 = ptrtoint <{ i64 }>* %alloc_bytes.7392 to i64
  %new_node_ptr.7394 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7393 monotonic
  %new_node_ptr.7395 = inttoptr i64 %new_node_ptr.7394 to i64*
  %tag.7396 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_766.7391, 0
  switch i64 %tag.7396, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7397
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7399
  ]

block.Cidr_Prelude.Basics.No.7397:                ; preds = %block.exit.7384
  %ptr_Cidr_Prelude.Basics.No.7398 = bitcast i64* %new_node_ptr.7395 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_766.7391, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7398, align 1
  br label %block.exit.7401

block.Cidr_Prelude.Basics.Yes.7399:               ; preds = %block.exit.7384
  %ptr_Cidr_Prelude.Basics.Yes.7400 = bitcast i64* %new_node_ptr.7395 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_766.7391, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7400, align 1
  br label %block.exit.7401

block.exit.7401:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7399, %block.Cidr_Prelude.Basics.No.7397
  %tag.7402 = load i64, i64* %new_node_ptr.7395, align 1
  switch i64 %tag.7402, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7403
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7406
  ]

block.Cidr_Prelude.Basics.No.7403:                ; preds = %block.exit.7401
  %ptr_Cidr_Prelude.Basics.No.7404 = bitcast i64* %new_node_ptr.7395 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.7405 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7404, align 1
  br label %block.exit.7409

block.Cidr_Prelude.Basics.Yes.7406:               ; preds = %block.exit.7401
  %ptr_Cidr_Prelude.Basics.Yes.7407 = bitcast i64* %new_node_ptr.7395 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.7408 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7407, align 1
  br label %block.exit.7409

block.exit.7409:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7406, %block.Cidr_Prelude.Basics.No.7403
  %idr_Prelude.Strings.trim4_val_782.7410 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.7405, %block.Cidr_Prelude.Basics.No.7403 ], [ %node_Cidr_Prelude.Basics.Yes.7408, %block.Cidr_Prelude.Basics.Yes.7406 ]
  %tag.7411 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_782.7410, 0
  switch i64 %tag.7411, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7412
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7414
  ]

block.Cidr_Prelude.Basics.No.7412:                ; preds = %block.exit.7409
  %node_CGrString.7413 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.7670

block.Cidr_Prelude.Basics.Yes.7414:               ; preds = %block.exit.7409
  %idr_Prelude.Strings.trim5_val_786.7415 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7416 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7417 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7416 to i64
  %new_node_ptr.7418 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7417 monotonic
  %new_node_ptr.7419 = inttoptr i64 %new_node_ptr.7418 to i64*
  %tag.7420 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_786.7415, 0
  %ptr_CGrString.7421 = bitcast i64* %new_node_ptr.7419 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_786.7415, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7421, align 1
  %idr_Prelude.Strings.trim5_val_785.7422 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7419)
  %alloc_bytes.7423 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7424 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7423 to i64
  %new_node_ptr.7425 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7424 monotonic
  %new_node_ptr.7426 = inttoptr i64 %new_node_ptr.7425 to i64*
  %tag.7427 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_785.7422, 0
  %ptr_CGrString.7428 = bitcast i64* %new_node_ptr.7426 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_785.7422, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7428, align 1
  %idr_Prelude.Strings.trim5_val_784.7429 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7426)
  %alloc_bytes.7430 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7431 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7430 to i64
  %new_node_ptr.7432 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7431 monotonic
  %new_node_ptr.7433 = inttoptr i64 %new_node_ptr.7432 to i64*
  %tag.7434 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_784.7429, 0
  %ptr_CGrInt.7435 = bitcast i64* %new_node_ptr.7433 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_784.7429, <{ i64, [1 x i64] }>* %ptr_CGrInt.7435, align 1
  %idr_Prelude.Strings.trim5_val_783.7436 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.7433)
  %alloc_bytes.7437 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7438 = ptrtoint <{ i64 }>* %alloc_bytes.7437 to i64
  %new_node_ptr.7439 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7438 monotonic
  %new_node_ptr.7440 = inttoptr i64 %new_node_ptr.7439 to i64*
  %tag.7441 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_783.7436, 0
  switch i64 %tag.7441, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7442
    i64 7, label %block.Cidr_Prelude.Bool.True.7444
  ]

block.Cidr_Prelude.Bool.False.7442:               ; preds = %block.Cidr_Prelude.Basics.Yes.7414
  %ptr_Cidr_Prelude.Bool.False.7443 = bitcast i64* %new_node_ptr.7440 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_783.7436, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7443, align 1
  br label %block.exit.7446

block.Cidr_Prelude.Bool.True.7444:                ; preds = %block.Cidr_Prelude.Basics.Yes.7414
  %ptr_Cidr_Prelude.Bool.True.7445 = bitcast i64* %new_node_ptr.7440 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_783.7436, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7445, align 1
  br label %block.exit.7446

block.exit.7446:                                  ; preds = %block.Cidr_Prelude.Bool.True.7444, %block.Cidr_Prelude.Bool.False.7442
  %tag.7447 = load i64, i64* %new_node_ptr.7440, align 1
  switch i64 %tag.7447, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7448
    i64 7, label %block.Cidr_Prelude.Bool.True.7451
  ]

block.Cidr_Prelude.Bool.False.7448:               ; preds = %block.exit.7446
  %ptr_Cidr_Prelude.Bool.False.7449 = bitcast i64* %new_node_ptr.7440 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.7450 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7449, align 1
  br label %block.exit.7454

block.Cidr_Prelude.Bool.True.7451:                ; preds = %block.exit.7446
  %ptr_Cidr_Prelude.Bool.True.7452 = bitcast i64* %new_node_ptr.7440 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.7453 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7452, align 1
  br label %block.exit.7454

block.exit.7454:                                  ; preds = %block.Cidr_Prelude.Bool.True.7451, %block.Cidr_Prelude.Bool.False.7448
  %idr_Prelude.Strings.trim5_val_791.7455 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.7450, %block.Cidr_Prelude.Bool.False.7448 ], [ %node_Cidr_Prelude.Bool.True.7453, %block.Cidr_Prelude.Bool.True.7451 ]
  %tag.7456 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_791.7455, 0
  switch i64 %tag.7456, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7457
    i64 7, label %block.Cidr_Prelude.Bool.True.7501
  ]

block.Cidr_Prelude.Bool.False.7457:               ; preds = %block.exit.7454
  %idr_Prelude.Strings.trim6_val_794.7458 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7459 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7460 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7459 to i64
  %new_node_ptr.7461 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7460 monotonic
  %new_node_ptr.7462 = inttoptr i64 %new_node_ptr.7461 to i64*
  %tag.7463 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_794.7458, 0
  %ptr_CGrString.7464 = bitcast i64* %new_node_ptr.7462 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_794.7458, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7464, align 1
  %idr_Prelude.Strings.trim6_val_793.7465 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7462)
  %alloc_bytes.7466 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7467 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7466 to i64
  %new_node_ptr.7468 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7467 monotonic
  %new_node_ptr.7469 = inttoptr i64 %new_node_ptr.7468 to i64*
  %tag.7470 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_793.7465, 0
  %ptr_CGrString.7471 = bitcast i64* %new_node_ptr.7469 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_793.7465, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7471, align 1
  %idr_Prelude.Strings.trim6_val_792.7472 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7469)
  %alloc_bytes.7473 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7474 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7473 to i64
  %new_node_ptr.7475 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7474 monotonic
  %new_node_ptr.7476 = inttoptr i64 %new_node_ptr.7475 to i64*
  %tag.7477 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_792.7472, 0
  %ptr_CGrInt.7478 = bitcast i64* %new_node_ptr.7476 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_792.7472, <{ i64, [1 x i64] }>* %ptr_CGrInt.7478, align 1
  %idr_Prelude.Strings.trim7_val_800.7479 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7480 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7481 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7480 to i64
  %new_node_ptr.7482 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7481 monotonic
  %new_node_ptr.7483 = inttoptr i64 %new_node_ptr.7482 to i64*
  %tag.7484 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_800.7479, 0
  %ptr_CGrString.7485 = bitcast i64* %new_node_ptr.7483 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_800.7479, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7485, align 1
  %idr_Prelude.Strings.trim7_val_799.7486 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7483)
  %alloc_bytes.7487 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7488 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7487 to i64
  %new_node_ptr.7489 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7488 monotonic
  %new_node_ptr.7490 = inttoptr i64 %new_node_ptr.7489 to i64*
  %tag.7491 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_799.7486, 0
  %ptr_CGrString.7492 = bitcast i64* %new_node_ptr.7490 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_799.7486, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7492, align 1
  %idr_Prelude.Strings.trim7_val_798.7493 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7490)
  %alloc_bytes.7494 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7495 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7494 to i64
  %new_node_ptr.7496 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7495 monotonic
  %new_node_ptr.7497 = inttoptr i64 %new_node_ptr.7496 to i64*
  %tag.7498 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_798.7493, 0
  %ptr_CGrString.7499 = bitcast i64* %new_node_ptr.7497 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_798.7493, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7499, align 1
  %result.Cidr_Prelude.Bool.False.7500 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.7476, i64* %new_node_ptr.7497)
  br label %block.exit.7668

block.Cidr_Prelude.Bool.True.7501:                ; preds = %block.exit.7454
  %alloc_bytes.7502 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7503 = ptrtoint <{ i64 }>* %alloc_bytes.7502 to i64
  %new_node_ptr.7504 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7503 monotonic
  %new_node_ptr.7505 = inttoptr i64 %new_node_ptr.7504 to i64*
  %tag.7506 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.7507 = bitcast i64* %new_node_ptr.7505 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.7507, align 1
  %idr_Prelude.Strings.trim7_val_812.7508 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7509 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7510 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7509 to i64
  %new_node_ptr.7511 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7510 monotonic
  %new_node_ptr.7512 = inttoptr i64 %new_node_ptr.7511 to i64*
  %tag.7513 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_812.7508, 0
  %ptr_CGrString.7514 = bitcast i64* %new_node_ptr.7512 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_812.7508, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7514, align 1
  %idr_Prelude.Strings.trim7_val_811.7515 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7512)
  %alloc_bytes.7516 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7517 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7516 to i64
  %new_node_ptr.7518 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7517 monotonic
  %new_node_ptr.7519 = inttoptr i64 %new_node_ptr.7518 to i64*
  %tag.7520 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_811.7515, 0
  %ptr_CGrString.7521 = bitcast i64* %new_node_ptr.7519 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_811.7515, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7521, align 1
  %idr_Prelude.Strings.trim7_val_810.7522 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7519)
  %alloc_bytes.7523 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7524 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7523 to i64
  %new_node_ptr.7525 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7524 monotonic
  %new_node_ptr.7526 = inttoptr i64 %new_node_ptr.7525 to i64*
  %tag.7527 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_810.7522, 0
  %ptr_CGrString.7528 = bitcast i64* %new_node_ptr.7526 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_810.7522, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7528, align 1
  %node_CGrString.7529 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.7530 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7531 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7530 to i64
  %new_node_ptr.7532 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7531 monotonic
  %new_node_ptr.7533 = inttoptr i64 %new_node_ptr.7532 to i64*
  %tag.7534 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7529, 0
  %ptr_CGrString.7535 = bitcast i64* %new_node_ptr.7533 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7529, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7535, align 1
  %idr_Prelude.Strings.trim7_val_809.7536 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.7526, i64* %new_node_ptr.7533)
  %alloc_bytes.7537 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7538 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7537 to i64
  %new_node_ptr.7539 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7538 monotonic
  %new_node_ptr.7540 = inttoptr i64 %new_node_ptr.7539 to i64*
  %tag.7541 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_809.7536, 0
  %ptr_CGrInt.7542 = bitcast i64* %new_node_ptr.7540 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_809.7536, <{ i64, [1 x i64] }>* %ptr_CGrInt.7542, align 1
  %tag.7543 = load i64, i64* %new_node_ptr.7540, align 1
  %ptr_CGrInt.7544 = bitcast i64* %new_node_ptr.7540 to <{ i64, [1 x i64] }>*
  %node_CGrInt.7545 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.7544, align 1
  %tag.7546 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7545, 0
  switch i64 %tag.7546, label %error_block [
    i64 2, label %block.CGrInt.7547
  ]

block.CGrInt.7547:                                ; preds = %block.Cidr_Prelude.Bool.True.7501
  %idr_Prelude.Strings.trim_cpat_LInt64_0_820 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7545, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_820, label %block.default.7548 [
    i64 0, label %block.int_0.7549
  ]

block.default.7548:                               ; preds = %block.CGrInt.7547
  br label %block.exit.7550

block.int_0.7549:                                 ; preds = %block.CGrInt.7547
  br label %block.exit.7550

block.exit.7550:                                  ; preds = %block.int_0.7549, %block.default.7548
  %result.CGrInt.7551 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.7548 ], [ <{ i64 7 }>, %block.int_0.7549 ]
  br label %block.exit.7552

block.exit.7552:                                  ; preds = %block.exit.7550
  %idr_Prelude.Strings.trim7_val_808.7553 = phi <{ i64 }> [ %result.CGrInt.7551, %block.exit.7550 ]
  %alloc_bytes.7554 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7555 = ptrtoint <{ i64 }>* %alloc_bytes.7554 to i64
  %new_node_ptr.7556 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7555 monotonic
  %new_node_ptr.7557 = inttoptr i64 %new_node_ptr.7556 to i64*
  %tag.7558 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_808.7553, 0
  switch i64 %tag.7558, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7559
    i64 7, label %block.Cidr_Prelude.Bool.True.7561
  ]

block.Cidr_Prelude.Bool.False.7559:               ; preds = %block.exit.7552
  %ptr_Cidr_Prelude.Bool.False.7560 = bitcast i64* %new_node_ptr.7557 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_808.7553, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7560, align 1
  br label %block.exit.7563

block.Cidr_Prelude.Bool.True.7561:                ; preds = %block.exit.7552
  %ptr_Cidr_Prelude.Bool.True.7562 = bitcast i64* %new_node_ptr.7557 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_808.7553, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7562, align 1
  br label %block.exit.7563

block.exit.7563:                                  ; preds = %block.Cidr_Prelude.Bool.True.7561, %block.Cidr_Prelude.Bool.False.7559
  %alloc_bytes.7564 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7565 = ptrtoint <{ i64 }>* %alloc_bytes.7564 to i64
  %new_node_ptr.7566 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7565 monotonic
  %new_node_ptr.7567 = inttoptr i64 %new_node_ptr.7566 to i64*
  %tag.7568 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.7569 = bitcast i64* %new_node_ptr.7567 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7569, align 1
  %idr_Prelude.Strings.trim7_val_807.7570 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.7557, i64* %new_node_ptr.7567)
  %alloc_bytes.7571 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7572 = ptrtoint <{ i64 }>* %alloc_bytes.7571 to i64
  %new_node_ptr.7573 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7572 monotonic
  %new_node_ptr.7574 = inttoptr i64 %new_node_ptr.7573 to i64*
  %tag.7575 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_807.7570, 0
  switch i64 %tag.7575, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7576
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7578
  ]

block.Cidr_Prelude.Basics.No.7576:                ; preds = %block.exit.7563
  %ptr_Cidr_Prelude.Basics.No.7577 = bitcast i64* %new_node_ptr.7574 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_807.7570, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7577, align 1
  br label %block.exit.7580

block.Cidr_Prelude.Basics.Yes.7578:               ; preds = %block.exit.7563
  %ptr_Cidr_Prelude.Basics.Yes.7579 = bitcast i64* %new_node_ptr.7574 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_807.7570, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7579, align 1
  br label %block.exit.7580

block.exit.7580:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7578, %block.Cidr_Prelude.Basics.No.7576
  %tag.7581 = load i64, i64* %new_node_ptr.7574, align 1
  switch i64 %tag.7581, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7582
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7585
  ]

block.Cidr_Prelude.Basics.No.7582:                ; preds = %block.exit.7580
  %ptr_Cidr_Prelude.Basics.No.7583 = bitcast i64* %new_node_ptr.7574 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.7584 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7583, align 1
  br label %block.exit.7588

block.Cidr_Prelude.Basics.Yes.7585:               ; preds = %block.exit.7580
  %ptr_Cidr_Prelude.Basics.Yes.7586 = bitcast i64* %new_node_ptr.7574 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.7587 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7586, align 1
  br label %block.exit.7588

block.exit.7588:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7585, %block.Cidr_Prelude.Basics.No.7582
  %idr_Prelude.Strings.trim7_val_825.7589 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.7584, %block.Cidr_Prelude.Basics.No.7582 ], [ %node_Cidr_Prelude.Basics.Yes.7587, %block.Cidr_Prelude.Basics.Yes.7585 ]
  %tag.7590 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_825.7589, 0
  switch i64 %tag.7590, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7591
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7592
  ]

block.Cidr_Prelude.Basics.No.7591:                ; preds = %block.exit.7588
  %src.7652 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.7653 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.7652, 0
  br label %block.exit.7651

block.Cidr_Prelude.Basics.Yes.7592:               ; preds = %block.exit.7588
  %idr_Prelude.Strings.trim8_val_829.7593 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7594 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7595 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7594 to i64
  %new_node_ptr.7596 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7595 monotonic
  %new_node_ptr.7597 = inttoptr i64 %new_node_ptr.7596 to i64*
  %tag.7598 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_829.7593, 0
  %ptr_CGrString.7599 = bitcast i64* %new_node_ptr.7597 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_829.7593, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7599, align 1
  %idr_Prelude.Strings.trim8_val_828.7600 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7597)
  %alloc_bytes.7601 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7602 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7601 to i64
  %new_node_ptr.7603 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7602 monotonic
  %new_node_ptr.7604 = inttoptr i64 %new_node_ptr.7603 to i64*
  %tag.7605 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_828.7600, 0
  %ptr_CGrString.7606 = bitcast i64* %new_node_ptr.7604 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_828.7600, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7606, align 1
  %idr_Prelude.Strings.trim8_val_827.7607 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7604)
  %alloc_bytes.7608 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7609 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7608 to i64
  %new_node_ptr.7610 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7609 monotonic
  %new_node_ptr.7611 = inttoptr i64 %new_node_ptr.7610 to i64*
  %tag.7612 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_827.7607, 0
  %ptr_CGrString.7613 = bitcast i64* %new_node_ptr.7611 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_827.7607, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7613, align 1
  %idr_Prelude.Strings.trim8_val_826.7614 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7611)
  %alloc_bytes.7615 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7616 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7615 to i64
  %new_node_ptr.7617 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7616 monotonic
  %new_node_ptr.7618 = inttoptr i64 %new_node_ptr.7617 to i64*
  %tag.7619 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_826.7614, 0
  %ptr_CGrInt.7620 = bitcast i64* %new_node_ptr.7618 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_826.7614, <{ i64, [1 x i64] }>* %ptr_CGrInt.7620, align 1
  %idr_Prelude.Strings.trim9_val_837.7621 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7622 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7623 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7622 to i64
  %new_node_ptr.7624 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7623 monotonic
  %new_node_ptr.7625 = inttoptr i64 %new_node_ptr.7624 to i64*
  %tag.7626 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_837.7621, 0
  %ptr_CGrString.7627 = bitcast i64* %new_node_ptr.7625 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_837.7621, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7627, align 1
  %idr_Prelude.Strings.trim9_val_836.7628 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7625)
  %alloc_bytes.7629 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7630 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7629 to i64
  %new_node_ptr.7631 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7630 monotonic
  %new_node_ptr.7632 = inttoptr i64 %new_node_ptr.7631 to i64*
  %tag.7633 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_836.7628, 0
  %ptr_CGrString.7634 = bitcast i64* %new_node_ptr.7632 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_836.7628, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7634, align 1
  %idr_Prelude.Strings.trim9_val_835.7635 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7632)
  %alloc_bytes.7636 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7637 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7636 to i64
  %new_node_ptr.7638 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7637 monotonic
  %new_node_ptr.7639 = inttoptr i64 %new_node_ptr.7638 to i64*
  %tag.7640 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_835.7635, 0
  %ptr_CGrString.7641 = bitcast i64* %new_node_ptr.7639 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_835.7635, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7641, align 1
  %idr_Prelude.Strings.trim9_val_834.7642 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7639)
  %alloc_bytes.7643 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7644 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7643 to i64
  %new_node_ptr.7645 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7644 monotonic
  %new_node_ptr.7646 = inttoptr i64 %new_node_ptr.7645 to i64*
  %tag.7647 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_834.7642, 0
  %ptr_CGrString.7648 = bitcast i64* %new_node_ptr.7646 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_834.7642, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7648, align 1
  %node_Cidr_Prelude.Strings.StrCons.7649 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.7618, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.7650 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.7649, i64* %new_node_ptr.7646, 1, 1
  br label %block.exit.7651

block.exit.7651:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7592, %block.Cidr_Prelude.Basics.No.7591
  %idr_Prelude.Strings.trim7_val_806.7654 = phi <{ i64, [2 x i64*] }> [ %dst.7653, %block.Cidr_Prelude.Basics.No.7591 ], [ %node_Cidr_Prelude.Strings.StrCons.7650, %block.Cidr_Prelude.Basics.Yes.7592 ]
  %alloc_bytes.7655 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.7656 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.7655 to i64
  %new_node_ptr.7657 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7656 monotonic
  %new_node_ptr.7658 = inttoptr i64 %new_node_ptr.7657 to i64*
  %tag.7659 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim7_val_806.7654, 0
  switch i64 %tag.7659, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.7660
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.7662
  ]

block.Cidr_Prelude.Strings.StrCons.7660:          ; preds = %block.exit.7651
  %ptr_Cidr_Prelude.Strings.StrCons.7661 = bitcast i64* %new_node_ptr.7658 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim7_val_806.7654, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.7661, align 1
  br label %block.exit.7666

block.Cidr_Prelude.Strings.StrNil.7662:           ; preds = %block.exit.7651
  %src.7663 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim7_val_806.7654, 0
  %dst.7664 = insertvalue <{ i64 }> undef, i64 %src.7663, 0
  %ptr_Cidr_Prelude.Strings.StrNil.7665 = bitcast i64* %new_node_ptr.7658 to <{ i64 }>*
  store <{ i64 }> %dst.7664, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.7665, align 1
  br label %block.exit.7666

block.exit.7666:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.7662, %block.Cidr_Prelude.Strings.StrCons.7660
  %result.Cidr_Prelude.Bool.True.7667 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.7505, i64* %new_node_ptr.7658)
  br label %block.exit.7668

block.exit.7668:                                  ; preds = %block.exit.7666, %block.Cidr_Prelude.Bool.False.7457
  %result.Cidr_Prelude.Basics.Yes.7669 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.7500, %block.Cidr_Prelude.Bool.False.7457 ], [ %result.Cidr_Prelude.Bool.True.7667, %block.exit.7666 ]
  br label %block.exit.7670

block.exit.7670:                                  ; preds = %block.exit.7668, %block.Cidr_Prelude.Basics.No.7412
  %result.Cidr_Prelude.Bool.True.7671 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.7413, %block.Cidr_Prelude.Basics.No.7412 ], [ %result.Cidr_Prelude.Basics.Yes.7669, %block.exit.7668 ]
  br label %block.exit.7672

block.exit.7672:                                  ; preds = %block.exit.7670, %block.Cidr_Prelude.Bool.False.7305
  %result.Cidr_Prelude.Basics.Yes.7673 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.7334, %block.Cidr_Prelude.Bool.False.7305 ], [ %result.Cidr_Prelude.Bool.True.7671, %block.exit.7670 ]
  br label %block.exit.7674

block.exit.7674:                                  ; preds = %block.exit.7672, %block.Cidr_Prelude.Basics.No.7267
  %idr_Prelude.Strings.trim2_val_735.7675 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.7268, %block.Cidr_Prelude.Basics.No.7267 ], [ %result.Cidr_Prelude.Basics.Yes.7673, %block.exit.7672 ]
  %alloc_bytes.7676 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7677 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7676 to i64
  %new_node_ptr.7678 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7677 monotonic
  %new_node_ptr.7679 = inttoptr i64 %new_node_ptr.7678 to i64*
  %tag.7680 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_735.7675, 0
  %ptr_CGrString.7681 = bitcast i64* %new_node_ptr.7679 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_735.7675, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7681, align 1
  %idr_Prelude.Strings.trim2_val_734.7682 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %new_node_ptr.7679)
  %alloc_bytes.7683 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7684 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7683 to i64
  %new_node_ptr.7685 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7684 monotonic
  %new_node_ptr.7686 = inttoptr i64 %new_node_ptr.7685 to i64*
  %tag.7687 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_734.7682, 0
  %ptr_CGrString.7688 = bitcast i64* %new_node_ptr.7686 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim2_val_734.7682, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7688, align 1
  %idr_Prelude.Strings.trim2_val_733.7689 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7686)
  %alloc_bytes.7690 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7691 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7690 to i64
  %new_node_ptr.7692 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7691 monotonic
  %new_node_ptr.7693 = inttoptr i64 %new_node_ptr.7692 to i64*
  %tag.7694 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim2_val_733.7689, 0
  %ptr_CGrInt.7695 = bitcast i64* %new_node_ptr.7693 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim2_val_733.7689, <{ i64, [1 x i64] }>* %ptr_CGrInt.7695, align 1
  %idr_Prelude.Strings.trim2_val_732.7696 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.7693)
  %alloc_bytes.7697 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7698 = ptrtoint <{ i64 }>* %alloc_bytes.7697 to i64
  %new_node_ptr.7699 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7698 monotonic
  %new_node_ptr.7700 = inttoptr i64 %new_node_ptr.7699 to i64*
  %tag.7701 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim2_val_732.7696, 0
  switch i64 %tag.7701, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7702
    i64 7, label %block.Cidr_Prelude.Bool.True.7704
  ]

block.Cidr_Prelude.Bool.False.7702:               ; preds = %block.exit.7674
  %ptr_Cidr_Prelude.Bool.False.7703 = bitcast i64* %new_node_ptr.7700 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_732.7696, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7703, align 1
  br label %block.exit.7706

block.Cidr_Prelude.Bool.True.7704:                ; preds = %block.exit.7674
  %ptr_Cidr_Prelude.Bool.True.7705 = bitcast i64* %new_node_ptr.7700 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim2_val_732.7696, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7705, align 1
  br label %block.exit.7706

block.exit.7706:                                  ; preds = %block.Cidr_Prelude.Bool.True.7704, %block.Cidr_Prelude.Bool.False.7702
  %tag.7707 = load i64, i64* %new_node_ptr.7700, align 1
  switch i64 %tag.7707, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7708
    i64 7, label %block.Cidr_Prelude.Bool.True.7711
  ]

block.Cidr_Prelude.Bool.False.7708:               ; preds = %block.exit.7706
  %ptr_Cidr_Prelude.Bool.False.7709 = bitcast i64* %new_node_ptr.7700 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.7710 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7709, align 1
  br label %block.exit.7714

block.Cidr_Prelude.Bool.True.7711:                ; preds = %block.exit.7706
  %ptr_Cidr_Prelude.Bool.True.7712 = bitcast i64* %new_node_ptr.7700 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.7713 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7712, align 1
  br label %block.exit.7714

block.exit.7714:                                  ; preds = %block.Cidr_Prelude.Bool.True.7711, %block.Cidr_Prelude.Bool.False.7708
  %idr_Prelude.Strings.trim2_val_847.7715 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.7710, %block.Cidr_Prelude.Bool.False.7708 ], [ %node_Cidr_Prelude.Bool.True.7713, %block.Cidr_Prelude.Bool.True.7711 ]
  %tag.7716 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim2_val_847.7715, 0
  switch i64 %tag.7716, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7717
    i64 7, label %block.Cidr_Prelude.Bool.True.8715
  ]

block.Cidr_Prelude.Bool.False.7717:               ; preds = %block.exit.7714
  %idr_Prelude.Strings.trim3_val_854.7718 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7719 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7720 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7719 to i64
  %new_node_ptr.7721 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7720 monotonic
  %new_node_ptr.7722 = inttoptr i64 %new_node_ptr.7721 to i64*
  %tag.7723 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_854.7718, 0
  %ptr_CGrString.7724 = bitcast i64* %new_node_ptr.7722 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_854.7718, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7724, align 1
  %node_CGrString.7725 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.7726 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7727 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7726 to i64
  %new_node_ptr.7728 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7727 monotonic
  %new_node_ptr.7729 = inttoptr i64 %new_node_ptr.7728 to i64*
  %tag.7730 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7725, 0
  %ptr_CGrString.7731 = bitcast i64* %new_node_ptr.7729 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7725, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7731, align 1
  %idr_Prelude.Strings.trim3_val_853.7732 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.7722, i64* %new_node_ptr.7729)
  %alloc_bytes.7733 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7734 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7733 to i64
  %new_node_ptr.7735 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7734 monotonic
  %new_node_ptr.7736 = inttoptr i64 %new_node_ptr.7735 to i64*
  %tag.7737 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_853.7732, 0
  %ptr_CGrInt.7738 = bitcast i64* %new_node_ptr.7736 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_853.7732, <{ i64, [1 x i64] }>* %ptr_CGrInt.7738, align 1
  %tag.7739 = load i64, i64* %new_node_ptr.7736, align 1
  %ptr_CGrInt.7740 = bitcast i64* %new_node_ptr.7736 to <{ i64, [1 x i64] }>*
  %node_CGrInt.7741 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.7740, align 1
  %tag.7742 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7741, 0
  switch i64 %tag.7742, label %error_block [
    i64 2, label %block.CGrInt.7743
  ]

block.CGrInt.7743:                                ; preds = %block.Cidr_Prelude.Bool.False.7717
  %idr_Prelude.Strings.trim_cpat_LInt64_0_860 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7741, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_860, label %block.default.7744 [
    i64 0, label %block.int_0.7745
  ]

block.default.7744:                               ; preds = %block.CGrInt.7743
  br label %block.exit.7746

block.int_0.7745:                                 ; preds = %block.CGrInt.7743
  br label %block.exit.7746

block.exit.7746:                                  ; preds = %block.int_0.7745, %block.default.7744
  %result.CGrInt.7747 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.7744 ], [ <{ i64 7 }>, %block.int_0.7745 ]
  br label %block.exit.7748

block.exit.7748:                                  ; preds = %block.exit.7746
  %idr_Prelude.Strings.trim3_val_852.7749 = phi <{ i64 }> [ %result.CGrInt.7747, %block.exit.7746 ]
  %alloc_bytes.7750 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7751 = ptrtoint <{ i64 }>* %alloc_bytes.7750 to i64
  %new_node_ptr.7752 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7751 monotonic
  %new_node_ptr.7753 = inttoptr i64 %new_node_ptr.7752 to i64*
  %tag.7754 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_852.7749, 0
  switch i64 %tag.7754, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7755
    i64 7, label %block.Cidr_Prelude.Bool.True.7757
  ]

block.Cidr_Prelude.Bool.False.7755:               ; preds = %block.exit.7748
  %ptr_Cidr_Prelude.Bool.False.7756 = bitcast i64* %new_node_ptr.7753 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_852.7749, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7756, align 1
  br label %block.exit.7759

block.Cidr_Prelude.Bool.True.7757:                ; preds = %block.exit.7748
  %ptr_Cidr_Prelude.Bool.True.7758 = bitcast i64* %new_node_ptr.7753 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_852.7749, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7758, align 1
  br label %block.exit.7759

block.exit.7759:                                  ; preds = %block.Cidr_Prelude.Bool.True.7757, %block.Cidr_Prelude.Bool.False.7755
  %alloc_bytes.7760 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7761 = ptrtoint <{ i64 }>* %alloc_bytes.7760 to i64
  %new_node_ptr.7762 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7761 monotonic
  %new_node_ptr.7763 = inttoptr i64 %new_node_ptr.7762 to i64*
  %tag.7764 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.7765 = bitcast i64* %new_node_ptr.7763 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7765, align 1
  %idr_Prelude.Strings.trim3_val_851.7766 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.7753, i64* %new_node_ptr.7763)
  %alloc_bytes.7767 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7768 = ptrtoint <{ i64 }>* %alloc_bytes.7767 to i64
  %new_node_ptr.7769 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7768 monotonic
  %new_node_ptr.7770 = inttoptr i64 %new_node_ptr.7769 to i64*
  %tag.7771 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_851.7766, 0
  switch i64 %tag.7771, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7772
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7774
  ]

block.Cidr_Prelude.Basics.No.7772:                ; preds = %block.exit.7759
  %ptr_Cidr_Prelude.Basics.No.7773 = bitcast i64* %new_node_ptr.7770 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_851.7766, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7773, align 1
  br label %block.exit.7776

block.Cidr_Prelude.Basics.Yes.7774:               ; preds = %block.exit.7759
  %ptr_Cidr_Prelude.Basics.Yes.7775 = bitcast i64* %new_node_ptr.7770 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim3_val_851.7766, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7775, align 1
  br label %block.exit.7776

block.exit.7776:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7774, %block.Cidr_Prelude.Basics.No.7772
  %tag.7777 = load i64, i64* %new_node_ptr.7770, align 1
  switch i64 %tag.7777, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7778
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7781
  ]

block.Cidr_Prelude.Basics.No.7778:                ; preds = %block.exit.7776
  %ptr_Cidr_Prelude.Basics.No.7779 = bitcast i64* %new_node_ptr.7770 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.7780 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7779, align 1
  br label %block.exit.7784

block.Cidr_Prelude.Basics.Yes.7781:               ; preds = %block.exit.7776
  %ptr_Cidr_Prelude.Basics.Yes.7782 = bitcast i64* %new_node_ptr.7770 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.7783 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7782, align 1
  br label %block.exit.7784

block.exit.7784:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7781, %block.Cidr_Prelude.Basics.No.7778
  %idr_Prelude.Strings.trim3_val_865.7785 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.7780, %block.Cidr_Prelude.Basics.No.7778 ], [ %node_Cidr_Prelude.Basics.Yes.7783, %block.Cidr_Prelude.Basics.Yes.7781 ]
  %tag.7786 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim3_val_865.7785, 0
  switch i64 %tag.7786, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7787
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7789
  ]

block.Cidr_Prelude.Basics.No.7787:                ; preds = %block.exit.7784
  %node_CGrString.7788 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.8194

block.Cidr_Prelude.Basics.Yes.7789:               ; preds = %block.exit.7784
  %idr_Prelude.Strings.trim4_val_868.7790 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7791 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7792 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7791 to i64
  %new_node_ptr.7793 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7792 monotonic
  %new_node_ptr.7794 = inttoptr i64 %new_node_ptr.7793 to i64*
  %tag.7795 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_868.7790, 0
  %ptr_CGrString.7796 = bitcast i64* %new_node_ptr.7794 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_868.7790, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7796, align 1
  %idr_Prelude.Strings.trim4_val_867.7797 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7794)
  %alloc_bytes.7798 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7799 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7798 to i64
  %new_node_ptr.7800 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7799 monotonic
  %new_node_ptr.7801 = inttoptr i64 %new_node_ptr.7800 to i64*
  %tag.7802 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_867.7797, 0
  %ptr_CGrInt.7803 = bitcast i64* %new_node_ptr.7801 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_867.7797, <{ i64, [1 x i64] }>* %ptr_CGrInt.7803, align 1
  %idr_Prelude.Strings.trim4_val_866.7804 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.7801)
  %alloc_bytes.7805 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7806 = ptrtoint <{ i64 }>* %alloc_bytes.7805 to i64
  %new_node_ptr.7807 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7806 monotonic
  %new_node_ptr.7808 = inttoptr i64 %new_node_ptr.7807 to i64*
  %tag.7809 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_866.7804, 0
  switch i64 %tag.7809, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7810
    i64 7, label %block.Cidr_Prelude.Bool.True.7812
  ]

block.Cidr_Prelude.Bool.False.7810:               ; preds = %block.Cidr_Prelude.Basics.Yes.7789
  %ptr_Cidr_Prelude.Bool.False.7811 = bitcast i64* %new_node_ptr.7808 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_866.7804, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7811, align 1
  br label %block.exit.7814

block.Cidr_Prelude.Bool.True.7812:                ; preds = %block.Cidr_Prelude.Basics.Yes.7789
  %ptr_Cidr_Prelude.Bool.True.7813 = bitcast i64* %new_node_ptr.7808 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_866.7804, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7813, align 1
  br label %block.exit.7814

block.exit.7814:                                  ; preds = %block.Cidr_Prelude.Bool.True.7812, %block.Cidr_Prelude.Bool.False.7810
  %tag.7815 = load i64, i64* %new_node_ptr.7808, align 1
  switch i64 %tag.7815, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7816
    i64 7, label %block.Cidr_Prelude.Bool.True.7819
  ]

block.Cidr_Prelude.Bool.False.7816:               ; preds = %block.exit.7814
  %ptr_Cidr_Prelude.Bool.False.7817 = bitcast i64* %new_node_ptr.7808 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.7818 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7817, align 1
  br label %block.exit.7822

block.Cidr_Prelude.Bool.True.7819:                ; preds = %block.exit.7814
  %ptr_Cidr_Prelude.Bool.True.7820 = bitcast i64* %new_node_ptr.7808 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.7821 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7820, align 1
  br label %block.exit.7822

block.exit.7822:                                  ; preds = %block.Cidr_Prelude.Bool.True.7819, %block.Cidr_Prelude.Bool.False.7816
  %idr_Prelude.Strings.trim4_val_872.7823 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.7818, %block.Cidr_Prelude.Bool.False.7816 ], [ %node_Cidr_Prelude.Bool.True.7821, %block.Cidr_Prelude.Bool.True.7819 ]
  %tag.7824 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_872.7823, 0
  switch i64 %tag.7824, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7825
    i64 7, label %block.Cidr_Prelude.Bool.True.7855
  ]

block.Cidr_Prelude.Bool.False.7825:               ; preds = %block.exit.7822
  %idr_Prelude.Strings.trim5_val_874.7826 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7827 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7828 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7827 to i64
  %new_node_ptr.7829 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7828 monotonic
  %new_node_ptr.7830 = inttoptr i64 %new_node_ptr.7829 to i64*
  %tag.7831 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_874.7826, 0
  %ptr_CGrString.7832 = bitcast i64* %new_node_ptr.7830 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_874.7826, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7832, align 1
  %idr_Prelude.Strings.trim5_val_873.7833 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7830)
  %alloc_bytes.7834 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7835 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7834 to i64
  %new_node_ptr.7836 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7835 monotonic
  %new_node_ptr.7837 = inttoptr i64 %new_node_ptr.7836 to i64*
  %tag.7838 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_873.7833, 0
  %ptr_CGrInt.7839 = bitcast i64* %new_node_ptr.7837 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_873.7833, <{ i64, [1 x i64] }>* %ptr_CGrInt.7839, align 1
  %idr_Prelude.Strings.trim6_val_878.7840 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7841 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7842 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7841 to i64
  %new_node_ptr.7843 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7842 monotonic
  %new_node_ptr.7844 = inttoptr i64 %new_node_ptr.7843 to i64*
  %tag.7845 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_878.7840, 0
  %ptr_CGrString.7846 = bitcast i64* %new_node_ptr.7844 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_878.7840, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7846, align 1
  %idr_Prelude.Strings.trim6_val_877.7847 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7844)
  %alloc_bytes.7848 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7849 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7848 to i64
  %new_node_ptr.7850 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7849 monotonic
  %new_node_ptr.7851 = inttoptr i64 %new_node_ptr.7850 to i64*
  %tag.7852 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_877.7847, 0
  %ptr_CGrString.7853 = bitcast i64* %new_node_ptr.7851 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_877.7847, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7853, align 1
  %result.Cidr_Prelude.Bool.False.7854 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.7837, i64* %new_node_ptr.7851)
  br label %block.exit.8192

block.Cidr_Prelude.Bool.True.7855:                ; preds = %block.exit.7822
  %idr_Prelude.Strings.trim5_val_885.7856 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7857 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7858 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7857 to i64
  %new_node_ptr.7859 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7858 monotonic
  %new_node_ptr.7860 = inttoptr i64 %new_node_ptr.7859 to i64*
  %tag.7861 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_885.7856, 0
  %ptr_CGrString.7862 = bitcast i64* %new_node_ptr.7860 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_885.7856, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7862, align 1
  %idr_Prelude.Strings.trim5_val_884.7863 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7860)
  %alloc_bytes.7864 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7865 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7864 to i64
  %new_node_ptr.7866 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7865 monotonic
  %new_node_ptr.7867 = inttoptr i64 %new_node_ptr.7866 to i64*
  %tag.7868 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_884.7863, 0
  %ptr_CGrString.7869 = bitcast i64* %new_node_ptr.7867 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_884.7863, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7869, align 1
  %node_CGrString.7870 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.7871 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7872 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7871 to i64
  %new_node_ptr.7873 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7872 monotonic
  %new_node_ptr.7874 = inttoptr i64 %new_node_ptr.7873 to i64*
  %tag.7875 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7870, 0
  %ptr_CGrString.7876 = bitcast i64* %new_node_ptr.7874 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.7870, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7876, align 1
  %idr_Prelude.Strings.trim5_val_883.7877 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.7867, i64* %new_node_ptr.7874)
  %alloc_bytes.7878 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7879 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7878 to i64
  %new_node_ptr.7880 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7879 monotonic
  %new_node_ptr.7881 = inttoptr i64 %new_node_ptr.7880 to i64*
  %tag.7882 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_883.7877, 0
  %ptr_CGrInt.7883 = bitcast i64* %new_node_ptr.7881 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_883.7877, <{ i64, [1 x i64] }>* %ptr_CGrInt.7883, align 1
  %tag.7884 = load i64, i64* %new_node_ptr.7881, align 1
  %ptr_CGrInt.7885 = bitcast i64* %new_node_ptr.7881 to <{ i64, [1 x i64] }>*
  %node_CGrInt.7886 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.7885, align 1
  %tag.7887 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7886, 0
  switch i64 %tag.7887, label %error_block [
    i64 2, label %block.CGrInt.7888
  ]

block.CGrInt.7888:                                ; preds = %block.Cidr_Prelude.Bool.True.7855
  %idr_Prelude.Strings.trim_cpat_LInt64_0_892 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.7886, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_892, label %block.default.7889 [
    i64 0, label %block.int_0.7890
  ]

block.default.7889:                               ; preds = %block.CGrInt.7888
  br label %block.exit.7891

block.int_0.7890:                                 ; preds = %block.CGrInt.7888
  br label %block.exit.7891

block.exit.7891:                                  ; preds = %block.int_0.7890, %block.default.7889
  %result.CGrInt.7892 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.7889 ], [ <{ i64 7 }>, %block.int_0.7890 ]
  br label %block.exit.7893

block.exit.7893:                                  ; preds = %block.exit.7891
  %idr_Prelude.Strings.trim5_val_882.7894 = phi <{ i64 }> [ %result.CGrInt.7892, %block.exit.7891 ]
  %alloc_bytes.7895 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7896 = ptrtoint <{ i64 }>* %alloc_bytes.7895 to i64
  %new_node_ptr.7897 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7896 monotonic
  %new_node_ptr.7898 = inttoptr i64 %new_node_ptr.7897 to i64*
  %tag.7899 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_882.7894, 0
  switch i64 %tag.7899, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7900
    i64 7, label %block.Cidr_Prelude.Bool.True.7902
  ]

block.Cidr_Prelude.Bool.False.7900:               ; preds = %block.exit.7893
  %ptr_Cidr_Prelude.Bool.False.7901 = bitcast i64* %new_node_ptr.7898 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_882.7894, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7901, align 1
  br label %block.exit.7904

block.Cidr_Prelude.Bool.True.7902:                ; preds = %block.exit.7893
  %ptr_Cidr_Prelude.Bool.True.7903 = bitcast i64* %new_node_ptr.7898 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_882.7894, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7903, align 1
  br label %block.exit.7904

block.exit.7904:                                  ; preds = %block.Cidr_Prelude.Bool.True.7902, %block.Cidr_Prelude.Bool.False.7900
  %alloc_bytes.7905 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7906 = ptrtoint <{ i64 }>* %alloc_bytes.7905 to i64
  %new_node_ptr.7907 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7906 monotonic
  %new_node_ptr.7908 = inttoptr i64 %new_node_ptr.7907 to i64*
  %tag.7909 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.7910 = bitcast i64* %new_node_ptr.7908 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7910, align 1
  %idr_Prelude.Strings.trim5_val_881.7911 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.7898, i64* %new_node_ptr.7908)
  %alloc_bytes.7912 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7913 = ptrtoint <{ i64 }>* %alloc_bytes.7912 to i64
  %new_node_ptr.7914 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7913 monotonic
  %new_node_ptr.7915 = inttoptr i64 %new_node_ptr.7914 to i64*
  %tag.7916 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_881.7911, 0
  switch i64 %tag.7916, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7917
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7919
  ]

block.Cidr_Prelude.Basics.No.7917:                ; preds = %block.exit.7904
  %ptr_Cidr_Prelude.Basics.No.7918 = bitcast i64* %new_node_ptr.7915 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_881.7911, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7918, align 1
  br label %block.exit.7921

block.Cidr_Prelude.Basics.Yes.7919:               ; preds = %block.exit.7904
  %ptr_Cidr_Prelude.Basics.Yes.7920 = bitcast i64* %new_node_ptr.7915 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_881.7911, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7920, align 1
  br label %block.exit.7921

block.exit.7921:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7919, %block.Cidr_Prelude.Basics.No.7917
  %tag.7922 = load i64, i64* %new_node_ptr.7915, align 1
  switch i64 %tag.7922, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7923
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7926
  ]

block.Cidr_Prelude.Basics.No.7923:                ; preds = %block.exit.7921
  %ptr_Cidr_Prelude.Basics.No.7924 = bitcast i64* %new_node_ptr.7915 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.7925 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.7924, align 1
  br label %block.exit.7929

block.Cidr_Prelude.Basics.Yes.7926:               ; preds = %block.exit.7921
  %ptr_Cidr_Prelude.Basics.Yes.7927 = bitcast i64* %new_node_ptr.7915 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.7928 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.7927, align 1
  br label %block.exit.7929

block.exit.7929:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.7926, %block.Cidr_Prelude.Basics.No.7923
  %idr_Prelude.Strings.trim5_val_897.7930 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.7925, %block.Cidr_Prelude.Basics.No.7923 ], [ %node_Cidr_Prelude.Basics.Yes.7928, %block.Cidr_Prelude.Basics.Yes.7926 ]
  %tag.7931 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_897.7930, 0
  switch i64 %tag.7931, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.7932
    i64 27, label %block.Cidr_Prelude.Basics.Yes.7934
  ]

block.Cidr_Prelude.Basics.No.7932:                ; preds = %block.exit.7929
  %node_CGrString.7933 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.8190

block.Cidr_Prelude.Basics.Yes.7934:               ; preds = %block.exit.7929
  %idr_Prelude.Strings.trim6_val_901.7935 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7936 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7937 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7936 to i64
  %new_node_ptr.7938 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7937 monotonic
  %new_node_ptr.7939 = inttoptr i64 %new_node_ptr.7938 to i64*
  %tag.7940 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_901.7935, 0
  %ptr_CGrString.7941 = bitcast i64* %new_node_ptr.7939 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_901.7935, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7941, align 1
  %idr_Prelude.Strings.trim6_val_900.7942 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7939)
  %alloc_bytes.7943 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7944 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7943 to i64
  %new_node_ptr.7945 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7944 monotonic
  %new_node_ptr.7946 = inttoptr i64 %new_node_ptr.7945 to i64*
  %tag.7947 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_900.7942, 0
  %ptr_CGrString.7948 = bitcast i64* %new_node_ptr.7946 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_900.7942, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7948, align 1
  %idr_Prelude.Strings.trim6_val_899.7949 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7946)
  %alloc_bytes.7950 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7951 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7950 to i64
  %new_node_ptr.7952 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7951 monotonic
  %new_node_ptr.7953 = inttoptr i64 %new_node_ptr.7952 to i64*
  %tag.7954 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_899.7949, 0
  %ptr_CGrInt.7955 = bitcast i64* %new_node_ptr.7953 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_899.7949, <{ i64, [1 x i64] }>* %ptr_CGrInt.7955, align 1
  %idr_Prelude.Strings.trim6_val_898.7956 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.7953)
  %alloc_bytes.7957 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.7958 = ptrtoint <{ i64 }>* %alloc_bytes.7957 to i64
  %new_node_ptr.7959 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7958 monotonic
  %new_node_ptr.7960 = inttoptr i64 %new_node_ptr.7959 to i64*
  %tag.7961 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_898.7956, 0
  switch i64 %tag.7961, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7962
    i64 7, label %block.Cidr_Prelude.Bool.True.7964
  ]

block.Cidr_Prelude.Bool.False.7962:               ; preds = %block.Cidr_Prelude.Basics.Yes.7934
  %ptr_Cidr_Prelude.Bool.False.7963 = bitcast i64* %new_node_ptr.7960 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_898.7956, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7963, align 1
  br label %block.exit.7966

block.Cidr_Prelude.Bool.True.7964:                ; preds = %block.Cidr_Prelude.Basics.Yes.7934
  %ptr_Cidr_Prelude.Bool.True.7965 = bitcast i64* %new_node_ptr.7960 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_898.7956, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7965, align 1
  br label %block.exit.7966

block.exit.7966:                                  ; preds = %block.Cidr_Prelude.Bool.True.7964, %block.Cidr_Prelude.Bool.False.7962
  %tag.7967 = load i64, i64* %new_node_ptr.7960, align 1
  switch i64 %tag.7967, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7968
    i64 7, label %block.Cidr_Prelude.Bool.True.7971
  ]

block.Cidr_Prelude.Bool.False.7968:               ; preds = %block.exit.7966
  %ptr_Cidr_Prelude.Bool.False.7969 = bitcast i64* %new_node_ptr.7960 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.7970 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.7969, align 1
  br label %block.exit.7974

block.Cidr_Prelude.Bool.True.7971:                ; preds = %block.exit.7966
  %ptr_Cidr_Prelude.Bool.True.7972 = bitcast i64* %new_node_ptr.7960 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.7973 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.7972, align 1
  br label %block.exit.7974

block.exit.7974:                                  ; preds = %block.Cidr_Prelude.Bool.True.7971, %block.Cidr_Prelude.Bool.False.7968
  %idr_Prelude.Strings.trim6_val_906.7975 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.7970, %block.Cidr_Prelude.Bool.False.7968 ], [ %node_Cidr_Prelude.Bool.True.7973, %block.Cidr_Prelude.Bool.True.7971 ]
  %tag.7976 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_906.7975, 0
  switch i64 %tag.7976, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.7977
    i64 7, label %block.Cidr_Prelude.Bool.True.8021
  ]

block.Cidr_Prelude.Bool.False.7977:               ; preds = %block.exit.7974
  %idr_Prelude.Strings.trim7_val_909.7978 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.7979 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7980 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7979 to i64
  %new_node_ptr.7981 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7980 monotonic
  %new_node_ptr.7982 = inttoptr i64 %new_node_ptr.7981 to i64*
  %tag.7983 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_909.7978, 0
  %ptr_CGrString.7984 = bitcast i64* %new_node_ptr.7982 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_909.7978, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7984, align 1
  %idr_Prelude.Strings.trim7_val_908.7985 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.7982)
  %alloc_bytes.7986 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.7987 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.7986 to i64
  %new_node_ptr.7988 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7987 monotonic
  %new_node_ptr.7989 = inttoptr i64 %new_node_ptr.7988 to i64*
  %tag.7990 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_908.7985, 0
  %ptr_CGrString.7991 = bitcast i64* %new_node_ptr.7989 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_908.7985, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.7991, align 1
  %idr_Prelude.Strings.trim7_val_907.7992 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.7989)
  %alloc_bytes.7993 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.7994 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.7993 to i64
  %new_node_ptr.7995 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.7994 monotonic
  %new_node_ptr.7996 = inttoptr i64 %new_node_ptr.7995 to i64*
  %tag.7997 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_907.7992, 0
  %ptr_CGrInt.7998 = bitcast i64* %new_node_ptr.7996 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_907.7992, <{ i64, [1 x i64] }>* %ptr_CGrInt.7998, align 1
  %idr_Prelude.Strings.trim8_val_915.7999 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8000 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8001 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8000 to i64
  %new_node_ptr.8002 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8001 monotonic
  %new_node_ptr.8003 = inttoptr i64 %new_node_ptr.8002 to i64*
  %tag.8004 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_915.7999, 0
  %ptr_CGrString.8005 = bitcast i64* %new_node_ptr.8003 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_915.7999, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8005, align 1
  %idr_Prelude.Strings.trim8_val_914.8006 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8003)
  %alloc_bytes.8007 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8008 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8007 to i64
  %new_node_ptr.8009 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8008 monotonic
  %new_node_ptr.8010 = inttoptr i64 %new_node_ptr.8009 to i64*
  %tag.8011 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_914.8006, 0
  %ptr_CGrString.8012 = bitcast i64* %new_node_ptr.8010 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_914.8006, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8012, align 1
  %idr_Prelude.Strings.trim8_val_913.8013 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8010)
  %alloc_bytes.8014 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8015 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8014 to i64
  %new_node_ptr.8016 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8015 monotonic
  %new_node_ptr.8017 = inttoptr i64 %new_node_ptr.8016 to i64*
  %tag.8018 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_913.8013, 0
  %ptr_CGrString.8019 = bitcast i64* %new_node_ptr.8017 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_913.8013, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8019, align 1
  %result.Cidr_Prelude.Bool.False.8020 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.7996, i64* %new_node_ptr.8017)
  br label %block.exit.8188

block.Cidr_Prelude.Bool.True.8021:                ; preds = %block.exit.7974
  %alloc_bytes.8022 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8023 = ptrtoint <{ i64 }>* %alloc_bytes.8022 to i64
  %new_node_ptr.8024 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8023 monotonic
  %new_node_ptr.8025 = inttoptr i64 %new_node_ptr.8024 to i64*
  %tag.8026 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.8027 = bitcast i64* %new_node_ptr.8025 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.8027, align 1
  %idr_Prelude.Strings.trim8_val_927.8028 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8029 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8030 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8029 to i64
  %new_node_ptr.8031 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8030 monotonic
  %new_node_ptr.8032 = inttoptr i64 %new_node_ptr.8031 to i64*
  %tag.8033 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_927.8028, 0
  %ptr_CGrString.8034 = bitcast i64* %new_node_ptr.8032 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_927.8028, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8034, align 1
  %idr_Prelude.Strings.trim8_val_926.8035 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8032)
  %alloc_bytes.8036 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8037 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8036 to i64
  %new_node_ptr.8038 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8037 monotonic
  %new_node_ptr.8039 = inttoptr i64 %new_node_ptr.8038 to i64*
  %tag.8040 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_926.8035, 0
  %ptr_CGrString.8041 = bitcast i64* %new_node_ptr.8039 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_926.8035, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8041, align 1
  %idr_Prelude.Strings.trim8_val_925.8042 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8039)
  %alloc_bytes.8043 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8044 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8043 to i64
  %new_node_ptr.8045 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8044 monotonic
  %new_node_ptr.8046 = inttoptr i64 %new_node_ptr.8045 to i64*
  %tag.8047 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_925.8042, 0
  %ptr_CGrString.8048 = bitcast i64* %new_node_ptr.8046 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_925.8042, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8048, align 1
  %node_CGrString.8049 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.8050 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8051 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8050 to i64
  %new_node_ptr.8052 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8051 monotonic
  %new_node_ptr.8053 = inttoptr i64 %new_node_ptr.8052 to i64*
  %tag.8054 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8049, 0
  %ptr_CGrString.8055 = bitcast i64* %new_node_ptr.8053 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8049, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8055, align 1
  %idr_Prelude.Strings.trim8_val_924.8056 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.8046, i64* %new_node_ptr.8053)
  %alloc_bytes.8057 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8058 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8057 to i64
  %new_node_ptr.8059 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8058 monotonic
  %new_node_ptr.8060 = inttoptr i64 %new_node_ptr.8059 to i64*
  %tag.8061 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_924.8056, 0
  %ptr_CGrInt.8062 = bitcast i64* %new_node_ptr.8060 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_924.8056, <{ i64, [1 x i64] }>* %ptr_CGrInt.8062, align 1
  %tag.8063 = load i64, i64* %new_node_ptr.8060, align 1
  %ptr_CGrInt.8064 = bitcast i64* %new_node_ptr.8060 to <{ i64, [1 x i64] }>*
  %node_CGrInt.8065 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.8064, align 1
  %tag.8066 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8065, 0
  switch i64 %tag.8066, label %error_block [
    i64 2, label %block.CGrInt.8067
  ]

block.CGrInt.8067:                                ; preds = %block.Cidr_Prelude.Bool.True.8021
  %idr_Prelude.Strings.trim_cpat_LInt64_0_935 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8065, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_935, label %block.default.8068 [
    i64 0, label %block.int_0.8069
  ]

block.default.8068:                               ; preds = %block.CGrInt.8067
  br label %block.exit.8070

block.int_0.8069:                                 ; preds = %block.CGrInt.8067
  br label %block.exit.8070

block.exit.8070:                                  ; preds = %block.int_0.8069, %block.default.8068
  %result.CGrInt.8071 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.8068 ], [ <{ i64 7 }>, %block.int_0.8069 ]
  br label %block.exit.8072

block.exit.8072:                                  ; preds = %block.exit.8070
  %idr_Prelude.Strings.trim8_val_923.8073 = phi <{ i64 }> [ %result.CGrInt.8071, %block.exit.8070 ]
  %alloc_bytes.8074 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8075 = ptrtoint <{ i64 }>* %alloc_bytes.8074 to i64
  %new_node_ptr.8076 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8075 monotonic
  %new_node_ptr.8077 = inttoptr i64 %new_node_ptr.8076 to i64*
  %tag.8078 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_923.8073, 0
  switch i64 %tag.8078, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8079
    i64 7, label %block.Cidr_Prelude.Bool.True.8081
  ]

block.Cidr_Prelude.Bool.False.8079:               ; preds = %block.exit.8072
  %ptr_Cidr_Prelude.Bool.False.8080 = bitcast i64* %new_node_ptr.8077 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_923.8073, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8080, align 1
  br label %block.exit.8083

block.Cidr_Prelude.Bool.True.8081:                ; preds = %block.exit.8072
  %ptr_Cidr_Prelude.Bool.True.8082 = bitcast i64* %new_node_ptr.8077 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_923.8073, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8082, align 1
  br label %block.exit.8083

block.exit.8083:                                  ; preds = %block.Cidr_Prelude.Bool.True.8081, %block.Cidr_Prelude.Bool.False.8079
  %alloc_bytes.8084 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8085 = ptrtoint <{ i64 }>* %alloc_bytes.8084 to i64
  %new_node_ptr.8086 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8085 monotonic
  %new_node_ptr.8087 = inttoptr i64 %new_node_ptr.8086 to i64*
  %tag.8088 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.8089 = bitcast i64* %new_node_ptr.8087 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8089, align 1
  %idr_Prelude.Strings.trim8_val_922.8090 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.8077, i64* %new_node_ptr.8087)
  %alloc_bytes.8091 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8092 = ptrtoint <{ i64 }>* %alloc_bytes.8091 to i64
  %new_node_ptr.8093 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8092 monotonic
  %new_node_ptr.8094 = inttoptr i64 %new_node_ptr.8093 to i64*
  %tag.8095 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_922.8090, 0
  switch i64 %tag.8095, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8096
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8098
  ]

block.Cidr_Prelude.Basics.No.8096:                ; preds = %block.exit.8083
  %ptr_Cidr_Prelude.Basics.No.8097 = bitcast i64* %new_node_ptr.8094 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_922.8090, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8097, align 1
  br label %block.exit.8100

block.Cidr_Prelude.Basics.Yes.8098:               ; preds = %block.exit.8083
  %ptr_Cidr_Prelude.Basics.Yes.8099 = bitcast i64* %new_node_ptr.8094 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_922.8090, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8099, align 1
  br label %block.exit.8100

block.exit.8100:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8098, %block.Cidr_Prelude.Basics.No.8096
  %tag.8101 = load i64, i64* %new_node_ptr.8094, align 1
  switch i64 %tag.8101, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8102
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8105
  ]

block.Cidr_Prelude.Basics.No.8102:                ; preds = %block.exit.8100
  %ptr_Cidr_Prelude.Basics.No.8103 = bitcast i64* %new_node_ptr.8094 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.8104 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8103, align 1
  br label %block.exit.8108

block.Cidr_Prelude.Basics.Yes.8105:               ; preds = %block.exit.8100
  %ptr_Cidr_Prelude.Basics.Yes.8106 = bitcast i64* %new_node_ptr.8094 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.8107 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8106, align 1
  br label %block.exit.8108

block.exit.8108:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8105, %block.Cidr_Prelude.Basics.No.8102
  %idr_Prelude.Strings.trim8_val_940.8109 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.8104, %block.Cidr_Prelude.Basics.No.8102 ], [ %node_Cidr_Prelude.Basics.Yes.8107, %block.Cidr_Prelude.Basics.Yes.8105 ]
  %tag.8110 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_940.8109, 0
  switch i64 %tag.8110, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8111
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8112
  ]

block.Cidr_Prelude.Basics.No.8111:                ; preds = %block.exit.8108
  %src.8172 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.8173 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.8172, 0
  br label %block.exit.8171

block.Cidr_Prelude.Basics.Yes.8112:               ; preds = %block.exit.8108
  %idr_Prelude.Strings.trim9_val_944.8113 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8114 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8115 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8114 to i64
  %new_node_ptr.8116 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8115 monotonic
  %new_node_ptr.8117 = inttoptr i64 %new_node_ptr.8116 to i64*
  %tag.8118 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_944.8113, 0
  %ptr_CGrString.8119 = bitcast i64* %new_node_ptr.8117 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_944.8113, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8119, align 1
  %idr_Prelude.Strings.trim9_val_943.8120 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8117)
  %alloc_bytes.8121 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8122 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8121 to i64
  %new_node_ptr.8123 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8122 monotonic
  %new_node_ptr.8124 = inttoptr i64 %new_node_ptr.8123 to i64*
  %tag.8125 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_943.8120, 0
  %ptr_CGrString.8126 = bitcast i64* %new_node_ptr.8124 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_943.8120, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8126, align 1
  %idr_Prelude.Strings.trim9_val_942.8127 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8124)
  %alloc_bytes.8128 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8129 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8128 to i64
  %new_node_ptr.8130 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8129 monotonic
  %new_node_ptr.8131 = inttoptr i64 %new_node_ptr.8130 to i64*
  %tag.8132 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_942.8127, 0
  %ptr_CGrString.8133 = bitcast i64* %new_node_ptr.8131 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_942.8127, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8133, align 1
  %idr_Prelude.Strings.trim9_val_941.8134 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8131)
  %alloc_bytes.8135 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8136 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8135 to i64
  %new_node_ptr.8137 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8136 monotonic
  %new_node_ptr.8138 = inttoptr i64 %new_node_ptr.8137 to i64*
  %tag.8139 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_941.8134, 0
  %ptr_CGrInt.8140 = bitcast i64* %new_node_ptr.8138 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_941.8134, <{ i64, [1 x i64] }>* %ptr_CGrInt.8140, align 1
  %idr_Prelude.Strings.trim10_val_952.8141 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8142 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8143 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8142 to i64
  %new_node_ptr.8144 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8143 monotonic
  %new_node_ptr.8145 = inttoptr i64 %new_node_ptr.8144 to i64*
  %tag.8146 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_952.8141, 0
  %ptr_CGrString.8147 = bitcast i64* %new_node_ptr.8145 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_952.8141, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8147, align 1
  %idr_Prelude.Strings.trim10_val_951.8148 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8145)
  %alloc_bytes.8149 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8150 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8149 to i64
  %new_node_ptr.8151 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8150 monotonic
  %new_node_ptr.8152 = inttoptr i64 %new_node_ptr.8151 to i64*
  %tag.8153 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_951.8148, 0
  %ptr_CGrString.8154 = bitcast i64* %new_node_ptr.8152 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_951.8148, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8154, align 1
  %idr_Prelude.Strings.trim10_val_950.8155 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8152)
  %alloc_bytes.8156 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8157 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8156 to i64
  %new_node_ptr.8158 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8157 monotonic
  %new_node_ptr.8159 = inttoptr i64 %new_node_ptr.8158 to i64*
  %tag.8160 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_950.8155, 0
  %ptr_CGrString.8161 = bitcast i64* %new_node_ptr.8159 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_950.8155, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8161, align 1
  %idr_Prelude.Strings.trim10_val_949.8162 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8159)
  %alloc_bytes.8163 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8164 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8163 to i64
  %new_node_ptr.8165 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8164 monotonic
  %new_node_ptr.8166 = inttoptr i64 %new_node_ptr.8165 to i64*
  %tag.8167 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_949.8162, 0
  %ptr_CGrString.8168 = bitcast i64* %new_node_ptr.8166 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_949.8162, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8168, align 1
  %node_Cidr_Prelude.Strings.StrCons.8169 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.8138, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.8170 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.8169, i64* %new_node_ptr.8166, 1, 1
  br label %block.exit.8171

block.exit.8171:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8112, %block.Cidr_Prelude.Basics.No.8111
  %idr_Prelude.Strings.trim8_val_921.8174 = phi <{ i64, [2 x i64*] }> [ %dst.8173, %block.Cidr_Prelude.Basics.No.8111 ], [ %node_Cidr_Prelude.Strings.StrCons.8170, %block.Cidr_Prelude.Basics.Yes.8112 ]
  %alloc_bytes.8175 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.8176 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.8175 to i64
  %new_node_ptr.8177 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8176 monotonic
  %new_node_ptr.8178 = inttoptr i64 %new_node_ptr.8177 to i64*
  %tag.8179 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim8_val_921.8174, 0
  switch i64 %tag.8179, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.8180
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.8182
  ]

block.Cidr_Prelude.Strings.StrCons.8180:          ; preds = %block.exit.8171
  %ptr_Cidr_Prelude.Strings.StrCons.8181 = bitcast i64* %new_node_ptr.8178 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim8_val_921.8174, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.8181, align 1
  br label %block.exit.8186

block.Cidr_Prelude.Strings.StrNil.8182:           ; preds = %block.exit.8171
  %src.8183 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim8_val_921.8174, 0
  %dst.8184 = insertvalue <{ i64 }> undef, i64 %src.8183, 0
  %ptr_Cidr_Prelude.Strings.StrNil.8185 = bitcast i64* %new_node_ptr.8178 to <{ i64 }>*
  store <{ i64 }> %dst.8184, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.8185, align 1
  br label %block.exit.8186

block.exit.8186:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.8182, %block.Cidr_Prelude.Strings.StrCons.8180
  %result.Cidr_Prelude.Bool.True.8187 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.8025, i64* %new_node_ptr.8178)
  br label %block.exit.8188

block.exit.8188:                                  ; preds = %block.exit.8186, %block.Cidr_Prelude.Bool.False.7977
  %result.Cidr_Prelude.Basics.Yes.8189 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.8020, %block.Cidr_Prelude.Bool.False.7977 ], [ %result.Cidr_Prelude.Bool.True.8187, %block.exit.8186 ]
  br label %block.exit.8190

block.exit.8190:                                  ; preds = %block.exit.8188, %block.Cidr_Prelude.Basics.No.7932
  %result.Cidr_Prelude.Bool.True.8191 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.7933, %block.Cidr_Prelude.Basics.No.7932 ], [ %result.Cidr_Prelude.Basics.Yes.8189, %block.exit.8188 ]
  br label %block.exit.8192

block.exit.8192:                                  ; preds = %block.exit.8190, %block.Cidr_Prelude.Bool.False.7825
  %result.Cidr_Prelude.Basics.Yes.8193 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.7854, %block.Cidr_Prelude.Bool.False.7825 ], [ %result.Cidr_Prelude.Bool.True.8191, %block.exit.8190 ]
  br label %block.exit.8194

block.exit.8194:                                  ; preds = %block.exit.8192, %block.Cidr_Prelude.Basics.No.7787
  %idr_Prelude.Strings.trim3_val_850.8195 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.7788, %block.Cidr_Prelude.Basics.No.7787 ], [ %result.Cidr_Prelude.Basics.Yes.8193, %block.exit.8192 ]
  %alloc_bytes.8196 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8197 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8196 to i64
  %new_node_ptr.8198 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8197 monotonic
  %new_node_ptr.8199 = inttoptr i64 %new_node_ptr.8198 to i64*
  %tag.8200 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_850.8195, 0
  %ptr_CGrString.8201 = bitcast i64* %new_node_ptr.8199 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_850.8195, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8201, align 1
  %idr_Prelude.Strings.trim3_val_849.8202 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %new_node_ptr.8199)
  %alloc_bytes.8203 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8204 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8203 to i64
  %new_node_ptr.8205 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8204 monotonic
  %new_node_ptr.8206 = inttoptr i64 %new_node_ptr.8205 to i64*
  %tag.8207 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_849.8202, 0
  %ptr_CGrString.8208 = bitcast i64* %new_node_ptr.8206 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim3_val_849.8202, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8208, align 1
  %idr_Prelude.Strings.trim3_val_848.8209 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8206)
  %alloc_bytes.8210 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8211 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8210 to i64
  %new_node_ptr.8212 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8211 monotonic
  %new_node_ptr.8213 = inttoptr i64 %new_node_ptr.8212 to i64*
  %tag.8214 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_848.8209, 0
  %ptr_CGrInt.8215 = bitcast i64* %new_node_ptr.8213 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim3_val_848.8209, <{ i64, [1 x i64] }>* %ptr_CGrInt.8215, align 1
  %idr_Prelude.Strings.trim4_val_967.8216 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8217 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8218 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8217 to i64
  %new_node_ptr.8219 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8218 monotonic
  %new_node_ptr.8220 = inttoptr i64 %new_node_ptr.8219 to i64*
  %tag.8221 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_967.8216, 0
  %ptr_CGrString.8222 = bitcast i64* %new_node_ptr.8220 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_967.8216, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8222, align 1
  %node_CGrString.8223 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.8224 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8225 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8224 to i64
  %new_node_ptr.8226 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8225 monotonic
  %new_node_ptr.8227 = inttoptr i64 %new_node_ptr.8226 to i64*
  %tag.8228 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8223, 0
  %ptr_CGrString.8229 = bitcast i64* %new_node_ptr.8227 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8223, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8229, align 1
  %idr_Prelude.Strings.trim4_val_966.8230 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.8220, i64* %new_node_ptr.8227)
  %alloc_bytes.8231 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8232 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8231 to i64
  %new_node_ptr.8233 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8232 monotonic
  %new_node_ptr.8234 = inttoptr i64 %new_node_ptr.8233 to i64*
  %tag.8235 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_966.8230, 0
  %ptr_CGrInt.8236 = bitcast i64* %new_node_ptr.8234 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_966.8230, <{ i64, [1 x i64] }>* %ptr_CGrInt.8236, align 1
  %tag.8237 = load i64, i64* %new_node_ptr.8234, align 1
  %ptr_CGrInt.8238 = bitcast i64* %new_node_ptr.8234 to <{ i64, [1 x i64] }>*
  %node_CGrInt.8239 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.8238, align 1
  %tag.8240 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8239, 0
  switch i64 %tag.8240, label %error_block [
    i64 2, label %block.CGrInt.8241
  ]

block.CGrInt.8241:                                ; preds = %block.exit.8194
  %idr_Prelude.Strings.trim_cpat_LInt64_0_973 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8239, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_973, label %block.default.8242 [
    i64 0, label %block.int_0.8243
  ]

block.default.8242:                               ; preds = %block.CGrInt.8241
  br label %block.exit.8244

block.int_0.8243:                                 ; preds = %block.CGrInt.8241
  br label %block.exit.8244

block.exit.8244:                                  ; preds = %block.int_0.8243, %block.default.8242
  %result.CGrInt.8245 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.8242 ], [ <{ i64 7 }>, %block.int_0.8243 ]
  br label %block.exit.8246

block.exit.8246:                                  ; preds = %block.exit.8244
  %idr_Prelude.Strings.trim4_val_965.8247 = phi <{ i64 }> [ %result.CGrInt.8245, %block.exit.8244 ]
  %alloc_bytes.8248 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8249 = ptrtoint <{ i64 }>* %alloc_bytes.8248 to i64
  %new_node_ptr.8250 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8249 monotonic
  %new_node_ptr.8251 = inttoptr i64 %new_node_ptr.8250 to i64*
  %tag.8252 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_965.8247, 0
  switch i64 %tag.8252, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8253
    i64 7, label %block.Cidr_Prelude.Bool.True.8255
  ]

block.Cidr_Prelude.Bool.False.8253:               ; preds = %block.exit.8246
  %ptr_Cidr_Prelude.Bool.False.8254 = bitcast i64* %new_node_ptr.8251 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_965.8247, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8254, align 1
  br label %block.exit.8257

block.Cidr_Prelude.Bool.True.8255:                ; preds = %block.exit.8246
  %ptr_Cidr_Prelude.Bool.True.8256 = bitcast i64* %new_node_ptr.8251 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_965.8247, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8256, align 1
  br label %block.exit.8257

block.exit.8257:                                  ; preds = %block.Cidr_Prelude.Bool.True.8255, %block.Cidr_Prelude.Bool.False.8253
  %alloc_bytes.8258 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8259 = ptrtoint <{ i64 }>* %alloc_bytes.8258 to i64
  %new_node_ptr.8260 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8259 monotonic
  %new_node_ptr.8261 = inttoptr i64 %new_node_ptr.8260 to i64*
  %tag.8262 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.8263 = bitcast i64* %new_node_ptr.8261 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8263, align 1
  %idr_Prelude.Strings.trim4_val_964.8264 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.8251, i64* %new_node_ptr.8261)
  %alloc_bytes.8265 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8266 = ptrtoint <{ i64 }>* %alloc_bytes.8265 to i64
  %new_node_ptr.8267 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8266 monotonic
  %new_node_ptr.8268 = inttoptr i64 %new_node_ptr.8267 to i64*
  %tag.8269 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_964.8264, 0
  switch i64 %tag.8269, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8270
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8272
  ]

block.Cidr_Prelude.Basics.No.8270:                ; preds = %block.exit.8257
  %ptr_Cidr_Prelude.Basics.No.8271 = bitcast i64* %new_node_ptr.8268 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_964.8264, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8271, align 1
  br label %block.exit.8274

block.Cidr_Prelude.Basics.Yes.8272:               ; preds = %block.exit.8257
  %ptr_Cidr_Prelude.Basics.Yes.8273 = bitcast i64* %new_node_ptr.8268 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_964.8264, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8273, align 1
  br label %block.exit.8274

block.exit.8274:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8272, %block.Cidr_Prelude.Basics.No.8270
  %tag.8275 = load i64, i64* %new_node_ptr.8268, align 1
  switch i64 %tag.8275, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8276
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8279
  ]

block.Cidr_Prelude.Basics.No.8276:                ; preds = %block.exit.8274
  %ptr_Cidr_Prelude.Basics.No.8277 = bitcast i64* %new_node_ptr.8268 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.8278 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8277, align 1
  br label %block.exit.8282

block.Cidr_Prelude.Basics.Yes.8279:               ; preds = %block.exit.8274
  %ptr_Cidr_Prelude.Basics.Yes.8280 = bitcast i64* %new_node_ptr.8268 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.8281 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8280, align 1
  br label %block.exit.8282

block.exit.8282:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8279, %block.Cidr_Prelude.Basics.No.8276
  %idr_Prelude.Strings.trim4_val_978.8283 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.8278, %block.Cidr_Prelude.Basics.No.8276 ], [ %node_Cidr_Prelude.Basics.Yes.8281, %block.Cidr_Prelude.Basics.Yes.8279 ]
  %tag.8284 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_978.8283, 0
  switch i64 %tag.8284, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8285
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8287
  ]

block.Cidr_Prelude.Basics.No.8285:                ; preds = %block.exit.8282
  %node_CGrString.8286 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.8692

block.Cidr_Prelude.Basics.Yes.8287:               ; preds = %block.exit.8282
  %idr_Prelude.Strings.trim5_val_981.8288 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8289 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8290 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8289 to i64
  %new_node_ptr.8291 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8290 monotonic
  %new_node_ptr.8292 = inttoptr i64 %new_node_ptr.8291 to i64*
  %tag.8293 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_981.8288, 0
  %ptr_CGrString.8294 = bitcast i64* %new_node_ptr.8292 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_981.8288, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8294, align 1
  %idr_Prelude.Strings.trim5_val_980.8295 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8292)
  %alloc_bytes.8296 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8297 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8296 to i64
  %new_node_ptr.8298 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8297 monotonic
  %new_node_ptr.8299 = inttoptr i64 %new_node_ptr.8298 to i64*
  %tag.8300 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_980.8295, 0
  %ptr_CGrInt.8301 = bitcast i64* %new_node_ptr.8299 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_980.8295, <{ i64, [1 x i64] }>* %ptr_CGrInt.8301, align 1
  %idr_Prelude.Strings.trim5_val_979.8302 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.8299)
  %alloc_bytes.8303 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8304 = ptrtoint <{ i64 }>* %alloc_bytes.8303 to i64
  %new_node_ptr.8305 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8304 monotonic
  %new_node_ptr.8306 = inttoptr i64 %new_node_ptr.8305 to i64*
  %tag.8307 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_979.8302, 0
  switch i64 %tag.8307, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8308
    i64 7, label %block.Cidr_Prelude.Bool.True.8310
  ]

block.Cidr_Prelude.Bool.False.8308:               ; preds = %block.Cidr_Prelude.Basics.Yes.8287
  %ptr_Cidr_Prelude.Bool.False.8309 = bitcast i64* %new_node_ptr.8306 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_979.8302, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8309, align 1
  br label %block.exit.8312

block.Cidr_Prelude.Bool.True.8310:                ; preds = %block.Cidr_Prelude.Basics.Yes.8287
  %ptr_Cidr_Prelude.Bool.True.8311 = bitcast i64* %new_node_ptr.8306 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_979.8302, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8311, align 1
  br label %block.exit.8312

block.exit.8312:                                  ; preds = %block.Cidr_Prelude.Bool.True.8310, %block.Cidr_Prelude.Bool.False.8308
  %tag.8313 = load i64, i64* %new_node_ptr.8306, align 1
  switch i64 %tag.8313, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8314
    i64 7, label %block.Cidr_Prelude.Bool.True.8317
  ]

block.Cidr_Prelude.Bool.False.8314:               ; preds = %block.exit.8312
  %ptr_Cidr_Prelude.Bool.False.8315 = bitcast i64* %new_node_ptr.8306 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.8316 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8315, align 1
  br label %block.exit.8320

block.Cidr_Prelude.Bool.True.8317:                ; preds = %block.exit.8312
  %ptr_Cidr_Prelude.Bool.True.8318 = bitcast i64* %new_node_ptr.8306 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.8319 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8318, align 1
  br label %block.exit.8320

block.exit.8320:                                  ; preds = %block.Cidr_Prelude.Bool.True.8317, %block.Cidr_Prelude.Bool.False.8314
  %idr_Prelude.Strings.trim5_val_985.8321 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.8316, %block.Cidr_Prelude.Bool.False.8314 ], [ %node_Cidr_Prelude.Bool.True.8319, %block.Cidr_Prelude.Bool.True.8317 ]
  %tag.8322 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_985.8321, 0
  switch i64 %tag.8322, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8323
    i64 7, label %block.Cidr_Prelude.Bool.True.8353
  ]

block.Cidr_Prelude.Bool.False.8323:               ; preds = %block.exit.8320
  %idr_Prelude.Strings.trim6_val_987.8324 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8325 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8326 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8325 to i64
  %new_node_ptr.8327 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8326 monotonic
  %new_node_ptr.8328 = inttoptr i64 %new_node_ptr.8327 to i64*
  %tag.8329 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_987.8324, 0
  %ptr_CGrString.8330 = bitcast i64* %new_node_ptr.8328 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_987.8324, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8330, align 1
  %idr_Prelude.Strings.trim6_val_986.8331 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8328)
  %alloc_bytes.8332 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8333 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8332 to i64
  %new_node_ptr.8334 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8333 monotonic
  %new_node_ptr.8335 = inttoptr i64 %new_node_ptr.8334 to i64*
  %tag.8336 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_986.8331, 0
  %ptr_CGrInt.8337 = bitcast i64* %new_node_ptr.8335 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_986.8331, <{ i64, [1 x i64] }>* %ptr_CGrInt.8337, align 1
  %idr_Prelude.Strings.trim7_val_991.8338 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8339 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8340 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8339 to i64
  %new_node_ptr.8341 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8340 monotonic
  %new_node_ptr.8342 = inttoptr i64 %new_node_ptr.8341 to i64*
  %tag.8343 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_991.8338, 0
  %ptr_CGrString.8344 = bitcast i64* %new_node_ptr.8342 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_991.8338, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8344, align 1
  %idr_Prelude.Strings.trim7_val_990.8345 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8342)
  %alloc_bytes.8346 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8347 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8346 to i64
  %new_node_ptr.8348 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8347 monotonic
  %new_node_ptr.8349 = inttoptr i64 %new_node_ptr.8348 to i64*
  %tag.8350 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_990.8345, 0
  %ptr_CGrString.8351 = bitcast i64* %new_node_ptr.8349 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_990.8345, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8351, align 1
  %result.Cidr_Prelude.Bool.False.8352 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.8335, i64* %new_node_ptr.8349)
  br label %block.exit.8690

block.Cidr_Prelude.Bool.True.8353:                ; preds = %block.exit.8320
  %idr_Prelude.Strings.trim6_val_998.8354 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8355 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8356 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8355 to i64
  %new_node_ptr.8357 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8356 monotonic
  %new_node_ptr.8358 = inttoptr i64 %new_node_ptr.8357 to i64*
  %tag.8359 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_998.8354, 0
  %ptr_CGrString.8360 = bitcast i64* %new_node_ptr.8358 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_998.8354, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8360, align 1
  %idr_Prelude.Strings.trim6_val_997.8361 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8358)
  %alloc_bytes.8362 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8363 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8362 to i64
  %new_node_ptr.8364 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8363 monotonic
  %new_node_ptr.8365 = inttoptr i64 %new_node_ptr.8364 to i64*
  %tag.8366 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_997.8361, 0
  %ptr_CGrString.8367 = bitcast i64* %new_node_ptr.8365 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_997.8361, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8367, align 1
  %node_CGrString.8368 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.8369 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8370 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8369 to i64
  %new_node_ptr.8371 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8370 monotonic
  %new_node_ptr.8372 = inttoptr i64 %new_node_ptr.8371 to i64*
  %tag.8373 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8368, 0
  %ptr_CGrString.8374 = bitcast i64* %new_node_ptr.8372 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8368, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8374, align 1
  %idr_Prelude.Strings.trim6_val_996.8375 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.8365, i64* %new_node_ptr.8372)
  %alloc_bytes.8376 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8377 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8376 to i64
  %new_node_ptr.8378 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8377 monotonic
  %new_node_ptr.8379 = inttoptr i64 %new_node_ptr.8378 to i64*
  %tag.8380 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_996.8375, 0
  %ptr_CGrInt.8381 = bitcast i64* %new_node_ptr.8379 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_996.8375, <{ i64, [1 x i64] }>* %ptr_CGrInt.8381, align 1
  %tag.8382 = load i64, i64* %new_node_ptr.8379, align 1
  %ptr_CGrInt.8383 = bitcast i64* %new_node_ptr.8379 to <{ i64, [1 x i64] }>*
  %node_CGrInt.8384 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.8383, align 1
  %tag.8385 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8384, 0
  switch i64 %tag.8385, label %error_block [
    i64 2, label %block.CGrInt.8386
  ]

block.CGrInt.8386:                                ; preds = %block.Cidr_Prelude.Bool.True.8353
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1005 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8384, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1005, label %block.default.8387 [
    i64 0, label %block.int_0.8388
  ]

block.default.8387:                               ; preds = %block.CGrInt.8386
  br label %block.exit.8389

block.int_0.8388:                                 ; preds = %block.CGrInt.8386
  br label %block.exit.8389

block.exit.8389:                                  ; preds = %block.int_0.8388, %block.default.8387
  %result.CGrInt.8390 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.8387 ], [ <{ i64 7 }>, %block.int_0.8388 ]
  br label %block.exit.8391

block.exit.8391:                                  ; preds = %block.exit.8389
  %idr_Prelude.Strings.trim6_val_995.8392 = phi <{ i64 }> [ %result.CGrInt.8390, %block.exit.8389 ]
  %alloc_bytes.8393 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8394 = ptrtoint <{ i64 }>* %alloc_bytes.8393 to i64
  %new_node_ptr.8395 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8394 monotonic
  %new_node_ptr.8396 = inttoptr i64 %new_node_ptr.8395 to i64*
  %tag.8397 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_995.8392, 0
  switch i64 %tag.8397, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8398
    i64 7, label %block.Cidr_Prelude.Bool.True.8400
  ]

block.Cidr_Prelude.Bool.False.8398:               ; preds = %block.exit.8391
  %ptr_Cidr_Prelude.Bool.False.8399 = bitcast i64* %new_node_ptr.8396 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_995.8392, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8399, align 1
  br label %block.exit.8402

block.Cidr_Prelude.Bool.True.8400:                ; preds = %block.exit.8391
  %ptr_Cidr_Prelude.Bool.True.8401 = bitcast i64* %new_node_ptr.8396 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_995.8392, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8401, align 1
  br label %block.exit.8402

block.exit.8402:                                  ; preds = %block.Cidr_Prelude.Bool.True.8400, %block.Cidr_Prelude.Bool.False.8398
  %alloc_bytes.8403 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8404 = ptrtoint <{ i64 }>* %alloc_bytes.8403 to i64
  %new_node_ptr.8405 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8404 monotonic
  %new_node_ptr.8406 = inttoptr i64 %new_node_ptr.8405 to i64*
  %tag.8407 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.8408 = bitcast i64* %new_node_ptr.8406 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8408, align 1
  %idr_Prelude.Strings.trim6_val_994.8409 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.8396, i64* %new_node_ptr.8406)
  %alloc_bytes.8410 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8411 = ptrtoint <{ i64 }>* %alloc_bytes.8410 to i64
  %new_node_ptr.8412 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8411 monotonic
  %new_node_ptr.8413 = inttoptr i64 %new_node_ptr.8412 to i64*
  %tag.8414 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_994.8409, 0
  switch i64 %tag.8414, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8415
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8417
  ]

block.Cidr_Prelude.Basics.No.8415:                ; preds = %block.exit.8402
  %ptr_Cidr_Prelude.Basics.No.8416 = bitcast i64* %new_node_ptr.8413 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_994.8409, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8416, align 1
  br label %block.exit.8419

block.Cidr_Prelude.Basics.Yes.8417:               ; preds = %block.exit.8402
  %ptr_Cidr_Prelude.Basics.Yes.8418 = bitcast i64* %new_node_ptr.8413 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_994.8409, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8418, align 1
  br label %block.exit.8419

block.exit.8419:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8417, %block.Cidr_Prelude.Basics.No.8415
  %tag.8420 = load i64, i64* %new_node_ptr.8413, align 1
  switch i64 %tag.8420, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8421
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8424
  ]

block.Cidr_Prelude.Basics.No.8421:                ; preds = %block.exit.8419
  %ptr_Cidr_Prelude.Basics.No.8422 = bitcast i64* %new_node_ptr.8413 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.8423 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8422, align 1
  br label %block.exit.8427

block.Cidr_Prelude.Basics.Yes.8424:               ; preds = %block.exit.8419
  %ptr_Cidr_Prelude.Basics.Yes.8425 = bitcast i64* %new_node_ptr.8413 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.8426 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8425, align 1
  br label %block.exit.8427

block.exit.8427:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8424, %block.Cidr_Prelude.Basics.No.8421
  %idr_Prelude.Strings.trim6_val_1010.8428 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.8423, %block.Cidr_Prelude.Basics.No.8421 ], [ %node_Cidr_Prelude.Basics.Yes.8426, %block.Cidr_Prelude.Basics.Yes.8424 ]
  %tag.8429 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1010.8428, 0
  switch i64 %tag.8429, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8430
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8432
  ]

block.Cidr_Prelude.Basics.No.8430:                ; preds = %block.exit.8427
  %node_CGrString.8431 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.8688

block.Cidr_Prelude.Basics.Yes.8432:               ; preds = %block.exit.8427
  %idr_Prelude.Strings.trim7_val_1014.8433 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8434 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8435 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8434 to i64
  %new_node_ptr.8436 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8435 monotonic
  %new_node_ptr.8437 = inttoptr i64 %new_node_ptr.8436 to i64*
  %tag.8438 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1014.8433, 0
  %ptr_CGrString.8439 = bitcast i64* %new_node_ptr.8437 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1014.8433, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8439, align 1
  %idr_Prelude.Strings.trim7_val_1013.8440 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8437)
  %alloc_bytes.8441 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8442 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8441 to i64
  %new_node_ptr.8443 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8442 monotonic
  %new_node_ptr.8444 = inttoptr i64 %new_node_ptr.8443 to i64*
  %tag.8445 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1013.8440, 0
  %ptr_CGrString.8446 = bitcast i64* %new_node_ptr.8444 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1013.8440, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8446, align 1
  %idr_Prelude.Strings.trim7_val_1012.8447 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8444)
  %alloc_bytes.8448 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8449 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8448 to i64
  %new_node_ptr.8450 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8449 monotonic
  %new_node_ptr.8451 = inttoptr i64 %new_node_ptr.8450 to i64*
  %tag.8452 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1012.8447, 0
  %ptr_CGrInt.8453 = bitcast i64* %new_node_ptr.8451 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1012.8447, <{ i64, [1 x i64] }>* %ptr_CGrInt.8453, align 1
  %idr_Prelude.Strings.trim7_val_1011.8454 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.8451)
  %alloc_bytes.8455 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8456 = ptrtoint <{ i64 }>* %alloc_bytes.8455 to i64
  %new_node_ptr.8457 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8456 monotonic
  %new_node_ptr.8458 = inttoptr i64 %new_node_ptr.8457 to i64*
  %tag.8459 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1011.8454, 0
  switch i64 %tag.8459, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8460
    i64 7, label %block.Cidr_Prelude.Bool.True.8462
  ]

block.Cidr_Prelude.Bool.False.8460:               ; preds = %block.Cidr_Prelude.Basics.Yes.8432
  %ptr_Cidr_Prelude.Bool.False.8461 = bitcast i64* %new_node_ptr.8458 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1011.8454, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8461, align 1
  br label %block.exit.8464

block.Cidr_Prelude.Bool.True.8462:                ; preds = %block.Cidr_Prelude.Basics.Yes.8432
  %ptr_Cidr_Prelude.Bool.True.8463 = bitcast i64* %new_node_ptr.8458 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1011.8454, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8463, align 1
  br label %block.exit.8464

block.exit.8464:                                  ; preds = %block.Cidr_Prelude.Bool.True.8462, %block.Cidr_Prelude.Bool.False.8460
  %tag.8465 = load i64, i64* %new_node_ptr.8458, align 1
  switch i64 %tag.8465, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8466
    i64 7, label %block.Cidr_Prelude.Bool.True.8469
  ]

block.Cidr_Prelude.Bool.False.8466:               ; preds = %block.exit.8464
  %ptr_Cidr_Prelude.Bool.False.8467 = bitcast i64* %new_node_ptr.8458 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.8468 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8467, align 1
  br label %block.exit.8472

block.Cidr_Prelude.Bool.True.8469:                ; preds = %block.exit.8464
  %ptr_Cidr_Prelude.Bool.True.8470 = bitcast i64* %new_node_ptr.8458 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.8471 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8470, align 1
  br label %block.exit.8472

block.exit.8472:                                  ; preds = %block.Cidr_Prelude.Bool.True.8469, %block.Cidr_Prelude.Bool.False.8466
  %idr_Prelude.Strings.trim7_val_1019.8473 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.8468, %block.Cidr_Prelude.Bool.False.8466 ], [ %node_Cidr_Prelude.Bool.True.8471, %block.Cidr_Prelude.Bool.True.8469 ]
  %tag.8474 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1019.8473, 0
  switch i64 %tag.8474, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8475
    i64 7, label %block.Cidr_Prelude.Bool.True.8519
  ]

block.Cidr_Prelude.Bool.False.8475:               ; preds = %block.exit.8472
  %idr_Prelude.Strings.trim8_val_1022.8476 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8477 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8478 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8477 to i64
  %new_node_ptr.8479 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8478 monotonic
  %new_node_ptr.8480 = inttoptr i64 %new_node_ptr.8479 to i64*
  %tag.8481 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1022.8476, 0
  %ptr_CGrString.8482 = bitcast i64* %new_node_ptr.8480 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1022.8476, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8482, align 1
  %idr_Prelude.Strings.trim8_val_1021.8483 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8480)
  %alloc_bytes.8484 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8485 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8484 to i64
  %new_node_ptr.8486 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8485 monotonic
  %new_node_ptr.8487 = inttoptr i64 %new_node_ptr.8486 to i64*
  %tag.8488 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1021.8483, 0
  %ptr_CGrString.8489 = bitcast i64* %new_node_ptr.8487 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1021.8483, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8489, align 1
  %idr_Prelude.Strings.trim8_val_1020.8490 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8487)
  %alloc_bytes.8491 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8492 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8491 to i64
  %new_node_ptr.8493 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8492 monotonic
  %new_node_ptr.8494 = inttoptr i64 %new_node_ptr.8493 to i64*
  %tag.8495 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1020.8490, 0
  %ptr_CGrInt.8496 = bitcast i64* %new_node_ptr.8494 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1020.8490, <{ i64, [1 x i64] }>* %ptr_CGrInt.8496, align 1
  %idr_Prelude.Strings.trim9_val_1028.8497 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8498 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8499 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8498 to i64
  %new_node_ptr.8500 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8499 monotonic
  %new_node_ptr.8501 = inttoptr i64 %new_node_ptr.8500 to i64*
  %tag.8502 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1028.8497, 0
  %ptr_CGrString.8503 = bitcast i64* %new_node_ptr.8501 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1028.8497, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8503, align 1
  %idr_Prelude.Strings.trim9_val_1027.8504 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8501)
  %alloc_bytes.8505 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8506 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8505 to i64
  %new_node_ptr.8507 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8506 monotonic
  %new_node_ptr.8508 = inttoptr i64 %new_node_ptr.8507 to i64*
  %tag.8509 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1027.8504, 0
  %ptr_CGrString.8510 = bitcast i64* %new_node_ptr.8508 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1027.8504, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8510, align 1
  %idr_Prelude.Strings.trim9_val_1026.8511 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8508)
  %alloc_bytes.8512 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8513 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8512 to i64
  %new_node_ptr.8514 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8513 monotonic
  %new_node_ptr.8515 = inttoptr i64 %new_node_ptr.8514 to i64*
  %tag.8516 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1026.8511, 0
  %ptr_CGrString.8517 = bitcast i64* %new_node_ptr.8515 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1026.8511, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8517, align 1
  %result.Cidr_Prelude.Bool.False.8518 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.8494, i64* %new_node_ptr.8515)
  br label %block.exit.8686

block.Cidr_Prelude.Bool.True.8519:                ; preds = %block.exit.8472
  %alloc_bytes.8520 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8521 = ptrtoint <{ i64 }>* %alloc_bytes.8520 to i64
  %new_node_ptr.8522 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8521 monotonic
  %new_node_ptr.8523 = inttoptr i64 %new_node_ptr.8522 to i64*
  %tag.8524 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.8525 = bitcast i64* %new_node_ptr.8523 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.8525, align 1
  %idr_Prelude.Strings.trim9_val_1040.8526 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8527 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8528 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8527 to i64
  %new_node_ptr.8529 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8528 monotonic
  %new_node_ptr.8530 = inttoptr i64 %new_node_ptr.8529 to i64*
  %tag.8531 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1040.8526, 0
  %ptr_CGrString.8532 = bitcast i64* %new_node_ptr.8530 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1040.8526, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8532, align 1
  %idr_Prelude.Strings.trim9_val_1039.8533 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8530)
  %alloc_bytes.8534 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8535 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8534 to i64
  %new_node_ptr.8536 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8535 monotonic
  %new_node_ptr.8537 = inttoptr i64 %new_node_ptr.8536 to i64*
  %tag.8538 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1039.8533, 0
  %ptr_CGrString.8539 = bitcast i64* %new_node_ptr.8537 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1039.8533, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8539, align 1
  %idr_Prelude.Strings.trim9_val_1038.8540 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8537)
  %alloc_bytes.8541 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8542 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8541 to i64
  %new_node_ptr.8543 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8542 monotonic
  %new_node_ptr.8544 = inttoptr i64 %new_node_ptr.8543 to i64*
  %tag.8545 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1038.8540, 0
  %ptr_CGrString.8546 = bitcast i64* %new_node_ptr.8544 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1038.8540, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8546, align 1
  %node_CGrString.8547 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.8548 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8549 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8548 to i64
  %new_node_ptr.8550 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8549 monotonic
  %new_node_ptr.8551 = inttoptr i64 %new_node_ptr.8550 to i64*
  %tag.8552 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8547, 0
  %ptr_CGrString.8553 = bitcast i64* %new_node_ptr.8551 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8547, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8553, align 1
  %idr_Prelude.Strings.trim9_val_1037.8554 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.8544, i64* %new_node_ptr.8551)
  %alloc_bytes.8555 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8556 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8555 to i64
  %new_node_ptr.8557 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8556 monotonic
  %new_node_ptr.8558 = inttoptr i64 %new_node_ptr.8557 to i64*
  %tag.8559 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1037.8554, 0
  %ptr_CGrInt.8560 = bitcast i64* %new_node_ptr.8558 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1037.8554, <{ i64, [1 x i64] }>* %ptr_CGrInt.8560, align 1
  %tag.8561 = load i64, i64* %new_node_ptr.8558, align 1
  %ptr_CGrInt.8562 = bitcast i64* %new_node_ptr.8558 to <{ i64, [1 x i64] }>*
  %node_CGrInt.8563 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.8562, align 1
  %tag.8564 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8563, 0
  switch i64 %tag.8564, label %error_block [
    i64 2, label %block.CGrInt.8565
  ]

block.CGrInt.8565:                                ; preds = %block.Cidr_Prelude.Bool.True.8519
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1048 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8563, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1048, label %block.default.8566 [
    i64 0, label %block.int_0.8567
  ]

block.default.8566:                               ; preds = %block.CGrInt.8565
  br label %block.exit.8568

block.int_0.8567:                                 ; preds = %block.CGrInt.8565
  br label %block.exit.8568

block.exit.8568:                                  ; preds = %block.int_0.8567, %block.default.8566
  %result.CGrInt.8569 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.8566 ], [ <{ i64 7 }>, %block.int_0.8567 ]
  br label %block.exit.8570

block.exit.8570:                                  ; preds = %block.exit.8568
  %idr_Prelude.Strings.trim9_val_1036.8571 = phi <{ i64 }> [ %result.CGrInt.8569, %block.exit.8568 ]
  %alloc_bytes.8572 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8573 = ptrtoint <{ i64 }>* %alloc_bytes.8572 to i64
  %new_node_ptr.8574 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8573 monotonic
  %new_node_ptr.8575 = inttoptr i64 %new_node_ptr.8574 to i64*
  %tag.8576 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1036.8571, 0
  switch i64 %tag.8576, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8577
    i64 7, label %block.Cidr_Prelude.Bool.True.8579
  ]

block.Cidr_Prelude.Bool.False.8577:               ; preds = %block.exit.8570
  %ptr_Cidr_Prelude.Bool.False.8578 = bitcast i64* %new_node_ptr.8575 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1036.8571, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8578, align 1
  br label %block.exit.8581

block.Cidr_Prelude.Bool.True.8579:                ; preds = %block.exit.8570
  %ptr_Cidr_Prelude.Bool.True.8580 = bitcast i64* %new_node_ptr.8575 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1036.8571, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8580, align 1
  br label %block.exit.8581

block.exit.8581:                                  ; preds = %block.Cidr_Prelude.Bool.True.8579, %block.Cidr_Prelude.Bool.False.8577
  %alloc_bytes.8582 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8583 = ptrtoint <{ i64 }>* %alloc_bytes.8582 to i64
  %new_node_ptr.8584 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8583 monotonic
  %new_node_ptr.8585 = inttoptr i64 %new_node_ptr.8584 to i64*
  %tag.8586 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.8587 = bitcast i64* %new_node_ptr.8585 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8587, align 1
  %idr_Prelude.Strings.trim9_val_1035.8588 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.8575, i64* %new_node_ptr.8585)
  %alloc_bytes.8589 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8590 = ptrtoint <{ i64 }>* %alloc_bytes.8589 to i64
  %new_node_ptr.8591 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8590 monotonic
  %new_node_ptr.8592 = inttoptr i64 %new_node_ptr.8591 to i64*
  %tag.8593 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1035.8588, 0
  switch i64 %tag.8593, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8594
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8596
  ]

block.Cidr_Prelude.Basics.No.8594:                ; preds = %block.exit.8581
  %ptr_Cidr_Prelude.Basics.No.8595 = bitcast i64* %new_node_ptr.8592 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1035.8588, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8595, align 1
  br label %block.exit.8598

block.Cidr_Prelude.Basics.Yes.8596:               ; preds = %block.exit.8581
  %ptr_Cidr_Prelude.Basics.Yes.8597 = bitcast i64* %new_node_ptr.8592 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1035.8588, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8597, align 1
  br label %block.exit.8598

block.exit.8598:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8596, %block.Cidr_Prelude.Basics.No.8594
  %tag.8599 = load i64, i64* %new_node_ptr.8592, align 1
  switch i64 %tag.8599, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8600
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8603
  ]

block.Cidr_Prelude.Basics.No.8600:                ; preds = %block.exit.8598
  %ptr_Cidr_Prelude.Basics.No.8601 = bitcast i64* %new_node_ptr.8592 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.8602 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8601, align 1
  br label %block.exit.8606

block.Cidr_Prelude.Basics.Yes.8603:               ; preds = %block.exit.8598
  %ptr_Cidr_Prelude.Basics.Yes.8604 = bitcast i64* %new_node_ptr.8592 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.8605 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8604, align 1
  br label %block.exit.8606

block.exit.8606:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8603, %block.Cidr_Prelude.Basics.No.8600
  %idr_Prelude.Strings.trim9_val_1053.8607 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.8602, %block.Cidr_Prelude.Basics.No.8600 ], [ %node_Cidr_Prelude.Basics.Yes.8605, %block.Cidr_Prelude.Basics.Yes.8603 ]
  %tag.8608 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1053.8607, 0
  switch i64 %tag.8608, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8609
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8610
  ]

block.Cidr_Prelude.Basics.No.8609:                ; preds = %block.exit.8606
  %src.8670 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.8671 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.8670, 0
  br label %block.exit.8669

block.Cidr_Prelude.Basics.Yes.8610:               ; preds = %block.exit.8606
  %idr_Prelude.Strings.trim10_val_1057.8611 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8612 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8613 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8612 to i64
  %new_node_ptr.8614 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8613 monotonic
  %new_node_ptr.8615 = inttoptr i64 %new_node_ptr.8614 to i64*
  %tag.8616 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1057.8611, 0
  %ptr_CGrString.8617 = bitcast i64* %new_node_ptr.8615 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1057.8611, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8617, align 1
  %idr_Prelude.Strings.trim10_val_1056.8618 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8615)
  %alloc_bytes.8619 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8620 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8619 to i64
  %new_node_ptr.8621 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8620 monotonic
  %new_node_ptr.8622 = inttoptr i64 %new_node_ptr.8621 to i64*
  %tag.8623 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1056.8618, 0
  %ptr_CGrString.8624 = bitcast i64* %new_node_ptr.8622 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1056.8618, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8624, align 1
  %idr_Prelude.Strings.trim10_val_1055.8625 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8622)
  %alloc_bytes.8626 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8627 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8626 to i64
  %new_node_ptr.8628 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8627 monotonic
  %new_node_ptr.8629 = inttoptr i64 %new_node_ptr.8628 to i64*
  %tag.8630 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1055.8625, 0
  %ptr_CGrString.8631 = bitcast i64* %new_node_ptr.8629 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1055.8625, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8631, align 1
  %idr_Prelude.Strings.trim10_val_1054.8632 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8629)
  %alloc_bytes.8633 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8634 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8633 to i64
  %new_node_ptr.8635 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8634 monotonic
  %new_node_ptr.8636 = inttoptr i64 %new_node_ptr.8635 to i64*
  %tag.8637 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1054.8632, 0
  %ptr_CGrInt.8638 = bitcast i64* %new_node_ptr.8636 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1054.8632, <{ i64, [1 x i64] }>* %ptr_CGrInt.8638, align 1
  %idr_Prelude.Strings.trim11_val_1065.8639 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8640 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8641 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8640 to i64
  %new_node_ptr.8642 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8641 monotonic
  %new_node_ptr.8643 = inttoptr i64 %new_node_ptr.8642 to i64*
  %tag.8644 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1065.8639, 0
  %ptr_CGrString.8645 = bitcast i64* %new_node_ptr.8643 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1065.8639, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8645, align 1
  %idr_Prelude.Strings.trim11_val_1064.8646 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8643)
  %alloc_bytes.8647 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8648 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8647 to i64
  %new_node_ptr.8649 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8648 monotonic
  %new_node_ptr.8650 = inttoptr i64 %new_node_ptr.8649 to i64*
  %tag.8651 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1064.8646, 0
  %ptr_CGrString.8652 = bitcast i64* %new_node_ptr.8650 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1064.8646, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8652, align 1
  %idr_Prelude.Strings.trim11_val_1063.8653 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8650)
  %alloc_bytes.8654 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8655 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8654 to i64
  %new_node_ptr.8656 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8655 monotonic
  %new_node_ptr.8657 = inttoptr i64 %new_node_ptr.8656 to i64*
  %tag.8658 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1063.8653, 0
  %ptr_CGrString.8659 = bitcast i64* %new_node_ptr.8657 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1063.8653, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8659, align 1
  %idr_Prelude.Strings.trim11_val_1062.8660 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8657)
  %alloc_bytes.8661 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8662 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8661 to i64
  %new_node_ptr.8663 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8662 monotonic
  %new_node_ptr.8664 = inttoptr i64 %new_node_ptr.8663 to i64*
  %tag.8665 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1062.8660, 0
  %ptr_CGrString.8666 = bitcast i64* %new_node_ptr.8664 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1062.8660, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8666, align 1
  %node_Cidr_Prelude.Strings.StrCons.8667 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.8636, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.8668 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.8667, i64* %new_node_ptr.8664, 1, 1
  br label %block.exit.8669

block.exit.8669:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8610, %block.Cidr_Prelude.Basics.No.8609
  %idr_Prelude.Strings.trim9_val_1034.8672 = phi <{ i64, [2 x i64*] }> [ %dst.8671, %block.Cidr_Prelude.Basics.No.8609 ], [ %node_Cidr_Prelude.Strings.StrCons.8668, %block.Cidr_Prelude.Basics.Yes.8610 ]
  %alloc_bytes.8673 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.8674 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.8673 to i64
  %new_node_ptr.8675 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8674 monotonic
  %new_node_ptr.8676 = inttoptr i64 %new_node_ptr.8675 to i64*
  %tag.8677 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim9_val_1034.8672, 0
  switch i64 %tag.8677, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.8678
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.8680
  ]

block.Cidr_Prelude.Strings.StrCons.8678:          ; preds = %block.exit.8669
  %ptr_Cidr_Prelude.Strings.StrCons.8679 = bitcast i64* %new_node_ptr.8676 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim9_val_1034.8672, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.8679, align 1
  br label %block.exit.8684

block.Cidr_Prelude.Strings.StrNil.8680:           ; preds = %block.exit.8669
  %src.8681 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim9_val_1034.8672, 0
  %dst.8682 = insertvalue <{ i64 }> undef, i64 %src.8681, 0
  %ptr_Cidr_Prelude.Strings.StrNil.8683 = bitcast i64* %new_node_ptr.8676 to <{ i64 }>*
  store <{ i64 }> %dst.8682, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.8683, align 1
  br label %block.exit.8684

block.exit.8684:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.8680, %block.Cidr_Prelude.Strings.StrCons.8678
  %result.Cidr_Prelude.Bool.True.8685 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.8523, i64* %new_node_ptr.8676)
  br label %block.exit.8686

block.exit.8686:                                  ; preds = %block.exit.8684, %block.Cidr_Prelude.Bool.False.8475
  %result.Cidr_Prelude.Basics.Yes.8687 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.8518, %block.Cidr_Prelude.Bool.False.8475 ], [ %result.Cidr_Prelude.Bool.True.8685, %block.exit.8684 ]
  br label %block.exit.8688

block.exit.8688:                                  ; preds = %block.exit.8686, %block.Cidr_Prelude.Basics.No.8430
  %result.Cidr_Prelude.Bool.True.8689 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.8431, %block.Cidr_Prelude.Basics.No.8430 ], [ %result.Cidr_Prelude.Basics.Yes.8687, %block.exit.8686 ]
  br label %block.exit.8690

block.exit.8690:                                  ; preds = %block.exit.8688, %block.Cidr_Prelude.Bool.False.8323
  %result.Cidr_Prelude.Basics.Yes.8691 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.8352, %block.Cidr_Prelude.Bool.False.8323 ], [ %result.Cidr_Prelude.Bool.True.8689, %block.exit.8688 ]
  br label %block.exit.8692

block.exit.8692:                                  ; preds = %block.exit.8690, %block.Cidr_Prelude.Basics.No.8285
  %idr_Prelude.Strings.trim4_val_963.8693 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.8286, %block.Cidr_Prelude.Basics.No.8285 ], [ %result.Cidr_Prelude.Basics.Yes.8691, %block.exit.8690 ]
  %alloc_bytes.8694 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8695 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8694 to i64
  %new_node_ptr.8696 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8695 monotonic
  %new_node_ptr.8697 = inttoptr i64 %new_node_ptr.8696 to i64*
  %tag.8698 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_963.8693, 0
  %ptr_CGrString.8699 = bitcast i64* %new_node_ptr.8697 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_963.8693, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8699, align 1
  %idr_Prelude.Strings.trim4_val_962.8700 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %new_node_ptr.8697)
  %alloc_bytes.8701 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8702 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8701 to i64
  %new_node_ptr.8703 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8702 monotonic
  %new_node_ptr.8704 = inttoptr i64 %new_node_ptr.8703 to i64*
  %tag.8705 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_962.8700, 0
  %ptr_CGrString.8706 = bitcast i64* %new_node_ptr.8704 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_962.8700, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8706, align 1
  %idr_Prelude.Strings.trim4_val_961.8707 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8704)
  %alloc_bytes.8708 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8709 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8708 to i64
  %new_node_ptr.8710 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8709 monotonic
  %new_node_ptr.8711 = inttoptr i64 %new_node_ptr.8710 to i64*
  %tag.8712 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_961.8707, 0
  %ptr_CGrString.8713 = bitcast i64* %new_node_ptr.8711 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_961.8707, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8713, align 1
  %result.Cidr_Prelude.Bool.False.8714 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.8213, i64* %new_node_ptr.8711)
  br label %block.exit.10313

block.Cidr_Prelude.Bool.True.8715:                ; preds = %block.exit.7714
  %alloc_bytes.8716 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8717 = ptrtoint <{ i64 }>* %alloc_bytes.8716 to i64
  %new_node_ptr.8718 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8717 monotonic
  %new_node_ptr.8719 = inttoptr i64 %new_node_ptr.8718 to i64*
  %tag.8720 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.8721 = bitcast i64* %new_node_ptr.8719 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.8721, align 1
  %idr_Prelude.Strings.trim4_val_1086.8722 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8723 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8724 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8723 to i64
  %new_node_ptr.8725 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8724 monotonic
  %new_node_ptr.8726 = inttoptr i64 %new_node_ptr.8725 to i64*
  %tag.8727 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1086.8722, 0
  %ptr_CGrString.8728 = bitcast i64* %new_node_ptr.8726 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1086.8722, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8728, align 1
  %node_CGrString.8729 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.8730 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8731 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8730 to i64
  %new_node_ptr.8732 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8731 monotonic
  %new_node_ptr.8733 = inttoptr i64 %new_node_ptr.8732 to i64*
  %tag.8734 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8729, 0
  %ptr_CGrString.8735 = bitcast i64* %new_node_ptr.8733 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8729, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8735, align 1
  %idr_Prelude.Strings.trim4_val_1085.8736 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.8726, i64* %new_node_ptr.8733)
  %alloc_bytes.8737 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8738 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8737 to i64
  %new_node_ptr.8739 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8738 monotonic
  %new_node_ptr.8740 = inttoptr i64 %new_node_ptr.8739 to i64*
  %tag.8741 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_1085.8736, 0
  %ptr_CGrInt.8742 = bitcast i64* %new_node_ptr.8740 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_1085.8736, <{ i64, [1 x i64] }>* %ptr_CGrInt.8742, align 1
  %tag.8743 = load i64, i64* %new_node_ptr.8740, align 1
  %ptr_CGrInt.8744 = bitcast i64* %new_node_ptr.8740 to <{ i64, [1 x i64] }>*
  %node_CGrInt.8745 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.8744, align 1
  %tag.8746 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8745, 0
  switch i64 %tag.8746, label %error_block [
    i64 2, label %block.CGrInt.8747
  ]

block.CGrInt.8747:                                ; preds = %block.Cidr_Prelude.Bool.True.8715
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1092 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8745, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1092, label %block.default.8748 [
    i64 0, label %block.int_0.8749
  ]

block.default.8748:                               ; preds = %block.CGrInt.8747
  br label %block.exit.8750

block.int_0.8749:                                 ; preds = %block.CGrInt.8747
  br label %block.exit.8750

block.exit.8750:                                  ; preds = %block.int_0.8749, %block.default.8748
  %result.CGrInt.8751 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.8748 ], [ <{ i64 7 }>, %block.int_0.8749 ]
  br label %block.exit.8752

block.exit.8752:                                  ; preds = %block.exit.8750
  %idr_Prelude.Strings.trim4_val_1084.8753 = phi <{ i64 }> [ %result.CGrInt.8751, %block.exit.8750 ]
  %alloc_bytes.8754 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8755 = ptrtoint <{ i64 }>* %alloc_bytes.8754 to i64
  %new_node_ptr.8756 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8755 monotonic
  %new_node_ptr.8757 = inttoptr i64 %new_node_ptr.8756 to i64*
  %tag.8758 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_1084.8753, 0
  switch i64 %tag.8758, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8759
    i64 7, label %block.Cidr_Prelude.Bool.True.8761
  ]

block.Cidr_Prelude.Bool.False.8759:               ; preds = %block.exit.8752
  %ptr_Cidr_Prelude.Bool.False.8760 = bitcast i64* %new_node_ptr.8757 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1084.8753, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8760, align 1
  br label %block.exit.8763

block.Cidr_Prelude.Bool.True.8761:                ; preds = %block.exit.8752
  %ptr_Cidr_Prelude.Bool.True.8762 = bitcast i64* %new_node_ptr.8757 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1084.8753, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8762, align 1
  br label %block.exit.8763

block.exit.8763:                                  ; preds = %block.Cidr_Prelude.Bool.True.8761, %block.Cidr_Prelude.Bool.False.8759
  %alloc_bytes.8764 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8765 = ptrtoint <{ i64 }>* %alloc_bytes.8764 to i64
  %new_node_ptr.8766 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8765 monotonic
  %new_node_ptr.8767 = inttoptr i64 %new_node_ptr.8766 to i64*
  %tag.8768 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.8769 = bitcast i64* %new_node_ptr.8767 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8769, align 1
  %idr_Prelude.Strings.trim4_val_1083.8770 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.8757, i64* %new_node_ptr.8767)
  %alloc_bytes.8771 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8772 = ptrtoint <{ i64 }>* %alloc_bytes.8771 to i64
  %new_node_ptr.8773 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8772 monotonic
  %new_node_ptr.8774 = inttoptr i64 %new_node_ptr.8773 to i64*
  %tag.8775 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_1083.8770, 0
  switch i64 %tag.8775, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8776
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8778
  ]

block.Cidr_Prelude.Basics.No.8776:                ; preds = %block.exit.8763
  %ptr_Cidr_Prelude.Basics.No.8777 = bitcast i64* %new_node_ptr.8774 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1083.8770, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8777, align 1
  br label %block.exit.8780

block.Cidr_Prelude.Basics.Yes.8778:               ; preds = %block.exit.8763
  %ptr_Cidr_Prelude.Basics.Yes.8779 = bitcast i64* %new_node_ptr.8774 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1083.8770, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8779, align 1
  br label %block.exit.8780

block.exit.8780:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8778, %block.Cidr_Prelude.Basics.No.8776
  %tag.8781 = load i64, i64* %new_node_ptr.8774, align 1
  switch i64 %tag.8781, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8782
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8785
  ]

block.Cidr_Prelude.Basics.No.8782:                ; preds = %block.exit.8780
  %ptr_Cidr_Prelude.Basics.No.8783 = bitcast i64* %new_node_ptr.8774 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.8784 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8783, align 1
  br label %block.exit.8788

block.Cidr_Prelude.Basics.Yes.8785:               ; preds = %block.exit.8780
  %ptr_Cidr_Prelude.Basics.Yes.8786 = bitcast i64* %new_node_ptr.8774 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.8787 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8786, align 1
  br label %block.exit.8788

block.exit.8788:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8785, %block.Cidr_Prelude.Basics.No.8782
  %idr_Prelude.Strings.trim4_val_1097.8789 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.8784, %block.Cidr_Prelude.Basics.No.8782 ], [ %node_Cidr_Prelude.Basics.Yes.8787, %block.Cidr_Prelude.Basics.Yes.8785 ]
  %tag.8790 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_1097.8789, 0
  switch i64 %tag.8790, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8791
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8793
  ]

block.Cidr_Prelude.Basics.No.8791:                ; preds = %block.exit.8788
  %node_CGrString.8792 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.9198

block.Cidr_Prelude.Basics.Yes.8793:               ; preds = %block.exit.8788
  %idr_Prelude.Strings.trim5_val_1100.8794 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8795 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8796 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8795 to i64
  %new_node_ptr.8797 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8796 monotonic
  %new_node_ptr.8798 = inttoptr i64 %new_node_ptr.8797 to i64*
  %tag.8799 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1100.8794, 0
  %ptr_CGrString.8800 = bitcast i64* %new_node_ptr.8798 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1100.8794, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8800, align 1
  %idr_Prelude.Strings.trim5_val_1099.8801 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8798)
  %alloc_bytes.8802 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8803 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8802 to i64
  %new_node_ptr.8804 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8803 monotonic
  %new_node_ptr.8805 = inttoptr i64 %new_node_ptr.8804 to i64*
  %tag.8806 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_1099.8801, 0
  %ptr_CGrInt.8807 = bitcast i64* %new_node_ptr.8805 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_1099.8801, <{ i64, [1 x i64] }>* %ptr_CGrInt.8807, align 1
  %idr_Prelude.Strings.trim5_val_1098.8808 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.8805)
  %alloc_bytes.8809 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8810 = ptrtoint <{ i64 }>* %alloc_bytes.8809 to i64
  %new_node_ptr.8811 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8810 monotonic
  %new_node_ptr.8812 = inttoptr i64 %new_node_ptr.8811 to i64*
  %tag.8813 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_1098.8808, 0
  switch i64 %tag.8813, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8814
    i64 7, label %block.Cidr_Prelude.Bool.True.8816
  ]

block.Cidr_Prelude.Bool.False.8814:               ; preds = %block.Cidr_Prelude.Basics.Yes.8793
  %ptr_Cidr_Prelude.Bool.False.8815 = bitcast i64* %new_node_ptr.8812 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_1098.8808, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8815, align 1
  br label %block.exit.8818

block.Cidr_Prelude.Bool.True.8816:                ; preds = %block.Cidr_Prelude.Basics.Yes.8793
  %ptr_Cidr_Prelude.Bool.True.8817 = bitcast i64* %new_node_ptr.8812 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_1098.8808, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8817, align 1
  br label %block.exit.8818

block.exit.8818:                                  ; preds = %block.Cidr_Prelude.Bool.True.8816, %block.Cidr_Prelude.Bool.False.8814
  %tag.8819 = load i64, i64* %new_node_ptr.8812, align 1
  switch i64 %tag.8819, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8820
    i64 7, label %block.Cidr_Prelude.Bool.True.8823
  ]

block.Cidr_Prelude.Bool.False.8820:               ; preds = %block.exit.8818
  %ptr_Cidr_Prelude.Bool.False.8821 = bitcast i64* %new_node_ptr.8812 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.8822 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8821, align 1
  br label %block.exit.8826

block.Cidr_Prelude.Bool.True.8823:                ; preds = %block.exit.8818
  %ptr_Cidr_Prelude.Bool.True.8824 = bitcast i64* %new_node_ptr.8812 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.8825 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8824, align 1
  br label %block.exit.8826

block.exit.8826:                                  ; preds = %block.Cidr_Prelude.Bool.True.8823, %block.Cidr_Prelude.Bool.False.8820
  %idr_Prelude.Strings.trim5_val_1104.8827 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.8822, %block.Cidr_Prelude.Bool.False.8820 ], [ %node_Cidr_Prelude.Bool.True.8825, %block.Cidr_Prelude.Bool.True.8823 ]
  %tag.8828 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_1104.8827, 0
  switch i64 %tag.8828, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8829
    i64 7, label %block.Cidr_Prelude.Bool.True.8859
  ]

block.Cidr_Prelude.Bool.False.8829:               ; preds = %block.exit.8826
  %idr_Prelude.Strings.trim6_val_1106.8830 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8831 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8832 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8831 to i64
  %new_node_ptr.8833 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8832 monotonic
  %new_node_ptr.8834 = inttoptr i64 %new_node_ptr.8833 to i64*
  %tag.8835 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1106.8830, 0
  %ptr_CGrString.8836 = bitcast i64* %new_node_ptr.8834 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1106.8830, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8836, align 1
  %idr_Prelude.Strings.trim6_val_1105.8837 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8834)
  %alloc_bytes.8838 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8839 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8838 to i64
  %new_node_ptr.8840 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8839 monotonic
  %new_node_ptr.8841 = inttoptr i64 %new_node_ptr.8840 to i64*
  %tag.8842 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1105.8837, 0
  %ptr_CGrInt.8843 = bitcast i64* %new_node_ptr.8841 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1105.8837, <{ i64, [1 x i64] }>* %ptr_CGrInt.8843, align 1
  %idr_Prelude.Strings.trim7_val_1110.8844 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8845 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8846 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8845 to i64
  %new_node_ptr.8847 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8846 monotonic
  %new_node_ptr.8848 = inttoptr i64 %new_node_ptr.8847 to i64*
  %tag.8849 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1110.8844, 0
  %ptr_CGrString.8850 = bitcast i64* %new_node_ptr.8848 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1110.8844, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8850, align 1
  %idr_Prelude.Strings.trim7_val_1109.8851 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8848)
  %alloc_bytes.8852 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8853 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8852 to i64
  %new_node_ptr.8854 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8853 monotonic
  %new_node_ptr.8855 = inttoptr i64 %new_node_ptr.8854 to i64*
  %tag.8856 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1109.8851, 0
  %ptr_CGrString.8857 = bitcast i64* %new_node_ptr.8855 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1109.8851, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8857, align 1
  %result.Cidr_Prelude.Bool.False.8858 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.8841, i64* %new_node_ptr.8855)
  br label %block.exit.9196

block.Cidr_Prelude.Bool.True.8859:                ; preds = %block.exit.8826
  %idr_Prelude.Strings.trim6_val_1117.8860 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8861 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8862 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8861 to i64
  %new_node_ptr.8863 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8862 monotonic
  %new_node_ptr.8864 = inttoptr i64 %new_node_ptr.8863 to i64*
  %tag.8865 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1117.8860, 0
  %ptr_CGrString.8866 = bitcast i64* %new_node_ptr.8864 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1117.8860, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8866, align 1
  %idr_Prelude.Strings.trim6_val_1116.8867 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8864)
  %alloc_bytes.8868 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8869 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8868 to i64
  %new_node_ptr.8870 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8869 monotonic
  %new_node_ptr.8871 = inttoptr i64 %new_node_ptr.8870 to i64*
  %tag.8872 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1116.8867, 0
  %ptr_CGrString.8873 = bitcast i64* %new_node_ptr.8871 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1116.8867, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8873, align 1
  %node_CGrString.8874 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.8875 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8876 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8875 to i64
  %new_node_ptr.8877 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8876 monotonic
  %new_node_ptr.8878 = inttoptr i64 %new_node_ptr.8877 to i64*
  %tag.8879 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8874, 0
  %ptr_CGrString.8880 = bitcast i64* %new_node_ptr.8878 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.8874, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8880, align 1
  %idr_Prelude.Strings.trim6_val_1115.8881 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.8871, i64* %new_node_ptr.8878)
  %alloc_bytes.8882 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8883 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8882 to i64
  %new_node_ptr.8884 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8883 monotonic
  %new_node_ptr.8885 = inttoptr i64 %new_node_ptr.8884 to i64*
  %tag.8886 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1115.8881, 0
  %ptr_CGrInt.8887 = bitcast i64* %new_node_ptr.8885 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1115.8881, <{ i64, [1 x i64] }>* %ptr_CGrInt.8887, align 1
  %tag.8888 = load i64, i64* %new_node_ptr.8885, align 1
  %ptr_CGrInt.8889 = bitcast i64* %new_node_ptr.8885 to <{ i64, [1 x i64] }>*
  %node_CGrInt.8890 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.8889, align 1
  %tag.8891 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8890, 0
  switch i64 %tag.8891, label %error_block [
    i64 2, label %block.CGrInt.8892
  ]

block.CGrInt.8892:                                ; preds = %block.Cidr_Prelude.Bool.True.8859
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1124 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.8890, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1124, label %block.default.8893 [
    i64 0, label %block.int_0.8894
  ]

block.default.8893:                               ; preds = %block.CGrInt.8892
  br label %block.exit.8895

block.int_0.8894:                                 ; preds = %block.CGrInt.8892
  br label %block.exit.8895

block.exit.8895:                                  ; preds = %block.int_0.8894, %block.default.8893
  %result.CGrInt.8896 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.8893 ], [ <{ i64 7 }>, %block.int_0.8894 ]
  br label %block.exit.8897

block.exit.8897:                                  ; preds = %block.exit.8895
  %idr_Prelude.Strings.trim6_val_1114.8898 = phi <{ i64 }> [ %result.CGrInt.8896, %block.exit.8895 ]
  %alloc_bytes.8899 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8900 = ptrtoint <{ i64 }>* %alloc_bytes.8899 to i64
  %new_node_ptr.8901 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8900 monotonic
  %new_node_ptr.8902 = inttoptr i64 %new_node_ptr.8901 to i64*
  %tag.8903 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1114.8898, 0
  switch i64 %tag.8903, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8904
    i64 7, label %block.Cidr_Prelude.Bool.True.8906
  ]

block.Cidr_Prelude.Bool.False.8904:               ; preds = %block.exit.8897
  %ptr_Cidr_Prelude.Bool.False.8905 = bitcast i64* %new_node_ptr.8902 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1114.8898, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8905, align 1
  br label %block.exit.8908

block.Cidr_Prelude.Bool.True.8906:                ; preds = %block.exit.8897
  %ptr_Cidr_Prelude.Bool.True.8907 = bitcast i64* %new_node_ptr.8902 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1114.8898, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8907, align 1
  br label %block.exit.8908

block.exit.8908:                                  ; preds = %block.Cidr_Prelude.Bool.True.8906, %block.Cidr_Prelude.Bool.False.8904
  %alloc_bytes.8909 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8910 = ptrtoint <{ i64 }>* %alloc_bytes.8909 to i64
  %new_node_ptr.8911 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8910 monotonic
  %new_node_ptr.8912 = inttoptr i64 %new_node_ptr.8911 to i64*
  %tag.8913 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.8914 = bitcast i64* %new_node_ptr.8912 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8914, align 1
  %idr_Prelude.Strings.trim6_val_1113.8915 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.8902, i64* %new_node_ptr.8912)
  %alloc_bytes.8916 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8917 = ptrtoint <{ i64 }>* %alloc_bytes.8916 to i64
  %new_node_ptr.8918 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8917 monotonic
  %new_node_ptr.8919 = inttoptr i64 %new_node_ptr.8918 to i64*
  %tag.8920 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1113.8915, 0
  switch i64 %tag.8920, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8921
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8923
  ]

block.Cidr_Prelude.Basics.No.8921:                ; preds = %block.exit.8908
  %ptr_Cidr_Prelude.Basics.No.8922 = bitcast i64* %new_node_ptr.8919 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1113.8915, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8922, align 1
  br label %block.exit.8925

block.Cidr_Prelude.Basics.Yes.8923:               ; preds = %block.exit.8908
  %ptr_Cidr_Prelude.Basics.Yes.8924 = bitcast i64* %new_node_ptr.8919 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1113.8915, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8924, align 1
  br label %block.exit.8925

block.exit.8925:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8923, %block.Cidr_Prelude.Basics.No.8921
  %tag.8926 = load i64, i64* %new_node_ptr.8919, align 1
  switch i64 %tag.8926, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8927
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8930
  ]

block.Cidr_Prelude.Basics.No.8927:                ; preds = %block.exit.8925
  %ptr_Cidr_Prelude.Basics.No.8928 = bitcast i64* %new_node_ptr.8919 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.8929 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.8928, align 1
  br label %block.exit.8933

block.Cidr_Prelude.Basics.Yes.8930:               ; preds = %block.exit.8925
  %ptr_Cidr_Prelude.Basics.Yes.8931 = bitcast i64* %new_node_ptr.8919 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.8932 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.8931, align 1
  br label %block.exit.8933

block.exit.8933:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.8930, %block.Cidr_Prelude.Basics.No.8927
  %idr_Prelude.Strings.trim6_val_1129.8934 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.8929, %block.Cidr_Prelude.Basics.No.8927 ], [ %node_Cidr_Prelude.Basics.Yes.8932, %block.Cidr_Prelude.Basics.Yes.8930 ]
  %tag.8935 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1129.8934, 0
  switch i64 %tag.8935, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.8936
    i64 27, label %block.Cidr_Prelude.Basics.Yes.8938
  ]

block.Cidr_Prelude.Basics.No.8936:                ; preds = %block.exit.8933
  %node_CGrString.8937 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.9194

block.Cidr_Prelude.Basics.Yes.8938:               ; preds = %block.exit.8933
  %idr_Prelude.Strings.trim7_val_1133.8939 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8940 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8941 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8940 to i64
  %new_node_ptr.8942 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8941 monotonic
  %new_node_ptr.8943 = inttoptr i64 %new_node_ptr.8942 to i64*
  %tag.8944 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1133.8939, 0
  %ptr_CGrString.8945 = bitcast i64* %new_node_ptr.8943 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1133.8939, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8945, align 1
  %idr_Prelude.Strings.trim7_val_1132.8946 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8943)
  %alloc_bytes.8947 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8948 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8947 to i64
  %new_node_ptr.8949 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8948 monotonic
  %new_node_ptr.8950 = inttoptr i64 %new_node_ptr.8949 to i64*
  %tag.8951 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1132.8946, 0
  %ptr_CGrString.8952 = bitcast i64* %new_node_ptr.8950 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1132.8946, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8952, align 1
  %idr_Prelude.Strings.trim7_val_1131.8953 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8950)
  %alloc_bytes.8954 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8955 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8954 to i64
  %new_node_ptr.8956 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8955 monotonic
  %new_node_ptr.8957 = inttoptr i64 %new_node_ptr.8956 to i64*
  %tag.8958 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1131.8953, 0
  %ptr_CGrInt.8959 = bitcast i64* %new_node_ptr.8957 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1131.8953, <{ i64, [1 x i64] }>* %ptr_CGrInt.8959, align 1
  %idr_Prelude.Strings.trim7_val_1130.8960 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.8957)
  %alloc_bytes.8961 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.8962 = ptrtoint <{ i64 }>* %alloc_bytes.8961 to i64
  %new_node_ptr.8963 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8962 monotonic
  %new_node_ptr.8964 = inttoptr i64 %new_node_ptr.8963 to i64*
  %tag.8965 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1130.8960, 0
  switch i64 %tag.8965, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8966
    i64 7, label %block.Cidr_Prelude.Bool.True.8968
  ]

block.Cidr_Prelude.Bool.False.8966:               ; preds = %block.Cidr_Prelude.Basics.Yes.8938
  %ptr_Cidr_Prelude.Bool.False.8967 = bitcast i64* %new_node_ptr.8964 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1130.8960, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8967, align 1
  br label %block.exit.8970

block.Cidr_Prelude.Bool.True.8968:                ; preds = %block.Cidr_Prelude.Basics.Yes.8938
  %ptr_Cidr_Prelude.Bool.True.8969 = bitcast i64* %new_node_ptr.8964 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1130.8960, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8969, align 1
  br label %block.exit.8970

block.exit.8970:                                  ; preds = %block.Cidr_Prelude.Bool.True.8968, %block.Cidr_Prelude.Bool.False.8966
  %tag.8971 = load i64, i64* %new_node_ptr.8964, align 1
  switch i64 %tag.8971, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8972
    i64 7, label %block.Cidr_Prelude.Bool.True.8975
  ]

block.Cidr_Prelude.Bool.False.8972:               ; preds = %block.exit.8970
  %ptr_Cidr_Prelude.Bool.False.8973 = bitcast i64* %new_node_ptr.8964 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.8974 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.8973, align 1
  br label %block.exit.8978

block.Cidr_Prelude.Bool.True.8975:                ; preds = %block.exit.8970
  %ptr_Cidr_Prelude.Bool.True.8976 = bitcast i64* %new_node_ptr.8964 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.8977 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.8976, align 1
  br label %block.exit.8978

block.exit.8978:                                  ; preds = %block.Cidr_Prelude.Bool.True.8975, %block.Cidr_Prelude.Bool.False.8972
  %idr_Prelude.Strings.trim7_val_1138.8979 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.8974, %block.Cidr_Prelude.Bool.False.8972 ], [ %node_Cidr_Prelude.Bool.True.8977, %block.Cidr_Prelude.Bool.True.8975 ]
  %tag.8980 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1138.8979, 0
  switch i64 %tag.8980, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.8981
    i64 7, label %block.Cidr_Prelude.Bool.True.9025
  ]

block.Cidr_Prelude.Bool.False.8981:               ; preds = %block.exit.8978
  %idr_Prelude.Strings.trim8_val_1141.8982 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.8983 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8984 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8983 to i64
  %new_node_ptr.8985 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8984 monotonic
  %new_node_ptr.8986 = inttoptr i64 %new_node_ptr.8985 to i64*
  %tag.8987 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1141.8982, 0
  %ptr_CGrString.8988 = bitcast i64* %new_node_ptr.8986 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1141.8982, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8988, align 1
  %idr_Prelude.Strings.trim8_val_1140.8989 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.8986)
  %alloc_bytes.8990 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.8991 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.8990 to i64
  %new_node_ptr.8992 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8991 monotonic
  %new_node_ptr.8993 = inttoptr i64 %new_node_ptr.8992 to i64*
  %tag.8994 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1140.8989, 0
  %ptr_CGrString.8995 = bitcast i64* %new_node_ptr.8993 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1140.8989, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.8995, align 1
  %idr_Prelude.Strings.trim8_val_1139.8996 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.8993)
  %alloc_bytes.8997 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.8998 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.8997 to i64
  %new_node_ptr.8999 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.8998 monotonic
  %new_node_ptr.9000 = inttoptr i64 %new_node_ptr.8999 to i64*
  %tag.9001 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1139.8996, 0
  %ptr_CGrInt.9002 = bitcast i64* %new_node_ptr.9000 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1139.8996, <{ i64, [1 x i64] }>* %ptr_CGrInt.9002, align 1
  %idr_Prelude.Strings.trim9_val_1147.9003 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9004 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9005 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9004 to i64
  %new_node_ptr.9006 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9005 monotonic
  %new_node_ptr.9007 = inttoptr i64 %new_node_ptr.9006 to i64*
  %tag.9008 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1147.9003, 0
  %ptr_CGrString.9009 = bitcast i64* %new_node_ptr.9007 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1147.9003, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9009, align 1
  %idr_Prelude.Strings.trim9_val_1146.9010 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9007)
  %alloc_bytes.9011 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9012 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9011 to i64
  %new_node_ptr.9013 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9012 monotonic
  %new_node_ptr.9014 = inttoptr i64 %new_node_ptr.9013 to i64*
  %tag.9015 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1146.9010, 0
  %ptr_CGrString.9016 = bitcast i64* %new_node_ptr.9014 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1146.9010, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9016, align 1
  %idr_Prelude.Strings.trim9_val_1145.9017 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9014)
  %alloc_bytes.9018 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9019 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9018 to i64
  %new_node_ptr.9020 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9019 monotonic
  %new_node_ptr.9021 = inttoptr i64 %new_node_ptr.9020 to i64*
  %tag.9022 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1145.9017, 0
  %ptr_CGrString.9023 = bitcast i64* %new_node_ptr.9021 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1145.9017, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9023, align 1
  %result.Cidr_Prelude.Bool.False.9024 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.9000, i64* %new_node_ptr.9021)
  br label %block.exit.9192

block.Cidr_Prelude.Bool.True.9025:                ; preds = %block.exit.8978
  %alloc_bytes.9026 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9027 = ptrtoint <{ i64 }>* %alloc_bytes.9026 to i64
  %new_node_ptr.9028 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9027 monotonic
  %new_node_ptr.9029 = inttoptr i64 %new_node_ptr.9028 to i64*
  %tag.9030 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.9031 = bitcast i64* %new_node_ptr.9029 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.9031, align 1
  %idr_Prelude.Strings.trim9_val_1159.9032 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9033 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9034 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9033 to i64
  %new_node_ptr.9035 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9034 monotonic
  %new_node_ptr.9036 = inttoptr i64 %new_node_ptr.9035 to i64*
  %tag.9037 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1159.9032, 0
  %ptr_CGrString.9038 = bitcast i64* %new_node_ptr.9036 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1159.9032, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9038, align 1
  %idr_Prelude.Strings.trim9_val_1158.9039 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9036)
  %alloc_bytes.9040 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9041 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9040 to i64
  %new_node_ptr.9042 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9041 monotonic
  %new_node_ptr.9043 = inttoptr i64 %new_node_ptr.9042 to i64*
  %tag.9044 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1158.9039, 0
  %ptr_CGrString.9045 = bitcast i64* %new_node_ptr.9043 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1158.9039, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9045, align 1
  %idr_Prelude.Strings.trim9_val_1157.9046 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9043)
  %alloc_bytes.9047 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9048 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9047 to i64
  %new_node_ptr.9049 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9048 monotonic
  %new_node_ptr.9050 = inttoptr i64 %new_node_ptr.9049 to i64*
  %tag.9051 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1157.9046, 0
  %ptr_CGrString.9052 = bitcast i64* %new_node_ptr.9050 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1157.9046, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9052, align 1
  %node_CGrString.9053 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.9054 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9055 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9054 to i64
  %new_node_ptr.9056 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9055 monotonic
  %new_node_ptr.9057 = inttoptr i64 %new_node_ptr.9056 to i64*
  %tag.9058 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9053, 0
  %ptr_CGrString.9059 = bitcast i64* %new_node_ptr.9057 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9053, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9059, align 1
  %idr_Prelude.Strings.trim9_val_1156.9060 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.9050, i64* %new_node_ptr.9057)
  %alloc_bytes.9061 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9062 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9061 to i64
  %new_node_ptr.9063 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9062 monotonic
  %new_node_ptr.9064 = inttoptr i64 %new_node_ptr.9063 to i64*
  %tag.9065 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1156.9060, 0
  %ptr_CGrInt.9066 = bitcast i64* %new_node_ptr.9064 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1156.9060, <{ i64, [1 x i64] }>* %ptr_CGrInt.9066, align 1
  %tag.9067 = load i64, i64* %new_node_ptr.9064, align 1
  %ptr_CGrInt.9068 = bitcast i64* %new_node_ptr.9064 to <{ i64, [1 x i64] }>*
  %node_CGrInt.9069 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.9068, align 1
  %tag.9070 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9069, 0
  switch i64 %tag.9070, label %error_block [
    i64 2, label %block.CGrInt.9071
  ]

block.CGrInt.9071:                                ; preds = %block.Cidr_Prelude.Bool.True.9025
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1167 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9069, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1167, label %block.default.9072 [
    i64 0, label %block.int_0.9073
  ]

block.default.9072:                               ; preds = %block.CGrInt.9071
  br label %block.exit.9074

block.int_0.9073:                                 ; preds = %block.CGrInt.9071
  br label %block.exit.9074

block.exit.9074:                                  ; preds = %block.int_0.9073, %block.default.9072
  %result.CGrInt.9075 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.9072 ], [ <{ i64 7 }>, %block.int_0.9073 ]
  br label %block.exit.9076

block.exit.9076:                                  ; preds = %block.exit.9074
  %idr_Prelude.Strings.trim9_val_1155.9077 = phi <{ i64 }> [ %result.CGrInt.9075, %block.exit.9074 ]
  %alloc_bytes.9078 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9079 = ptrtoint <{ i64 }>* %alloc_bytes.9078 to i64
  %new_node_ptr.9080 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9079 monotonic
  %new_node_ptr.9081 = inttoptr i64 %new_node_ptr.9080 to i64*
  %tag.9082 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1155.9077, 0
  switch i64 %tag.9082, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9083
    i64 7, label %block.Cidr_Prelude.Bool.True.9085
  ]

block.Cidr_Prelude.Bool.False.9083:               ; preds = %block.exit.9076
  %ptr_Cidr_Prelude.Bool.False.9084 = bitcast i64* %new_node_ptr.9081 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1155.9077, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9084, align 1
  br label %block.exit.9087

block.Cidr_Prelude.Bool.True.9085:                ; preds = %block.exit.9076
  %ptr_Cidr_Prelude.Bool.True.9086 = bitcast i64* %new_node_ptr.9081 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1155.9077, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9086, align 1
  br label %block.exit.9087

block.exit.9087:                                  ; preds = %block.Cidr_Prelude.Bool.True.9085, %block.Cidr_Prelude.Bool.False.9083
  %alloc_bytes.9088 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9089 = ptrtoint <{ i64 }>* %alloc_bytes.9088 to i64
  %new_node_ptr.9090 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9089 monotonic
  %new_node_ptr.9091 = inttoptr i64 %new_node_ptr.9090 to i64*
  %tag.9092 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.9093 = bitcast i64* %new_node_ptr.9091 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9093, align 1
  %idr_Prelude.Strings.trim9_val_1154.9094 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.9081, i64* %new_node_ptr.9091)
  %alloc_bytes.9095 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9096 = ptrtoint <{ i64 }>* %alloc_bytes.9095 to i64
  %new_node_ptr.9097 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9096 monotonic
  %new_node_ptr.9098 = inttoptr i64 %new_node_ptr.9097 to i64*
  %tag.9099 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1154.9094, 0
  switch i64 %tag.9099, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9100
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9102
  ]

block.Cidr_Prelude.Basics.No.9100:                ; preds = %block.exit.9087
  %ptr_Cidr_Prelude.Basics.No.9101 = bitcast i64* %new_node_ptr.9098 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1154.9094, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9101, align 1
  br label %block.exit.9104

block.Cidr_Prelude.Basics.Yes.9102:               ; preds = %block.exit.9087
  %ptr_Cidr_Prelude.Basics.Yes.9103 = bitcast i64* %new_node_ptr.9098 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1154.9094, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9103, align 1
  br label %block.exit.9104

block.exit.9104:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9102, %block.Cidr_Prelude.Basics.No.9100
  %tag.9105 = load i64, i64* %new_node_ptr.9098, align 1
  switch i64 %tag.9105, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9106
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9109
  ]

block.Cidr_Prelude.Basics.No.9106:                ; preds = %block.exit.9104
  %ptr_Cidr_Prelude.Basics.No.9107 = bitcast i64* %new_node_ptr.9098 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.9108 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9107, align 1
  br label %block.exit.9112

block.Cidr_Prelude.Basics.Yes.9109:               ; preds = %block.exit.9104
  %ptr_Cidr_Prelude.Basics.Yes.9110 = bitcast i64* %new_node_ptr.9098 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.9111 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9110, align 1
  br label %block.exit.9112

block.exit.9112:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9109, %block.Cidr_Prelude.Basics.No.9106
  %idr_Prelude.Strings.trim9_val_1172.9113 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.9108, %block.Cidr_Prelude.Basics.No.9106 ], [ %node_Cidr_Prelude.Basics.Yes.9111, %block.Cidr_Prelude.Basics.Yes.9109 ]
  %tag.9114 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1172.9113, 0
  switch i64 %tag.9114, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9115
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9116
  ]

block.Cidr_Prelude.Basics.No.9115:                ; preds = %block.exit.9112
  %src.9176 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.9177 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.9176, 0
  br label %block.exit.9175

block.Cidr_Prelude.Basics.Yes.9116:               ; preds = %block.exit.9112
  %idr_Prelude.Strings.trim10_val_1176.9117 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9118 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9119 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9118 to i64
  %new_node_ptr.9120 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9119 monotonic
  %new_node_ptr.9121 = inttoptr i64 %new_node_ptr.9120 to i64*
  %tag.9122 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1176.9117, 0
  %ptr_CGrString.9123 = bitcast i64* %new_node_ptr.9121 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1176.9117, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9123, align 1
  %idr_Prelude.Strings.trim10_val_1175.9124 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9121)
  %alloc_bytes.9125 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9126 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9125 to i64
  %new_node_ptr.9127 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9126 monotonic
  %new_node_ptr.9128 = inttoptr i64 %new_node_ptr.9127 to i64*
  %tag.9129 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1175.9124, 0
  %ptr_CGrString.9130 = bitcast i64* %new_node_ptr.9128 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1175.9124, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9130, align 1
  %idr_Prelude.Strings.trim10_val_1174.9131 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9128)
  %alloc_bytes.9132 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9133 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9132 to i64
  %new_node_ptr.9134 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9133 monotonic
  %new_node_ptr.9135 = inttoptr i64 %new_node_ptr.9134 to i64*
  %tag.9136 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1174.9131, 0
  %ptr_CGrString.9137 = bitcast i64* %new_node_ptr.9135 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1174.9131, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9137, align 1
  %idr_Prelude.Strings.trim10_val_1173.9138 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9135)
  %alloc_bytes.9139 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9140 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9139 to i64
  %new_node_ptr.9141 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9140 monotonic
  %new_node_ptr.9142 = inttoptr i64 %new_node_ptr.9141 to i64*
  %tag.9143 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1173.9138, 0
  %ptr_CGrInt.9144 = bitcast i64* %new_node_ptr.9142 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1173.9138, <{ i64, [1 x i64] }>* %ptr_CGrInt.9144, align 1
  %idr_Prelude.Strings.trim11_val_1184.9145 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9146 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9147 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9146 to i64
  %new_node_ptr.9148 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9147 monotonic
  %new_node_ptr.9149 = inttoptr i64 %new_node_ptr.9148 to i64*
  %tag.9150 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1184.9145, 0
  %ptr_CGrString.9151 = bitcast i64* %new_node_ptr.9149 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1184.9145, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9151, align 1
  %idr_Prelude.Strings.trim11_val_1183.9152 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9149)
  %alloc_bytes.9153 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9154 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9153 to i64
  %new_node_ptr.9155 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9154 monotonic
  %new_node_ptr.9156 = inttoptr i64 %new_node_ptr.9155 to i64*
  %tag.9157 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1183.9152, 0
  %ptr_CGrString.9158 = bitcast i64* %new_node_ptr.9156 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1183.9152, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9158, align 1
  %idr_Prelude.Strings.trim11_val_1182.9159 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9156)
  %alloc_bytes.9160 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9161 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9160 to i64
  %new_node_ptr.9162 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9161 monotonic
  %new_node_ptr.9163 = inttoptr i64 %new_node_ptr.9162 to i64*
  %tag.9164 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1182.9159, 0
  %ptr_CGrString.9165 = bitcast i64* %new_node_ptr.9163 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1182.9159, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9165, align 1
  %idr_Prelude.Strings.trim11_val_1181.9166 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9163)
  %alloc_bytes.9167 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9168 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9167 to i64
  %new_node_ptr.9169 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9168 monotonic
  %new_node_ptr.9170 = inttoptr i64 %new_node_ptr.9169 to i64*
  %tag.9171 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1181.9166, 0
  %ptr_CGrString.9172 = bitcast i64* %new_node_ptr.9170 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1181.9166, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9172, align 1
  %node_Cidr_Prelude.Strings.StrCons.9173 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.9142, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.9174 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.9173, i64* %new_node_ptr.9170, 1, 1
  br label %block.exit.9175

block.exit.9175:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9116, %block.Cidr_Prelude.Basics.No.9115
  %idr_Prelude.Strings.trim9_val_1153.9178 = phi <{ i64, [2 x i64*] }> [ %dst.9177, %block.Cidr_Prelude.Basics.No.9115 ], [ %node_Cidr_Prelude.Strings.StrCons.9174, %block.Cidr_Prelude.Basics.Yes.9116 ]
  %alloc_bytes.9179 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.9180 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.9179 to i64
  %new_node_ptr.9181 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9180 monotonic
  %new_node_ptr.9182 = inttoptr i64 %new_node_ptr.9181 to i64*
  %tag.9183 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim9_val_1153.9178, 0
  switch i64 %tag.9183, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.9184
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.9186
  ]

block.Cidr_Prelude.Strings.StrCons.9184:          ; preds = %block.exit.9175
  %ptr_Cidr_Prelude.Strings.StrCons.9185 = bitcast i64* %new_node_ptr.9182 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim9_val_1153.9178, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.9185, align 1
  br label %block.exit.9190

block.Cidr_Prelude.Strings.StrNil.9186:           ; preds = %block.exit.9175
  %src.9187 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim9_val_1153.9178, 0
  %dst.9188 = insertvalue <{ i64 }> undef, i64 %src.9187, 0
  %ptr_Cidr_Prelude.Strings.StrNil.9189 = bitcast i64* %new_node_ptr.9182 to <{ i64 }>*
  store <{ i64 }> %dst.9188, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.9189, align 1
  br label %block.exit.9190

block.exit.9190:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.9186, %block.Cidr_Prelude.Strings.StrCons.9184
  %result.Cidr_Prelude.Bool.True.9191 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.9029, i64* %new_node_ptr.9182)
  br label %block.exit.9192

block.exit.9192:                                  ; preds = %block.exit.9190, %block.Cidr_Prelude.Bool.False.8981
  %result.Cidr_Prelude.Basics.Yes.9193 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.9024, %block.Cidr_Prelude.Bool.False.8981 ], [ %result.Cidr_Prelude.Bool.True.9191, %block.exit.9190 ]
  br label %block.exit.9194

block.exit.9194:                                  ; preds = %block.exit.9192, %block.Cidr_Prelude.Basics.No.8936
  %result.Cidr_Prelude.Bool.True.9195 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.8937, %block.Cidr_Prelude.Basics.No.8936 ], [ %result.Cidr_Prelude.Basics.Yes.9193, %block.exit.9192 ]
  br label %block.exit.9196

block.exit.9196:                                  ; preds = %block.exit.9194, %block.Cidr_Prelude.Bool.False.8829
  %result.Cidr_Prelude.Basics.Yes.9197 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.8858, %block.Cidr_Prelude.Bool.False.8829 ], [ %result.Cidr_Prelude.Bool.True.9195, %block.exit.9194 ]
  br label %block.exit.9198

block.exit.9198:                                  ; preds = %block.exit.9196, %block.Cidr_Prelude.Basics.No.8791
  %idr_Prelude.Strings.trim4_val_1082.9199 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.8792, %block.Cidr_Prelude.Basics.No.8791 ], [ %result.Cidr_Prelude.Basics.Yes.9197, %block.exit.9196 ]
  %alloc_bytes.9200 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9201 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9200 to i64
  %new_node_ptr.9202 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9201 monotonic
  %new_node_ptr.9203 = inttoptr i64 %new_node_ptr.9202 to i64*
  %tag.9204 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1082.9199, 0
  %ptr_CGrString.9205 = bitcast i64* %new_node_ptr.9203 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1082.9199, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9205, align 1
  %idr_Prelude.Strings.trim4_val_1081.9206 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %new_node_ptr.9203)
  %alloc_bytes.9207 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9208 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9207 to i64
  %new_node_ptr.9209 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9208 monotonic
  %new_node_ptr.9210 = inttoptr i64 %new_node_ptr.9209 to i64*
  %tag.9211 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1081.9206, 0
  %ptr_CGrString.9212 = bitcast i64* %new_node_ptr.9210 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1081.9206, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9212, align 1
  %idr_Prelude.Strings.trim4_val_1080.9213 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9210)
  %alloc_bytes.9214 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9215 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9214 to i64
  %new_node_ptr.9216 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9215 monotonic
  %new_node_ptr.9217 = inttoptr i64 %new_node_ptr.9216 to i64*
  %tag.9218 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1080.9213, 0
  %ptr_CGrString.9219 = bitcast i64* %new_node_ptr.9217 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim4_val_1080.9213, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9219, align 1
  %node_CGrString.9220 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.9221 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9222 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9221 to i64
  %new_node_ptr.9223 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9222 monotonic
  %new_node_ptr.9224 = inttoptr i64 %new_node_ptr.9223 to i64*
  %tag.9225 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9220, 0
  %ptr_CGrString.9226 = bitcast i64* %new_node_ptr.9224 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9220, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9226, align 1
  %idr_Prelude.Strings.trim4_val_1079.9227 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.9217, i64* %new_node_ptr.9224)
  %alloc_bytes.9228 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9229 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9228 to i64
  %new_node_ptr.9230 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9229 monotonic
  %new_node_ptr.9231 = inttoptr i64 %new_node_ptr.9230 to i64*
  %tag.9232 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_1079.9227, 0
  %ptr_CGrInt.9233 = bitcast i64* %new_node_ptr.9231 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim4_val_1079.9227, <{ i64, [1 x i64] }>* %ptr_CGrInt.9233, align 1
  %tag.9234 = load i64, i64* %new_node_ptr.9231, align 1
  %ptr_CGrInt.9235 = bitcast i64* %new_node_ptr.9231 to <{ i64, [1 x i64] }>*
  %node_CGrInt.9236 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.9235, align 1
  %tag.9237 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9236, 0
  switch i64 %tag.9237, label %error_block [
    i64 2, label %block.CGrInt.9238
  ]

block.CGrInt.9238:                                ; preds = %block.exit.9198
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1197 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9236, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1197, label %block.default.9239 [
    i64 0, label %block.int_0.9240
  ]

block.default.9239:                               ; preds = %block.CGrInt.9238
  br label %block.exit.9241

block.int_0.9240:                                 ; preds = %block.CGrInt.9238
  br label %block.exit.9241

block.exit.9241:                                  ; preds = %block.int_0.9240, %block.default.9239
  %result.CGrInt.9242 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.9239 ], [ <{ i64 7 }>, %block.int_0.9240 ]
  br label %block.exit.9243

block.exit.9243:                                  ; preds = %block.exit.9241
  %idr_Prelude.Strings.trim4_val_1078.9244 = phi <{ i64 }> [ %result.CGrInt.9242, %block.exit.9241 ]
  %alloc_bytes.9245 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9246 = ptrtoint <{ i64 }>* %alloc_bytes.9245 to i64
  %new_node_ptr.9247 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9246 monotonic
  %new_node_ptr.9248 = inttoptr i64 %new_node_ptr.9247 to i64*
  %tag.9249 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_1078.9244, 0
  switch i64 %tag.9249, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9250
    i64 7, label %block.Cidr_Prelude.Bool.True.9252
  ]

block.Cidr_Prelude.Bool.False.9250:               ; preds = %block.exit.9243
  %ptr_Cidr_Prelude.Bool.False.9251 = bitcast i64* %new_node_ptr.9248 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1078.9244, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9251, align 1
  br label %block.exit.9254

block.Cidr_Prelude.Bool.True.9252:                ; preds = %block.exit.9243
  %ptr_Cidr_Prelude.Bool.True.9253 = bitcast i64* %new_node_ptr.9248 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1078.9244, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9253, align 1
  br label %block.exit.9254

block.exit.9254:                                  ; preds = %block.Cidr_Prelude.Bool.True.9252, %block.Cidr_Prelude.Bool.False.9250
  %alloc_bytes.9255 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9256 = ptrtoint <{ i64 }>* %alloc_bytes.9255 to i64
  %new_node_ptr.9257 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9256 monotonic
  %new_node_ptr.9258 = inttoptr i64 %new_node_ptr.9257 to i64*
  %tag.9259 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.9260 = bitcast i64* %new_node_ptr.9258 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9260, align 1
  %idr_Prelude.Strings.trim4_val_1077.9261 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.9248, i64* %new_node_ptr.9258)
  %alloc_bytes.9262 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9263 = ptrtoint <{ i64 }>* %alloc_bytes.9262 to i64
  %new_node_ptr.9264 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9263 monotonic
  %new_node_ptr.9265 = inttoptr i64 %new_node_ptr.9264 to i64*
  %tag.9266 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_1077.9261, 0
  switch i64 %tag.9266, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9267
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9269
  ]

block.Cidr_Prelude.Basics.No.9267:                ; preds = %block.exit.9254
  %ptr_Cidr_Prelude.Basics.No.9268 = bitcast i64* %new_node_ptr.9265 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1077.9261, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9268, align 1
  br label %block.exit.9271

block.Cidr_Prelude.Basics.Yes.9269:               ; preds = %block.exit.9254
  %ptr_Cidr_Prelude.Basics.Yes.9270 = bitcast i64* %new_node_ptr.9265 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim4_val_1077.9261, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9270, align 1
  br label %block.exit.9271

block.exit.9271:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9269, %block.Cidr_Prelude.Basics.No.9267
  %tag.9272 = load i64, i64* %new_node_ptr.9265, align 1
  switch i64 %tag.9272, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9273
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9276
  ]

block.Cidr_Prelude.Basics.No.9273:                ; preds = %block.exit.9271
  %ptr_Cidr_Prelude.Basics.No.9274 = bitcast i64* %new_node_ptr.9265 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.9275 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9274, align 1
  br label %block.exit.9279

block.Cidr_Prelude.Basics.Yes.9276:               ; preds = %block.exit.9271
  %ptr_Cidr_Prelude.Basics.Yes.9277 = bitcast i64* %new_node_ptr.9265 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.9278 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9277, align 1
  br label %block.exit.9279

block.exit.9279:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9276, %block.Cidr_Prelude.Basics.No.9273
  %idr_Prelude.Strings.trim4_val_1202.9280 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.9275, %block.Cidr_Prelude.Basics.No.9273 ], [ %node_Cidr_Prelude.Basics.Yes.9278, %block.Cidr_Prelude.Basics.Yes.9276 ]
  %tag.9281 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim4_val_1202.9280, 0
  switch i64 %tag.9281, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9282
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9283
  ]

block.Cidr_Prelude.Basics.No.9282:                ; preds = %block.exit.9279
  %src.10297 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.10298 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10297, 0
  br label %block.exit.10296

block.Cidr_Prelude.Basics.Yes.9283:               ; preds = %block.exit.9279
  %idr_Prelude.Strings.trim5_val_1210.9284 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9285 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9286 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9285 to i64
  %new_node_ptr.9287 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9286 monotonic
  %new_node_ptr.9288 = inttoptr i64 %new_node_ptr.9287 to i64*
  %tag.9289 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1210.9284, 0
  %ptr_CGrString.9290 = bitcast i64* %new_node_ptr.9288 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1210.9284, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9290, align 1
  %node_CGrString.9291 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.9292 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9293 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9292 to i64
  %new_node_ptr.9294 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9293 monotonic
  %new_node_ptr.9295 = inttoptr i64 %new_node_ptr.9294 to i64*
  %tag.9296 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9291, 0
  %ptr_CGrString.9297 = bitcast i64* %new_node_ptr.9295 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9291, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9297, align 1
  %idr_Prelude.Strings.trim5_val_1209.9298 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.9288, i64* %new_node_ptr.9295)
  %alloc_bytes.9299 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9300 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9299 to i64
  %new_node_ptr.9301 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9300 monotonic
  %new_node_ptr.9302 = inttoptr i64 %new_node_ptr.9301 to i64*
  %tag.9303 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_1209.9298, 0
  %ptr_CGrInt.9304 = bitcast i64* %new_node_ptr.9302 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_1209.9298, <{ i64, [1 x i64] }>* %ptr_CGrInt.9304, align 1
  %tag.9305 = load i64, i64* %new_node_ptr.9302, align 1
  %ptr_CGrInt.9306 = bitcast i64* %new_node_ptr.9302 to <{ i64, [1 x i64] }>*
  %node_CGrInt.9307 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.9306, align 1
  %tag.9308 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9307, 0
  switch i64 %tag.9308, label %error_block [
    i64 2, label %block.CGrInt.9309
  ]

block.CGrInt.9309:                                ; preds = %block.Cidr_Prelude.Basics.Yes.9283
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1216 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9307, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1216, label %block.default.9310 [
    i64 0, label %block.int_0.9311
  ]

block.default.9310:                               ; preds = %block.CGrInt.9309
  br label %block.exit.9312

block.int_0.9311:                                 ; preds = %block.CGrInt.9309
  br label %block.exit.9312

block.exit.9312:                                  ; preds = %block.int_0.9311, %block.default.9310
  %result.CGrInt.9313 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.9310 ], [ <{ i64 7 }>, %block.int_0.9311 ]
  br label %block.exit.9314

block.exit.9314:                                  ; preds = %block.exit.9312
  %idr_Prelude.Strings.trim5_val_1208.9315 = phi <{ i64 }> [ %result.CGrInt.9313, %block.exit.9312 ]
  %alloc_bytes.9316 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9317 = ptrtoint <{ i64 }>* %alloc_bytes.9316 to i64
  %new_node_ptr.9318 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9317 monotonic
  %new_node_ptr.9319 = inttoptr i64 %new_node_ptr.9318 to i64*
  %tag.9320 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_1208.9315, 0
  switch i64 %tag.9320, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9321
    i64 7, label %block.Cidr_Prelude.Bool.True.9323
  ]

block.Cidr_Prelude.Bool.False.9321:               ; preds = %block.exit.9314
  %ptr_Cidr_Prelude.Bool.False.9322 = bitcast i64* %new_node_ptr.9319 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_1208.9315, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9322, align 1
  br label %block.exit.9325

block.Cidr_Prelude.Bool.True.9323:                ; preds = %block.exit.9314
  %ptr_Cidr_Prelude.Bool.True.9324 = bitcast i64* %new_node_ptr.9319 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_1208.9315, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9324, align 1
  br label %block.exit.9325

block.exit.9325:                                  ; preds = %block.Cidr_Prelude.Bool.True.9323, %block.Cidr_Prelude.Bool.False.9321
  %alloc_bytes.9326 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9327 = ptrtoint <{ i64 }>* %alloc_bytes.9326 to i64
  %new_node_ptr.9328 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9327 monotonic
  %new_node_ptr.9329 = inttoptr i64 %new_node_ptr.9328 to i64*
  %tag.9330 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.9331 = bitcast i64* %new_node_ptr.9329 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9331, align 1
  %idr_Prelude.Strings.trim5_val_1207.9332 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.9319, i64* %new_node_ptr.9329)
  %alloc_bytes.9333 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9334 = ptrtoint <{ i64 }>* %alloc_bytes.9333 to i64
  %new_node_ptr.9335 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9334 monotonic
  %new_node_ptr.9336 = inttoptr i64 %new_node_ptr.9335 to i64*
  %tag.9337 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_1207.9332, 0
  switch i64 %tag.9337, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9338
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9340
  ]

block.Cidr_Prelude.Basics.No.9338:                ; preds = %block.exit.9325
  %ptr_Cidr_Prelude.Basics.No.9339 = bitcast i64* %new_node_ptr.9336 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_1207.9332, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9339, align 1
  br label %block.exit.9342

block.Cidr_Prelude.Basics.Yes.9340:               ; preds = %block.exit.9325
  %ptr_Cidr_Prelude.Basics.Yes.9341 = bitcast i64* %new_node_ptr.9336 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim5_val_1207.9332, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9341, align 1
  br label %block.exit.9342

block.exit.9342:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9340, %block.Cidr_Prelude.Basics.No.9338
  %tag.9343 = load i64, i64* %new_node_ptr.9336, align 1
  switch i64 %tag.9343, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9344
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9347
  ]

block.Cidr_Prelude.Basics.No.9344:                ; preds = %block.exit.9342
  %ptr_Cidr_Prelude.Basics.No.9345 = bitcast i64* %new_node_ptr.9336 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.9346 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9345, align 1
  br label %block.exit.9350

block.Cidr_Prelude.Basics.Yes.9347:               ; preds = %block.exit.9342
  %ptr_Cidr_Prelude.Basics.Yes.9348 = bitcast i64* %new_node_ptr.9336 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.9349 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9348, align 1
  br label %block.exit.9350

block.exit.9350:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9347, %block.Cidr_Prelude.Basics.No.9344
  %idr_Prelude.Strings.trim5_val_1221.9351 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.9346, %block.Cidr_Prelude.Basics.No.9344 ], [ %node_Cidr_Prelude.Basics.Yes.9349, %block.Cidr_Prelude.Basics.Yes.9347 ]
  %tag.9352 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim5_val_1221.9351, 0
  switch i64 %tag.9352, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9353
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9355
  ]

block.Cidr_Prelude.Basics.No.9353:                ; preds = %block.exit.9350
  %node_CGrString.9354 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.9760

block.Cidr_Prelude.Basics.Yes.9355:               ; preds = %block.exit.9350
  %idr_Prelude.Strings.trim6_val_1224.9356 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9357 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9358 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9357 to i64
  %new_node_ptr.9359 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9358 monotonic
  %new_node_ptr.9360 = inttoptr i64 %new_node_ptr.9359 to i64*
  %tag.9361 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1224.9356, 0
  %ptr_CGrString.9362 = bitcast i64* %new_node_ptr.9360 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1224.9356, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9362, align 1
  %idr_Prelude.Strings.trim6_val_1223.9363 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9360)
  %alloc_bytes.9364 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9365 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9364 to i64
  %new_node_ptr.9366 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9365 monotonic
  %new_node_ptr.9367 = inttoptr i64 %new_node_ptr.9366 to i64*
  %tag.9368 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1223.9363, 0
  %ptr_CGrInt.9369 = bitcast i64* %new_node_ptr.9367 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1223.9363, <{ i64, [1 x i64] }>* %ptr_CGrInt.9369, align 1
  %idr_Prelude.Strings.trim6_val_1222.9370 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.9367)
  %alloc_bytes.9371 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9372 = ptrtoint <{ i64 }>* %alloc_bytes.9371 to i64
  %new_node_ptr.9373 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9372 monotonic
  %new_node_ptr.9374 = inttoptr i64 %new_node_ptr.9373 to i64*
  %tag.9375 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1222.9370, 0
  switch i64 %tag.9375, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9376
    i64 7, label %block.Cidr_Prelude.Bool.True.9378
  ]

block.Cidr_Prelude.Bool.False.9376:               ; preds = %block.Cidr_Prelude.Basics.Yes.9355
  %ptr_Cidr_Prelude.Bool.False.9377 = bitcast i64* %new_node_ptr.9374 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1222.9370, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9377, align 1
  br label %block.exit.9380

block.Cidr_Prelude.Bool.True.9378:                ; preds = %block.Cidr_Prelude.Basics.Yes.9355
  %ptr_Cidr_Prelude.Bool.True.9379 = bitcast i64* %new_node_ptr.9374 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1222.9370, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9379, align 1
  br label %block.exit.9380

block.exit.9380:                                  ; preds = %block.Cidr_Prelude.Bool.True.9378, %block.Cidr_Prelude.Bool.False.9376
  %tag.9381 = load i64, i64* %new_node_ptr.9374, align 1
  switch i64 %tag.9381, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9382
    i64 7, label %block.Cidr_Prelude.Bool.True.9385
  ]

block.Cidr_Prelude.Bool.False.9382:               ; preds = %block.exit.9380
  %ptr_Cidr_Prelude.Bool.False.9383 = bitcast i64* %new_node_ptr.9374 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.9384 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9383, align 1
  br label %block.exit.9388

block.Cidr_Prelude.Bool.True.9385:                ; preds = %block.exit.9380
  %ptr_Cidr_Prelude.Bool.True.9386 = bitcast i64* %new_node_ptr.9374 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.9387 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9386, align 1
  br label %block.exit.9388

block.exit.9388:                                  ; preds = %block.Cidr_Prelude.Bool.True.9385, %block.Cidr_Prelude.Bool.False.9382
  %idr_Prelude.Strings.trim6_val_1228.9389 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.9384, %block.Cidr_Prelude.Bool.False.9382 ], [ %node_Cidr_Prelude.Bool.True.9387, %block.Cidr_Prelude.Bool.True.9385 ]
  %tag.9390 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1228.9389, 0
  switch i64 %tag.9390, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9391
    i64 7, label %block.Cidr_Prelude.Bool.True.9421
  ]

block.Cidr_Prelude.Bool.False.9391:               ; preds = %block.exit.9388
  %idr_Prelude.Strings.trim7_val_1230.9392 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9393 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9394 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9393 to i64
  %new_node_ptr.9395 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9394 monotonic
  %new_node_ptr.9396 = inttoptr i64 %new_node_ptr.9395 to i64*
  %tag.9397 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1230.9392, 0
  %ptr_CGrString.9398 = bitcast i64* %new_node_ptr.9396 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1230.9392, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9398, align 1
  %idr_Prelude.Strings.trim7_val_1229.9399 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9396)
  %alloc_bytes.9400 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9401 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9400 to i64
  %new_node_ptr.9402 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9401 monotonic
  %new_node_ptr.9403 = inttoptr i64 %new_node_ptr.9402 to i64*
  %tag.9404 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1229.9399, 0
  %ptr_CGrInt.9405 = bitcast i64* %new_node_ptr.9403 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1229.9399, <{ i64, [1 x i64] }>* %ptr_CGrInt.9405, align 1
  %idr_Prelude.Strings.trim8_val_1234.9406 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9407 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9408 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9407 to i64
  %new_node_ptr.9409 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9408 monotonic
  %new_node_ptr.9410 = inttoptr i64 %new_node_ptr.9409 to i64*
  %tag.9411 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1234.9406, 0
  %ptr_CGrString.9412 = bitcast i64* %new_node_ptr.9410 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1234.9406, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9412, align 1
  %idr_Prelude.Strings.trim8_val_1233.9413 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9410)
  %alloc_bytes.9414 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9415 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9414 to i64
  %new_node_ptr.9416 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9415 monotonic
  %new_node_ptr.9417 = inttoptr i64 %new_node_ptr.9416 to i64*
  %tag.9418 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1233.9413, 0
  %ptr_CGrString.9419 = bitcast i64* %new_node_ptr.9417 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1233.9413, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9419, align 1
  %result.Cidr_Prelude.Bool.False.9420 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.9403, i64* %new_node_ptr.9417)
  br label %block.exit.9758

block.Cidr_Prelude.Bool.True.9421:                ; preds = %block.exit.9388
  %idr_Prelude.Strings.trim7_val_1241.9422 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9423 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9424 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9423 to i64
  %new_node_ptr.9425 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9424 monotonic
  %new_node_ptr.9426 = inttoptr i64 %new_node_ptr.9425 to i64*
  %tag.9427 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1241.9422, 0
  %ptr_CGrString.9428 = bitcast i64* %new_node_ptr.9426 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1241.9422, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9428, align 1
  %idr_Prelude.Strings.trim7_val_1240.9429 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9426)
  %alloc_bytes.9430 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9431 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9430 to i64
  %new_node_ptr.9432 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9431 monotonic
  %new_node_ptr.9433 = inttoptr i64 %new_node_ptr.9432 to i64*
  %tag.9434 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1240.9429, 0
  %ptr_CGrString.9435 = bitcast i64* %new_node_ptr.9433 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1240.9429, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9435, align 1
  %node_CGrString.9436 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.9437 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9438 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9437 to i64
  %new_node_ptr.9439 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9438 monotonic
  %new_node_ptr.9440 = inttoptr i64 %new_node_ptr.9439 to i64*
  %tag.9441 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9436, 0
  %ptr_CGrString.9442 = bitcast i64* %new_node_ptr.9440 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9436, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9442, align 1
  %idr_Prelude.Strings.trim7_val_1239.9443 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.9433, i64* %new_node_ptr.9440)
  %alloc_bytes.9444 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9445 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9444 to i64
  %new_node_ptr.9446 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9445 monotonic
  %new_node_ptr.9447 = inttoptr i64 %new_node_ptr.9446 to i64*
  %tag.9448 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1239.9443, 0
  %ptr_CGrInt.9449 = bitcast i64* %new_node_ptr.9447 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1239.9443, <{ i64, [1 x i64] }>* %ptr_CGrInt.9449, align 1
  %tag.9450 = load i64, i64* %new_node_ptr.9447, align 1
  %ptr_CGrInt.9451 = bitcast i64* %new_node_ptr.9447 to <{ i64, [1 x i64] }>*
  %node_CGrInt.9452 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.9451, align 1
  %tag.9453 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9452, 0
  switch i64 %tag.9453, label %error_block [
    i64 2, label %block.CGrInt.9454
  ]

block.CGrInt.9454:                                ; preds = %block.Cidr_Prelude.Bool.True.9421
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1248 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9452, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1248, label %block.default.9455 [
    i64 0, label %block.int_0.9456
  ]

block.default.9455:                               ; preds = %block.CGrInt.9454
  br label %block.exit.9457

block.int_0.9456:                                 ; preds = %block.CGrInt.9454
  br label %block.exit.9457

block.exit.9457:                                  ; preds = %block.int_0.9456, %block.default.9455
  %result.CGrInt.9458 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.9455 ], [ <{ i64 7 }>, %block.int_0.9456 ]
  br label %block.exit.9459

block.exit.9459:                                  ; preds = %block.exit.9457
  %idr_Prelude.Strings.trim7_val_1238.9460 = phi <{ i64 }> [ %result.CGrInt.9458, %block.exit.9457 ]
  %alloc_bytes.9461 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9462 = ptrtoint <{ i64 }>* %alloc_bytes.9461 to i64
  %new_node_ptr.9463 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9462 monotonic
  %new_node_ptr.9464 = inttoptr i64 %new_node_ptr.9463 to i64*
  %tag.9465 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1238.9460, 0
  switch i64 %tag.9465, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9466
    i64 7, label %block.Cidr_Prelude.Bool.True.9468
  ]

block.Cidr_Prelude.Bool.False.9466:               ; preds = %block.exit.9459
  %ptr_Cidr_Prelude.Bool.False.9467 = bitcast i64* %new_node_ptr.9464 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1238.9460, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9467, align 1
  br label %block.exit.9470

block.Cidr_Prelude.Bool.True.9468:                ; preds = %block.exit.9459
  %ptr_Cidr_Prelude.Bool.True.9469 = bitcast i64* %new_node_ptr.9464 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1238.9460, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9469, align 1
  br label %block.exit.9470

block.exit.9470:                                  ; preds = %block.Cidr_Prelude.Bool.True.9468, %block.Cidr_Prelude.Bool.False.9466
  %alloc_bytes.9471 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9472 = ptrtoint <{ i64 }>* %alloc_bytes.9471 to i64
  %new_node_ptr.9473 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9472 monotonic
  %new_node_ptr.9474 = inttoptr i64 %new_node_ptr.9473 to i64*
  %tag.9475 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.9476 = bitcast i64* %new_node_ptr.9474 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9476, align 1
  %idr_Prelude.Strings.trim7_val_1237.9477 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.9464, i64* %new_node_ptr.9474)
  %alloc_bytes.9478 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9479 = ptrtoint <{ i64 }>* %alloc_bytes.9478 to i64
  %new_node_ptr.9480 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9479 monotonic
  %new_node_ptr.9481 = inttoptr i64 %new_node_ptr.9480 to i64*
  %tag.9482 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1237.9477, 0
  switch i64 %tag.9482, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9483
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9485
  ]

block.Cidr_Prelude.Basics.No.9483:                ; preds = %block.exit.9470
  %ptr_Cidr_Prelude.Basics.No.9484 = bitcast i64* %new_node_ptr.9481 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1237.9477, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9484, align 1
  br label %block.exit.9487

block.Cidr_Prelude.Basics.Yes.9485:               ; preds = %block.exit.9470
  %ptr_Cidr_Prelude.Basics.Yes.9486 = bitcast i64* %new_node_ptr.9481 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1237.9477, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9486, align 1
  br label %block.exit.9487

block.exit.9487:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9485, %block.Cidr_Prelude.Basics.No.9483
  %tag.9488 = load i64, i64* %new_node_ptr.9481, align 1
  switch i64 %tag.9488, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9489
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9492
  ]

block.Cidr_Prelude.Basics.No.9489:                ; preds = %block.exit.9487
  %ptr_Cidr_Prelude.Basics.No.9490 = bitcast i64* %new_node_ptr.9481 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.9491 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9490, align 1
  br label %block.exit.9495

block.Cidr_Prelude.Basics.Yes.9492:               ; preds = %block.exit.9487
  %ptr_Cidr_Prelude.Basics.Yes.9493 = bitcast i64* %new_node_ptr.9481 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.9494 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9493, align 1
  br label %block.exit.9495

block.exit.9495:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9492, %block.Cidr_Prelude.Basics.No.9489
  %idr_Prelude.Strings.trim7_val_1253.9496 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.9491, %block.Cidr_Prelude.Basics.No.9489 ], [ %node_Cidr_Prelude.Basics.Yes.9494, %block.Cidr_Prelude.Basics.Yes.9492 ]
  %tag.9497 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1253.9496, 0
  switch i64 %tag.9497, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9498
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9500
  ]

block.Cidr_Prelude.Basics.No.9498:                ; preds = %block.exit.9495
  %node_CGrString.9499 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.9756

block.Cidr_Prelude.Basics.Yes.9500:               ; preds = %block.exit.9495
  %idr_Prelude.Strings.trim8_val_1257.9501 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9502 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9503 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9502 to i64
  %new_node_ptr.9504 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9503 monotonic
  %new_node_ptr.9505 = inttoptr i64 %new_node_ptr.9504 to i64*
  %tag.9506 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1257.9501, 0
  %ptr_CGrString.9507 = bitcast i64* %new_node_ptr.9505 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1257.9501, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9507, align 1
  %idr_Prelude.Strings.trim8_val_1256.9508 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9505)
  %alloc_bytes.9509 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9510 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9509 to i64
  %new_node_ptr.9511 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9510 monotonic
  %new_node_ptr.9512 = inttoptr i64 %new_node_ptr.9511 to i64*
  %tag.9513 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1256.9508, 0
  %ptr_CGrString.9514 = bitcast i64* %new_node_ptr.9512 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1256.9508, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9514, align 1
  %idr_Prelude.Strings.trim8_val_1255.9515 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9512)
  %alloc_bytes.9516 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9517 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9516 to i64
  %new_node_ptr.9518 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9517 monotonic
  %new_node_ptr.9519 = inttoptr i64 %new_node_ptr.9518 to i64*
  %tag.9520 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1255.9515, 0
  %ptr_CGrInt.9521 = bitcast i64* %new_node_ptr.9519 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1255.9515, <{ i64, [1 x i64] }>* %ptr_CGrInt.9521, align 1
  %idr_Prelude.Strings.trim8_val_1254.9522 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.9519)
  %alloc_bytes.9523 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9524 = ptrtoint <{ i64 }>* %alloc_bytes.9523 to i64
  %new_node_ptr.9525 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9524 monotonic
  %new_node_ptr.9526 = inttoptr i64 %new_node_ptr.9525 to i64*
  %tag.9527 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_1254.9522, 0
  switch i64 %tag.9527, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9528
    i64 7, label %block.Cidr_Prelude.Bool.True.9530
  ]

block.Cidr_Prelude.Bool.False.9528:               ; preds = %block.Cidr_Prelude.Basics.Yes.9500
  %ptr_Cidr_Prelude.Bool.False.9529 = bitcast i64* %new_node_ptr.9526 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_1254.9522, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9529, align 1
  br label %block.exit.9532

block.Cidr_Prelude.Bool.True.9530:                ; preds = %block.Cidr_Prelude.Basics.Yes.9500
  %ptr_Cidr_Prelude.Bool.True.9531 = bitcast i64* %new_node_ptr.9526 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_1254.9522, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9531, align 1
  br label %block.exit.9532

block.exit.9532:                                  ; preds = %block.Cidr_Prelude.Bool.True.9530, %block.Cidr_Prelude.Bool.False.9528
  %tag.9533 = load i64, i64* %new_node_ptr.9526, align 1
  switch i64 %tag.9533, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9534
    i64 7, label %block.Cidr_Prelude.Bool.True.9537
  ]

block.Cidr_Prelude.Bool.False.9534:               ; preds = %block.exit.9532
  %ptr_Cidr_Prelude.Bool.False.9535 = bitcast i64* %new_node_ptr.9526 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.9536 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9535, align 1
  br label %block.exit.9540

block.Cidr_Prelude.Bool.True.9537:                ; preds = %block.exit.9532
  %ptr_Cidr_Prelude.Bool.True.9538 = bitcast i64* %new_node_ptr.9526 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.9539 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9538, align 1
  br label %block.exit.9540

block.exit.9540:                                  ; preds = %block.Cidr_Prelude.Bool.True.9537, %block.Cidr_Prelude.Bool.False.9534
  %idr_Prelude.Strings.trim8_val_1262.9541 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.9536, %block.Cidr_Prelude.Bool.False.9534 ], [ %node_Cidr_Prelude.Bool.True.9539, %block.Cidr_Prelude.Bool.True.9537 ]
  %tag.9542 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_1262.9541, 0
  switch i64 %tag.9542, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9543
    i64 7, label %block.Cidr_Prelude.Bool.True.9587
  ]

block.Cidr_Prelude.Bool.False.9543:               ; preds = %block.exit.9540
  %idr_Prelude.Strings.trim9_val_1265.9544 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9545 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9546 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9545 to i64
  %new_node_ptr.9547 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9546 monotonic
  %new_node_ptr.9548 = inttoptr i64 %new_node_ptr.9547 to i64*
  %tag.9549 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1265.9544, 0
  %ptr_CGrString.9550 = bitcast i64* %new_node_ptr.9548 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1265.9544, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9550, align 1
  %idr_Prelude.Strings.trim9_val_1264.9551 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9548)
  %alloc_bytes.9552 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9553 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9552 to i64
  %new_node_ptr.9554 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9553 monotonic
  %new_node_ptr.9555 = inttoptr i64 %new_node_ptr.9554 to i64*
  %tag.9556 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1264.9551, 0
  %ptr_CGrString.9557 = bitcast i64* %new_node_ptr.9555 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1264.9551, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9557, align 1
  %idr_Prelude.Strings.trim9_val_1263.9558 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9555)
  %alloc_bytes.9559 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9560 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9559 to i64
  %new_node_ptr.9561 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9560 monotonic
  %new_node_ptr.9562 = inttoptr i64 %new_node_ptr.9561 to i64*
  %tag.9563 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1263.9558, 0
  %ptr_CGrInt.9564 = bitcast i64* %new_node_ptr.9562 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1263.9558, <{ i64, [1 x i64] }>* %ptr_CGrInt.9564, align 1
  %idr_Prelude.Strings.trim10_val_1271.9565 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9566 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9567 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9566 to i64
  %new_node_ptr.9568 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9567 monotonic
  %new_node_ptr.9569 = inttoptr i64 %new_node_ptr.9568 to i64*
  %tag.9570 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1271.9565, 0
  %ptr_CGrString.9571 = bitcast i64* %new_node_ptr.9569 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1271.9565, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9571, align 1
  %idr_Prelude.Strings.trim10_val_1270.9572 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9569)
  %alloc_bytes.9573 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9574 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9573 to i64
  %new_node_ptr.9575 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9574 monotonic
  %new_node_ptr.9576 = inttoptr i64 %new_node_ptr.9575 to i64*
  %tag.9577 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1270.9572, 0
  %ptr_CGrString.9578 = bitcast i64* %new_node_ptr.9576 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1270.9572, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9578, align 1
  %idr_Prelude.Strings.trim10_val_1269.9579 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9576)
  %alloc_bytes.9580 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9581 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9580 to i64
  %new_node_ptr.9582 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9581 monotonic
  %new_node_ptr.9583 = inttoptr i64 %new_node_ptr.9582 to i64*
  %tag.9584 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1269.9579, 0
  %ptr_CGrString.9585 = bitcast i64* %new_node_ptr.9583 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1269.9579, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9585, align 1
  %result.Cidr_Prelude.Bool.False.9586 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.9562, i64* %new_node_ptr.9583)
  br label %block.exit.9754

block.Cidr_Prelude.Bool.True.9587:                ; preds = %block.exit.9540
  %alloc_bytes.9588 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9589 = ptrtoint <{ i64 }>* %alloc_bytes.9588 to i64
  %new_node_ptr.9590 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9589 monotonic
  %new_node_ptr.9591 = inttoptr i64 %new_node_ptr.9590 to i64*
  %tag.9592 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.9593 = bitcast i64* %new_node_ptr.9591 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.9593, align 1
  %idr_Prelude.Strings.trim10_val_1283.9594 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9595 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9596 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9595 to i64
  %new_node_ptr.9597 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9596 monotonic
  %new_node_ptr.9598 = inttoptr i64 %new_node_ptr.9597 to i64*
  %tag.9599 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1283.9594, 0
  %ptr_CGrString.9600 = bitcast i64* %new_node_ptr.9598 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1283.9594, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9600, align 1
  %idr_Prelude.Strings.trim10_val_1282.9601 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9598)
  %alloc_bytes.9602 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9603 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9602 to i64
  %new_node_ptr.9604 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9603 monotonic
  %new_node_ptr.9605 = inttoptr i64 %new_node_ptr.9604 to i64*
  %tag.9606 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1282.9601, 0
  %ptr_CGrString.9607 = bitcast i64* %new_node_ptr.9605 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1282.9601, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9607, align 1
  %idr_Prelude.Strings.trim10_val_1281.9608 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9605)
  %alloc_bytes.9609 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9610 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9609 to i64
  %new_node_ptr.9611 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9610 monotonic
  %new_node_ptr.9612 = inttoptr i64 %new_node_ptr.9611 to i64*
  %tag.9613 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1281.9608, 0
  %ptr_CGrString.9614 = bitcast i64* %new_node_ptr.9612 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1281.9608, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9614, align 1
  %node_CGrString.9615 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.9616 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9617 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9616 to i64
  %new_node_ptr.9618 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9617 monotonic
  %new_node_ptr.9619 = inttoptr i64 %new_node_ptr.9618 to i64*
  %tag.9620 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9615, 0
  %ptr_CGrString.9621 = bitcast i64* %new_node_ptr.9619 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9615, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9621, align 1
  %idr_Prelude.Strings.trim10_val_1280.9622 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.9612, i64* %new_node_ptr.9619)
  %alloc_bytes.9623 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9624 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9623 to i64
  %new_node_ptr.9625 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9624 monotonic
  %new_node_ptr.9626 = inttoptr i64 %new_node_ptr.9625 to i64*
  %tag.9627 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1280.9622, 0
  %ptr_CGrInt.9628 = bitcast i64* %new_node_ptr.9626 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1280.9622, <{ i64, [1 x i64] }>* %ptr_CGrInt.9628, align 1
  %tag.9629 = load i64, i64* %new_node_ptr.9626, align 1
  %ptr_CGrInt.9630 = bitcast i64* %new_node_ptr.9626 to <{ i64, [1 x i64] }>*
  %node_CGrInt.9631 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.9630, align 1
  %tag.9632 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9631, 0
  switch i64 %tag.9632, label %error_block [
    i64 2, label %block.CGrInt.9633
  ]

block.CGrInt.9633:                                ; preds = %block.Cidr_Prelude.Bool.True.9587
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1291 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9631, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1291, label %block.default.9634 [
    i64 0, label %block.int_0.9635
  ]

block.default.9634:                               ; preds = %block.CGrInt.9633
  br label %block.exit.9636

block.int_0.9635:                                 ; preds = %block.CGrInt.9633
  br label %block.exit.9636

block.exit.9636:                                  ; preds = %block.int_0.9635, %block.default.9634
  %result.CGrInt.9637 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.9634 ], [ <{ i64 7 }>, %block.int_0.9635 ]
  br label %block.exit.9638

block.exit.9638:                                  ; preds = %block.exit.9636
  %idr_Prelude.Strings.trim10_val_1279.9639 = phi <{ i64 }> [ %result.CGrInt.9637, %block.exit.9636 ]
  %alloc_bytes.9640 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9641 = ptrtoint <{ i64 }>* %alloc_bytes.9640 to i64
  %new_node_ptr.9642 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9641 monotonic
  %new_node_ptr.9643 = inttoptr i64 %new_node_ptr.9642 to i64*
  %tag.9644 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim10_val_1279.9639, 0
  switch i64 %tag.9644, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9645
    i64 7, label %block.Cidr_Prelude.Bool.True.9647
  ]

block.Cidr_Prelude.Bool.False.9645:               ; preds = %block.exit.9638
  %ptr_Cidr_Prelude.Bool.False.9646 = bitcast i64* %new_node_ptr.9643 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_1279.9639, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9646, align 1
  br label %block.exit.9649

block.Cidr_Prelude.Bool.True.9647:                ; preds = %block.exit.9638
  %ptr_Cidr_Prelude.Bool.True.9648 = bitcast i64* %new_node_ptr.9643 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_1279.9639, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9648, align 1
  br label %block.exit.9649

block.exit.9649:                                  ; preds = %block.Cidr_Prelude.Bool.True.9647, %block.Cidr_Prelude.Bool.False.9645
  %alloc_bytes.9650 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9651 = ptrtoint <{ i64 }>* %alloc_bytes.9650 to i64
  %new_node_ptr.9652 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9651 monotonic
  %new_node_ptr.9653 = inttoptr i64 %new_node_ptr.9652 to i64*
  %tag.9654 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.9655 = bitcast i64* %new_node_ptr.9653 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9655, align 1
  %idr_Prelude.Strings.trim10_val_1278.9656 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.9643, i64* %new_node_ptr.9653)
  %alloc_bytes.9657 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9658 = ptrtoint <{ i64 }>* %alloc_bytes.9657 to i64
  %new_node_ptr.9659 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9658 monotonic
  %new_node_ptr.9660 = inttoptr i64 %new_node_ptr.9659 to i64*
  %tag.9661 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim10_val_1278.9656, 0
  switch i64 %tag.9661, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9662
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9664
  ]

block.Cidr_Prelude.Basics.No.9662:                ; preds = %block.exit.9649
  %ptr_Cidr_Prelude.Basics.No.9663 = bitcast i64* %new_node_ptr.9660 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_1278.9656, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9663, align 1
  br label %block.exit.9666

block.Cidr_Prelude.Basics.Yes.9664:               ; preds = %block.exit.9649
  %ptr_Cidr_Prelude.Basics.Yes.9665 = bitcast i64* %new_node_ptr.9660 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim10_val_1278.9656, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9665, align 1
  br label %block.exit.9666

block.exit.9666:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9664, %block.Cidr_Prelude.Basics.No.9662
  %tag.9667 = load i64, i64* %new_node_ptr.9660, align 1
  switch i64 %tag.9667, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9668
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9671
  ]

block.Cidr_Prelude.Basics.No.9668:                ; preds = %block.exit.9666
  %ptr_Cidr_Prelude.Basics.No.9669 = bitcast i64* %new_node_ptr.9660 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.9670 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9669, align 1
  br label %block.exit.9674

block.Cidr_Prelude.Basics.Yes.9671:               ; preds = %block.exit.9666
  %ptr_Cidr_Prelude.Basics.Yes.9672 = bitcast i64* %new_node_ptr.9660 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.9673 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9672, align 1
  br label %block.exit.9674

block.exit.9674:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9671, %block.Cidr_Prelude.Basics.No.9668
  %idr_Prelude.Strings.trim10_val_1296.9675 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.9670, %block.Cidr_Prelude.Basics.No.9668 ], [ %node_Cidr_Prelude.Basics.Yes.9673, %block.Cidr_Prelude.Basics.Yes.9671 ]
  %tag.9676 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim10_val_1296.9675, 0
  switch i64 %tag.9676, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9677
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9678
  ]

block.Cidr_Prelude.Basics.No.9677:                ; preds = %block.exit.9674
  %src.9738 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.9739 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.9738, 0
  br label %block.exit.9737

block.Cidr_Prelude.Basics.Yes.9678:               ; preds = %block.exit.9674
  %idr_Prelude.Strings.trim11_val_1300.9679 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9680 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9681 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9680 to i64
  %new_node_ptr.9682 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9681 monotonic
  %new_node_ptr.9683 = inttoptr i64 %new_node_ptr.9682 to i64*
  %tag.9684 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1300.9679, 0
  %ptr_CGrString.9685 = bitcast i64* %new_node_ptr.9683 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1300.9679, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9685, align 1
  %idr_Prelude.Strings.trim11_val_1299.9686 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9683)
  %alloc_bytes.9687 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9688 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9687 to i64
  %new_node_ptr.9689 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9688 monotonic
  %new_node_ptr.9690 = inttoptr i64 %new_node_ptr.9689 to i64*
  %tag.9691 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1299.9686, 0
  %ptr_CGrString.9692 = bitcast i64* %new_node_ptr.9690 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1299.9686, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9692, align 1
  %idr_Prelude.Strings.trim11_val_1298.9693 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9690)
  %alloc_bytes.9694 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9695 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9694 to i64
  %new_node_ptr.9696 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9695 monotonic
  %new_node_ptr.9697 = inttoptr i64 %new_node_ptr.9696 to i64*
  %tag.9698 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1298.9693, 0
  %ptr_CGrString.9699 = bitcast i64* %new_node_ptr.9697 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1298.9693, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9699, align 1
  %idr_Prelude.Strings.trim11_val_1297.9700 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9697)
  %alloc_bytes.9701 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9702 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9701 to i64
  %new_node_ptr.9703 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9702 monotonic
  %new_node_ptr.9704 = inttoptr i64 %new_node_ptr.9703 to i64*
  %tag.9705 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim11_val_1297.9700, 0
  %ptr_CGrInt.9706 = bitcast i64* %new_node_ptr.9704 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim11_val_1297.9700, <{ i64, [1 x i64] }>* %ptr_CGrInt.9706, align 1
  %idr_Prelude.Strings.trim12_val_1308.9707 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9708 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9709 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9708 to i64
  %new_node_ptr.9710 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9709 monotonic
  %new_node_ptr.9711 = inttoptr i64 %new_node_ptr.9710 to i64*
  %tag.9712 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1308.9707, 0
  %ptr_CGrString.9713 = bitcast i64* %new_node_ptr.9711 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1308.9707, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9713, align 1
  %idr_Prelude.Strings.trim12_val_1307.9714 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9711)
  %alloc_bytes.9715 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9716 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9715 to i64
  %new_node_ptr.9717 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9716 monotonic
  %new_node_ptr.9718 = inttoptr i64 %new_node_ptr.9717 to i64*
  %tag.9719 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1307.9714, 0
  %ptr_CGrString.9720 = bitcast i64* %new_node_ptr.9718 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1307.9714, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9720, align 1
  %idr_Prelude.Strings.trim12_val_1306.9721 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9718)
  %alloc_bytes.9722 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9723 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9722 to i64
  %new_node_ptr.9724 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9723 monotonic
  %new_node_ptr.9725 = inttoptr i64 %new_node_ptr.9724 to i64*
  %tag.9726 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1306.9721, 0
  %ptr_CGrString.9727 = bitcast i64* %new_node_ptr.9725 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1306.9721, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9727, align 1
  %idr_Prelude.Strings.trim12_val_1305.9728 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9725)
  %alloc_bytes.9729 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9730 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9729 to i64
  %new_node_ptr.9731 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9730 monotonic
  %new_node_ptr.9732 = inttoptr i64 %new_node_ptr.9731 to i64*
  %tag.9733 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1305.9728, 0
  %ptr_CGrString.9734 = bitcast i64* %new_node_ptr.9732 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1305.9728, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9734, align 1
  %node_Cidr_Prelude.Strings.StrCons.9735 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.9704, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.9736 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.9735, i64* %new_node_ptr.9732, 1, 1
  br label %block.exit.9737

block.exit.9737:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9678, %block.Cidr_Prelude.Basics.No.9677
  %idr_Prelude.Strings.trim10_val_1277.9740 = phi <{ i64, [2 x i64*] }> [ %dst.9739, %block.Cidr_Prelude.Basics.No.9677 ], [ %node_Cidr_Prelude.Strings.StrCons.9736, %block.Cidr_Prelude.Basics.Yes.9678 ]
  %alloc_bytes.9741 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.9742 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.9741 to i64
  %new_node_ptr.9743 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9742 monotonic
  %new_node_ptr.9744 = inttoptr i64 %new_node_ptr.9743 to i64*
  %tag.9745 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim10_val_1277.9740, 0
  switch i64 %tag.9745, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.9746
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.9748
  ]

block.Cidr_Prelude.Strings.StrCons.9746:          ; preds = %block.exit.9737
  %ptr_Cidr_Prelude.Strings.StrCons.9747 = bitcast i64* %new_node_ptr.9744 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim10_val_1277.9740, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.9747, align 1
  br label %block.exit.9752

block.Cidr_Prelude.Strings.StrNil.9748:           ; preds = %block.exit.9737
  %src.9749 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim10_val_1277.9740, 0
  %dst.9750 = insertvalue <{ i64 }> undef, i64 %src.9749, 0
  %ptr_Cidr_Prelude.Strings.StrNil.9751 = bitcast i64* %new_node_ptr.9744 to <{ i64 }>*
  store <{ i64 }> %dst.9750, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.9751, align 1
  br label %block.exit.9752

block.exit.9752:                                  ; preds = %block.Cidr_Prelude.Strings.StrNil.9748, %block.Cidr_Prelude.Strings.StrCons.9746
  %result.Cidr_Prelude.Bool.True.9753 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.9591, i64* %new_node_ptr.9744)
  br label %block.exit.9754

block.exit.9754:                                  ; preds = %block.exit.9752, %block.Cidr_Prelude.Bool.False.9543
  %result.Cidr_Prelude.Basics.Yes.9755 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.9586, %block.Cidr_Prelude.Bool.False.9543 ], [ %result.Cidr_Prelude.Bool.True.9753, %block.exit.9752 ]
  br label %block.exit.9756

block.exit.9756:                                  ; preds = %block.exit.9754, %block.Cidr_Prelude.Basics.No.9498
  %result.Cidr_Prelude.Bool.True.9757 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.9499, %block.Cidr_Prelude.Basics.No.9498 ], [ %result.Cidr_Prelude.Basics.Yes.9755, %block.exit.9754 ]
  br label %block.exit.9758

block.exit.9758:                                  ; preds = %block.exit.9756, %block.Cidr_Prelude.Bool.False.9391
  %result.Cidr_Prelude.Basics.Yes.9759 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.9420, %block.Cidr_Prelude.Bool.False.9391 ], [ %result.Cidr_Prelude.Bool.True.9757, %block.exit.9756 ]
  br label %block.exit.9760

block.exit.9760:                                  ; preds = %block.exit.9758, %block.Cidr_Prelude.Basics.No.9353
  %idr_Prelude.Strings.trim5_val_1206.9761 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.9354, %block.Cidr_Prelude.Basics.No.9353 ], [ %result.Cidr_Prelude.Basics.Yes.9759, %block.exit.9758 ]
  %alloc_bytes.9762 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9763 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9762 to i64
  %new_node_ptr.9764 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9763 monotonic
  %new_node_ptr.9765 = inttoptr i64 %new_node_ptr.9764 to i64*
  %tag.9766 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1206.9761, 0
  %ptr_CGrString.9767 = bitcast i64* %new_node_ptr.9765 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1206.9761, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9767, align 1
  %idr_Prelude.Strings.trim5_val_1205.9768 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %new_node_ptr.9765)
  %alloc_bytes.9769 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9770 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9769 to i64
  %new_node_ptr.9771 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9770 monotonic
  %new_node_ptr.9772 = inttoptr i64 %new_node_ptr.9771 to i64*
  %tag.9773 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1205.9768, 0
  %ptr_CGrString.9774 = bitcast i64* %new_node_ptr.9772 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1205.9768, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9774, align 1
  %idr_Prelude.Strings.trim5_val_1204.9775 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9772)
  %alloc_bytes.9776 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9777 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9776 to i64
  %new_node_ptr.9778 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9777 monotonic
  %new_node_ptr.9779 = inttoptr i64 %new_node_ptr.9778 to i64*
  %tag.9780 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1204.9775, 0
  %ptr_CGrString.9781 = bitcast i64* %new_node_ptr.9779 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim5_val_1204.9775, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9781, align 1
  %idr_Prelude.Strings.trim5_val_1203.9782 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9779)
  %alloc_bytes.9783 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9784 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9783 to i64
  %new_node_ptr.9785 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9784 monotonic
  %new_node_ptr.9786 = inttoptr i64 %new_node_ptr.9785 to i64*
  %tag.9787 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_1203.9782, 0
  %ptr_CGrInt.9788 = bitcast i64* %new_node_ptr.9786 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim5_val_1203.9782, <{ i64, [1 x i64] }>* %ptr_CGrInt.9788, align 1
  %idr_Prelude.Strings.trim6_val_1325.9789 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9790 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9791 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9790 to i64
  %new_node_ptr.9792 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9791 monotonic
  %new_node_ptr.9793 = inttoptr i64 %new_node_ptr.9792 to i64*
  %tag.9794 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1325.9789, 0
  %ptr_CGrString.9795 = bitcast i64* %new_node_ptr.9793 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1325.9789, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9795, align 1
  %node_CGrString.9796 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.9797 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9798 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9797 to i64
  %new_node_ptr.9799 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9798 monotonic
  %new_node_ptr.9800 = inttoptr i64 %new_node_ptr.9799 to i64*
  %tag.9801 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9796, 0
  %ptr_CGrString.9802 = bitcast i64* %new_node_ptr.9800 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9796, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9802, align 1
  %idr_Prelude.Strings.trim6_val_1324.9803 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.9793, i64* %new_node_ptr.9800)
  %alloc_bytes.9804 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9805 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9804 to i64
  %new_node_ptr.9806 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9805 monotonic
  %new_node_ptr.9807 = inttoptr i64 %new_node_ptr.9806 to i64*
  %tag.9808 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1324.9803, 0
  %ptr_CGrInt.9809 = bitcast i64* %new_node_ptr.9807 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim6_val_1324.9803, <{ i64, [1 x i64] }>* %ptr_CGrInt.9809, align 1
  %tag.9810 = load i64, i64* %new_node_ptr.9807, align 1
  %ptr_CGrInt.9811 = bitcast i64* %new_node_ptr.9807 to <{ i64, [1 x i64] }>*
  %node_CGrInt.9812 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.9811, align 1
  %tag.9813 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9812, 0
  switch i64 %tag.9813, label %error_block [
    i64 2, label %block.CGrInt.9814
  ]

block.CGrInt.9814:                                ; preds = %block.exit.9760
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1331 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9812, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1331, label %block.default.9815 [
    i64 0, label %block.int_0.9816
  ]

block.default.9815:                               ; preds = %block.CGrInt.9814
  br label %block.exit.9817

block.int_0.9816:                                 ; preds = %block.CGrInt.9814
  br label %block.exit.9817

block.exit.9817:                                  ; preds = %block.int_0.9816, %block.default.9815
  %result.CGrInt.9818 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.9815 ], [ <{ i64 7 }>, %block.int_0.9816 ]
  br label %block.exit.9819

block.exit.9819:                                  ; preds = %block.exit.9817
  %idr_Prelude.Strings.trim6_val_1323.9820 = phi <{ i64 }> [ %result.CGrInt.9818, %block.exit.9817 ]
  %alloc_bytes.9821 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9822 = ptrtoint <{ i64 }>* %alloc_bytes.9821 to i64
  %new_node_ptr.9823 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9822 monotonic
  %new_node_ptr.9824 = inttoptr i64 %new_node_ptr.9823 to i64*
  %tag.9825 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1323.9820, 0
  switch i64 %tag.9825, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9826
    i64 7, label %block.Cidr_Prelude.Bool.True.9828
  ]

block.Cidr_Prelude.Bool.False.9826:               ; preds = %block.exit.9819
  %ptr_Cidr_Prelude.Bool.False.9827 = bitcast i64* %new_node_ptr.9824 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1323.9820, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9827, align 1
  br label %block.exit.9830

block.Cidr_Prelude.Bool.True.9828:                ; preds = %block.exit.9819
  %ptr_Cidr_Prelude.Bool.True.9829 = bitcast i64* %new_node_ptr.9824 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1323.9820, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9829, align 1
  br label %block.exit.9830

block.exit.9830:                                  ; preds = %block.Cidr_Prelude.Bool.True.9828, %block.Cidr_Prelude.Bool.False.9826
  %alloc_bytes.9831 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9832 = ptrtoint <{ i64 }>* %alloc_bytes.9831 to i64
  %new_node_ptr.9833 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9832 monotonic
  %new_node_ptr.9834 = inttoptr i64 %new_node_ptr.9833 to i64*
  %tag.9835 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.9836 = bitcast i64* %new_node_ptr.9834 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9836, align 1
  %idr_Prelude.Strings.trim6_val_1322.9837 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.9824, i64* %new_node_ptr.9834)
  %alloc_bytes.9838 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9839 = ptrtoint <{ i64 }>* %alloc_bytes.9838 to i64
  %new_node_ptr.9840 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9839 monotonic
  %new_node_ptr.9841 = inttoptr i64 %new_node_ptr.9840 to i64*
  %tag.9842 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1322.9837, 0
  switch i64 %tag.9842, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9843
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9845
  ]

block.Cidr_Prelude.Basics.No.9843:                ; preds = %block.exit.9830
  %ptr_Cidr_Prelude.Basics.No.9844 = bitcast i64* %new_node_ptr.9841 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1322.9837, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9844, align 1
  br label %block.exit.9847

block.Cidr_Prelude.Basics.Yes.9845:               ; preds = %block.exit.9830
  %ptr_Cidr_Prelude.Basics.Yes.9846 = bitcast i64* %new_node_ptr.9841 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim6_val_1322.9837, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9846, align 1
  br label %block.exit.9847

block.exit.9847:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9845, %block.Cidr_Prelude.Basics.No.9843
  %tag.9848 = load i64, i64* %new_node_ptr.9841, align 1
  switch i64 %tag.9848, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9849
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9852
  ]

block.Cidr_Prelude.Basics.No.9849:                ; preds = %block.exit.9847
  %ptr_Cidr_Prelude.Basics.No.9850 = bitcast i64* %new_node_ptr.9841 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.9851 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9850, align 1
  br label %block.exit.9855

block.Cidr_Prelude.Basics.Yes.9852:               ; preds = %block.exit.9847
  %ptr_Cidr_Prelude.Basics.Yes.9853 = bitcast i64* %new_node_ptr.9841 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.9854 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9853, align 1
  br label %block.exit.9855

block.exit.9855:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9852, %block.Cidr_Prelude.Basics.No.9849
  %idr_Prelude.Strings.trim6_val_1336.9856 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.9851, %block.Cidr_Prelude.Basics.No.9849 ], [ %node_Cidr_Prelude.Basics.Yes.9854, %block.Cidr_Prelude.Basics.Yes.9852 ]
  %tag.9857 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim6_val_1336.9856, 0
  switch i64 %tag.9857, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9858
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9860
  ]

block.Cidr_Prelude.Basics.No.9858:                ; preds = %block.exit.9855
  %node_CGrString.9859 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.10265

block.Cidr_Prelude.Basics.Yes.9860:               ; preds = %block.exit.9855
  %idr_Prelude.Strings.trim7_val_1339.9861 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9862 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9863 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9862 to i64
  %new_node_ptr.9864 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9863 monotonic
  %new_node_ptr.9865 = inttoptr i64 %new_node_ptr.9864 to i64*
  %tag.9866 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1339.9861, 0
  %ptr_CGrString.9867 = bitcast i64* %new_node_ptr.9865 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim7_val_1339.9861, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9867, align 1
  %idr_Prelude.Strings.trim7_val_1338.9868 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9865)
  %alloc_bytes.9869 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9870 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9869 to i64
  %new_node_ptr.9871 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9870 monotonic
  %new_node_ptr.9872 = inttoptr i64 %new_node_ptr.9871 to i64*
  %tag.9873 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1338.9868, 0
  %ptr_CGrInt.9874 = bitcast i64* %new_node_ptr.9872 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim7_val_1338.9868, <{ i64, [1 x i64] }>* %ptr_CGrInt.9874, align 1
  %idr_Prelude.Strings.trim7_val_1337.9875 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.9872)
  %alloc_bytes.9876 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9877 = ptrtoint <{ i64 }>* %alloc_bytes.9876 to i64
  %new_node_ptr.9878 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9877 monotonic
  %new_node_ptr.9879 = inttoptr i64 %new_node_ptr.9878 to i64*
  %tag.9880 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1337.9875, 0
  switch i64 %tag.9880, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9881
    i64 7, label %block.Cidr_Prelude.Bool.True.9883
  ]

block.Cidr_Prelude.Bool.False.9881:               ; preds = %block.Cidr_Prelude.Basics.Yes.9860
  %ptr_Cidr_Prelude.Bool.False.9882 = bitcast i64* %new_node_ptr.9879 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1337.9875, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9882, align 1
  br label %block.exit.9885

block.Cidr_Prelude.Bool.True.9883:                ; preds = %block.Cidr_Prelude.Basics.Yes.9860
  %ptr_Cidr_Prelude.Bool.True.9884 = bitcast i64* %new_node_ptr.9879 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim7_val_1337.9875, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9884, align 1
  br label %block.exit.9885

block.exit.9885:                                  ; preds = %block.Cidr_Prelude.Bool.True.9883, %block.Cidr_Prelude.Bool.False.9881
  %tag.9886 = load i64, i64* %new_node_ptr.9879, align 1
  switch i64 %tag.9886, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9887
    i64 7, label %block.Cidr_Prelude.Bool.True.9890
  ]

block.Cidr_Prelude.Bool.False.9887:               ; preds = %block.exit.9885
  %ptr_Cidr_Prelude.Bool.False.9888 = bitcast i64* %new_node_ptr.9879 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.9889 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9888, align 1
  br label %block.exit.9893

block.Cidr_Prelude.Bool.True.9890:                ; preds = %block.exit.9885
  %ptr_Cidr_Prelude.Bool.True.9891 = bitcast i64* %new_node_ptr.9879 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.9892 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9891, align 1
  br label %block.exit.9893

block.exit.9893:                                  ; preds = %block.Cidr_Prelude.Bool.True.9890, %block.Cidr_Prelude.Bool.False.9887
  %idr_Prelude.Strings.trim7_val_1343.9894 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.9889, %block.Cidr_Prelude.Bool.False.9887 ], [ %node_Cidr_Prelude.Bool.True.9892, %block.Cidr_Prelude.Bool.True.9890 ]
  %tag.9895 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim7_val_1343.9894, 0
  switch i64 %tag.9895, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9896
    i64 7, label %block.Cidr_Prelude.Bool.True.9926
  ]

block.Cidr_Prelude.Bool.False.9896:               ; preds = %block.exit.9893
  %idr_Prelude.Strings.trim8_val_1345.9897 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9898 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9899 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9898 to i64
  %new_node_ptr.9900 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9899 monotonic
  %new_node_ptr.9901 = inttoptr i64 %new_node_ptr.9900 to i64*
  %tag.9902 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1345.9897, 0
  %ptr_CGrString.9903 = bitcast i64* %new_node_ptr.9901 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1345.9897, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9903, align 1
  %idr_Prelude.Strings.trim8_val_1344.9904 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.9901)
  %alloc_bytes.9905 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9906 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9905 to i64
  %new_node_ptr.9907 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9906 monotonic
  %new_node_ptr.9908 = inttoptr i64 %new_node_ptr.9907 to i64*
  %tag.9909 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1344.9904, 0
  %ptr_CGrInt.9910 = bitcast i64* %new_node_ptr.9908 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1344.9904, <{ i64, [1 x i64] }>* %ptr_CGrInt.9910, align 1
  %idr_Prelude.Strings.trim9_val_1349.9911 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9912 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9913 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9912 to i64
  %new_node_ptr.9914 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9913 monotonic
  %new_node_ptr.9915 = inttoptr i64 %new_node_ptr.9914 to i64*
  %tag.9916 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1349.9911, 0
  %ptr_CGrString.9917 = bitcast i64* %new_node_ptr.9915 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1349.9911, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9917, align 1
  %idr_Prelude.Strings.trim9_val_1348.9918 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9915)
  %alloc_bytes.9919 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9920 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9919 to i64
  %new_node_ptr.9921 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9920 monotonic
  %new_node_ptr.9922 = inttoptr i64 %new_node_ptr.9921 to i64*
  %tag.9923 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1348.9918, 0
  %ptr_CGrString.9924 = bitcast i64* %new_node_ptr.9922 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1348.9918, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9924, align 1
  %result.Cidr_Prelude.Bool.False.9925 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.9908, i64* %new_node_ptr.9922)
  br label %block.exit.10263

block.Cidr_Prelude.Bool.True.9926:                ; preds = %block.exit.9893
  %idr_Prelude.Strings.trim8_val_1356.9927 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.9928 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9929 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9928 to i64
  %new_node_ptr.9930 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9929 monotonic
  %new_node_ptr.9931 = inttoptr i64 %new_node_ptr.9930 to i64*
  %tag.9932 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1356.9927, 0
  %ptr_CGrString.9933 = bitcast i64* %new_node_ptr.9931 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1356.9927, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9933, align 1
  %idr_Prelude.Strings.trim8_val_1355.9934 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.9931)
  %alloc_bytes.9935 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9936 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9935 to i64
  %new_node_ptr.9937 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9936 monotonic
  %new_node_ptr.9938 = inttoptr i64 %new_node_ptr.9937 to i64*
  %tag.9939 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1355.9934, 0
  %ptr_CGrString.9940 = bitcast i64* %new_node_ptr.9938 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim8_val_1355.9934, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9940, align 1
  %node_CGrString.9941 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.9942 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.9943 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.9942 to i64
  %new_node_ptr.9944 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9943 monotonic
  %new_node_ptr.9945 = inttoptr i64 %new_node_ptr.9944 to i64*
  %tag.9946 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9941, 0
  %ptr_CGrString.9947 = bitcast i64* %new_node_ptr.9945 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.9941, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.9947, align 1
  %idr_Prelude.Strings.trim8_val_1354.9948 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.9938, i64* %new_node_ptr.9945)
  %alloc_bytes.9949 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.9950 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.9949 to i64
  %new_node_ptr.9951 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9950 monotonic
  %new_node_ptr.9952 = inttoptr i64 %new_node_ptr.9951 to i64*
  %tag.9953 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1354.9948, 0
  %ptr_CGrInt.9954 = bitcast i64* %new_node_ptr.9952 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim8_val_1354.9948, <{ i64, [1 x i64] }>* %ptr_CGrInt.9954, align 1
  %tag.9955 = load i64, i64* %new_node_ptr.9952, align 1
  %ptr_CGrInt.9956 = bitcast i64* %new_node_ptr.9952 to <{ i64, [1 x i64] }>*
  %node_CGrInt.9957 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.9956, align 1
  %tag.9958 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9957, 0
  switch i64 %tag.9958, label %error_block [
    i64 2, label %block.CGrInt.9959
  ]

block.CGrInt.9959:                                ; preds = %block.Cidr_Prelude.Bool.True.9926
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1363 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.9957, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1363, label %block.default.9960 [
    i64 0, label %block.int_0.9961
  ]

block.default.9960:                               ; preds = %block.CGrInt.9959
  br label %block.exit.9962

block.int_0.9961:                                 ; preds = %block.CGrInt.9959
  br label %block.exit.9962

block.exit.9962:                                  ; preds = %block.int_0.9961, %block.default.9960
  %result.CGrInt.9963 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.9960 ], [ <{ i64 7 }>, %block.int_0.9961 ]
  br label %block.exit.9964

block.exit.9964:                                  ; preds = %block.exit.9962
  %idr_Prelude.Strings.trim8_val_1353.9965 = phi <{ i64 }> [ %result.CGrInt.9963, %block.exit.9962 ]
  %alloc_bytes.9966 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9967 = ptrtoint <{ i64 }>* %alloc_bytes.9966 to i64
  %new_node_ptr.9968 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9967 monotonic
  %new_node_ptr.9969 = inttoptr i64 %new_node_ptr.9968 to i64*
  %tag.9970 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_1353.9965, 0
  switch i64 %tag.9970, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.9971
    i64 7, label %block.Cidr_Prelude.Bool.True.9973
  ]

block.Cidr_Prelude.Bool.False.9971:               ; preds = %block.exit.9964
  %ptr_Cidr_Prelude.Bool.False.9972 = bitcast i64* %new_node_ptr.9969 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_1353.9965, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.9972, align 1
  br label %block.exit.9975

block.Cidr_Prelude.Bool.True.9973:                ; preds = %block.exit.9964
  %ptr_Cidr_Prelude.Bool.True.9974 = bitcast i64* %new_node_ptr.9969 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_1353.9965, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9974, align 1
  br label %block.exit.9975

block.exit.9975:                                  ; preds = %block.Cidr_Prelude.Bool.True.9973, %block.Cidr_Prelude.Bool.False.9971
  %alloc_bytes.9976 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9977 = ptrtoint <{ i64 }>* %alloc_bytes.9976 to i64
  %new_node_ptr.9978 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9977 monotonic
  %new_node_ptr.9979 = inttoptr i64 %new_node_ptr.9978 to i64*
  %tag.9980 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.9981 = bitcast i64* %new_node_ptr.9979 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.9981, align 1
  %idr_Prelude.Strings.trim8_val_1352.9982 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.9969, i64* %new_node_ptr.9979)
  %alloc_bytes.9983 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.9984 = ptrtoint <{ i64 }>* %alloc_bytes.9983 to i64
  %new_node_ptr.9985 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.9984 monotonic
  %new_node_ptr.9986 = inttoptr i64 %new_node_ptr.9985 to i64*
  %tag.9987 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_1352.9982, 0
  switch i64 %tag.9987, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9988
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9990
  ]

block.Cidr_Prelude.Basics.No.9988:                ; preds = %block.exit.9975
  %ptr_Cidr_Prelude.Basics.No.9989 = bitcast i64* %new_node_ptr.9986 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_1352.9982, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9989, align 1
  br label %block.exit.9992

block.Cidr_Prelude.Basics.Yes.9990:               ; preds = %block.exit.9975
  %ptr_Cidr_Prelude.Basics.Yes.9991 = bitcast i64* %new_node_ptr.9986 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim8_val_1352.9982, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9991, align 1
  br label %block.exit.9992

block.exit.9992:                                  ; preds = %block.Cidr_Prelude.Basics.Yes.9990, %block.Cidr_Prelude.Basics.No.9988
  %tag.9993 = load i64, i64* %new_node_ptr.9986, align 1
  switch i64 %tag.9993, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.9994
    i64 27, label %block.Cidr_Prelude.Basics.Yes.9997
  ]

block.Cidr_Prelude.Basics.No.9994:                ; preds = %block.exit.9992
  %ptr_Cidr_Prelude.Basics.No.9995 = bitcast i64* %new_node_ptr.9986 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.9996 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.9995, align 1
  br label %block.exit.10000

block.Cidr_Prelude.Basics.Yes.9997:               ; preds = %block.exit.9992
  %ptr_Cidr_Prelude.Basics.Yes.9998 = bitcast i64* %new_node_ptr.9986 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.9999 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.9998, align 1
  br label %block.exit.10000

block.exit.10000:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.9997, %block.Cidr_Prelude.Basics.No.9994
  %idr_Prelude.Strings.trim8_val_1368.10001 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.9996, %block.Cidr_Prelude.Basics.No.9994 ], [ %node_Cidr_Prelude.Basics.Yes.9999, %block.Cidr_Prelude.Basics.Yes.9997 ]
  %tag.10002 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim8_val_1368.10001, 0
  switch i64 %tag.10002, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.10003
    i64 27, label %block.Cidr_Prelude.Basics.Yes.10005
  ]

block.Cidr_Prelude.Basics.No.10003:               ; preds = %block.exit.10000
  %node_CGrString.10004 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.10261

block.Cidr_Prelude.Basics.Yes.10005:              ; preds = %block.exit.10000
  %idr_Prelude.Strings.trim9_val_1372.10006 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.10007 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10008 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10007 to i64
  %new_node_ptr.10009 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10008 monotonic
  %new_node_ptr.10010 = inttoptr i64 %new_node_ptr.10009 to i64*
  %tag.10011 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1372.10006, 0
  %ptr_CGrString.10012 = bitcast i64* %new_node_ptr.10010 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1372.10006, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10012, align 1
  %idr_Prelude.Strings.trim9_val_1371.10013 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10010)
  %alloc_bytes.10014 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10015 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10014 to i64
  %new_node_ptr.10016 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10015 monotonic
  %new_node_ptr.10017 = inttoptr i64 %new_node_ptr.10016 to i64*
  %tag.10018 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1371.10013, 0
  %ptr_CGrString.10019 = bitcast i64* %new_node_ptr.10017 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim9_val_1371.10013, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10019, align 1
  %idr_Prelude.Strings.trim9_val_1370.10020 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.10017)
  %alloc_bytes.10021 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.10022 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.10021 to i64
  %new_node_ptr.10023 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10022 monotonic
  %new_node_ptr.10024 = inttoptr i64 %new_node_ptr.10023 to i64*
  %tag.10025 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1370.10020, 0
  %ptr_CGrInt.10026 = bitcast i64* %new_node_ptr.10024 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim9_val_1370.10020, <{ i64, [1 x i64] }>* %ptr_CGrInt.10026, align 1
  %idr_Prelude.Strings.trim9_val_1369.10027 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %new_node_ptr.10024)
  %alloc_bytes.10028 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.10029 = ptrtoint <{ i64 }>* %alloc_bytes.10028 to i64
  %new_node_ptr.10030 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10029 monotonic
  %new_node_ptr.10031 = inttoptr i64 %new_node_ptr.10030 to i64*
  %tag.10032 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1369.10027, 0
  switch i64 %tag.10032, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.10033
    i64 7, label %block.Cidr_Prelude.Bool.True.10035
  ]

block.Cidr_Prelude.Bool.False.10033:              ; preds = %block.Cidr_Prelude.Basics.Yes.10005
  %ptr_Cidr_Prelude.Bool.False.10034 = bitcast i64* %new_node_ptr.10031 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1369.10027, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.10034, align 1
  br label %block.exit.10037

block.Cidr_Prelude.Bool.True.10035:               ; preds = %block.Cidr_Prelude.Basics.Yes.10005
  %ptr_Cidr_Prelude.Bool.True.10036 = bitcast i64* %new_node_ptr.10031 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim9_val_1369.10027, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.10036, align 1
  br label %block.exit.10037

block.exit.10037:                                 ; preds = %block.Cidr_Prelude.Bool.True.10035, %block.Cidr_Prelude.Bool.False.10033
  %tag.10038 = load i64, i64* %new_node_ptr.10031, align 1
  switch i64 %tag.10038, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.10039
    i64 7, label %block.Cidr_Prelude.Bool.True.10042
  ]

block.Cidr_Prelude.Bool.False.10039:              ; preds = %block.exit.10037
  %ptr_Cidr_Prelude.Bool.False.10040 = bitcast i64* %new_node_ptr.10031 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.10041 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.10040, align 1
  br label %block.exit.10045

block.Cidr_Prelude.Bool.True.10042:               ; preds = %block.exit.10037
  %ptr_Cidr_Prelude.Bool.True.10043 = bitcast i64* %new_node_ptr.10031 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.10044 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.10043, align 1
  br label %block.exit.10045

block.exit.10045:                                 ; preds = %block.Cidr_Prelude.Bool.True.10042, %block.Cidr_Prelude.Bool.False.10039
  %idr_Prelude.Strings.trim9_val_1377.10046 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.10041, %block.Cidr_Prelude.Bool.False.10039 ], [ %node_Cidr_Prelude.Bool.True.10044, %block.Cidr_Prelude.Bool.True.10042 ]
  %tag.10047 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim9_val_1377.10046, 0
  switch i64 %tag.10047, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.10048
    i64 7, label %block.Cidr_Prelude.Bool.True.10092
  ]

block.Cidr_Prelude.Bool.False.10048:              ; preds = %block.exit.10045
  %idr_Prelude.Strings.trim10_val_1380.10049 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.10050 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10051 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10050 to i64
  %new_node_ptr.10052 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10051 monotonic
  %new_node_ptr.10053 = inttoptr i64 %new_node_ptr.10052 to i64*
  %tag.10054 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1380.10049, 0
  %ptr_CGrString.10055 = bitcast i64* %new_node_ptr.10053 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1380.10049, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10055, align 1
  %idr_Prelude.Strings.trim10_val_1379.10056 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10053)
  %alloc_bytes.10057 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10058 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10057 to i64
  %new_node_ptr.10059 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10058 monotonic
  %new_node_ptr.10060 = inttoptr i64 %new_node_ptr.10059 to i64*
  %tag.10061 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1379.10056, 0
  %ptr_CGrString.10062 = bitcast i64* %new_node_ptr.10060 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim10_val_1379.10056, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10062, align 1
  %idr_Prelude.Strings.trim10_val_1378.10063 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.10060)
  %alloc_bytes.10064 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.10065 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.10064 to i64
  %new_node_ptr.10066 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10065 monotonic
  %new_node_ptr.10067 = inttoptr i64 %new_node_ptr.10066 to i64*
  %tag.10068 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1378.10063, 0
  %ptr_CGrInt.10069 = bitcast i64* %new_node_ptr.10067 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim10_val_1378.10063, <{ i64, [1 x i64] }>* %ptr_CGrInt.10069, align 1
  %idr_Prelude.Strings.trim11_val_1386.10070 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.10071 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10072 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10071 to i64
  %new_node_ptr.10073 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10072 monotonic
  %new_node_ptr.10074 = inttoptr i64 %new_node_ptr.10073 to i64*
  %tag.10075 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1386.10070, 0
  %ptr_CGrString.10076 = bitcast i64* %new_node_ptr.10074 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1386.10070, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10076, align 1
  %idr_Prelude.Strings.trim11_val_1385.10077 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10074)
  %alloc_bytes.10078 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10079 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10078 to i64
  %new_node_ptr.10080 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10079 monotonic
  %new_node_ptr.10081 = inttoptr i64 %new_node_ptr.10080 to i64*
  %tag.10082 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1385.10077, 0
  %ptr_CGrString.10083 = bitcast i64* %new_node_ptr.10081 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1385.10077, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10083, align 1
  %idr_Prelude.Strings.trim11_val_1384.10084 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10081)
  %alloc_bytes.10085 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10086 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10085 to i64
  %new_node_ptr.10087 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10086 monotonic
  %new_node_ptr.10088 = inttoptr i64 %new_node_ptr.10087 to i64*
  %tag.10089 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1384.10084, 0
  %ptr_CGrString.10090 = bitcast i64* %new_node_ptr.10088 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1384.10084, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10090, align 1
  %result.Cidr_Prelude.Bool.False.10091 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.10067, i64* %new_node_ptr.10088)
  br label %block.exit.10259

block.Cidr_Prelude.Bool.True.10092:               ; preds = %block.exit.10045
  %alloc_bytes.10093 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.10094 = ptrtoint <{ i64 }>* %alloc_bytes.10093 to i64
  %new_node_ptr.10095 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10094 monotonic
  %new_node_ptr.10096 = inttoptr i64 %new_node_ptr.10095 to i64*
  %tag.10097 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.10098 = bitcast i64* %new_node_ptr.10096 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.10098, align 1
  %idr_Prelude.Strings.trim11_val_1398.10099 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.10100 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10101 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10100 to i64
  %new_node_ptr.10102 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10101 monotonic
  %new_node_ptr.10103 = inttoptr i64 %new_node_ptr.10102 to i64*
  %tag.10104 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1398.10099, 0
  %ptr_CGrString.10105 = bitcast i64* %new_node_ptr.10103 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1398.10099, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10105, align 1
  %idr_Prelude.Strings.trim11_val_1397.10106 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10103)
  %alloc_bytes.10107 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10108 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10107 to i64
  %new_node_ptr.10109 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10108 monotonic
  %new_node_ptr.10110 = inttoptr i64 %new_node_ptr.10109 to i64*
  %tag.10111 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1397.10106, 0
  %ptr_CGrString.10112 = bitcast i64* %new_node_ptr.10110 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1397.10106, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10112, align 1
  %idr_Prelude.Strings.trim11_val_1396.10113 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10110)
  %alloc_bytes.10114 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10115 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10114 to i64
  %new_node_ptr.10116 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10115 monotonic
  %new_node_ptr.10117 = inttoptr i64 %new_node_ptr.10116 to i64*
  %tag.10118 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1396.10113, 0
  %ptr_CGrString.10119 = bitcast i64* %new_node_ptr.10117 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim11_val_1396.10113, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10119, align 1
  %node_CGrString.10120 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.10121 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10122 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10121 to i64
  %new_node_ptr.10123 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10122 monotonic
  %new_node_ptr.10124 = inttoptr i64 %new_node_ptr.10123 to i64*
  %tag.10125 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.10120, 0
  %ptr_CGrString.10126 = bitcast i64* %new_node_ptr.10124 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.10120, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10126, align 1
  %idr_Prelude.Strings.trim11_val_1395.10127 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.10117, i64* %new_node_ptr.10124)
  %alloc_bytes.10128 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.10129 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.10128 to i64
  %new_node_ptr.10130 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10129 monotonic
  %new_node_ptr.10131 = inttoptr i64 %new_node_ptr.10130 to i64*
  %tag.10132 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim11_val_1395.10127, 0
  %ptr_CGrInt.10133 = bitcast i64* %new_node_ptr.10131 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim11_val_1395.10127, <{ i64, [1 x i64] }>* %ptr_CGrInt.10133, align 1
  %tag.10134 = load i64, i64* %new_node_ptr.10131, align 1
  %ptr_CGrInt.10135 = bitcast i64* %new_node_ptr.10131 to <{ i64, [1 x i64] }>*
  %node_CGrInt.10136 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.10135, align 1
  %tag.10137 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.10136, 0
  switch i64 %tag.10137, label %error_block [
    i64 2, label %block.CGrInt.10138
  ]

block.CGrInt.10138:                               ; preds = %block.Cidr_Prelude.Bool.True.10092
  %idr_Prelude.Strings.trim_cpat_LInt64_0_1406 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.10136, 1, 0
  switch i64 %idr_Prelude.Strings.trim_cpat_LInt64_0_1406, label %block.default.10139 [
    i64 0, label %block.int_0.10140
  ]

block.default.10139:                              ; preds = %block.CGrInt.10138
  br label %block.exit.10141

block.int_0.10140:                                ; preds = %block.CGrInt.10138
  br label %block.exit.10141

block.exit.10141:                                 ; preds = %block.int_0.10140, %block.default.10139
  %result.CGrInt.10142 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.10139 ], [ <{ i64 7 }>, %block.int_0.10140 ]
  br label %block.exit.10143

block.exit.10143:                                 ; preds = %block.exit.10141
  %idr_Prelude.Strings.trim11_val_1394.10144 = phi <{ i64 }> [ %result.CGrInt.10142, %block.exit.10141 ]
  %alloc_bytes.10145 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.10146 = ptrtoint <{ i64 }>* %alloc_bytes.10145 to i64
  %new_node_ptr.10147 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10146 monotonic
  %new_node_ptr.10148 = inttoptr i64 %new_node_ptr.10147 to i64*
  %tag.10149 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim11_val_1394.10144, 0
  switch i64 %tag.10149, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.10150
    i64 7, label %block.Cidr_Prelude.Bool.True.10152
  ]

block.Cidr_Prelude.Bool.False.10150:              ; preds = %block.exit.10143
  %ptr_Cidr_Prelude.Bool.False.10151 = bitcast i64* %new_node_ptr.10148 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim11_val_1394.10144, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.10151, align 1
  br label %block.exit.10154

block.Cidr_Prelude.Bool.True.10152:               ; preds = %block.exit.10143
  %ptr_Cidr_Prelude.Bool.True.10153 = bitcast i64* %new_node_ptr.10148 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim11_val_1394.10144, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.10153, align 1
  br label %block.exit.10154

block.exit.10154:                                 ; preds = %block.Cidr_Prelude.Bool.True.10152, %block.Cidr_Prelude.Bool.False.10150
  %alloc_bytes.10155 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.10156 = ptrtoint <{ i64 }>* %alloc_bytes.10155 to i64
  %new_node_ptr.10157 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10156 monotonic
  %new_node_ptr.10158 = inttoptr i64 %new_node_ptr.10157 to i64*
  %tag.10159 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.10160 = bitcast i64* %new_node_ptr.10158 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.10160, align 1
  %idr_Prelude.Strings.trim11_val_1393.10161 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.10148, i64* %new_node_ptr.10158)
  %alloc_bytes.10162 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.10163 = ptrtoint <{ i64 }>* %alloc_bytes.10162 to i64
  %new_node_ptr.10164 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10163 monotonic
  %new_node_ptr.10165 = inttoptr i64 %new_node_ptr.10164 to i64*
  %tag.10166 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim11_val_1393.10161, 0
  switch i64 %tag.10166, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.10167
    i64 27, label %block.Cidr_Prelude.Basics.Yes.10169
  ]

block.Cidr_Prelude.Basics.No.10167:               ; preds = %block.exit.10154
  %ptr_Cidr_Prelude.Basics.No.10168 = bitcast i64* %new_node_ptr.10165 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim11_val_1393.10161, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.10168, align 1
  br label %block.exit.10171

block.Cidr_Prelude.Basics.Yes.10169:              ; preds = %block.exit.10154
  %ptr_Cidr_Prelude.Basics.Yes.10170 = bitcast i64* %new_node_ptr.10165 to <{ i64 }>*
  store <{ i64 }> %idr_Prelude.Strings.trim11_val_1393.10161, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.10170, align 1
  br label %block.exit.10171

block.exit.10171:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.10169, %block.Cidr_Prelude.Basics.No.10167
  %tag.10172 = load i64, i64* %new_node_ptr.10165, align 1
  switch i64 %tag.10172, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.10173
    i64 27, label %block.Cidr_Prelude.Basics.Yes.10176
  ]

block.Cidr_Prelude.Basics.No.10173:               ; preds = %block.exit.10171
  %ptr_Cidr_Prelude.Basics.No.10174 = bitcast i64* %new_node_ptr.10165 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.10175 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.10174, align 1
  br label %block.exit.10179

block.Cidr_Prelude.Basics.Yes.10176:              ; preds = %block.exit.10171
  %ptr_Cidr_Prelude.Basics.Yes.10177 = bitcast i64* %new_node_ptr.10165 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.10178 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.10177, align 1
  br label %block.exit.10179

block.exit.10179:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.10176, %block.Cidr_Prelude.Basics.No.10173
  %idr_Prelude.Strings.trim11_val_1411.10180 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.10175, %block.Cidr_Prelude.Basics.No.10173 ], [ %node_Cidr_Prelude.Basics.Yes.10178, %block.Cidr_Prelude.Basics.Yes.10176 ]
  %tag.10181 = extractvalue <{ i64 }> %idr_Prelude.Strings.trim11_val_1411.10180, 0
  switch i64 %tag.10181, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.10182
    i64 27, label %block.Cidr_Prelude.Basics.Yes.10183
  ]

block.Cidr_Prelude.Basics.No.10182:               ; preds = %block.exit.10179
  %src.10243 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.10244 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10243, 0
  br label %block.exit.10242

block.Cidr_Prelude.Basics.Yes.10183:              ; preds = %block.exit.10179
  %idr_Prelude.Strings.trim12_val_1415.10184 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.10185 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10186 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10185 to i64
  %new_node_ptr.10187 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10186 monotonic
  %new_node_ptr.10188 = inttoptr i64 %new_node_ptr.10187 to i64*
  %tag.10189 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1415.10184, 0
  %ptr_CGrString.10190 = bitcast i64* %new_node_ptr.10188 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1415.10184, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10190, align 1
  %idr_Prelude.Strings.trim12_val_1414.10191 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10188)
  %alloc_bytes.10192 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10193 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10192 to i64
  %new_node_ptr.10194 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10193 monotonic
  %new_node_ptr.10195 = inttoptr i64 %new_node_ptr.10194 to i64*
  %tag.10196 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1414.10191, 0
  %ptr_CGrString.10197 = bitcast i64* %new_node_ptr.10195 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1414.10191, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10197, align 1
  %idr_Prelude.Strings.trim12_val_1413.10198 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10195)
  %alloc_bytes.10199 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10200 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10199 to i64
  %new_node_ptr.10201 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10200 monotonic
  %new_node_ptr.10202 = inttoptr i64 %new_node_ptr.10201 to i64*
  %tag.10203 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1413.10198, 0
  %ptr_CGrString.10204 = bitcast i64* %new_node_ptr.10202 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim12_val_1413.10198, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10204, align 1
  %idr_Prelude.Strings.trim12_val_1412.10205 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.10202)
  %alloc_bytes.10206 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.10207 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.10206 to i64
  %new_node_ptr.10208 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10207 monotonic
  %new_node_ptr.10209 = inttoptr i64 %new_node_ptr.10208 to i64*
  %tag.10210 = extractvalue <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim12_val_1412.10205, 0
  %ptr_CGrInt.10211 = bitcast i64* %new_node_ptr.10209 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr_Prelude.Strings.trim12_val_1412.10205, <{ i64, [1 x i64] }>* %ptr_CGrInt.10211, align 1
  %idr_Prelude.Strings.trim13_val_1422.10212 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %idr_Prelude.Strings.trim0)
  %alloc_bytes.10213 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10214 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10213 to i64
  %new_node_ptr.10215 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10214 monotonic
  %new_node_ptr.10216 = inttoptr i64 %new_node_ptr.10215 to i64*
  %tag.10217 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val_1422.10212, 0
  %ptr_CGrString.10218 = bitcast i64* %new_node_ptr.10216 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val_1422.10212, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10218, align 1
  %idr_Prelude.Strings.trim13_val_1421.10219 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10216)
  %alloc_bytes.10220 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10221 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10220 to i64
  %new_node_ptr.10222 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10221 monotonic
  %new_node_ptr.10223 = inttoptr i64 %new_node_ptr.10222 to i64*
  %tag.10224 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val_1421.10219, 0
  %ptr_CGrString.10225 = bitcast i64* %new_node_ptr.10223 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val_1421.10219, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10225, align 1
  %idr_Prelude.Strings.trim13_val_1420.10226 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10223)
  %alloc_bytes.10227 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10228 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10227 to i64
  %new_node_ptr.10229 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10228 monotonic
  %new_node_ptr.10230 = inttoptr i64 %new_node_ptr.10229 to i64*
  %tag.10231 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val_1420.10226, 0
  %ptr_CGrString.10232 = bitcast i64* %new_node_ptr.10230 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val_1420.10226, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10232, align 1
  %idr_Prelude.Strings.trim13_val.10233 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10230)
  %alloc_bytes.10234 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10235 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10234 to i64
  %new_node_ptr.10236 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10235 monotonic
  %new_node_ptr.10237 = inttoptr i64 %new_node_ptr.10236 to i64*
  %tag.10238 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val.10233, 0
  %ptr_CGrString.10239 = bitcast i64* %new_node_ptr.10237 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim13_val.10233, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10239, align 1
  %node_Cidr_Prelude.Strings.StrCons.10240 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.10209, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.10241 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.10240, i64* %new_node_ptr.10237, 1, 1
  br label %block.exit.10242

block.exit.10242:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.10183, %block.Cidr_Prelude.Basics.No.10182
  %idr_Prelude.Strings.trim11_val_1392.10245 = phi <{ i64, [2 x i64*] }> [ %dst.10244, %block.Cidr_Prelude.Basics.No.10182 ], [ %node_Cidr_Prelude.Strings.StrCons.10241, %block.Cidr_Prelude.Basics.Yes.10183 ]
  %alloc_bytes.10246 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.10247 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.10246 to i64
  %new_node_ptr.10248 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10247 monotonic
  %new_node_ptr.10249 = inttoptr i64 %new_node_ptr.10248 to i64*
  %tag.10250 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim11_val_1392.10245, 0
  switch i64 %tag.10250, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.10251
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.10253
  ]

block.Cidr_Prelude.Strings.StrCons.10251:         ; preds = %block.exit.10242
  %ptr_Cidr_Prelude.Strings.StrCons.10252 = bitcast i64* %new_node_ptr.10249 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim11_val_1392.10245, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.10252, align 1
  br label %block.exit.10257

block.Cidr_Prelude.Strings.StrNil.10253:          ; preds = %block.exit.10242
  %src.10254 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim11_val_1392.10245, 0
  %dst.10255 = insertvalue <{ i64 }> undef, i64 %src.10254, 0
  %ptr_Cidr_Prelude.Strings.StrNil.10256 = bitcast i64* %new_node_ptr.10249 to <{ i64 }>*
  store <{ i64 }> %dst.10255, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.10256, align 1
  br label %block.exit.10257

block.exit.10257:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.10253, %block.Cidr_Prelude.Strings.StrCons.10251
  %result.Cidr_Prelude.Bool.True.10258 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.10096, i64* %new_node_ptr.10249)
  br label %block.exit.10259

block.exit.10259:                                 ; preds = %block.exit.10257, %block.Cidr_Prelude.Bool.False.10048
  %result.Cidr_Prelude.Basics.Yes.10260 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.10091, %block.Cidr_Prelude.Bool.False.10048 ], [ %result.Cidr_Prelude.Bool.True.10258, %block.exit.10257 ]
  br label %block.exit.10261

block.exit.10261:                                 ; preds = %block.exit.10259, %block.Cidr_Prelude.Basics.No.10003
  %result.Cidr_Prelude.Bool.True.10262 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.10004, %block.Cidr_Prelude.Basics.No.10003 ], [ %result.Cidr_Prelude.Basics.Yes.10260, %block.exit.10259 ]
  br label %block.exit.10263

block.exit.10263:                                 ; preds = %block.exit.10261, %block.Cidr_Prelude.Bool.False.9896
  %result.Cidr_Prelude.Basics.Yes.10264 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.9925, %block.Cidr_Prelude.Bool.False.9896 ], [ %result.Cidr_Prelude.Bool.True.10262, %block.exit.10261 ]
  br label %block.exit.10265

block.exit.10265:                                 ; preds = %block.exit.10263, %block.Cidr_Prelude.Basics.No.9858
  %idr_Prelude.Strings.trim6_val_1321.10266 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.9859, %block.Cidr_Prelude.Basics.No.9858 ], [ %result.Cidr_Prelude.Basics.Yes.10264, %block.exit.10263 ]
  %alloc_bytes.10267 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10268 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10267 to i64
  %new_node_ptr.10269 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10268 monotonic
  %new_node_ptr.10270 = inttoptr i64 %new_node_ptr.10269 to i64*
  %tag.10271 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1321.10266, 0
  %ptr_CGrString.10272 = bitcast i64* %new_node_ptr.10270 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1321.10266, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10272, align 1
  %idr_Prelude.Strings.trim6_val_1320.10273 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_rev(i64* %new_node_ptr.10270)
  %alloc_bytes.10274 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10275 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10274 to i64
  %new_node_ptr.10276 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10275 monotonic
  %new_node_ptr.10277 = inttoptr i64 %new_node_ptr.10276 to i64*
  %tag.10278 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1320.10273, 0
  %ptr_CGrString.10279 = bitcast i64* %new_node_ptr.10277 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1320.10273, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10279, align 1
  %idr_Prelude.Strings.trim6_val_1319.10280 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10277)
  %alloc_bytes.10281 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10282 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10281 to i64
  %new_node_ptr.10283 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10282 monotonic
  %new_node_ptr.10284 = inttoptr i64 %new_node_ptr.10283 to i64*
  %tag.10285 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1319.10280, 0
  %ptr_CGrString.10286 = bitcast i64* %new_node_ptr.10284 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1319.10280, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10286, align 1
  %idr_Prelude.Strings.trim6_val_1318.10287 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.10284)
  %alloc_bytes.10288 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.10289 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.10288 to i64
  %new_node_ptr.10290 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10289 monotonic
  %new_node_ptr.10291 = inttoptr i64 %new_node_ptr.10290 to i64*
  %tag.10292 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1318.10287, 0
  %ptr_CGrString.10293 = bitcast i64* %new_node_ptr.10291 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr_Prelude.Strings.trim6_val_1318.10287, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10293, align 1
  %node_Cidr_Prelude.Strings.StrCons.10294 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.9786, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.10295 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.10294, i64* %new_node_ptr.10291, 1, 1
  br label %block.exit.10296

block.exit.10296:                                 ; preds = %block.exit.10265, %block.Cidr_Prelude.Basics.No.9282
  %idr_Prelude.Strings.trim4_val_1076.10299 = phi <{ i64, [2 x i64*] }> [ %dst.10298, %block.Cidr_Prelude.Basics.No.9282 ], [ %node_Cidr_Prelude.Strings.StrCons.10295, %block.exit.10265 ]
  %alloc_bytes.10300 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.10301 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.10300 to i64
  %new_node_ptr.10302 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10301 monotonic
  %new_node_ptr.10303 = inttoptr i64 %new_node_ptr.10302 to i64*
  %tag.10304 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim4_val_1076.10299, 0
  switch i64 %tag.10304, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.10305
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.10307
  ]

block.Cidr_Prelude.Strings.StrCons.10305:         ; preds = %block.exit.10296
  %ptr_Cidr_Prelude.Strings.StrCons.10306 = bitcast i64* %new_node_ptr.10303 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim4_val_1076.10299, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.10306, align 1
  br label %block.exit.10311

block.Cidr_Prelude.Strings.StrNil.10307:          ; preds = %block.exit.10296
  %src.10308 = extractvalue <{ i64, [2 x i64*] }> %idr_Prelude.Strings.trim4_val_1076.10299, 0
  %dst.10309 = insertvalue <{ i64 }> undef, i64 %src.10308, 0
  %ptr_Cidr_Prelude.Strings.StrNil.10310 = bitcast i64* %new_node_ptr.10303 to <{ i64 }>*
  store <{ i64 }> %dst.10309, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.10310, align 1
  br label %block.exit.10311

block.exit.10311:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.10307, %block.Cidr_Prelude.Strings.StrCons.10305
  %result.Cidr_Prelude.Bool.True.10312 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.8719, i64* %new_node_ptr.10303)
  br label %block.exit.10313

block.exit.10313:                                 ; preds = %block.exit.10311, %block.exit.8692
  %result.Cidr_Prelude.Basics.Yes.10314 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.8714, %block.exit.8692 ], [ %result.Cidr_Prelude.Bool.True.10312, %block.exit.10311 ]
  br label %block.exit.10315

block.exit.10315:                                 ; preds = %block.exit.10313, %block.Cidr_Prelude.Basics.No.7195
  %result.idr_Prelude.Strings.trim.10316 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %node_CGrString.7196, %block.Cidr_Prelude.Basics.No.7195 ], [ %result.Cidr_Prelude.Basics.Yes.10314, %block.exit.10313 ]
  ret <{ i64, [1 x { i8*, i64 }*] }> %result.idr_Prelude.Strings.trim.10316

error_block:                                      ; preds = %block.exit.10296, %block.exit.10242, %block.exit.10179, %block.exit.10171, %block.exit.10154, %block.exit.10143, %block.Cidr_Prelude.Bool.True.10092, %block.exit.10045, %block.exit.10037, %block.Cidr_Prelude.Basics.Yes.10005, %block.exit.10000, %block.exit.9992, %block.exit.9975, %block.exit.9964, %block.Cidr_Prelude.Bool.True.9926, %block.exit.9893, %block.exit.9885, %block.Cidr_Prelude.Basics.Yes.9860, %block.exit.9855, %block.exit.9847, %block.exit.9830, %block.exit.9819, %block.exit.9760, %block.exit.9737, %block.exit.9674, %block.exit.9666, %block.exit.9649, %block.exit.9638, %block.Cidr_Prelude.Bool.True.9587, %block.exit.9540, %block.exit.9532, %block.Cidr_Prelude.Basics.Yes.9500, %block.exit.9495, %block.exit.9487, %block.exit.9470, %block.exit.9459, %block.Cidr_Prelude.Bool.True.9421, %block.exit.9388, %block.exit.9380, %block.Cidr_Prelude.Basics.Yes.9355, %block.exit.9350, %block.exit.9342, %block.exit.9325, %block.exit.9314, %block.Cidr_Prelude.Basics.Yes.9283, %block.exit.9279, %block.exit.9271, %block.exit.9254, %block.exit.9243, %block.exit.9198, %block.exit.9175, %block.exit.9112, %block.exit.9104, %block.exit.9087, %block.exit.9076, %block.Cidr_Prelude.Bool.True.9025, %block.exit.8978, %block.exit.8970, %block.Cidr_Prelude.Basics.Yes.8938, %block.exit.8933, %block.exit.8925, %block.exit.8908, %block.exit.8897, %block.Cidr_Prelude.Bool.True.8859, %block.exit.8826, %block.exit.8818, %block.Cidr_Prelude.Basics.Yes.8793, %block.exit.8788, %block.exit.8780, %block.exit.8763, %block.exit.8752, %block.Cidr_Prelude.Bool.True.8715, %block.exit.8669, %block.exit.8606, %block.exit.8598, %block.exit.8581, %block.exit.8570, %block.Cidr_Prelude.Bool.True.8519, %block.exit.8472, %block.exit.8464, %block.Cidr_Prelude.Basics.Yes.8432, %block.exit.8427, %block.exit.8419, %block.exit.8402, %block.exit.8391, %block.Cidr_Prelude.Bool.True.8353, %block.exit.8320, %block.exit.8312, %block.Cidr_Prelude.Basics.Yes.8287, %block.exit.8282, %block.exit.8274, %block.exit.8257, %block.exit.8246, %block.exit.8194, %block.exit.8171, %block.exit.8108, %block.exit.8100, %block.exit.8083, %block.exit.8072, %block.Cidr_Prelude.Bool.True.8021, %block.exit.7974, %block.exit.7966, %block.Cidr_Prelude.Basics.Yes.7934, %block.exit.7929, %block.exit.7921, %block.exit.7904, %block.exit.7893, %block.Cidr_Prelude.Bool.True.7855, %block.exit.7822, %block.exit.7814, %block.Cidr_Prelude.Basics.Yes.7789, %block.exit.7784, %block.exit.7776, %block.exit.7759, %block.exit.7748, %block.Cidr_Prelude.Bool.False.7717, %block.exit.7714, %block.exit.7706, %block.exit.7674, %block.exit.7651, %block.exit.7588, %block.exit.7580, %block.exit.7563, %block.exit.7552, %block.Cidr_Prelude.Bool.True.7501, %block.exit.7454, %block.exit.7446, %block.Cidr_Prelude.Basics.Yes.7414, %block.exit.7409, %block.exit.7401, %block.exit.7384, %block.exit.7373, %block.Cidr_Prelude.Bool.True.7335, %block.exit.7302, %block.exit.7294, %block.Cidr_Prelude.Basics.Yes.7269, %block.exit.7264, %block.exit.7256, %block.exit.7239, %block.exit.7228, %block.Cidr_Prelude.Basics.Yes.7197, %block.exit.7192, %block.exit.7184, %block.exit.7167, %block.exit.7156, %block.exit.7118, %block.exit.7087, %block.exit.6996, %block.exit.6988, %block.exit.6971, %block.exit.6960, %block.Cidr_Prelude.Bool.True.6895, %block.exit.6820, %block.exit.6812, %block.Cidr_Prelude.Basics.Yes.6766, %block.exit.6761, %block.exit.6753, %block.exit.6736, %block.exit.6725, %block.Cidr_Prelude.Bool.True.6673, %block.exit.6612, %block.exit.6604, %block.Cidr_Prelude.Basics.Yes.6565, %block.exit.6560, %block.exit.6552, %block.exit.6535, %block.exit.6524, %block.Cidr_Prelude.Bool.True.6479, %block.exit.6432, %block.exit.6424, %block.Cidr_Prelude.Basics.Yes.6392, %block.exit.6387, %block.exit.6379, %block.exit.6362, %block.exit.6351, %block.Cidr_Prelude.Bool.True.6313, %block.exit.6280, %block.exit.6272, %block.Cidr_Prelude.Basics.Yes.6247, %block.exit.6242, %block.exit.6234, %block.exit.6217, %block.exit.6206, %idr_Prelude.Strings.trim.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %"idr_{APPLY_0}0", i64* %"idr_{APPLY_0}1") #0 {
"idr_{APPLY_0}.entry":
  %tag.10317 = load i64, i64* %"idr_{APPLY_0}0", align 1
  switch i64 %tag.10317, label %error_block [
    i64 0, label %block.CErased.10318
    i64 1, label %block.CGrFloat.10323
    i64 2, label %block.CGrInt.10330
    i64 3, label %block.CGrString.10337
    i64 4, label %block.Cidr_Builtins.MkPair.10344
    i64 5, label %"block.Cidr_Data.Vect.::.10353"
    i64 6, label %block.Cidr_Prelude.Bool.False.10362
    i64 7, label %block.Cidr_Prelude.Bool.True.10367
    i64 8, label %"block.Cidr_Prelude.List.::.10372"
    i64 9, label %block.Cidr_Prelude.List.Nil.10381
    i64 17, label %"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10386"
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.10397"
    i64 52, label %"block.Cidr_{U_Main.{main_2}_1}.10408"
    i64 21, label %"block.Cidr_{U_Main.{main_3}_1}.10413"
    i64 53, label %"block.Cidr_{U_Main.{main_4}_1}.10418"
    i64 22, label %"block.Cidr_{U_Main.{main_5}_1}.10423"
    i64 23, label %"block.Cidr_{U_Main.{main_6}_1}.10428"
    i64 24, label %"block.Cidr_{U_Main.{main_8}_1}.10433"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.10438"
    i64 25, label %"block.Cidr_{U_Main.{main_9}_2}.10445"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.10450"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.10459"
    i64 54, label %"block.Cidr_{U_Prelude.Chars.isDigit_1}.10468"
    i64 49, label %"block.Cidr_{U_Prelude.Show.protectEsc_1}.10473"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10482"
    i64 55, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10489"
    i64 56, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10494"
    i64 41, label %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10499"
    i64 42, label %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10504"
    i64 43, label %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10509"
    i64 44, label %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10514"
    i64 45, label %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10519"
    i64 46, label %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10524"
    i64 47, label %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10529"
    i64 48, label %"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10534"
    i64 50, label %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10539"
    i64 51, label %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10544"
    i64 38, label %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10549"
    i64 40, label %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10556"
    i64 57, label %"block.Cidr_{U_prim__floatToStr_1}.10563"
    i64 39, label %"block.Cidr_{U_prim__strCons_1}.10568"
    i64 58, label %"block.Cidr_{U_prim__toStrInt_1}.10575"
  ]

block.CErased.10318:                              ; preds = %"idr_{APPLY_0}.entry"
  %ptr_CErased.10319 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %node_CErased.10320 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.10319, align 1
  %src.10321 = extractvalue <{ i64 }> %node_CErased.10320, 0
  %dst.10322 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10321, 0
  br label %block.exit.10580

block.CGrFloat.10323:                             ; preds = %"idr_{APPLY_0}.entry"
  %ptr_CGrFloat.10324 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x float] }>*
  %node_CGrFloat.10325 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.10324, align 1
  %src.10326 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.10325, 0
  %dst.10327 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10326, 0
  %src.10328 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.10325, 1, 0
  %dst.10329 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10327, float %src.10328, 1, 0
  br label %block.exit.10580

block.CGrInt.10330:                               ; preds = %"idr_{APPLY_0}.entry"
  %ptr_CGrInt.10331 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x i64] }>*
  %node_CGrInt.10332 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.10331, align 1
  %src.10333 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.10332, 0
  %dst.10334 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10333, 0
  %src.10335 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.10332, 1, 0
  %dst.10336 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10334, i64 %src.10335, 2, 0
  br label %block.exit.10580

block.CGrString.10337:                            ; preds = %"idr_{APPLY_0}.entry"
  %ptr_CGrString.10338 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.10339 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10338, align 1
  %src.10340 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.10339, 0
  %dst.10341 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10340, 0
  %src.10342 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.10339, 1, 0
  %dst.10343 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10341, { i8*, i64 }* %src.10342, 3, 0
  br label %block.exit.10580

block.Cidr_Builtins.MkPair.10344:                 ; preds = %"idr_{APPLY_0}.entry"
  %ptr_Cidr_Builtins.MkPair.10345 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.10346 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.10345, align 1
  %src.10347 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.10346, 0
  %dst.10348 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10347, 0
  %src.10349 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.10346, 1, 1
  %dst.10350 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10348, i64* %src.10349, 4, 1
  %src.10351 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.10346, 1, 0
  %dst.10352 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10350, i64* %src.10351, 4, 0
  br label %block.exit.10580

"block.Cidr_Data.Vect.::.10353":                  ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_Cidr_Data.Vect.::.10354" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.10355" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.10354", align 1
  %src.10356 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.10355", 0
  %dst.10357 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10356, 0
  %src.10358 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.10355", 1, 1
  %dst.10359 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10357, i64* %src.10358, 4, 1
  %src.10360 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.10355", 1, 0
  %dst.10361 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10359, i64* %src.10360, 4, 0
  br label %block.exit.10580

block.Cidr_Prelude.Bool.False.10362:              ; preds = %"idr_{APPLY_0}.entry"
  %ptr_Cidr_Prelude.Bool.False.10363 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.10364 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.10363, align 1
  %src.10365 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.10364, 0
  %dst.10366 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10365, 0
  br label %block.exit.10580

block.Cidr_Prelude.Bool.True.10367:               ; preds = %"idr_{APPLY_0}.entry"
  %ptr_Cidr_Prelude.Bool.True.10368 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.10369 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.10368, align 1
  %src.10370 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.10369, 0
  %dst.10371 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10370, 0
  br label %block.exit.10580

"block.Cidr_Prelude.List.::.10372":               ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_Cidr_Prelude.List.::.10373" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.10374" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.10373", align 1
  %src.10375 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.10374", 0
  %dst.10376 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10375, 0
  %src.10377 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.10374", 1, 1
  %dst.10378 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10376, i64* %src.10377, 4, 1
  %src.10379 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.10374", 1, 0
  %dst.10380 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10378, i64* %src.10379, 4, 0
  br label %block.exit.10580

block.Cidr_Prelude.List.Nil.10381:                ; preds = %"idr_{APPLY_0}.entry"
  %ptr_Cidr_Prelude.List.Nil.10382 = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.10383 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.10382, align 1
  %src.10384 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.10383, 0
  %dst.10385 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10384, 0
  br label %block.exit.10580

"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10386": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.10387" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.10388" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.10387", align 1
  %src.10389 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.10388", 0
  %dst.10390 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10389, 0
  %src.10391 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.10388", 1, 2
  %dst.10392 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10390, i64* %src.10391, 4, 2
  %src.10393 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.10388", 1, 1
  %dst.10394 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10392, i64* %src.10393, 4, 1
  %src.10395 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Data.Vect.{foldrImpl_1}_1}\22.10388", 1, 0
  %dst.10396 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10394, i64* %src.10395, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{adder_0}_1}.10397":          ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.10398" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.10399" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.10398", align 1
  %src.10400 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.10399", 0
  %dst.10401 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10400, 0
  %src.10402 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.10399", 1, 2
  %dst.10403 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10401, i64* %src.10402, 4, 2
  %src.10404 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.10399", 1, 1
  %dst.10405 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10403, i64* %src.10404, 4, 1
  %src.10406 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.10399", 1, 0
  %dst.10407 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10405, i64* %src.10406, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_2}_1}.10408":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_2}_1}\22.10409" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Main.{main_2}_1}\22.10410" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_2}_1}\22.10409", align 1
  %src.10411 = extractvalue <{ i64 }> %"node_C\22idr_{U_Main.{main_2}_1}\22.10410", 0
  %dst.10412 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10411, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_3}_1}.10413":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_3}_1}\22.10414" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Main.{main_3}_1}\22.10415" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_3}_1}\22.10414", align 1
  %src.10416 = extractvalue <{ i64 }> %"node_C\22idr_{U_Main.{main_3}_1}\22.10415", 0
  %dst.10417 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10416, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_4}_1}.10418":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_4}_1}\22.10419" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Main.{main_4}_1}\22.10420" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_4}_1}\22.10419", align 1
  %src.10421 = extractvalue <{ i64 }> %"node_C\22idr_{U_Main.{main_4}_1}\22.10420", 0
  %dst.10422 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10421, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_5}_1}.10423":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_5}_1}\22.10424" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Main.{main_5}_1}\22.10425" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_5}_1}\22.10424", align 1
  %src.10426 = extractvalue <{ i64 }> %"node_C\22idr_{U_Main.{main_5}_1}\22.10425", 0
  %dst.10427 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10426, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_6}_1}.10428":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_6}_1}\22.10429" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Main.{main_6}_1}\22.10430" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_6}_1}\22.10429", align 1
  %src.10431 = extractvalue <{ i64 }> %"node_C\22idr_{U_Main.{main_6}_1}\22.10430", 0
  %dst.10432 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10431, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_8}_1}.10433":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_8}_1}\22.10434" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Main.{main_8}_1}\22.10435" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_8}_1}\22.10434", align 1
  %src.10436 = extractvalue <{ i64 }> %"node_C\22idr_{U_Main.{main_8}_1}\22.10435", 0
  %dst.10437 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10436, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_9}_1}.10438":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.10439" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.10440" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.10439", align 1
  %src.10441 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.10440", 0
  %dst.10442 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10441, 0
  %src.10443 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.10440", 1, 0
  %dst.10444 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10442, i64* %src.10443, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{main_9}_2}.10445":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{main_9}_2}\22.10446" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Main.{main_9}_2}\22.10447" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_9}_2}\22.10446", align 1
  %src.10448 = extractvalue <{ i64 }> %"node_C\22idr_{U_Main.{main_9}_2}\22.10447", 0
  %dst.10449 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10448, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{printFmt_14}_1}.10450":      ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.10451" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.10452" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.10451", align 1
  %src.10453 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.10452", 0
  %dst.10454 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10453, 0
  %src.10455 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.10452", 1, 1
  %dst.10456 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10454, i64* %src.10455, 4, 1
  %src.10457 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.10452", 1, 0
  %dst.10458 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10456, i64* %src.10457, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Main.{printFmt_15}_1}.10459":      ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.10460" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.10461" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.10460", align 1
  %src.10462 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.10461", 0
  %dst.10463 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10462, 0
  %src.10464 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.10461", 1, 1
  %dst.10465 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10463, i64* %src.10464, 4, 1
  %src.10466 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.10461", 1, 0
  %dst.10467 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10465, i64* %src.10466, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Chars.isDigit_1}.10468":   ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Chars.isDigit_1}\22.10469" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Chars.isDigit_1}\22.10470" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Chars.isDigit_1}\22.10469", align 1
  %src.10471 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Chars.isDigit_1}\22.10470", 0
  %dst.10472 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10471, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.protectEsc_1}.10473": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.protectEsc_1}\22.10474" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.10475" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.protectEsc_1}\22.10474", align 1
  %src.10476 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.10475", 0
  %dst.10477 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10476, 0
  %src.10478 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.10475", 1, 1
  %dst.10479 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10477, i64* %src.10478, 4, 1
  %src.10480 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Prelude.Show.protectEsc_1}\22.10475", 1, 0
  %dst.10481 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10479, i64* %src.10480, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10482": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10483" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10484" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10483", align 1
  %src.10485 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10484", 0
  %dst.10486 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10485, 0
  %src.10487 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10484", 1, 0
  %dst.10488 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10486, i64* %src.10487, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10489": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}\22.10490" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}\22.10491" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}\22.10490", align 1
  %src.10492 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}\22.10491", 0
  %dst.10493 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10492, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10494": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}\22.10495" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}\22.10496" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}\22.10495", align 1
  %src.10497 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}\22.10496", 0
  %dst.10498 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10497, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10499": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_16}_1}\22.10500" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_16}_1}\22.10501" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_16}_1}\22.10500", align 1
  %src.10502 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_16}_1}\22.10501", 0
  %dst.10503 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10502, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10504": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_17}_1}\22.10505" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_17}_1}\22.10506" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_17}_1}\22.10505", align 1
  %src.10507 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_17}_1}\22.10506", 0
  %dst.10508 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10507, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10509": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_18}_1}\22.10510" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_18}_1}\22.10511" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_18}_1}\22.10510", align 1
  %src.10512 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_18}_1}\22.10511", 0
  %dst.10513 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10512, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10514": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_19}_1}\22.10515" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_19}_1}\22.10516" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_19}_1}\22.10515", align 1
  %src.10517 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_19}_1}\22.10516", 0
  %dst.10518 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10517, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10519": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_20}_1}\22.10520" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_20}_1}\22.10521" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_20}_1}\22.10520", align 1
  %src.10522 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_20}_1}\22.10521", 0
  %dst.10523 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10522, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10524": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_21}_1}\22.10525" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_21}_1}\22.10526" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_21}_1}\22.10525", align 1
  %src.10527 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_21}_1}\22.10526", 0
  %dst.10528 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10527, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10529": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_22}_1}\22.10530" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_22}_1}\22.10531" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_22}_1}\22.10530", align 1
  %src.10532 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_22}_1}\22.10531", 0
  %dst.10533 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10532, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10534": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_23}_1}\22.10535" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_23}_1}\22.10536" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_23}_1}\22.10535", align 1
  %src.10537 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_23}_1}\22.10536", 0
  %dst.10538 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10537, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10539": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_24}_1}\22.10540" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_24}_1}\22.10541" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_24}_1}\22.10540", align 1
  %src.10542 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_24}_1}\22.10541", 0
  %dst.10543 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10542, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10544": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_25}_1}\22.10545" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_25}_1}\22.10546" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_25}_1}\22.10545", align 1
  %src.10547 = extractvalue <{ i64 }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_25}_1}\22.10546", 0
  %dst.10548 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10547, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10549": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.10550" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.10551" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.10550", align 1
  %src.10552 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.10551", 0
  %dst.10553 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10552, 0
  %src.10554 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_26}_1}\22.10551", 1, 0
  %dst.10555 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10553, i64* %src.10554, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10556": ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.10557" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.10558" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.10557", align 1
  %src.10559 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.10558", 0
  %dst.10560 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10559, 0
  %src.10561 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{showLitChar_27}_1}\22.10558", 1, 0
  %dst.10562 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10560, i64* %src.10561, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_prim__floatToStr_1}.10563":        ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_prim__floatToStr_1}\22.10564" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_prim__floatToStr_1}\22.10565" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__floatToStr_1}\22.10564", align 1
  %src.10566 = extractvalue <{ i64 }> %"node_C\22idr_{U_prim__floatToStr_1}\22.10565", 0
  %dst.10567 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10566, 0
  br label %block.exit.10580

"block.Cidr_{U_prim__strCons_1}.10568":           ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_prim__strCons_1}\22.10569" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_prim__strCons_1}\22.10570" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_prim__strCons_1}\22.10569", align 1
  %src.10571 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_prim__strCons_1}\22.10570", 0
  %dst.10572 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10571, 0
  %src.10573 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_prim__strCons_1}\22.10570", 1, 0
  %dst.10574 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10572, i64* %src.10573, 4, 0
  br label %block.exit.10580

"block.Cidr_{U_prim__toStrInt_1}.10575":          ; preds = %"idr_{APPLY_0}.entry"
  %"ptr_C\22idr_{U_prim__toStrInt_1}\22.10576" = bitcast i64* %"idr_{APPLY_0}0" to <{ i64 }>*
  %"node_C\22idr_{U_prim__toStrInt_1}\22.10577" = load <{ i64 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__toStrInt_1}\22.10576", align 1
  %src.10578 = extractvalue <{ i64 }> %"node_C\22idr_{U_prim__toStrInt_1}\22.10577", 0
  %dst.10579 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10578, 0
  br label %block.exit.10580

block.exit.10580:                                 ; preds = %"block.Cidr_{U_prim__toStrInt_1}.10575", %"block.Cidr_{U_prim__strCons_1}.10568", %"block.Cidr_{U_prim__floatToStr_1}.10563", %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10556", %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10549", %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10544", %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10539", %"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10534", %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10529", %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10524", %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10519", %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10514", %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10509", %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10504", %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10499", %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10494", %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10489", %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10482", %"block.Cidr_{U_Prelude.Show.protectEsc_1}.10473", %"block.Cidr_{U_Prelude.Chars.isDigit_1}.10468", %"block.Cidr_{U_Main.{printFmt_15}_1}.10459", %"block.Cidr_{U_Main.{printFmt_14}_1}.10450", %"block.Cidr_{U_Main.{main_9}_2}.10445", %"block.Cidr_{U_Main.{main_9}_1}.10438", %"block.Cidr_{U_Main.{main_8}_1}.10433", %"block.Cidr_{U_Main.{main_6}_1}.10428", %"block.Cidr_{U_Main.{main_5}_1}.10423", %"block.Cidr_{U_Main.{main_4}_1}.10418", %"block.Cidr_{U_Main.{main_3}_1}.10413", %"block.Cidr_{U_Main.{main_2}_1}.10408", %"block.Cidr_{U_Main.{adder_0}_1}.10397", %"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10386", %block.Cidr_Prelude.List.Nil.10381, %"block.Cidr_Prelude.List.::.10372", %block.Cidr_Prelude.Bool.True.10367, %block.Cidr_Prelude.Bool.False.10362, %"block.Cidr_Data.Vect.::.10353", %block.Cidr_Builtins.MkPair.10344, %block.CGrString.10337, %block.CGrInt.10330, %block.CGrFloat.10323, %block.CErased.10318
  %"idr_{APPLY_0}0_val.10581" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.10322, %block.CErased.10318 ], [ %dst.10329, %block.CGrFloat.10323 ], [ %dst.10336, %block.CGrInt.10330 ], [ %dst.10343, %block.CGrString.10337 ], [ %dst.10352, %block.Cidr_Builtins.MkPair.10344 ], [ %dst.10361, %"block.Cidr_Data.Vect.::.10353" ], [ %dst.10366, %block.Cidr_Prelude.Bool.False.10362 ], [ %dst.10371, %block.Cidr_Prelude.Bool.True.10367 ], [ %dst.10380, %"block.Cidr_Prelude.List.::.10372" ], [ %dst.10385, %block.Cidr_Prelude.List.Nil.10381 ], [ %dst.10396, %"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10386" ], [ %dst.10407, %"block.Cidr_{U_Main.{adder_0}_1}.10397" ], [ %dst.10412, %"block.Cidr_{U_Main.{main_2}_1}.10408" ], [ %dst.10417, %"block.Cidr_{U_Main.{main_3}_1}.10413" ], [ %dst.10422, %"block.Cidr_{U_Main.{main_4}_1}.10418" ], [ %dst.10427, %"block.Cidr_{U_Main.{main_5}_1}.10423" ], [ %dst.10432, %"block.Cidr_{U_Main.{main_6}_1}.10428" ], [ %dst.10437, %"block.Cidr_{U_Main.{main_8}_1}.10433" ], [ %dst.10444, %"block.Cidr_{U_Main.{main_9}_1}.10438" ], [ %dst.10449, %"block.Cidr_{U_Main.{main_9}_2}.10445" ], [ %dst.10458, %"block.Cidr_{U_Main.{printFmt_14}_1}.10450" ], [ %dst.10467, %"block.Cidr_{U_Main.{printFmt_15}_1}.10459" ], [ %dst.10472, %"block.Cidr_{U_Prelude.Chars.isDigit_1}.10468" ], [ %dst.10481, %"block.Cidr_{U_Prelude.Show.protectEsc_1}.10473" ], [ %dst.10488, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10482" ], [ %dst.10493, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10489" ], [ %dst.10498, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10494" ], [ %dst.10503, %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10499" ], [ %dst.10508, %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10504" ], [ %dst.10513, %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10509" ], [ %dst.10518, %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10514" ], [ %dst.10523, %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10519" ], [ %dst.10528, %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10524" ], [ %dst.10533, %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10529" ], [ %dst.10538, %"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10534" ], [ %dst.10543, %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10539" ], [ %dst.10548, %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10544" ], [ %dst.10555, %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10549" ], [ %dst.10562, %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10556" ], [ %dst.10567, %"block.Cidr_{U_prim__floatToStr_1}.10563" ], [ %dst.10574, %"block.Cidr_{U_prim__strCons_1}.10568" ], [ %dst.10579, %"block.Cidr_{U_prim__toStrInt_1}.10575" ]
  %tag.10582 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 0
  switch i64 %tag.10582, label %block.default.10583 [
    i64 17, label %"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10584"
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.10586"
    i64 52, label %"block.Cidr_{U_Main.{main_2}_1}.10588"
    i64 21, label %"block.Cidr_{U_Main.{main_3}_1}.10590"
    i64 53, label %"block.Cidr_{U_Main.{main_4}_1}.10592"
    i64 22, label %"block.Cidr_{U_Main.{main_5}_1}.10594"
    i64 23, label %"block.Cidr_{U_Main.{main_6}_1}.10596"
    i64 24, label %"block.Cidr_{U_Main.{main_8}_1}.10598"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.10600"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.10602"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.10604"
    i64 54, label %"block.Cidr_{U_Prelude.Chars.isDigit_1}.10606"
    i64 49, label %"block.Cidr_{U_Prelude.Show.protectEsc_1}.10608"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10610"
    i64 56, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10612"
    i64 41, label %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10614"
    i64 42, label %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10616"
    i64 43, label %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10618"
    i64 44, label %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10620"
    i64 45, label %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10622"
    i64 46, label %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10624"
    i64 47, label %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10626"
    i64 48, label %"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10628"
    i64 50, label %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10630"
    i64 51, label %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10632"
    i64 38, label %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10634"
    i64 40, label %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10636"
    i64 57, label %"block.Cidr_{U_prim__floatToStr_1}.10638"
    i64 39, label %"block.Cidr_{U_prim__strCons_1}.10640"
    i64 58, label %"block.Cidr_{U_prim__toStrInt_1}.10642"
    i64 25, label %"block.Cidr_{U_Main.{main_9}_2}.10644"
    i64 55, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10646"
  ]

block.default.10583:                              ; preds = %block.exit.10580
  %src.10649 = extractvalue <{ i64 }> zeroinitializer, 0
  %dst.10650 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10649, 0
  br label %block.exit.10648

"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10584": ; preds = %block.exit.10580
  %"idr_{APPLY_0}2" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"idr_{APPLY_0}3" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 1
  %"idr_{APPLY_0}4" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 2
  %"result.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10585" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Data.Vect.{foldrImpl_1}"(i64* %"idr_{APPLY_0}2", i64* %"idr_{APPLY_0}3", i64* %"idr_{APPLY_0}4", i64* %"idr_{APPLY_0}1")
  br label %block.exit.10648

"block.Cidr_{U_Main.{adder_0}_1}.10586":          ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1444" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"idr_{APPLY_0}3_1445" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 1
  %"idr_{APPLY_0}4_1446" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 2
  %"result.Cidr_{U_Main.{adder_0}_1}.10587" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Main.{adder_0}"(i64* %"idr_{APPLY_0}2_1444", i64* %"idr_{APPLY_0}3_1445", i64* %"idr_{APPLY_0}4_1446", i64* %"idr_{APPLY_0}1")
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_2}_1}.10588":           ; preds = %block.exit.10580
  %"result.Cidr_{U_Main.{main_2}_1}.10589" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_2}"(i64* %"idr_{APPLY_0}1")
  %src.10651 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_2}_1}.10589", 0
  %dst.10652 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10651, 0
  %src.10653 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_2}_1}.10589", 1, 0
  %dst.10654 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10652, { i8*, i64 }* %src.10653, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_3}_1}.10590":           ; preds = %block.exit.10580
  %"result.Cidr_{U_Main.{main_3}_1}.10591" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_3}"(i64* %"idr_{APPLY_0}1")
  %src.10655 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_3}_1}.10591", 0
  %dst.10656 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10655, 0
  %src.10657 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_3}_1}.10591", 1, 0
  %dst.10658 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10656, { i8*, i64 }* %src.10657, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_4}_1}.10592":           ; preds = %block.exit.10580
  %"result.Cidr_{U_Main.{main_4}_1}.10593" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_4}"(i64* %"idr_{APPLY_0}1")
  %src.10659 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_4}_1}.10593", 0
  %dst.10660 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10659, 0
  %src.10661 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_4}_1}.10593", 1, 0
  %dst.10662 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10660, { i8*, i64 }* %src.10661, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_5}_1}.10594":           ; preds = %block.exit.10580
  %"result.Cidr_{U_Main.{main_5}_1}.10595" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_5}"(i64* %"idr_{APPLY_0}1")
  %src.10663 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_5}_1}.10595", 0
  %dst.10664 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10663, 0
  %src.10665 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_5}_1}.10595", 1, 0
  %dst.10666 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10664, { i8*, i64 }* %src.10665, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_6}_1}.10596":           ; preds = %block.exit.10580
  %"result.Cidr_{U_Main.{main_6}_1}.10597" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_6}"(i64* %"idr_{APPLY_0}1")
  %src.10667 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_6}_1}.10597", 0
  %dst.10668 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10667, 0
  %src.10669 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Main.{main_6}_1}.10597", 1, 0
  %dst.10670 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10668, { i8*, i64 }* %src.10669, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_8}_1}.10598":           ; preds = %block.exit.10580
  %"result.Cidr_{U_Main.{main_8}_1}.10599" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Main.{main_8}"(i64* %"idr_{APPLY_0}1")
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_9}_1}.10600":           ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1447" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"result.Cidr_{U_Main.{main_9}_1}.10601" = tail call fastcc <{ i64, [1 x i64] }> @"idr_Main.{main_9}"(i64* %"idr_{APPLY_0}2_1447", i64* %"idr_{APPLY_0}1")
  %src.10671 = extractvalue <{ i64, [1 x i64] }> %"result.Cidr_{U_Main.{main_9}_1}.10601", 0
  %dst.10672 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10671, 0
  %src.10673 = extractvalue <{ i64, [1 x i64] }> %"result.Cidr_{U_Main.{main_9}_1}.10601", 1, 0
  %dst.10674 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10672, i64 %src.10673, 2, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{printFmt_14}_1}.10602":      ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1448" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"idr_{APPLY_0}3_1449" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 1
  %"result.Cidr_{U_Main.{printFmt_14}_1}.10603" = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @"idr_Main.{printFmt_14}"(i64* %"idr_{APPLY_0}2_1448", i64* %"idr_{APPLY_0}3_1449", i64* %"idr_{APPLY_0}1")
  %src.10675 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_14}_1}.10603", 0
  %dst.10676 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10675, 0
  %src.10677 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_14}_1}.10603", 2, 1
  %dst.10678 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10676, i64* %src.10677, 4, 1
  %src.10679 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_14}_1}.10603", 2, 0
  %dst.10680 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10678, i64* %src.10679, 4, 0
  %src.10681 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_14}_1}.10603", 1, 0
  %dst.10682 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10680, { i8*, i64 }* %src.10681, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{printFmt_15}_1}.10604":      ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1450" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"idr_{APPLY_0}3_1451" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 1
  %"result.Cidr_{U_Main.{printFmt_15}_1}.10605" = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @"idr_Main.{printFmt_15}"(i64* %"idr_{APPLY_0}2_1450", i64* %"idr_{APPLY_0}3_1451", i64* %"idr_{APPLY_0}1")
  %src.10683 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_15}_1}.10605", 0
  %dst.10684 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10683, 0
  %src.10685 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_15}_1}.10605", 2, 1
  %dst.10686 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10684, i64* %src.10685, 4, 1
  %src.10687 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_15}_1}.10605", 2, 0
  %dst.10688 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10686, i64* %src.10687, 4, 0
  %src.10689 = extractvalue <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.Cidr_{U_Main.{printFmt_15}_1}.10605", 1, 0
  %dst.10690 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10688, { i8*, i64 }* %src.10689, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Chars.isDigit_1}.10606":   ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Chars.isDigit_1}.10607" = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isDigit(i64* %"idr_{APPLY_0}1")
  %src.10691 = extractvalue <{ i64 }> %"result.Cidr_{U_Prelude.Chars.isDigit_1}.10607", 0
  %dst.10692 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10691, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.protectEsc_1}.10608": ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1452" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"idr_{APPLY_0}3_1453" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 1
  %"result.Cidr_{U_Prelude.Show.protectEsc_1}.10609" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_Prelude.Show.protectEsc(i64* %"idr_{APPLY_0}2_1452", i64* %"idr_{APPLY_0}3_1453", i64* %"idr_{APPLY_0}1")
  %src.10693 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.protectEsc_1}.10609", 0
  %dst.10694 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10693, 0
  %src.10695 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.protectEsc_1}.10609", 1, 0
  %dst.10696 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10694, { i8*, i64 }* %src.10695, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10610": ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1454" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"result.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10611" = tail call fastcc <{ i64, [2 x i64*] }> @"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}"(i64* %"idr_{APPLY_0}2_1454", i64* %"idr_{APPLY_0}1")
  %src.10697 = extractvalue <{ i64, [2 x i64*] }> %"result.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10611", 0
  %dst.10698 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10697, 0
  %src.10699 = extractvalue <{ i64, [2 x i64*] }> %"result.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10611", 1, 1
  %dst.10700 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10698, i64* %src.10699, 4, 1
  %src.10701 = extractvalue <{ i64, [2 x i64*] }> %"result.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10611", 1, 0
  %dst.10702 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10700, i64* %src.10701, 4, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10612": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10613" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}"(i64* %"idr_{APPLY_0}1")
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10614": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10615" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_16}"(i64* %"idr_{APPLY_0}1")
  %src.10703 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10615", 0
  %dst.10704 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10703, 0
  %src.10705 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10615", 1, 0
  %dst.10706 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10704, { i8*, i64 }* %src.10705, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10616": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10617" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_17}"(i64* %"idr_{APPLY_0}1")
  %src.10707 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10617", 0
  %dst.10708 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10707, 0
  %src.10709 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10617", 1, 0
  %dst.10710 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10708, { i8*, i64 }* %src.10709, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10618": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10619" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_18}"(i64* %"idr_{APPLY_0}1")
  %src.10711 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10619", 0
  %dst.10712 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10711, 0
  %src.10713 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10619", 1, 0
  %dst.10714 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10712, { i8*, i64 }* %src.10713, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10620": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10621" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_19}"(i64* %"idr_{APPLY_0}1")
  %src.10715 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10621", 0
  %dst.10716 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10715, 0
  %src.10717 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10621", 1, 0
  %dst.10718 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10716, { i8*, i64 }* %src.10717, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10622": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10623" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_20}"(i64* %"idr_{APPLY_0}1")
  %src.10719 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10623", 0
  %dst.10720 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10719, 0
  %src.10721 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10623", 1, 0
  %dst.10722 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10720, { i8*, i64 }* %src.10721, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10624": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10625" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_21}"(i64* %"idr_{APPLY_0}1")
  %src.10723 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10625", 0
  %dst.10724 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10723, 0
  %src.10725 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10625", 1, 0
  %dst.10726 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10724, { i8*, i64 }* %src.10725, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10626": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10627" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_22}"(i64* %"idr_{APPLY_0}1")
  %src.10727 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10627", 0
  %dst.10728 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10727, 0
  %src.10729 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10627", 1, 0
  %dst.10730 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10728, { i8*, i64 }* %src.10729, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10628": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10629" = tail call fastcc <{ i64 }> @"idr_Prelude.Show.{showLitChar_23}"(i64* %"idr_{APPLY_0}1")
  %src.10731 = extractvalue <{ i64 }> %"result.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10629", 0
  %dst.10732 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10731, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10630": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10631" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_24}"(i64* %"idr_{APPLY_0}1")
  %src.10733 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10631", 0
  %dst.10734 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10733, 0
  %src.10735 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10631", 1, 0
  %dst.10736 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10734, { i8*, i64 }* %src.10735, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10632": ; preds = %block.exit.10580
  %"result.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10633" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_25}"(i64* %"idr_{APPLY_0}1")
  %src.10737 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10633", 0
  %dst.10738 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10737, 0
  %src.10739 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10633", 1, 0
  %dst.10740 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10738, { i8*, i64 }* %src.10739, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10634": ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1455" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"result.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10635" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_26}"(i64* %"idr_{APPLY_0}2_1455", i64* %"idr_{APPLY_0}1")
  %src.10741 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10635", 0
  %dst.10742 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10741, 0
  %src.10743 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10635", 1, 0
  %dst.10744 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10742, { i8*, i64 }* %src.10743, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10636": ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1456" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"result.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10637" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_27}"(i64* %"idr_{APPLY_0}2_1456", i64* %"idr_{APPLY_0}1")
  %src.10745 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10637", 0
  %dst.10746 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10745, 0
  %src.10747 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10637", 1, 0
  %dst.10748 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10746, { i8*, i64 }* %src.10747, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_prim__floatToStr_1}.10638":        ; preds = %block.exit.10580
  %"result.Cidr_{U_prim__floatToStr_1}.10639" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__floatToStr(i64* %"idr_{APPLY_0}1")
  %src.10749 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_prim__floatToStr_1}.10639", 0
  %dst.10750 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10749, 0
  %src.10751 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_prim__floatToStr_1}.10639", 1, 0
  %dst.10752 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10750, { i8*, i64 }* %src.10751, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_prim__strCons_1}.10640":           ; preds = %block.exit.10580
  %"idr_{APPLY_0}2_1457" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_{APPLY_0}0_val.10581", 4, 0
  %"result.Cidr_{U_prim__strCons_1}.10641" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__strCons(i64* %"idr_{APPLY_0}2_1457", i64* %"idr_{APPLY_0}1")
  %src.10753 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_prim__strCons_1}.10641", 0
  %dst.10754 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10753, 0
  %src.10755 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_prim__strCons_1}.10641", 1, 0
  %dst.10756 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10754, { i8*, i64 }* %src.10755, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_prim__toStrInt_1}.10642":          ; preds = %block.exit.10580
  %"result.Cidr_{U_prim__toStrInt_1}.10643" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__toStrInt(i64* %"idr_{APPLY_0}1")
  %src.10757 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_prim__toStrInt_1}.10643", 0
  %dst.10758 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10757, 0
  %src.10759 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"result.Cidr_{U_prim__toStrInt_1}.10643", 1, 0
  %dst.10760 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10758, { i8*, i64 }* %src.10759, 3, 0
  br label %block.exit.10648

"block.Cidr_{U_Main.{main_9}_2}.10644":           ; preds = %block.exit.10580
  %"node_C\22idr_{U_Main.{main_9}_1}\22.10645" = insertvalue <{ i64, [1 x i64*] }> <{ i64 11, [1 x i64*] undef }>, i64* %"idr_{APPLY_0}1", 1, 0
  %src.10761 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.10645", 0
  %dst.10762 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10761, 0
  %src.10763 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.10645", 1, 0
  %dst.10764 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10762, i64* %src.10763, 4, 0
  br label %block.exit.10648

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10646": ; preds = %block.exit.10580
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10647" = insertvalue <{ i64, [1 x i64*] }> <{ i64 14, [1 x i64*] undef }>, i64* %"idr_{APPLY_0}1", 1, 0
  %src.10765 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10647", 0
  %dst.10766 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.10765, 0
  %src.10767 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10647", 1, 0
  %dst.10768 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.10766, i64* %src.10767, 4, 0
  br label %block.exit.10648

block.exit.10648:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10646", %"block.Cidr_{U_Main.{main_9}_2}.10644", %"block.Cidr_{U_prim__toStrInt_1}.10642", %"block.Cidr_{U_prim__strCons_1}.10640", %"block.Cidr_{U_prim__floatToStr_1}.10638", %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10636", %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10634", %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10632", %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10630", %"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10628", %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10626", %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10624", %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10622", %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10620", %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10618", %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10616", %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10614", %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10612", %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10610", %"block.Cidr_{U_Prelude.Show.protectEsc_1}.10608", %"block.Cidr_{U_Prelude.Chars.isDigit_1}.10606", %"block.Cidr_{U_Main.{printFmt_15}_1}.10604", %"block.Cidr_{U_Main.{printFmt_14}_1}.10602", %"block.Cidr_{U_Main.{main_9}_1}.10600", %"block.Cidr_{U_Main.{main_8}_1}.10598", %"block.Cidr_{U_Main.{main_6}_1}.10596", %"block.Cidr_{U_Main.{main_5}_1}.10594", %"block.Cidr_{U_Main.{main_4}_1}.10592", %"block.Cidr_{U_Main.{main_3}_1}.10590", %"block.Cidr_{U_Main.{main_2}_1}.10588", %"block.Cidr_{U_Main.{adder_0}_1}.10586", %"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10584", %block.default.10583
  %"result.idr_{APPLY_0}.10769" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.10650, %block.default.10583 ], [ %"result.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10585", %"block.Cidr_{U_Data.Vect.{foldrImpl_1}_1}.10584" ], [ %"result.Cidr_{U_Main.{adder_0}_1}.10587", %"block.Cidr_{U_Main.{adder_0}_1}.10586" ], [ %dst.10654, %"block.Cidr_{U_Main.{main_2}_1}.10588" ], [ %dst.10658, %"block.Cidr_{U_Main.{main_3}_1}.10590" ], [ %dst.10662, %"block.Cidr_{U_Main.{main_4}_1}.10592" ], [ %dst.10666, %"block.Cidr_{U_Main.{main_5}_1}.10594" ], [ %dst.10670, %"block.Cidr_{U_Main.{main_6}_1}.10596" ], [ %"result.Cidr_{U_Main.{main_8}_1}.10599", %"block.Cidr_{U_Main.{main_8}_1}.10598" ], [ %dst.10674, %"block.Cidr_{U_Main.{main_9}_1}.10600" ], [ %dst.10682, %"block.Cidr_{U_Main.{printFmt_14}_1}.10602" ], [ %dst.10690, %"block.Cidr_{U_Main.{printFmt_15}_1}.10604" ], [ %dst.10692, %"block.Cidr_{U_Prelude.Chars.isDigit_1}.10606" ], [ %dst.10696, %"block.Cidr_{U_Prelude.Show.protectEsc_1}.10608" ], [ %dst.10702, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10610" ], [ %"result.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10613", %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}.10612" ], [ %dst.10706, %"block.Cidr_{U_Prelude.Show.{showLitChar_16}_1}.10614" ], [ %dst.10710, %"block.Cidr_{U_Prelude.Show.{showLitChar_17}_1}.10616" ], [ %dst.10714, %"block.Cidr_{U_Prelude.Show.{showLitChar_18}_1}.10618" ], [ %dst.10718, %"block.Cidr_{U_Prelude.Show.{showLitChar_19}_1}.10620" ], [ %dst.10722, %"block.Cidr_{U_Prelude.Show.{showLitChar_20}_1}.10622" ], [ %dst.10726, %"block.Cidr_{U_Prelude.Show.{showLitChar_21}_1}.10624" ], [ %dst.10730, %"block.Cidr_{U_Prelude.Show.{showLitChar_22}_1}.10626" ], [ %dst.10732, %"block.Cidr_{U_Prelude.Show.{showLitChar_23}_1}.10628" ], [ %dst.10736, %"block.Cidr_{U_Prelude.Show.{showLitChar_24}_1}.10630" ], [ %dst.10740, %"block.Cidr_{U_Prelude.Show.{showLitChar_25}_1}.10632" ], [ %dst.10744, %"block.Cidr_{U_Prelude.Show.{showLitChar_26}_1}.10634" ], [ %dst.10748, %"block.Cidr_{U_Prelude.Show.{showLitChar_27}_1}.10636" ], [ %dst.10752, %"block.Cidr_{U_prim__floatToStr_1}.10638" ], [ %dst.10756, %"block.Cidr_{U_prim__strCons_1}.10640" ], [ %dst.10760, %"block.Cidr_{U_prim__toStrInt_1}.10642" ], [ %dst.10764, %"block.Cidr_{U_Main.{main_9}_2}.10644" ], [ %dst.10768, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}.10646" ]
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"result.idr_{APPLY_0}.10769"

error_block:                                      ; preds = %"idr_{APPLY_0}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @"idr_{EVAL_0}"(i64* %"idr_{EVAL_0}0") #0 {
"idr_{EVAL_0}.entry":
  %tag.10770 = load i64, i64* %"idr_{EVAL_0}0", align 1
  %ptr_Cidr_MkUnit.10771 = bitcast i64* %"idr_{EVAL_0}0" to <{ i64 }>*
  %node_Cidr_MkUnit.10772 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_MkUnit.10771, align 1
  %tag.10773 = extractvalue <{ i64 }> %node_Cidr_MkUnit.10772, 0
  switch i64 %tag.10773, label %block.default.10774 [
  ]

block.default.10774:                              ; preds = %"idr_{EVAL_0}.entry"
  %tag.10775 = load i64, i64* %"idr_{EVAL_0}0", align 1
  %ptr_Cidr_MkUnit.10776 = bitcast i64* %"idr_{EVAL_0}0" to <{ i64 }>*
  %node_Cidr_MkUnit.10777 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_MkUnit.10776, align 1
  br label %block.exit.10778

block.exit.10778:                                 ; preds = %block.default.10774
  %"result.idr_{EVAL_0}.10779" = phi <{ i64 }> [ %node_Cidr_MkUnit.10777, %block.default.10774 ]
  ret <{ i64 }> %"result.idr_{EVAL_0}.10779"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Main.{adder_0}"(i64* %"idr_Main.{adder_0}0", i64* %"idr_Main.{adder_0}1", i64* %"idr_Main.{adder_0}2", i64* %"idr_Main.{adder_0}3") #0 {
"idr_Main.{adder_0}.entry":
  %alloc_bytes.10780 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.10781 = ptrtoint <{ i64 }>* %alloc_bytes.10780 to i64
  %new_node_ptr.10782 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10781 monotonic
  %new_node_ptr.10783 = inttoptr i64 %new_node_ptr.10782 to i64*
  %tag.10784 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.10785 = bitcast i64* %new_node_ptr.10783 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.10785, align 1
  %"idr_Main.{adder_0}5_val_1458.10786" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %"idr_Main.{adder_0}0", i64* %"idr_Main.{adder_0}3")
  %alloc_bytes.10787 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.10788 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.10787 to i64
  %new_node_ptr.10789 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10788 monotonic
  %new_node_ptr.10790 = inttoptr i64 %new_node_ptr.10789 to i64*
  %tag.10791 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  switch i64 %tag.10791, label %error_block [
    i64 0, label %block.CErased.10792
    i64 1, label %block.CGrFloat.10796
    i64 2, label %block.CGrInt.10802
    i64 3, label %block.CGrString.10808
    i64 4, label %block.Cidr_Builtins.MkPair.10814
    i64 5, label %"block.Cidr_Data.Vect.::.10822"
    i64 6, label %block.Cidr_Prelude.Bool.False.10830
    i64 7, label %block.Cidr_Prelude.Bool.True.10834
    i64 8, label %"block.Cidr_Prelude.List.::.10838"
    i64 9, label %block.Cidr_Prelude.List.Nil.10846
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.10850"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.10860"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.10866"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.10874"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10882"
  ]

block.CErased.10792:                              ; preds = %"idr_Main.{adder_0}.entry"
  %src.10793 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10794 = insertvalue <{ i64 }> undef, i64 %src.10793, 0
  %ptr_CErased.10795 = bitcast i64* %new_node_ptr.10790 to <{ i64 }>*
  store <{ i64 }> %dst.10794, <{ i64 }>* %ptr_CErased.10795, align 1
  br label %block.exit.10888

block.CGrFloat.10796:                             ; preds = %"idr_Main.{adder_0}.entry"
  %src.10797 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10798 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.10797, 0
  %src.10799 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 1, 0
  %dst.10800 = insertvalue <{ i64, [1 x float] }> %dst.10798, float %src.10799, 1, 0
  %ptr_CGrFloat.10801 = bitcast i64* %new_node_ptr.10790 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.10800, <{ i64, [1 x float] }>* %ptr_CGrFloat.10801, align 1
  br label %block.exit.10888

block.CGrInt.10802:                               ; preds = %"idr_Main.{adder_0}.entry"
  %src.10803 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10804 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.10803, 0
  %src.10805 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 2, 0
  %dst.10806 = insertvalue <{ i64, [1 x i64] }> %dst.10804, i64 %src.10805, 1, 0
  %ptr_CGrInt.10807 = bitcast i64* %new_node_ptr.10790 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.10806, <{ i64, [1 x i64] }>* %ptr_CGrInt.10807, align 1
  br label %block.exit.10888

block.CGrString.10808:                            ; preds = %"idr_Main.{adder_0}.entry"
  %src.10809 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10810 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.10809, 0
  %src.10811 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 3, 0
  %dst.10812 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.10810, { i8*, i64 }* %src.10811, 1, 0
  %ptr_CGrString.10813 = bitcast i64* %new_node_ptr.10790 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.10812, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10813, align 1
  br label %block.exit.10888

block.Cidr_Builtins.MkPair.10814:                 ; preds = %"idr_Main.{adder_0}.entry"
  %src.10815 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10816 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10815, 0
  %src.10817 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 1
  %dst.10818 = insertvalue <{ i64, [2 x i64*] }> %dst.10816, i64* %src.10817, 1, 1
  %src.10819 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10820 = insertvalue <{ i64, [2 x i64*] }> %dst.10818, i64* %src.10819, 1, 0
  %ptr_Cidr_Builtins.MkPair.10821 = bitcast i64* %new_node_ptr.10790 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10820, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.10821, align 1
  br label %block.exit.10888

"block.Cidr_Data.Vect.::.10822":                  ; preds = %"idr_Main.{adder_0}.entry"
  %src.10823 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10824 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10823, 0
  %src.10825 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 1
  %dst.10826 = insertvalue <{ i64, [2 x i64*] }> %dst.10824, i64* %src.10825, 1, 1
  %src.10827 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10828 = insertvalue <{ i64, [2 x i64*] }> %dst.10826, i64* %src.10827, 1, 0
  %"ptr_Cidr_Data.Vect.::.10829" = bitcast i64* %new_node_ptr.10790 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10828, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.10829", align 1
  br label %block.exit.10888

block.Cidr_Prelude.Bool.False.10830:              ; preds = %"idr_Main.{adder_0}.entry"
  %src.10831 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10832 = insertvalue <{ i64 }> undef, i64 %src.10831, 0
  %ptr_Cidr_Prelude.Bool.False.10833 = bitcast i64* %new_node_ptr.10790 to <{ i64 }>*
  store <{ i64 }> %dst.10832, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.10833, align 1
  br label %block.exit.10888

block.Cidr_Prelude.Bool.True.10834:               ; preds = %"idr_Main.{adder_0}.entry"
  %src.10835 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10836 = insertvalue <{ i64 }> undef, i64 %src.10835, 0
  %ptr_Cidr_Prelude.Bool.True.10837 = bitcast i64* %new_node_ptr.10790 to <{ i64 }>*
  store <{ i64 }> %dst.10836, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.10837, align 1
  br label %block.exit.10888

"block.Cidr_Prelude.List.::.10838":               ; preds = %"idr_Main.{adder_0}.entry"
  %src.10839 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10840 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10839, 0
  %src.10841 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 1
  %dst.10842 = insertvalue <{ i64, [2 x i64*] }> %dst.10840, i64* %src.10841, 1, 1
  %src.10843 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10844 = insertvalue <{ i64, [2 x i64*] }> %dst.10842, i64* %src.10843, 1, 0
  %"ptr_Cidr_Prelude.List.::.10845" = bitcast i64* %new_node_ptr.10790 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10844, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.10845", align 1
  br label %block.exit.10888

block.Cidr_Prelude.List.Nil.10846:                ; preds = %"idr_Main.{adder_0}.entry"
  %src.10847 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10848 = insertvalue <{ i64 }> undef, i64 %src.10847, 0
  %ptr_Cidr_Prelude.List.Nil.10849 = bitcast i64* %new_node_ptr.10790 to <{ i64 }>*
  store <{ i64 }> %dst.10848, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.10849, align 1
  br label %block.exit.10888

"block.Cidr_{U_Main.{adder_0}_1}.10850":          ; preds = %"idr_Main.{adder_0}.entry"
  %src.10851 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10852 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.10851, 0
  %src.10853 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 2
  %dst.10854 = insertvalue <{ i64, [3 x i64*] }> %dst.10852, i64* %src.10853, 1, 2
  %src.10855 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 1
  %dst.10856 = insertvalue <{ i64, [3 x i64*] }> %dst.10854, i64* %src.10855, 1, 1
  %src.10857 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10858 = insertvalue <{ i64, [3 x i64*] }> %dst.10856, i64* %src.10857, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.10859" = bitcast i64* %new_node_ptr.10790 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.10858, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.10859", align 1
  br label %block.exit.10888

"block.Cidr_{U_Main.{main_9}_1}.10860":           ; preds = %"idr_Main.{adder_0}.entry"
  %src.10861 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10862 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.10861, 0
  %src.10863 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10864 = insertvalue <{ i64, [1 x i64*] }> %dst.10862, i64* %src.10863, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.10865" = bitcast i64* %new_node_ptr.10790 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.10864, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.10865", align 1
  br label %block.exit.10888

"block.Cidr_{U_Main.{printFmt_14}_1}.10866":      ; preds = %"idr_Main.{adder_0}.entry"
  %src.10867 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10868 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10867, 0
  %src.10869 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 1
  %dst.10870 = insertvalue <{ i64, [2 x i64*] }> %dst.10868, i64* %src.10869, 1, 1
  %src.10871 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10872 = insertvalue <{ i64, [2 x i64*] }> %dst.10870, i64* %src.10871, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.10873" = bitcast i64* %new_node_ptr.10790 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10872, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.10873", align 1
  br label %block.exit.10888

"block.Cidr_{U_Main.{printFmt_15}_1}.10874":      ; preds = %"idr_Main.{adder_0}.entry"
  %src.10875 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10876 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10875, 0
  %src.10877 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 1
  %dst.10878 = insertvalue <{ i64, [2 x i64*] }> %dst.10876, i64* %src.10877, 1, 1
  %src.10879 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10880 = insertvalue <{ i64, [2 x i64*] }> %dst.10878, i64* %src.10879, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.10881" = bitcast i64* %new_node_ptr.10790 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10880, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.10881", align 1
  br label %block.exit.10888

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10882": ; preds = %"idr_Main.{adder_0}.entry"
  %src.10883 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 0
  %dst.10884 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.10883, 0
  %src.10885 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val_1458.10786", 4, 0
  %dst.10886 = insertvalue <{ i64, [1 x i64*] }> %dst.10884, i64* %src.10885, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10887" = bitcast i64* %new_node_ptr.10790 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.10886, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10887", align 1
  br label %block.exit.10888

block.exit.10888:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10882", %"block.Cidr_{U_Main.{printFmt_15}_1}.10874", %"block.Cidr_{U_Main.{printFmt_14}_1}.10866", %"block.Cidr_{U_Main.{main_9}_1}.10860", %"block.Cidr_{U_Main.{adder_0}_1}.10850", %block.Cidr_Prelude.List.Nil.10846, %"block.Cidr_Prelude.List.::.10838", %block.Cidr_Prelude.Bool.True.10834, %block.Cidr_Prelude.Bool.False.10830, %"block.Cidr_Data.Vect.::.10822", %block.Cidr_Builtins.MkPair.10814, %block.CGrString.10808, %block.CGrInt.10802, %block.CGrFloat.10796, %block.CErased.10792
  %"idr_Main.{adder_0}5_val.10889" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.10790, i64* %"idr_Main.{adder_0}2")
  %alloc_bytes.10890 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.10891 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.10890 to i64
  %new_node_ptr.10892 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10891 monotonic
  %new_node_ptr.10893 = inttoptr i64 %new_node_ptr.10892 to i64*
  %tag.10894 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  switch i64 %tag.10894, label %error_block [
    i64 0, label %block.CErased.10895
    i64 1, label %block.CGrFloat.10899
    i64 2, label %block.CGrInt.10905
    i64 3, label %block.CGrString.10911
    i64 4, label %block.Cidr_Builtins.MkPair.10917
    i64 5, label %"block.Cidr_Data.Vect.::.10925"
    i64 6, label %block.Cidr_Prelude.Bool.False.10933
    i64 7, label %block.Cidr_Prelude.Bool.True.10937
    i64 8, label %"block.Cidr_Prelude.List.::.10941"
    i64 9, label %block.Cidr_Prelude.List.Nil.10949
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.10953"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.10963"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.10969"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.10977"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10985"
  ]

block.CErased.10895:                              ; preds = %block.exit.10888
  %src.10896 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10897 = insertvalue <{ i64 }> undef, i64 %src.10896, 0
  %ptr_CErased.10898 = bitcast i64* %new_node_ptr.10893 to <{ i64 }>*
  store <{ i64 }> %dst.10897, <{ i64 }>* %ptr_CErased.10898, align 1
  br label %block.exit.10991

block.CGrFloat.10899:                             ; preds = %block.exit.10888
  %src.10900 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10901 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.10900, 0
  %src.10902 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 1, 0
  %dst.10903 = insertvalue <{ i64, [1 x float] }> %dst.10901, float %src.10902, 1, 0
  %ptr_CGrFloat.10904 = bitcast i64* %new_node_ptr.10893 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.10903, <{ i64, [1 x float] }>* %ptr_CGrFloat.10904, align 1
  br label %block.exit.10991

block.CGrInt.10905:                               ; preds = %block.exit.10888
  %src.10906 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10907 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.10906, 0
  %src.10908 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 2, 0
  %dst.10909 = insertvalue <{ i64, [1 x i64] }> %dst.10907, i64 %src.10908, 1, 0
  %ptr_CGrInt.10910 = bitcast i64* %new_node_ptr.10893 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.10909, <{ i64, [1 x i64] }>* %ptr_CGrInt.10910, align 1
  br label %block.exit.10991

block.CGrString.10911:                            ; preds = %block.exit.10888
  %src.10912 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10913 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.10912, 0
  %src.10914 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 3, 0
  %dst.10915 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.10913, { i8*, i64 }* %src.10914, 1, 0
  %ptr_CGrString.10916 = bitcast i64* %new_node_ptr.10893 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.10915, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.10916, align 1
  br label %block.exit.10991

block.Cidr_Builtins.MkPair.10917:                 ; preds = %block.exit.10888
  %src.10918 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10919 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10918, 0
  %src.10920 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 1
  %dst.10921 = insertvalue <{ i64, [2 x i64*] }> %dst.10919, i64* %src.10920, 1, 1
  %src.10922 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10923 = insertvalue <{ i64, [2 x i64*] }> %dst.10921, i64* %src.10922, 1, 0
  %ptr_Cidr_Builtins.MkPair.10924 = bitcast i64* %new_node_ptr.10893 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10923, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.10924, align 1
  br label %block.exit.10991

"block.Cidr_Data.Vect.::.10925":                  ; preds = %block.exit.10888
  %src.10926 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10927 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10926, 0
  %src.10928 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 1
  %dst.10929 = insertvalue <{ i64, [2 x i64*] }> %dst.10927, i64* %src.10928, 1, 1
  %src.10930 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10931 = insertvalue <{ i64, [2 x i64*] }> %dst.10929, i64* %src.10930, 1, 0
  %"ptr_Cidr_Data.Vect.::.10932" = bitcast i64* %new_node_ptr.10893 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10931, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.10932", align 1
  br label %block.exit.10991

block.Cidr_Prelude.Bool.False.10933:              ; preds = %block.exit.10888
  %src.10934 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10935 = insertvalue <{ i64 }> undef, i64 %src.10934, 0
  %ptr_Cidr_Prelude.Bool.False.10936 = bitcast i64* %new_node_ptr.10893 to <{ i64 }>*
  store <{ i64 }> %dst.10935, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.10936, align 1
  br label %block.exit.10991

block.Cidr_Prelude.Bool.True.10937:               ; preds = %block.exit.10888
  %src.10938 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10939 = insertvalue <{ i64 }> undef, i64 %src.10938, 0
  %ptr_Cidr_Prelude.Bool.True.10940 = bitcast i64* %new_node_ptr.10893 to <{ i64 }>*
  store <{ i64 }> %dst.10939, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.10940, align 1
  br label %block.exit.10991

"block.Cidr_Prelude.List.::.10941":               ; preds = %block.exit.10888
  %src.10942 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10943 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10942, 0
  %src.10944 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 1
  %dst.10945 = insertvalue <{ i64, [2 x i64*] }> %dst.10943, i64* %src.10944, 1, 1
  %src.10946 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10947 = insertvalue <{ i64, [2 x i64*] }> %dst.10945, i64* %src.10946, 1, 0
  %"ptr_Cidr_Prelude.List.::.10948" = bitcast i64* %new_node_ptr.10893 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10947, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.10948", align 1
  br label %block.exit.10991

block.Cidr_Prelude.List.Nil.10949:                ; preds = %block.exit.10888
  %src.10950 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10951 = insertvalue <{ i64 }> undef, i64 %src.10950, 0
  %ptr_Cidr_Prelude.List.Nil.10952 = bitcast i64* %new_node_ptr.10893 to <{ i64 }>*
  store <{ i64 }> %dst.10951, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.10952, align 1
  br label %block.exit.10991

"block.Cidr_{U_Main.{adder_0}_1}.10953":          ; preds = %block.exit.10888
  %src.10954 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10955 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.10954, 0
  %src.10956 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 2
  %dst.10957 = insertvalue <{ i64, [3 x i64*] }> %dst.10955, i64* %src.10956, 1, 2
  %src.10958 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 1
  %dst.10959 = insertvalue <{ i64, [3 x i64*] }> %dst.10957, i64* %src.10958, 1, 1
  %src.10960 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10961 = insertvalue <{ i64, [3 x i64*] }> %dst.10959, i64* %src.10960, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.10962" = bitcast i64* %new_node_ptr.10893 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.10961, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.10962", align 1
  br label %block.exit.10991

"block.Cidr_{U_Main.{main_9}_1}.10963":           ; preds = %block.exit.10888
  %src.10964 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10965 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.10964, 0
  %src.10966 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10967 = insertvalue <{ i64, [1 x i64*] }> %dst.10965, i64* %src.10966, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.10968" = bitcast i64* %new_node_ptr.10893 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.10967, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.10968", align 1
  br label %block.exit.10991

"block.Cidr_{U_Main.{printFmt_14}_1}.10969":      ; preds = %block.exit.10888
  %src.10970 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10971 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10970, 0
  %src.10972 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 1
  %dst.10973 = insertvalue <{ i64, [2 x i64*] }> %dst.10971, i64* %src.10972, 1, 1
  %src.10974 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10975 = insertvalue <{ i64, [2 x i64*] }> %dst.10973, i64* %src.10974, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.10976" = bitcast i64* %new_node_ptr.10893 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10975, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.10976", align 1
  br label %block.exit.10991

"block.Cidr_{U_Main.{printFmt_15}_1}.10977":      ; preds = %block.exit.10888
  %src.10978 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10979 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.10978, 0
  %src.10980 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 1
  %dst.10981 = insertvalue <{ i64, [2 x i64*] }> %dst.10979, i64* %src.10980, 1, 1
  %src.10982 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10983 = insertvalue <{ i64, [2 x i64*] }> %dst.10981, i64* %src.10982, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.10984" = bitcast i64* %new_node_ptr.10893 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.10983, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.10984", align 1
  br label %block.exit.10991

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10985": ; preds = %block.exit.10888
  %src.10986 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 0
  %dst.10987 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.10986, 0
  %src.10988 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{adder_0}5_val.10889", 4, 0
  %dst.10989 = insertvalue <{ i64, [1 x i64*] }> %dst.10987, i64* %src.10988, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10990" = bitcast i64* %new_node_ptr.10893 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.10989, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.10990", align 1
  br label %block.exit.10991

block.exit.10991:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.10985", %"block.Cidr_{U_Main.{printFmt_15}_1}.10977", %"block.Cidr_{U_Main.{printFmt_14}_1}.10969", %"block.Cidr_{U_Main.{main_9}_1}.10963", %"block.Cidr_{U_Main.{adder_0}_1}.10953", %block.Cidr_Prelude.List.Nil.10949, %"block.Cidr_Prelude.List.::.10941", %block.Cidr_Prelude.Bool.True.10937, %block.Cidr_Prelude.Bool.False.10933, %"block.Cidr_Data.Vect.::.10925", %block.Cidr_Builtins.MkPair.10917, %block.CGrString.10911, %block.CGrInt.10905, %block.CGrFloat.10899, %block.CErased.10895
  %"result.idr_Main.{adder_0}.10992" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Main.adder(i64* %new_node_ptr.10783, i64* %"idr_Main.{adder_0}0", i64* %"idr_Main.{adder_0}1", i64* %new_node_ptr.10893)
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"result.idr_Main.{adder_0}.10992"

error_block:                                      ; preds = %block.exit.10888, %"idr_Main.{adder_0}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @"idr_{runMain_0}"() #0 {
"idr_{runMain_0}.entry":
  %alloc_bytes.10993 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.10994 = ptrtoint <{ i64 }>* %alloc_bytes.10993 to i64
  %new_node_ptr.10995 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.10994 monotonic
  %new_node_ptr.10996 = inttoptr i64 %new_node_ptr.10995 to i64*
  %tag.10997 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.10998 = bitcast i64* %new_node_ptr.10996 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.10998, align 1
  %"idr_{runMain_0}0_val.10999" = tail call fastcc <{ i64 }> @idr_Main.main(i64* %new_node_ptr.10996)
  %alloc_bytes.11000 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11001 = ptrtoint <{ i64 }>* %alloc_bytes.11000 to i64
  %new_node_ptr.11002 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11001 monotonic
  %new_node_ptr.11003 = inttoptr i64 %new_node_ptr.11002 to i64*
  %tag.11004 = extractvalue <{ i64 }> %"idr_{runMain_0}0_val.10999", 0
  %ptr_Cidr_MkUnit.11005 = bitcast i64* %new_node_ptr.11003 to <{ i64 }>*
  store <{ i64 }> %"idr_{runMain_0}0_val.10999", <{ i64 }>* %ptr_Cidr_MkUnit.11005, align 1
  %"result.idr_{runMain_0}.11006" = tail call fastcc <{ i64 }> @"idr_{EVAL_0}"(i64* %new_node_ptr.11003)
  ret <{ i64 }> %"result.idr_{runMain_0}.11006"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Data.Vect.{foldrImpl_1}"(i64* %"idr_Data.Vect.{foldrImpl_1}0", i64* %"idr_Data.Vect.{foldrImpl_1}1", i64* %"idr_Data.Vect.{foldrImpl_1}2", i64* %"idr_Data.Vect.{foldrImpl_1}3") #0 {
"idr_Data.Vect.{foldrImpl_1}.entry":
  %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %"idr_Data.Vect.{foldrImpl_1}1", i64* %"idr_Data.Vect.{foldrImpl_1}2")
  %alloc_bytes.11008 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.11009 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.11008 to i64
  %new_node_ptr.11010 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11009 monotonic
  %new_node_ptr.11011 = inttoptr i64 %new_node_ptr.11010 to i64*
  %tag.11012 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  switch i64 %tag.11012, label %error_block [
    i64 0, label %block.CErased.11013
    i64 1, label %block.CGrFloat.11017
    i64 2, label %block.CGrInt.11023
    i64 3, label %block.CGrString.11029
    i64 4, label %block.Cidr_Builtins.MkPair.11035
    i64 5, label %"block.Cidr_Data.Vect.::.11043"
    i64 6, label %block.Cidr_Prelude.Bool.False.11051
    i64 7, label %block.Cidr_Prelude.Bool.True.11055
    i64 8, label %"block.Cidr_Prelude.List.::.11059"
    i64 9, label %block.Cidr_Prelude.List.Nil.11067
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11071"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11081"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11087"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11095"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11103"
  ]

block.CErased.11013:                              ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11014 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11015 = insertvalue <{ i64 }> undef, i64 %src.11014, 0
  %ptr_CErased.11016 = bitcast i64* %new_node_ptr.11011 to <{ i64 }>*
  store <{ i64 }> %dst.11015, <{ i64 }>* %ptr_CErased.11016, align 1
  br label %block.exit.11109

block.CGrFloat.11017:                             ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11018 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11019 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.11018, 0
  %src.11020 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 1, 0
  %dst.11021 = insertvalue <{ i64, [1 x float] }> %dst.11019, float %src.11020, 1, 0
  %ptr_CGrFloat.11022 = bitcast i64* %new_node_ptr.11011 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.11021, <{ i64, [1 x float] }>* %ptr_CGrFloat.11022, align 1
  br label %block.exit.11109

block.CGrInt.11023:                               ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11024 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11025 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.11024, 0
  %src.11026 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 2, 0
  %dst.11027 = insertvalue <{ i64, [1 x i64] }> %dst.11025, i64 %src.11026, 1, 0
  %ptr_CGrInt.11028 = bitcast i64* %new_node_ptr.11011 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.11027, <{ i64, [1 x i64] }>* %ptr_CGrInt.11028, align 1
  br label %block.exit.11109

block.CGrString.11029:                            ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11030 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11031 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.11030, 0
  %src.11032 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 3, 0
  %dst.11033 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.11031, { i8*, i64 }* %src.11032, 1, 0
  %ptr_CGrString.11034 = bitcast i64* %new_node_ptr.11011 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.11033, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11034, align 1
  br label %block.exit.11109

block.Cidr_Builtins.MkPair.11035:                 ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11036 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11037 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11036, 0
  %src.11038 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 1
  %dst.11039 = insertvalue <{ i64, [2 x i64*] }> %dst.11037, i64* %src.11038, 1, 1
  %src.11040 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11041 = insertvalue <{ i64, [2 x i64*] }> %dst.11039, i64* %src.11040, 1, 0
  %ptr_Cidr_Builtins.MkPair.11042 = bitcast i64* %new_node_ptr.11011 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11041, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11042, align 1
  br label %block.exit.11109

"block.Cidr_Data.Vect.::.11043":                  ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11044 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11045 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11044, 0
  %src.11046 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 1
  %dst.11047 = insertvalue <{ i64, [2 x i64*] }> %dst.11045, i64* %src.11046, 1, 1
  %src.11048 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11049 = insertvalue <{ i64, [2 x i64*] }> %dst.11047, i64* %src.11048, 1, 0
  %"ptr_Cidr_Data.Vect.::.11050" = bitcast i64* %new_node_ptr.11011 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11049, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11050", align 1
  br label %block.exit.11109

block.Cidr_Prelude.Bool.False.11051:              ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11052 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11053 = insertvalue <{ i64 }> undef, i64 %src.11052, 0
  %ptr_Cidr_Prelude.Bool.False.11054 = bitcast i64* %new_node_ptr.11011 to <{ i64 }>*
  store <{ i64 }> %dst.11053, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11054, align 1
  br label %block.exit.11109

block.Cidr_Prelude.Bool.True.11055:               ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11056 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11057 = insertvalue <{ i64 }> undef, i64 %src.11056, 0
  %ptr_Cidr_Prelude.Bool.True.11058 = bitcast i64* %new_node_ptr.11011 to <{ i64 }>*
  store <{ i64 }> %dst.11057, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11058, align 1
  br label %block.exit.11109

"block.Cidr_Prelude.List.::.11059":               ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11060 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11061 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11060, 0
  %src.11062 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 1
  %dst.11063 = insertvalue <{ i64, [2 x i64*] }> %dst.11061, i64* %src.11062, 1, 1
  %src.11064 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11065 = insertvalue <{ i64, [2 x i64*] }> %dst.11063, i64* %src.11064, 1, 0
  %"ptr_Cidr_Prelude.List.::.11066" = bitcast i64* %new_node_ptr.11011 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11065, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11066", align 1
  br label %block.exit.11109

block.Cidr_Prelude.List.Nil.11067:                ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11068 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11069 = insertvalue <{ i64 }> undef, i64 %src.11068, 0
  %ptr_Cidr_Prelude.List.Nil.11070 = bitcast i64* %new_node_ptr.11011 to <{ i64 }>*
  store <{ i64 }> %dst.11069, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11070, align 1
  br label %block.exit.11109

"block.Cidr_{U_Main.{adder_0}_1}.11071":          ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11072 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11073 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.11072, 0
  %src.11074 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 2
  %dst.11075 = insertvalue <{ i64, [3 x i64*] }> %dst.11073, i64* %src.11074, 1, 2
  %src.11076 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 1
  %dst.11077 = insertvalue <{ i64, [3 x i64*] }> %dst.11075, i64* %src.11076, 1, 1
  %src.11078 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11079 = insertvalue <{ i64, [3 x i64*] }> %dst.11077, i64* %src.11078, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11080" = bitcast i64* %new_node_ptr.11011 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.11079, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11080", align 1
  br label %block.exit.11109

"block.Cidr_{U_Main.{main_9}_1}.11081":           ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11082 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11083 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11082, 0
  %src.11084 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11085 = insertvalue <{ i64, [1 x i64*] }> %dst.11083, i64* %src.11084, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11086" = bitcast i64* %new_node_ptr.11011 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11085, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11086", align 1
  br label %block.exit.11109

"block.Cidr_{U_Main.{printFmt_14}_1}.11087":      ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11088 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11089 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11088, 0
  %src.11090 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 1
  %dst.11091 = insertvalue <{ i64, [2 x i64*] }> %dst.11089, i64* %src.11090, 1, 1
  %src.11092 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11093 = insertvalue <{ i64, [2 x i64*] }> %dst.11091, i64* %src.11092, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11094" = bitcast i64* %new_node_ptr.11011 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11093, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11094", align 1
  br label %block.exit.11109

"block.Cidr_{U_Main.{printFmt_15}_1}.11095":      ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11096 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11097 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11096, 0
  %src.11098 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 1
  %dst.11099 = insertvalue <{ i64, [2 x i64*] }> %dst.11097, i64* %src.11098, 1, 1
  %src.11100 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11101 = insertvalue <{ i64, [2 x i64*] }> %dst.11099, i64* %src.11100, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11102" = bitcast i64* %new_node_ptr.11011 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11101, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11102", align 1
  br label %block.exit.11109

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11103": ; preds = %"idr_Data.Vect.{foldrImpl_1}.entry"
  %src.11104 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 0
  %dst.11105 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11104, 0
  %src.11106 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val_1462.11007", 4, 0
  %dst.11107 = insertvalue <{ i64, [1 x i64*] }> %dst.11105, i64* %src.11106, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11108" = bitcast i64* %new_node_ptr.11011 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11107, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11108", align 1
  br label %block.exit.11109

block.exit.11109:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11103", %"block.Cidr_{U_Main.{printFmt_15}_1}.11095", %"block.Cidr_{U_Main.{printFmt_14}_1}.11087", %"block.Cidr_{U_Main.{main_9}_1}.11081", %"block.Cidr_{U_Main.{adder_0}_1}.11071", %block.Cidr_Prelude.List.Nil.11067, %"block.Cidr_Prelude.List.::.11059", %block.Cidr_Prelude.Bool.True.11055, %block.Cidr_Prelude.Bool.False.11051, %"block.Cidr_Data.Vect.::.11043", %block.Cidr_Builtins.MkPair.11035, %block.CGrString.11029, %block.CGrInt.11023, %block.CGrFloat.11017, %block.CErased.11013
  %"idr_Data.Vect.{foldrImpl_1}4_val.11110" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %new_node_ptr.11011, i64* %"idr_Data.Vect.{foldrImpl_1}3")
  %alloc_bytes.11111 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.11112 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.11111 to i64
  %new_node_ptr.11113 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11112 monotonic
  %new_node_ptr.11114 = inttoptr i64 %new_node_ptr.11113 to i64*
  %tag.11115 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  switch i64 %tag.11115, label %error_block [
    i64 0, label %block.CErased.11116
    i64 1, label %block.CGrFloat.11120
    i64 2, label %block.CGrInt.11126
    i64 3, label %block.CGrString.11132
    i64 4, label %block.Cidr_Builtins.MkPair.11138
    i64 5, label %"block.Cidr_Data.Vect.::.11146"
    i64 6, label %block.Cidr_Prelude.Bool.False.11154
    i64 7, label %block.Cidr_Prelude.Bool.True.11158
    i64 8, label %"block.Cidr_Prelude.List.::.11162"
    i64 9, label %block.Cidr_Prelude.List.Nil.11170
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11174"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11184"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11190"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11198"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11206"
  ]

block.CErased.11116:                              ; preds = %block.exit.11109
  %src.11117 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11118 = insertvalue <{ i64 }> undef, i64 %src.11117, 0
  %ptr_CErased.11119 = bitcast i64* %new_node_ptr.11114 to <{ i64 }>*
  store <{ i64 }> %dst.11118, <{ i64 }>* %ptr_CErased.11119, align 1
  br label %block.exit.11212

block.CGrFloat.11120:                             ; preds = %block.exit.11109
  %src.11121 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11122 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.11121, 0
  %src.11123 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 1, 0
  %dst.11124 = insertvalue <{ i64, [1 x float] }> %dst.11122, float %src.11123, 1, 0
  %ptr_CGrFloat.11125 = bitcast i64* %new_node_ptr.11114 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.11124, <{ i64, [1 x float] }>* %ptr_CGrFloat.11125, align 1
  br label %block.exit.11212

block.CGrInt.11126:                               ; preds = %block.exit.11109
  %src.11127 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11128 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.11127, 0
  %src.11129 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 2, 0
  %dst.11130 = insertvalue <{ i64, [1 x i64] }> %dst.11128, i64 %src.11129, 1, 0
  %ptr_CGrInt.11131 = bitcast i64* %new_node_ptr.11114 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.11130, <{ i64, [1 x i64] }>* %ptr_CGrInt.11131, align 1
  br label %block.exit.11212

block.CGrString.11132:                            ; preds = %block.exit.11109
  %src.11133 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11134 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.11133, 0
  %src.11135 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 3, 0
  %dst.11136 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.11134, { i8*, i64 }* %src.11135, 1, 0
  %ptr_CGrString.11137 = bitcast i64* %new_node_ptr.11114 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.11136, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11137, align 1
  br label %block.exit.11212

block.Cidr_Builtins.MkPair.11138:                 ; preds = %block.exit.11109
  %src.11139 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11140 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11139, 0
  %src.11141 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 1
  %dst.11142 = insertvalue <{ i64, [2 x i64*] }> %dst.11140, i64* %src.11141, 1, 1
  %src.11143 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11144 = insertvalue <{ i64, [2 x i64*] }> %dst.11142, i64* %src.11143, 1, 0
  %ptr_Cidr_Builtins.MkPair.11145 = bitcast i64* %new_node_ptr.11114 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11144, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11145, align 1
  br label %block.exit.11212

"block.Cidr_Data.Vect.::.11146":                  ; preds = %block.exit.11109
  %src.11147 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11148 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11147, 0
  %src.11149 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 1
  %dst.11150 = insertvalue <{ i64, [2 x i64*] }> %dst.11148, i64* %src.11149, 1, 1
  %src.11151 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11152 = insertvalue <{ i64, [2 x i64*] }> %dst.11150, i64* %src.11151, 1, 0
  %"ptr_Cidr_Data.Vect.::.11153" = bitcast i64* %new_node_ptr.11114 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11152, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11153", align 1
  br label %block.exit.11212

block.Cidr_Prelude.Bool.False.11154:              ; preds = %block.exit.11109
  %src.11155 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11156 = insertvalue <{ i64 }> undef, i64 %src.11155, 0
  %ptr_Cidr_Prelude.Bool.False.11157 = bitcast i64* %new_node_ptr.11114 to <{ i64 }>*
  store <{ i64 }> %dst.11156, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11157, align 1
  br label %block.exit.11212

block.Cidr_Prelude.Bool.True.11158:               ; preds = %block.exit.11109
  %src.11159 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11160 = insertvalue <{ i64 }> undef, i64 %src.11159, 0
  %ptr_Cidr_Prelude.Bool.True.11161 = bitcast i64* %new_node_ptr.11114 to <{ i64 }>*
  store <{ i64 }> %dst.11160, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11161, align 1
  br label %block.exit.11212

"block.Cidr_Prelude.List.::.11162":               ; preds = %block.exit.11109
  %src.11163 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11164 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11163, 0
  %src.11165 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 1
  %dst.11166 = insertvalue <{ i64, [2 x i64*] }> %dst.11164, i64* %src.11165, 1, 1
  %src.11167 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11168 = insertvalue <{ i64, [2 x i64*] }> %dst.11166, i64* %src.11167, 1, 0
  %"ptr_Cidr_Prelude.List.::.11169" = bitcast i64* %new_node_ptr.11114 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11168, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11169", align 1
  br label %block.exit.11212

block.Cidr_Prelude.List.Nil.11170:                ; preds = %block.exit.11109
  %src.11171 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11172 = insertvalue <{ i64 }> undef, i64 %src.11171, 0
  %ptr_Cidr_Prelude.List.Nil.11173 = bitcast i64* %new_node_ptr.11114 to <{ i64 }>*
  store <{ i64 }> %dst.11172, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11173, align 1
  br label %block.exit.11212

"block.Cidr_{U_Main.{adder_0}_1}.11174":          ; preds = %block.exit.11109
  %src.11175 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11176 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.11175, 0
  %src.11177 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 2
  %dst.11178 = insertvalue <{ i64, [3 x i64*] }> %dst.11176, i64* %src.11177, 1, 2
  %src.11179 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 1
  %dst.11180 = insertvalue <{ i64, [3 x i64*] }> %dst.11178, i64* %src.11179, 1, 1
  %src.11181 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11182 = insertvalue <{ i64, [3 x i64*] }> %dst.11180, i64* %src.11181, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11183" = bitcast i64* %new_node_ptr.11114 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.11182, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11183", align 1
  br label %block.exit.11212

"block.Cidr_{U_Main.{main_9}_1}.11184":           ; preds = %block.exit.11109
  %src.11185 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11186 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11185, 0
  %src.11187 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11188 = insertvalue <{ i64, [1 x i64*] }> %dst.11186, i64* %src.11187, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11189" = bitcast i64* %new_node_ptr.11114 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11188, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11189", align 1
  br label %block.exit.11212

"block.Cidr_{U_Main.{printFmt_14}_1}.11190":      ; preds = %block.exit.11109
  %src.11191 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11192 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11191, 0
  %src.11193 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 1
  %dst.11194 = insertvalue <{ i64, [2 x i64*] }> %dst.11192, i64* %src.11193, 1, 1
  %src.11195 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11196 = insertvalue <{ i64, [2 x i64*] }> %dst.11194, i64* %src.11195, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11197" = bitcast i64* %new_node_ptr.11114 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11196, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11197", align 1
  br label %block.exit.11212

"block.Cidr_{U_Main.{printFmt_15}_1}.11198":      ; preds = %block.exit.11109
  %src.11199 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11200 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11199, 0
  %src.11201 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 1
  %dst.11202 = insertvalue <{ i64, [2 x i64*] }> %dst.11200, i64* %src.11201, 1, 1
  %src.11203 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11204 = insertvalue <{ i64, [2 x i64*] }> %dst.11202, i64* %src.11203, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11205" = bitcast i64* %new_node_ptr.11114 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11204, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11205", align 1
  br label %block.exit.11212

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11206": ; preds = %block.exit.11109
  %src.11207 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 0
  %dst.11208 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11207, 0
  %src.11209 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Data.Vect.{foldrImpl_1}4_val.11110", 4, 0
  %dst.11210 = insertvalue <{ i64, [1 x i64*] }> %dst.11208, i64* %src.11209, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11211" = bitcast i64* %new_node_ptr.11114 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11210, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11211", align 1
  br label %block.exit.11212

block.exit.11212:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11206", %"block.Cidr_{U_Main.{printFmt_15}_1}.11198", %"block.Cidr_{U_Main.{printFmt_14}_1}.11190", %"block.Cidr_{U_Main.{main_9}_1}.11184", %"block.Cidr_{U_Main.{adder_0}_1}.11174", %block.Cidr_Prelude.List.Nil.11170, %"block.Cidr_Prelude.List.::.11162", %block.Cidr_Prelude.Bool.True.11158, %block.Cidr_Prelude.Bool.False.11154, %"block.Cidr_Data.Vect.::.11146", %block.Cidr_Builtins.MkPair.11138, %block.CGrString.11132, %block.CGrInt.11126, %block.CGrFloat.11120, %block.CErased.11116
  %"result.idr_Data.Vect.{foldrImpl_1}.11213" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %"idr_Data.Vect.{foldrImpl_1}0", i64* %new_node_ptr.11114)
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"result.idr_Data.Vect.{foldrImpl_1}.11213"

error_block:                                      ; preds = %block.exit.11109, %"idr_Data.Vect.{foldrImpl_1}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_2}"(i64* %"idr_Main.{main_2}0") #0 {
"idr_Main.{main_2}.entry":
  %tag.11214 = load i64, i64* %"idr_Main.{main_2}0", align 1
  switch i64 %tag.11214, label %error_block [
    i64 0, label %block.CErased.11215
    i64 1, label %block.CGrFloat.11220
    i64 2, label %block.CGrInt.11227
    i64 3, label %block.CGrString.11234
    i64 4, label %block.Cidr_Builtins.MkPair.11241
    i64 5, label %"block.Cidr_Data.Vect.::.11250"
    i64 6, label %block.Cidr_Prelude.Bool.False.11259
    i64 7, label %block.Cidr_Prelude.Bool.True.11264
    i64 8, label %"block.Cidr_Prelude.List.::.11269"
    i64 9, label %block.Cidr_Prelude.List.Nil.11278
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11283"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11294"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11301"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11310"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11319"
  ]

block.CErased.11215:                              ; preds = %"idr_Main.{main_2}.entry"
  %ptr_CErased.11216 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64 }>*
  %node_CErased.11217 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.11216, align 1
  %src.11218 = extractvalue <{ i64 }> %node_CErased.11217, 0
  %dst.11219 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11218, 0
  br label %block.exit.11326

block.CGrFloat.11220:                             ; preds = %"idr_Main.{main_2}.entry"
  %ptr_CGrFloat.11221 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [1 x float] }>*
  %node_CGrFloat.11222 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.11221, align 1
  %src.11223 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.11222, 0
  %dst.11224 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11223, 0
  %src.11225 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.11222, 1, 0
  %dst.11226 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11224, float %src.11225, 1, 0
  br label %block.exit.11326

block.CGrInt.11227:                               ; preds = %"idr_Main.{main_2}.entry"
  %ptr_CGrInt.11228 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [1 x i64] }>*
  %node_CGrInt.11229 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.11228, align 1
  %src.11230 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.11229, 0
  %dst.11231 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11230, 0
  %src.11232 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.11229, 1, 0
  %dst.11233 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11231, i64 %src.11232, 2, 0
  br label %block.exit.11326

block.CGrString.11234:                            ; preds = %"idr_Main.{main_2}.entry"
  %ptr_CGrString.11235 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.11236 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11235, align 1
  %src.11237 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11236, 0
  %dst.11238 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11237, 0
  %src.11239 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11236, 1, 0
  %dst.11240 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11238, { i8*, i64 }* %src.11239, 3, 0
  br label %block.exit.11326

block.Cidr_Builtins.MkPair.11241:                 ; preds = %"idr_Main.{main_2}.entry"
  %ptr_Cidr_Builtins.MkPair.11242 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.11243 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11242, align 1
  %src.11244 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.11243, 0
  %dst.11245 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11244, 0
  %src.11246 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.11243, 1, 1
  %dst.11247 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11245, i64* %src.11246, 4, 1
  %src.11248 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.11243, 1, 0
  %dst.11249 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11247, i64* %src.11248, 4, 0
  br label %block.exit.11326

"block.Cidr_Data.Vect.::.11250":                  ; preds = %"idr_Main.{main_2}.entry"
  %"ptr_Cidr_Data.Vect.::.11251" = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.11252" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11251", align 1
  %src.11253 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.11252", 0
  %dst.11254 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11253, 0
  %src.11255 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.11252", 1, 1
  %dst.11256 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11254, i64* %src.11255, 4, 1
  %src.11257 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.11252", 1, 0
  %dst.11258 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11256, i64* %src.11257, 4, 0
  br label %block.exit.11326

block.Cidr_Prelude.Bool.False.11259:              ; preds = %"idr_Main.{main_2}.entry"
  %ptr_Cidr_Prelude.Bool.False.11260 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.11261 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11260, align 1
  %src.11262 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.11261, 0
  %dst.11263 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11262, 0
  br label %block.exit.11326

block.Cidr_Prelude.Bool.True.11264:               ; preds = %"idr_Main.{main_2}.entry"
  %ptr_Cidr_Prelude.Bool.True.11265 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.11266 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11265, align 1
  %src.11267 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.11266, 0
  %dst.11268 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11267, 0
  br label %block.exit.11326

"block.Cidr_Prelude.List.::.11269":               ; preds = %"idr_Main.{main_2}.entry"
  %"ptr_Cidr_Prelude.List.::.11270" = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.11271" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11270", align 1
  %src.11272 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.11271", 0
  %dst.11273 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11272, 0
  %src.11274 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.11271", 1, 1
  %dst.11275 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11273, i64* %src.11274, 4, 1
  %src.11276 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.11271", 1, 0
  %dst.11277 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11275, i64* %src.11276, 4, 0
  br label %block.exit.11326

block.Cidr_Prelude.List.Nil.11278:                ; preds = %"idr_Main.{main_2}.entry"
  %ptr_Cidr_Prelude.List.Nil.11279 = bitcast i64* %"idr_Main.{main_2}0" to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.11280 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11279, align 1
  %src.11281 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.11280, 0
  %dst.11282 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11281, 0
  br label %block.exit.11326

"block.Cidr_{U_Main.{adder_0}_1}.11283":          ; preds = %"idr_Main.{main_2}.entry"
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11284" = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.11285" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11284", align 1
  %src.11286 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11285", 0
  %dst.11287 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11286, 0
  %src.11288 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11285", 1, 2
  %dst.11289 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11287, i64* %src.11288, 4, 2
  %src.11290 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11285", 1, 1
  %dst.11291 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11289, i64* %src.11290, 4, 1
  %src.11292 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11285", 1, 0
  %dst.11293 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11291, i64* %src.11292, 4, 0
  br label %block.exit.11326

"block.Cidr_{U_Main.{main_9}_1}.11294":           ; preds = %"idr_Main.{main_2}.entry"
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11295" = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.11296" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11295", align 1
  %src.11297 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.11296", 0
  %dst.11298 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11297, 0
  %src.11299 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.11296", 1, 0
  %dst.11300 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11298, i64* %src.11299, 4, 0
  br label %block.exit.11326

"block.Cidr_{U_Main.{printFmt_14}_1}.11301":      ; preds = %"idr_Main.{main_2}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11302" = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11303" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11302", align 1
  %src.11304 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11303", 0
  %dst.11305 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11304, 0
  %src.11306 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11303", 1, 1
  %dst.11307 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11305, i64* %src.11306, 4, 1
  %src.11308 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11303", 1, 0
  %dst.11309 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11307, i64* %src.11308, 4, 0
  br label %block.exit.11326

"block.Cidr_{U_Main.{printFmt_15}_1}.11310":      ; preds = %"idr_Main.{main_2}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11311" = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11312" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11311", align 1
  %src.11313 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11312", 0
  %dst.11314 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11313, 0
  %src.11315 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11312", 1, 1
  %dst.11316 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11314, i64* %src.11315, 4, 1
  %src.11317 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11312", 1, 0
  %dst.11318 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11316, i64* %src.11317, 4, 0
  br label %block.exit.11326

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11319": ; preds = %"idr_Main.{main_2}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11320" = bitcast i64* %"idr_Main.{main_2}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11321" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11320", align 1
  %src.11322 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11321", 0
  %dst.11323 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11322, 0
  %src.11324 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11321", 1, 0
  %dst.11325 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11323, i64* %src.11324, 4, 0
  br label %block.exit.11326

block.exit.11326:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11319", %"block.Cidr_{U_Main.{printFmt_15}_1}.11310", %"block.Cidr_{U_Main.{printFmt_14}_1}.11301", %"block.Cidr_{U_Main.{main_9}_1}.11294", %"block.Cidr_{U_Main.{adder_0}_1}.11283", %block.Cidr_Prelude.List.Nil.11278, %"block.Cidr_Prelude.List.::.11269", %block.Cidr_Prelude.Bool.True.11264, %block.Cidr_Prelude.Bool.False.11259, %"block.Cidr_Data.Vect.::.11250", %block.Cidr_Builtins.MkPair.11241, %block.CGrString.11234, %block.CGrInt.11227, %block.CGrFloat.11220, %block.CErased.11215
  %"idr_Main.{main_2}0_val.11327" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.11219, %block.CErased.11215 ], [ %dst.11226, %block.CGrFloat.11220 ], [ %dst.11233, %block.CGrInt.11227 ], [ %dst.11240, %block.CGrString.11234 ], [ %dst.11249, %block.Cidr_Builtins.MkPair.11241 ], [ %dst.11258, %"block.Cidr_Data.Vect.::.11250" ], [ %dst.11263, %block.Cidr_Prelude.Bool.False.11259 ], [ %dst.11268, %block.Cidr_Prelude.Bool.True.11264 ], [ %dst.11277, %"block.Cidr_Prelude.List.::.11269" ], [ %dst.11282, %block.Cidr_Prelude.List.Nil.11278 ], [ %dst.11293, %"block.Cidr_{U_Main.{adder_0}_1}.11283" ], [ %dst.11300, %"block.Cidr_{U_Main.{main_9}_1}.11294" ], [ %dst.11309, %"block.Cidr_{U_Main.{printFmt_14}_1}.11301" ], [ %dst.11318, %"block.Cidr_{U_Main.{printFmt_15}_1}.11310" ], [ %dst.11325, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11319" ]
  %tag.11328 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}0_val.11327", 0
  switch i64 %tag.11328, label %error_block [
    i64 4, label %block.Cidr_Builtins.MkPair.11329
  ]

block.Cidr_Builtins.MkPair.11329:                 ; preds = %block.exit.11326
  %"idr_Main.{main_2}1" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}0_val.11327", 4, 0
  %"idr_Main.{main_2}2" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}0_val.11327", 4, 1
  %node_CGrString.11330 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.8, 1, 0
  %alloc_bytes.11331 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11332 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11331 to i64
  %new_node_ptr.11333 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11332 monotonic
  %new_node_ptr.11334 = inttoptr i64 %new_node_ptr.11333 to i64*
  %tag.11335 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11330, 0
  %ptr_CGrString.11336 = bitcast i64* %new_node_ptr.11334 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11330, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11336, align 1
  %alloc_bytes.11337 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11338 = ptrtoint <{ i64 }>* %alloc_bytes.11337 to i64
  %new_node_ptr.11339 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11338 monotonic
  %new_node_ptr.11340 = inttoptr i64 %new_node_ptr.11339 to i64*
  %tag.11341 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.11342 = bitcast i64* %new_node_ptr.11340 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.11342, align 1
  %alloc_bytes.11343 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11344 = ptrtoint <{ i64 }>* %alloc_bytes.11343 to i64
  %new_node_ptr.11345 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11344 monotonic
  %new_node_ptr.11346 = inttoptr i64 %new_node_ptr.11345 to i64*
  %tag.11347 = extractvalue <{ i64 }> <{ i64 57 }>, 0
  %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11348" = bitcast i64* %new_node_ptr.11346 to <{ i64 }>*
  store <{ i64 }> <{ i64 57 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11348", align 1
  %alloc_bytes.11349 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11350 = ptrtoint <{ i64 }>* %alloc_bytes.11349 to i64
  %new_node_ptr.11351 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11350 monotonic
  %new_node_ptr.11352 = inttoptr i64 %new_node_ptr.11351 to i64*
  %tag.11353 = extractvalue <{ i64 }> <{ i64 35 }>, 0
  %ptr_Cidr_Prelude.Show.Open.11354 = bitcast i64* %new_node_ptr.11352 to <{ i64 }>*
  store <{ i64 }> <{ i64 35 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.11354, align 1
  %"idr_Main.{main_2}4_val_1464.11355" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %new_node_ptr.11340, i64* %new_node_ptr.11346, i64* %new_node_ptr.11352, i64* %"idr_Main.{main_2}1")
  %alloc_bytes.11356 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.11357 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.11356 to i64
  %new_node_ptr.11358 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11357 monotonic
  %new_node_ptr.11359 = inttoptr i64 %new_node_ptr.11358 to i64*
  %tag.11360 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  switch i64 %tag.11360, label %error_block [
    i64 0, label %block.CErased.11361
    i64 1, label %block.CGrFloat.11365
    i64 2, label %block.CGrInt.11371
    i64 3, label %block.CGrString.11377
    i64 4, label %block.Cidr_Builtins.MkPair.11383
    i64 5, label %"block.Cidr_Data.Vect.::.11391"
    i64 6, label %block.Cidr_Prelude.Bool.False.11399
    i64 7, label %block.Cidr_Prelude.Bool.True.11403
    i64 8, label %"block.Cidr_Prelude.List.::.11407"
    i64 9, label %block.Cidr_Prelude.List.Nil.11415
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11419"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11429"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11435"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11443"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11451"
  ]

block.CErased.11361:                              ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11362 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11363 = insertvalue <{ i64 }> undef, i64 %src.11362, 0
  %ptr_CErased.11364 = bitcast i64* %new_node_ptr.11359 to <{ i64 }>*
  store <{ i64 }> %dst.11363, <{ i64 }>* %ptr_CErased.11364, align 1
  br label %block.exit.11457

block.CGrFloat.11365:                             ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11366 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11367 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.11366, 0
  %src.11368 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 1, 0
  %dst.11369 = insertvalue <{ i64, [1 x float] }> %dst.11367, float %src.11368, 1, 0
  %ptr_CGrFloat.11370 = bitcast i64* %new_node_ptr.11359 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.11369, <{ i64, [1 x float] }>* %ptr_CGrFloat.11370, align 1
  br label %block.exit.11457

block.CGrInt.11371:                               ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11372 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11373 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.11372, 0
  %src.11374 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 2, 0
  %dst.11375 = insertvalue <{ i64, [1 x i64] }> %dst.11373, i64 %src.11374, 1, 0
  %ptr_CGrInt.11376 = bitcast i64* %new_node_ptr.11359 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.11375, <{ i64, [1 x i64] }>* %ptr_CGrInt.11376, align 1
  br label %block.exit.11457

block.CGrString.11377:                            ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11378 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11379 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.11378, 0
  %src.11380 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 3, 0
  %dst.11381 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.11379, { i8*, i64 }* %src.11380, 1, 0
  %ptr_CGrString.11382 = bitcast i64* %new_node_ptr.11359 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.11381, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11382, align 1
  br label %block.exit.11457

block.Cidr_Builtins.MkPair.11383:                 ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11384 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11385 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11384, 0
  %src.11386 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 1
  %dst.11387 = insertvalue <{ i64, [2 x i64*] }> %dst.11385, i64* %src.11386, 1, 1
  %src.11388 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11389 = insertvalue <{ i64, [2 x i64*] }> %dst.11387, i64* %src.11388, 1, 0
  %ptr_Cidr_Builtins.MkPair.11390 = bitcast i64* %new_node_ptr.11359 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11389, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11390, align 1
  br label %block.exit.11457

"block.Cidr_Data.Vect.::.11391":                  ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11392 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11393 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11392, 0
  %src.11394 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 1
  %dst.11395 = insertvalue <{ i64, [2 x i64*] }> %dst.11393, i64* %src.11394, 1, 1
  %src.11396 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11397 = insertvalue <{ i64, [2 x i64*] }> %dst.11395, i64* %src.11396, 1, 0
  %"ptr_Cidr_Data.Vect.::.11398" = bitcast i64* %new_node_ptr.11359 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11397, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11398", align 1
  br label %block.exit.11457

block.Cidr_Prelude.Bool.False.11399:              ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11400 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11401 = insertvalue <{ i64 }> undef, i64 %src.11400, 0
  %ptr_Cidr_Prelude.Bool.False.11402 = bitcast i64* %new_node_ptr.11359 to <{ i64 }>*
  store <{ i64 }> %dst.11401, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11402, align 1
  br label %block.exit.11457

block.Cidr_Prelude.Bool.True.11403:               ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11404 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11405 = insertvalue <{ i64 }> undef, i64 %src.11404, 0
  %ptr_Cidr_Prelude.Bool.True.11406 = bitcast i64* %new_node_ptr.11359 to <{ i64 }>*
  store <{ i64 }> %dst.11405, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11406, align 1
  br label %block.exit.11457

"block.Cidr_Prelude.List.::.11407":               ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11408 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11409 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11408, 0
  %src.11410 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 1
  %dst.11411 = insertvalue <{ i64, [2 x i64*] }> %dst.11409, i64* %src.11410, 1, 1
  %src.11412 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11413 = insertvalue <{ i64, [2 x i64*] }> %dst.11411, i64* %src.11412, 1, 0
  %"ptr_Cidr_Prelude.List.::.11414" = bitcast i64* %new_node_ptr.11359 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11413, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11414", align 1
  br label %block.exit.11457

block.Cidr_Prelude.List.Nil.11415:                ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11416 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11417 = insertvalue <{ i64 }> undef, i64 %src.11416, 0
  %ptr_Cidr_Prelude.List.Nil.11418 = bitcast i64* %new_node_ptr.11359 to <{ i64 }>*
  store <{ i64 }> %dst.11417, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11418, align 1
  br label %block.exit.11457

"block.Cidr_{U_Main.{adder_0}_1}.11419":          ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11420 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11421 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.11420, 0
  %src.11422 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 2
  %dst.11423 = insertvalue <{ i64, [3 x i64*] }> %dst.11421, i64* %src.11422, 1, 2
  %src.11424 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 1
  %dst.11425 = insertvalue <{ i64, [3 x i64*] }> %dst.11423, i64* %src.11424, 1, 1
  %src.11426 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11427 = insertvalue <{ i64, [3 x i64*] }> %dst.11425, i64* %src.11426, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11428" = bitcast i64* %new_node_ptr.11359 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.11427, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11428", align 1
  br label %block.exit.11457

"block.Cidr_{U_Main.{main_9}_1}.11429":           ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11430 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11431 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11430, 0
  %src.11432 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11433 = insertvalue <{ i64, [1 x i64*] }> %dst.11431, i64* %src.11432, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11434" = bitcast i64* %new_node_ptr.11359 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11433, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11434", align 1
  br label %block.exit.11457

"block.Cidr_{U_Main.{printFmt_14}_1}.11435":      ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11436 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11437 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11436, 0
  %src.11438 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 1
  %dst.11439 = insertvalue <{ i64, [2 x i64*] }> %dst.11437, i64* %src.11438, 1, 1
  %src.11440 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11441 = insertvalue <{ i64, [2 x i64*] }> %dst.11439, i64* %src.11440, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11442" = bitcast i64* %new_node_ptr.11359 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11441, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11442", align 1
  br label %block.exit.11457

"block.Cidr_{U_Main.{printFmt_15}_1}.11443":      ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11444 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11445 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11444, 0
  %src.11446 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 1
  %dst.11447 = insertvalue <{ i64, [2 x i64*] }> %dst.11445, i64* %src.11446, 1, 1
  %src.11448 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11449 = insertvalue <{ i64, [2 x i64*] }> %dst.11447, i64* %src.11448, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11450" = bitcast i64* %new_node_ptr.11359 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11449, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11450", align 1
  br label %block.exit.11457

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11451": ; preds = %block.Cidr_Builtins.MkPair.11329
  %src.11452 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 0
  %dst.11453 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11452, 0
  %src.11454 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}4_val_1464.11355", 4, 0
  %dst.11455 = insertvalue <{ i64, [1 x i64*] }> %dst.11453, i64* %src.11454, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11456" = bitcast i64* %new_node_ptr.11359 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11455, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11456", align 1
  br label %block.exit.11457

block.exit.11457:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11451", %"block.Cidr_{U_Main.{printFmt_15}_1}.11443", %"block.Cidr_{U_Main.{printFmt_14}_1}.11435", %"block.Cidr_{U_Main.{main_9}_1}.11429", %"block.Cidr_{U_Main.{adder_0}_1}.11419", %block.Cidr_Prelude.List.Nil.11415, %"block.Cidr_Prelude.List.::.11407", %block.Cidr_Prelude.Bool.True.11403, %block.Cidr_Prelude.Bool.False.11399, %"block.Cidr_Data.Vect.::.11391", %block.Cidr_Builtins.MkPair.11383, %block.CGrString.11377, %block.CGrInt.11371, %block.CGrFloat.11365, %block.CErased.11361
  %node_CGrString.11458 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.14, 1, 0
  %alloc_bytes.11459 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11460 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11459 to i64
  %new_node_ptr.11461 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11460 monotonic
  %new_node_ptr.11462 = inttoptr i64 %new_node_ptr.11461 to i64*
  %tag.11463 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11458, 0
  %ptr_CGrString.11464 = bitcast i64* %new_node_ptr.11462 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11458, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11464, align 1
  %alloc_bytes.11465 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11466 = ptrtoint <{ i64 }>* %alloc_bytes.11465 to i64
  %new_node_ptr.11467 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11466 monotonic
  %new_node_ptr.11468 = inttoptr i64 %new_node_ptr.11467 to i64*
  %tag.11469 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.11470 = bitcast i64* %new_node_ptr.11468 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.11470, align 1
  %alloc_bytes.11471 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11472 = ptrtoint <{ i64 }>* %alloc_bytes.11471 to i64
  %new_node_ptr.11473 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11472 monotonic
  %new_node_ptr.11474 = inttoptr i64 %new_node_ptr.11473 to i64*
  %tag.11475 = extractvalue <{ i64 }> <{ i64 57 }>, 0
  %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11476" = bitcast i64* %new_node_ptr.11474 to <{ i64 }>*
  store <{ i64 }> <{ i64 57 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11476", align 1
  %alloc_bytes.11477 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11478 = ptrtoint <{ i64 }>* %alloc_bytes.11477 to i64
  %new_node_ptr.11479 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11478 monotonic
  %new_node_ptr.11480 = inttoptr i64 %new_node_ptr.11479 to i64*
  %tag.11481 = extractvalue <{ i64 }> <{ i64 35 }>, 0
  %ptr_Cidr_Prelude.Show.Open.11482 = bitcast i64* %new_node_ptr.11480 to <{ i64 }>*
  store <{ i64 }> <{ i64 35 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.11482, align 1
  %"idr_Main.{main_2}6_val_1471.11483" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %new_node_ptr.11468, i64* %new_node_ptr.11474, i64* %new_node_ptr.11480, i64* %"idr_Main.{main_2}2")
  %alloc_bytes.11484 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.11485 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.11484 to i64
  %new_node_ptr.11486 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11485 monotonic
  %new_node_ptr.11487 = inttoptr i64 %new_node_ptr.11486 to i64*
  %tag.11488 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  switch i64 %tag.11488, label %error_block [
    i64 0, label %block.CErased.11489
    i64 1, label %block.CGrFloat.11493
    i64 2, label %block.CGrInt.11499
    i64 3, label %block.CGrString.11505
    i64 4, label %block.Cidr_Builtins.MkPair.11511
    i64 5, label %"block.Cidr_Data.Vect.::.11519"
    i64 6, label %block.Cidr_Prelude.Bool.False.11527
    i64 7, label %block.Cidr_Prelude.Bool.True.11531
    i64 8, label %"block.Cidr_Prelude.List.::.11535"
    i64 9, label %block.Cidr_Prelude.List.Nil.11543
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11547"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11557"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11563"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11571"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11579"
  ]

block.CErased.11489:                              ; preds = %block.exit.11457
  %src.11490 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11491 = insertvalue <{ i64 }> undef, i64 %src.11490, 0
  %ptr_CErased.11492 = bitcast i64* %new_node_ptr.11487 to <{ i64 }>*
  store <{ i64 }> %dst.11491, <{ i64 }>* %ptr_CErased.11492, align 1
  br label %block.exit.11585

block.CGrFloat.11493:                             ; preds = %block.exit.11457
  %src.11494 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11495 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.11494, 0
  %src.11496 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 1, 0
  %dst.11497 = insertvalue <{ i64, [1 x float] }> %dst.11495, float %src.11496, 1, 0
  %ptr_CGrFloat.11498 = bitcast i64* %new_node_ptr.11487 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.11497, <{ i64, [1 x float] }>* %ptr_CGrFloat.11498, align 1
  br label %block.exit.11585

block.CGrInt.11499:                               ; preds = %block.exit.11457
  %src.11500 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11501 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.11500, 0
  %src.11502 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 2, 0
  %dst.11503 = insertvalue <{ i64, [1 x i64] }> %dst.11501, i64 %src.11502, 1, 0
  %ptr_CGrInt.11504 = bitcast i64* %new_node_ptr.11487 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.11503, <{ i64, [1 x i64] }>* %ptr_CGrInt.11504, align 1
  br label %block.exit.11585

block.CGrString.11505:                            ; preds = %block.exit.11457
  %src.11506 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11507 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.11506, 0
  %src.11508 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 3, 0
  %dst.11509 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.11507, { i8*, i64 }* %src.11508, 1, 0
  %ptr_CGrString.11510 = bitcast i64* %new_node_ptr.11487 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.11509, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11510, align 1
  br label %block.exit.11585

block.Cidr_Builtins.MkPair.11511:                 ; preds = %block.exit.11457
  %src.11512 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11513 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11512, 0
  %src.11514 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 1
  %dst.11515 = insertvalue <{ i64, [2 x i64*] }> %dst.11513, i64* %src.11514, 1, 1
  %src.11516 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11517 = insertvalue <{ i64, [2 x i64*] }> %dst.11515, i64* %src.11516, 1, 0
  %ptr_Cidr_Builtins.MkPair.11518 = bitcast i64* %new_node_ptr.11487 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11517, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11518, align 1
  br label %block.exit.11585

"block.Cidr_Data.Vect.::.11519":                  ; preds = %block.exit.11457
  %src.11520 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11521 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11520, 0
  %src.11522 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 1
  %dst.11523 = insertvalue <{ i64, [2 x i64*] }> %dst.11521, i64* %src.11522, 1, 1
  %src.11524 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11525 = insertvalue <{ i64, [2 x i64*] }> %dst.11523, i64* %src.11524, 1, 0
  %"ptr_Cidr_Data.Vect.::.11526" = bitcast i64* %new_node_ptr.11487 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11525, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11526", align 1
  br label %block.exit.11585

block.Cidr_Prelude.Bool.False.11527:              ; preds = %block.exit.11457
  %src.11528 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11529 = insertvalue <{ i64 }> undef, i64 %src.11528, 0
  %ptr_Cidr_Prelude.Bool.False.11530 = bitcast i64* %new_node_ptr.11487 to <{ i64 }>*
  store <{ i64 }> %dst.11529, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11530, align 1
  br label %block.exit.11585

block.Cidr_Prelude.Bool.True.11531:               ; preds = %block.exit.11457
  %src.11532 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11533 = insertvalue <{ i64 }> undef, i64 %src.11532, 0
  %ptr_Cidr_Prelude.Bool.True.11534 = bitcast i64* %new_node_ptr.11487 to <{ i64 }>*
  store <{ i64 }> %dst.11533, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11534, align 1
  br label %block.exit.11585

"block.Cidr_Prelude.List.::.11535":               ; preds = %block.exit.11457
  %src.11536 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11537 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11536, 0
  %src.11538 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 1
  %dst.11539 = insertvalue <{ i64, [2 x i64*] }> %dst.11537, i64* %src.11538, 1, 1
  %src.11540 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11541 = insertvalue <{ i64, [2 x i64*] }> %dst.11539, i64* %src.11540, 1, 0
  %"ptr_Cidr_Prelude.List.::.11542" = bitcast i64* %new_node_ptr.11487 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11541, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11542", align 1
  br label %block.exit.11585

block.Cidr_Prelude.List.Nil.11543:                ; preds = %block.exit.11457
  %src.11544 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11545 = insertvalue <{ i64 }> undef, i64 %src.11544, 0
  %ptr_Cidr_Prelude.List.Nil.11546 = bitcast i64* %new_node_ptr.11487 to <{ i64 }>*
  store <{ i64 }> %dst.11545, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11546, align 1
  br label %block.exit.11585

"block.Cidr_{U_Main.{adder_0}_1}.11547":          ; preds = %block.exit.11457
  %src.11548 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11549 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.11548, 0
  %src.11550 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 2
  %dst.11551 = insertvalue <{ i64, [3 x i64*] }> %dst.11549, i64* %src.11550, 1, 2
  %src.11552 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 1
  %dst.11553 = insertvalue <{ i64, [3 x i64*] }> %dst.11551, i64* %src.11552, 1, 1
  %src.11554 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11555 = insertvalue <{ i64, [3 x i64*] }> %dst.11553, i64* %src.11554, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11556" = bitcast i64* %new_node_ptr.11487 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.11555, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11556", align 1
  br label %block.exit.11585

"block.Cidr_{U_Main.{main_9}_1}.11557":           ; preds = %block.exit.11457
  %src.11558 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11559 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11558, 0
  %src.11560 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11561 = insertvalue <{ i64, [1 x i64*] }> %dst.11559, i64* %src.11560, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11562" = bitcast i64* %new_node_ptr.11487 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11561, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11562", align 1
  br label %block.exit.11585

"block.Cidr_{U_Main.{printFmt_14}_1}.11563":      ; preds = %block.exit.11457
  %src.11564 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11565 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11564, 0
  %src.11566 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 1
  %dst.11567 = insertvalue <{ i64, [2 x i64*] }> %dst.11565, i64* %src.11566, 1, 1
  %src.11568 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11569 = insertvalue <{ i64, [2 x i64*] }> %dst.11567, i64* %src.11568, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11570" = bitcast i64* %new_node_ptr.11487 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11569, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11570", align 1
  br label %block.exit.11585

"block.Cidr_{U_Main.{printFmt_15}_1}.11571":      ; preds = %block.exit.11457
  %src.11572 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11573 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11572, 0
  %src.11574 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 1
  %dst.11575 = insertvalue <{ i64, [2 x i64*] }> %dst.11573, i64* %src.11574, 1, 1
  %src.11576 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11577 = insertvalue <{ i64, [2 x i64*] }> %dst.11575, i64* %src.11576, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11578" = bitcast i64* %new_node_ptr.11487 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11577, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11578", align 1
  br label %block.exit.11585

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11579": ; preds = %block.exit.11457
  %src.11580 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 0
  %dst.11581 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11580, 0
  %src.11582 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_2}6_val_1471.11483", 4, 0
  %dst.11583 = insertvalue <{ i64, [1 x i64*] }> %dst.11581, i64* %src.11582, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11584" = bitcast i64* %new_node_ptr.11487 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11583, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11584", align 1
  br label %block.exit.11585

block.exit.11585:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11579", %"block.Cidr_{U_Main.{printFmt_15}_1}.11571", %"block.Cidr_{U_Main.{printFmt_14}_1}.11563", %"block.Cidr_{U_Main.{main_9}_1}.11557", %"block.Cidr_{U_Main.{adder_0}_1}.11547", %block.Cidr_Prelude.List.Nil.11543, %"block.Cidr_Prelude.List.::.11535", %block.Cidr_Prelude.Bool.True.11531, %block.Cidr_Prelude.Bool.False.11527, %"block.Cidr_Data.Vect.::.11519", %block.Cidr_Builtins.MkPair.11511, %block.CGrString.11505, %block.CGrInt.11499, %block.CGrFloat.11493, %block.CErased.11489
  %node_CGrString.11586 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.9, 1, 0
  %alloc_bytes.11587 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11588 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11587 to i64
  %new_node_ptr.11589 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11588 monotonic
  %new_node_ptr.11590 = inttoptr i64 %new_node_ptr.11589 to i64*
  %tag.11591 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11586, 0
  %ptr_CGrString.11592 = bitcast i64* %new_node_ptr.11590 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11586, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11592, align 1
  %"idr_Main.{main_2}6_val_1470.11593" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11487, i64* %new_node_ptr.11590)
  %alloc_bytes.11594 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11595 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11594 to i64
  %new_node_ptr.11596 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11595 monotonic
  %new_node_ptr.11597 = inttoptr i64 %new_node_ptr.11596 to i64*
  %tag.11598 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_2}6_val_1470.11593", 0
  %ptr_CGrString.11599 = bitcast i64* %new_node_ptr.11597 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_2}6_val_1470.11593", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11599, align 1
  %"idr_Main.{main_2}5_val_1467.11600" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11462, i64* %new_node_ptr.11597)
  %alloc_bytes.11601 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11602 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11601 to i64
  %new_node_ptr.11603 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11602 monotonic
  %new_node_ptr.11604 = inttoptr i64 %new_node_ptr.11603 to i64*
  %tag.11605 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_2}5_val_1467.11600", 0
  %ptr_CGrString.11606 = bitcast i64* %new_node_ptr.11604 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_2}5_val_1467.11600", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11606, align 1
  %"idr_Main.{main_2}4_val.11607" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11359, i64* %new_node_ptr.11604)
  %alloc_bytes.11608 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11609 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11608 to i64
  %new_node_ptr.11610 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11609 monotonic
  %new_node_ptr.11611 = inttoptr i64 %new_node_ptr.11610 to i64*
  %tag.11612 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_2}4_val.11607", 0
  %ptr_CGrString.11613 = bitcast i64* %new_node_ptr.11611 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_2}4_val.11607", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11613, align 1
  %result.Cidr_Builtins.MkPair.11614 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11334, i64* %new_node_ptr.11611)
  br label %block.exit.11615

block.exit.11615:                                 ; preds = %block.exit.11585
  %"result.idr_Main.{main_2}.11616" = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Builtins.MkPair.11614, %block.exit.11585 ]
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Main.{main_2}.11616"

error_block:                                      ; preds = %block.exit.11457, %block.Cidr_Builtins.MkPair.11329, %block.exit.11326, %"idr_Main.{main_2}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_3}"(i64* %"idr_Main.{main_3}0") #0 {
"idr_Main.{main_3}.entry":
  %alloc_bytes.11617 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11618 = ptrtoint <{ i64 }>* %alloc_bytes.11617 to i64
  %new_node_ptr.11619 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11618 monotonic
  %new_node_ptr.11620 = inttoptr i64 %new_node_ptr.11619 to i64*
  %tag.11621 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.11622 = bitcast i64* %new_node_ptr.11620 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.11622, align 1
  %alloc_bytes.11623 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11624 = ptrtoint <{ i64 }>* %alloc_bytes.11623 to i64
  %new_node_ptr.11625 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11624 monotonic
  %new_node_ptr.11626 = inttoptr i64 %new_node_ptr.11625 to i64*
  %tag.11627 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.11628 = bitcast i64* %new_node_ptr.11626 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.11628, align 1
  %alloc_bytes.11629 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11630 = ptrtoint <{ i64 }>* %alloc_bytes.11629 to i64
  %new_node_ptr.11631 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11630 monotonic
  %new_node_ptr.11632 = inttoptr i64 %new_node_ptr.11631 to i64*
  %tag.11633 = extractvalue <{ i64 }> <{ i64 52 }>, 0
  %"ptr_C\22idr_{U_Main.{main_2}_1}\22.11634" = bitcast i64* %new_node_ptr.11632 to <{ i64 }>*
  store <{ i64 }> <{ i64 52 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_2}_1}\22.11634", align 1
  %"result.idr_Main.{main_3}.11635" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0"(i64* %new_node_ptr.11620, i64* %new_node_ptr.11626, i64* %new_node_ptr.11632, i64* %"idr_Main.{main_3}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Main.{main_3}.11635"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_4}"(i64* %"idr_Main.{main_4}0") #0 {
"idr_Main.{main_4}.entry":
  %tag.11636 = load i64, i64* %"idr_Main.{main_4}0", align 1
  switch i64 %tag.11636, label %error_block [
    i64 0, label %block.CErased.11637
    i64 1, label %block.CGrFloat.11642
    i64 2, label %block.CGrInt.11649
    i64 3, label %block.CGrString.11656
    i64 4, label %block.Cidr_Builtins.MkPair.11663
    i64 5, label %"block.Cidr_Data.Vect.::.11672"
    i64 6, label %block.Cidr_Prelude.Bool.False.11681
    i64 7, label %block.Cidr_Prelude.Bool.True.11686
    i64 8, label %"block.Cidr_Prelude.List.::.11691"
    i64 9, label %block.Cidr_Prelude.List.Nil.11700
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11705"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11716"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11723"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11732"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11741"
  ]

block.CErased.11637:                              ; preds = %"idr_Main.{main_4}.entry"
  %ptr_CErased.11638 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64 }>*
  %node_CErased.11639 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.11638, align 1
  %src.11640 = extractvalue <{ i64 }> %node_CErased.11639, 0
  %dst.11641 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11640, 0
  br label %block.exit.11748

block.CGrFloat.11642:                             ; preds = %"idr_Main.{main_4}.entry"
  %ptr_CGrFloat.11643 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [1 x float] }>*
  %node_CGrFloat.11644 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.11643, align 1
  %src.11645 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.11644, 0
  %dst.11646 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11645, 0
  %src.11647 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.11644, 1, 0
  %dst.11648 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11646, float %src.11647, 1, 0
  br label %block.exit.11748

block.CGrInt.11649:                               ; preds = %"idr_Main.{main_4}.entry"
  %ptr_CGrInt.11650 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [1 x i64] }>*
  %node_CGrInt.11651 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.11650, align 1
  %src.11652 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.11651, 0
  %dst.11653 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11652, 0
  %src.11654 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.11651, 1, 0
  %dst.11655 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11653, i64 %src.11654, 2, 0
  br label %block.exit.11748

block.CGrString.11656:                            ; preds = %"idr_Main.{main_4}.entry"
  %ptr_CGrString.11657 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.11658 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11657, align 1
  %src.11659 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11658, 0
  %dst.11660 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11659, 0
  %src.11661 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11658, 1, 0
  %dst.11662 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11660, { i8*, i64 }* %src.11661, 3, 0
  br label %block.exit.11748

block.Cidr_Builtins.MkPair.11663:                 ; preds = %"idr_Main.{main_4}.entry"
  %ptr_Cidr_Builtins.MkPair.11664 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.11665 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11664, align 1
  %src.11666 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.11665, 0
  %dst.11667 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11666, 0
  %src.11668 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.11665, 1, 1
  %dst.11669 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11667, i64* %src.11668, 4, 1
  %src.11670 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.11665, 1, 0
  %dst.11671 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11669, i64* %src.11670, 4, 0
  br label %block.exit.11748

"block.Cidr_Data.Vect.::.11672":                  ; preds = %"idr_Main.{main_4}.entry"
  %"ptr_Cidr_Data.Vect.::.11673" = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.11674" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11673", align 1
  %src.11675 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.11674", 0
  %dst.11676 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11675, 0
  %src.11677 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.11674", 1, 1
  %dst.11678 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11676, i64* %src.11677, 4, 1
  %src.11679 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.11674", 1, 0
  %dst.11680 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11678, i64* %src.11679, 4, 0
  br label %block.exit.11748

block.Cidr_Prelude.Bool.False.11681:              ; preds = %"idr_Main.{main_4}.entry"
  %ptr_Cidr_Prelude.Bool.False.11682 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.11683 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11682, align 1
  %src.11684 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.11683, 0
  %dst.11685 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11684, 0
  br label %block.exit.11748

block.Cidr_Prelude.Bool.True.11686:               ; preds = %"idr_Main.{main_4}.entry"
  %ptr_Cidr_Prelude.Bool.True.11687 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.11688 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11687, align 1
  %src.11689 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.11688, 0
  %dst.11690 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11689, 0
  br label %block.exit.11748

"block.Cidr_Prelude.List.::.11691":               ; preds = %"idr_Main.{main_4}.entry"
  %"ptr_Cidr_Prelude.List.::.11692" = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.11693" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11692", align 1
  %src.11694 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.11693", 0
  %dst.11695 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11694, 0
  %src.11696 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.11693", 1, 1
  %dst.11697 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11695, i64* %src.11696, 4, 1
  %src.11698 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.11693", 1, 0
  %dst.11699 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11697, i64* %src.11698, 4, 0
  br label %block.exit.11748

block.Cidr_Prelude.List.Nil.11700:                ; preds = %"idr_Main.{main_4}.entry"
  %ptr_Cidr_Prelude.List.Nil.11701 = bitcast i64* %"idr_Main.{main_4}0" to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.11702 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11701, align 1
  %src.11703 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.11702, 0
  %dst.11704 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11703, 0
  br label %block.exit.11748

"block.Cidr_{U_Main.{adder_0}_1}.11705":          ; preds = %"idr_Main.{main_4}.entry"
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11706" = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.11707" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11706", align 1
  %src.11708 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11707", 0
  %dst.11709 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11708, 0
  %src.11710 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11707", 1, 2
  %dst.11711 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11709, i64* %src.11710, 4, 2
  %src.11712 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11707", 1, 1
  %dst.11713 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11711, i64* %src.11712, 4, 1
  %src.11714 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.11707", 1, 0
  %dst.11715 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11713, i64* %src.11714, 4, 0
  br label %block.exit.11748

"block.Cidr_{U_Main.{main_9}_1}.11716":           ; preds = %"idr_Main.{main_4}.entry"
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11717" = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.11718" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11717", align 1
  %src.11719 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.11718", 0
  %dst.11720 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11719, 0
  %src.11721 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.11718", 1, 0
  %dst.11722 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11720, i64* %src.11721, 4, 0
  br label %block.exit.11748

"block.Cidr_{U_Main.{printFmt_14}_1}.11723":      ; preds = %"idr_Main.{main_4}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11724" = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11725" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11724", align 1
  %src.11726 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11725", 0
  %dst.11727 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11726, 0
  %src.11728 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11725", 1, 1
  %dst.11729 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11727, i64* %src.11728, 4, 1
  %src.11730 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.11725", 1, 0
  %dst.11731 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11729, i64* %src.11730, 4, 0
  br label %block.exit.11748

"block.Cidr_{U_Main.{printFmt_15}_1}.11732":      ; preds = %"idr_Main.{main_4}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11733" = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11734" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11733", align 1
  %src.11735 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11734", 0
  %dst.11736 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11735, 0
  %src.11737 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11734", 1, 1
  %dst.11738 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11736, i64* %src.11737, 4, 1
  %src.11739 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.11734", 1, 0
  %dst.11740 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11738, i64* %src.11739, 4, 0
  br label %block.exit.11748

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11741": ; preds = %"idr_Main.{main_4}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11742" = bitcast i64* %"idr_Main.{main_4}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11743" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11742", align 1
  %src.11744 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11743", 0
  %dst.11745 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.11744, 0
  %src.11746 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11743", 1, 0
  %dst.11747 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.11745, i64* %src.11746, 4, 0
  br label %block.exit.11748

block.exit.11748:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11741", %"block.Cidr_{U_Main.{printFmt_15}_1}.11732", %"block.Cidr_{U_Main.{printFmt_14}_1}.11723", %"block.Cidr_{U_Main.{main_9}_1}.11716", %"block.Cidr_{U_Main.{adder_0}_1}.11705", %block.Cidr_Prelude.List.Nil.11700, %"block.Cidr_Prelude.List.::.11691", %block.Cidr_Prelude.Bool.True.11686, %block.Cidr_Prelude.Bool.False.11681, %"block.Cidr_Data.Vect.::.11672", %block.Cidr_Builtins.MkPair.11663, %block.CGrString.11656, %block.CGrInt.11649, %block.CGrFloat.11642, %block.CErased.11637
  %"idr_Main.{main_4}0_val.11749" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.11641, %block.CErased.11637 ], [ %dst.11648, %block.CGrFloat.11642 ], [ %dst.11655, %block.CGrInt.11649 ], [ %dst.11662, %block.CGrString.11656 ], [ %dst.11671, %block.Cidr_Builtins.MkPair.11663 ], [ %dst.11680, %"block.Cidr_Data.Vect.::.11672" ], [ %dst.11685, %block.Cidr_Prelude.Bool.False.11681 ], [ %dst.11690, %block.Cidr_Prelude.Bool.True.11686 ], [ %dst.11699, %"block.Cidr_Prelude.List.::.11691" ], [ %dst.11704, %block.Cidr_Prelude.List.Nil.11700 ], [ %dst.11715, %"block.Cidr_{U_Main.{adder_0}_1}.11705" ], [ %dst.11722, %"block.Cidr_{U_Main.{main_9}_1}.11716" ], [ %dst.11731, %"block.Cidr_{U_Main.{printFmt_14}_1}.11723" ], [ %dst.11740, %"block.Cidr_{U_Main.{printFmt_15}_1}.11732" ], [ %dst.11747, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11741" ]
  %tag.11750 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}0_val.11749", 0
  switch i64 %tag.11750, label %error_block [
    i64 4, label %block.Cidr_Builtins.MkPair.11751
  ]

block.Cidr_Builtins.MkPair.11751:                 ; preds = %block.exit.11748
  %"idr_Main.{main_4}1" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}0_val.11749", 4, 0
  %"idr_Main.{main_4}2" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}0_val.11749", 4, 1
  %node_CGrString.11752 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.8, 1, 0
  %alloc_bytes.11753 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11754 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11753 to i64
  %new_node_ptr.11755 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11754 monotonic
  %new_node_ptr.11756 = inttoptr i64 %new_node_ptr.11755 to i64*
  %tag.11757 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11752, 0
  %ptr_CGrString.11758 = bitcast i64* %new_node_ptr.11756 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11752, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11758, align 1
  %alloc_bytes.11759 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11760 = ptrtoint <{ i64 }>* %alloc_bytes.11759 to i64
  %new_node_ptr.11761 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11760 monotonic
  %new_node_ptr.11762 = inttoptr i64 %new_node_ptr.11761 to i64*
  %tag.11763 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.11764 = bitcast i64* %new_node_ptr.11762 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.11764, align 1
  %alloc_bytes.11765 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11766 = ptrtoint <{ i64 }>* %alloc_bytes.11765 to i64
  %new_node_ptr.11767 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11766 monotonic
  %new_node_ptr.11768 = inttoptr i64 %new_node_ptr.11767 to i64*
  %tag.11769 = extractvalue <{ i64 }> <{ i64 57 }>, 0
  %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11770" = bitcast i64* %new_node_ptr.11768 to <{ i64 }>*
  store <{ i64 }> <{ i64 57 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11770", align 1
  %alloc_bytes.11771 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11772 = ptrtoint <{ i64 }>* %alloc_bytes.11771 to i64
  %new_node_ptr.11773 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11772 monotonic
  %new_node_ptr.11774 = inttoptr i64 %new_node_ptr.11773 to i64*
  %tag.11775 = extractvalue <{ i64 }> <{ i64 35 }>, 0
  %ptr_Cidr_Prelude.Show.Open.11776 = bitcast i64* %new_node_ptr.11774 to <{ i64 }>*
  store <{ i64 }> <{ i64 35 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.11776, align 1
  %"idr_Main.{main_4}4_val_1480.11777" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %new_node_ptr.11762, i64* %new_node_ptr.11768, i64* %new_node_ptr.11774, i64* %"idr_Main.{main_4}1")
  %alloc_bytes.11778 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.11779 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.11778 to i64
  %new_node_ptr.11780 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11779 monotonic
  %new_node_ptr.11781 = inttoptr i64 %new_node_ptr.11780 to i64*
  %tag.11782 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  switch i64 %tag.11782, label %error_block [
    i64 0, label %block.CErased.11783
    i64 1, label %block.CGrFloat.11787
    i64 2, label %block.CGrInt.11793
    i64 3, label %block.CGrString.11799
    i64 4, label %block.Cidr_Builtins.MkPair.11805
    i64 5, label %"block.Cidr_Data.Vect.::.11813"
    i64 6, label %block.Cidr_Prelude.Bool.False.11821
    i64 7, label %block.Cidr_Prelude.Bool.True.11825
    i64 8, label %"block.Cidr_Prelude.List.::.11829"
    i64 9, label %block.Cidr_Prelude.List.Nil.11837
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11841"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11851"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11857"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11865"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11873"
  ]

block.CErased.11783:                              ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11784 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11785 = insertvalue <{ i64 }> undef, i64 %src.11784, 0
  %ptr_CErased.11786 = bitcast i64* %new_node_ptr.11781 to <{ i64 }>*
  store <{ i64 }> %dst.11785, <{ i64 }>* %ptr_CErased.11786, align 1
  br label %block.exit.11879

block.CGrFloat.11787:                             ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11788 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11789 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.11788, 0
  %src.11790 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 1, 0
  %dst.11791 = insertvalue <{ i64, [1 x float] }> %dst.11789, float %src.11790, 1, 0
  %ptr_CGrFloat.11792 = bitcast i64* %new_node_ptr.11781 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.11791, <{ i64, [1 x float] }>* %ptr_CGrFloat.11792, align 1
  br label %block.exit.11879

block.CGrInt.11793:                               ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11794 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11795 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.11794, 0
  %src.11796 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 2, 0
  %dst.11797 = insertvalue <{ i64, [1 x i64] }> %dst.11795, i64 %src.11796, 1, 0
  %ptr_CGrInt.11798 = bitcast i64* %new_node_ptr.11781 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.11797, <{ i64, [1 x i64] }>* %ptr_CGrInt.11798, align 1
  br label %block.exit.11879

block.CGrString.11799:                            ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11800 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11801 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.11800, 0
  %src.11802 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 3, 0
  %dst.11803 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.11801, { i8*, i64 }* %src.11802, 1, 0
  %ptr_CGrString.11804 = bitcast i64* %new_node_ptr.11781 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.11803, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11804, align 1
  br label %block.exit.11879

block.Cidr_Builtins.MkPair.11805:                 ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11806 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11807 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11806, 0
  %src.11808 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 1
  %dst.11809 = insertvalue <{ i64, [2 x i64*] }> %dst.11807, i64* %src.11808, 1, 1
  %src.11810 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11811 = insertvalue <{ i64, [2 x i64*] }> %dst.11809, i64* %src.11810, 1, 0
  %ptr_Cidr_Builtins.MkPair.11812 = bitcast i64* %new_node_ptr.11781 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11811, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11812, align 1
  br label %block.exit.11879

"block.Cidr_Data.Vect.::.11813":                  ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11814 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11815 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11814, 0
  %src.11816 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 1
  %dst.11817 = insertvalue <{ i64, [2 x i64*] }> %dst.11815, i64* %src.11816, 1, 1
  %src.11818 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11819 = insertvalue <{ i64, [2 x i64*] }> %dst.11817, i64* %src.11818, 1, 0
  %"ptr_Cidr_Data.Vect.::.11820" = bitcast i64* %new_node_ptr.11781 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11819, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11820", align 1
  br label %block.exit.11879

block.Cidr_Prelude.Bool.False.11821:              ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11822 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11823 = insertvalue <{ i64 }> undef, i64 %src.11822, 0
  %ptr_Cidr_Prelude.Bool.False.11824 = bitcast i64* %new_node_ptr.11781 to <{ i64 }>*
  store <{ i64 }> %dst.11823, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11824, align 1
  br label %block.exit.11879

block.Cidr_Prelude.Bool.True.11825:               ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11826 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11827 = insertvalue <{ i64 }> undef, i64 %src.11826, 0
  %ptr_Cidr_Prelude.Bool.True.11828 = bitcast i64* %new_node_ptr.11781 to <{ i64 }>*
  store <{ i64 }> %dst.11827, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11828, align 1
  br label %block.exit.11879

"block.Cidr_Prelude.List.::.11829":               ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11830 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11831 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11830, 0
  %src.11832 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 1
  %dst.11833 = insertvalue <{ i64, [2 x i64*] }> %dst.11831, i64* %src.11832, 1, 1
  %src.11834 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11835 = insertvalue <{ i64, [2 x i64*] }> %dst.11833, i64* %src.11834, 1, 0
  %"ptr_Cidr_Prelude.List.::.11836" = bitcast i64* %new_node_ptr.11781 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11835, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11836", align 1
  br label %block.exit.11879

block.Cidr_Prelude.List.Nil.11837:                ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11838 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11839 = insertvalue <{ i64 }> undef, i64 %src.11838, 0
  %ptr_Cidr_Prelude.List.Nil.11840 = bitcast i64* %new_node_ptr.11781 to <{ i64 }>*
  store <{ i64 }> %dst.11839, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11840, align 1
  br label %block.exit.11879

"block.Cidr_{U_Main.{adder_0}_1}.11841":          ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11842 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11843 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.11842, 0
  %src.11844 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 2
  %dst.11845 = insertvalue <{ i64, [3 x i64*] }> %dst.11843, i64* %src.11844, 1, 2
  %src.11846 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 1
  %dst.11847 = insertvalue <{ i64, [3 x i64*] }> %dst.11845, i64* %src.11846, 1, 1
  %src.11848 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11849 = insertvalue <{ i64, [3 x i64*] }> %dst.11847, i64* %src.11848, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11850" = bitcast i64* %new_node_ptr.11781 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.11849, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11850", align 1
  br label %block.exit.11879

"block.Cidr_{U_Main.{main_9}_1}.11851":           ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11852 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11853 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11852, 0
  %src.11854 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11855 = insertvalue <{ i64, [1 x i64*] }> %dst.11853, i64* %src.11854, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11856" = bitcast i64* %new_node_ptr.11781 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11855, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11856", align 1
  br label %block.exit.11879

"block.Cidr_{U_Main.{printFmt_14}_1}.11857":      ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11858 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11859 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11858, 0
  %src.11860 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 1
  %dst.11861 = insertvalue <{ i64, [2 x i64*] }> %dst.11859, i64* %src.11860, 1, 1
  %src.11862 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11863 = insertvalue <{ i64, [2 x i64*] }> %dst.11861, i64* %src.11862, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11864" = bitcast i64* %new_node_ptr.11781 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11863, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11864", align 1
  br label %block.exit.11879

"block.Cidr_{U_Main.{printFmt_15}_1}.11865":      ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11866 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11867 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11866, 0
  %src.11868 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 1
  %dst.11869 = insertvalue <{ i64, [2 x i64*] }> %dst.11867, i64* %src.11868, 1, 1
  %src.11870 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11871 = insertvalue <{ i64, [2 x i64*] }> %dst.11869, i64* %src.11870, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11872" = bitcast i64* %new_node_ptr.11781 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11871, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.11872", align 1
  br label %block.exit.11879

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11873": ; preds = %block.Cidr_Builtins.MkPair.11751
  %src.11874 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 0
  %dst.11875 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11874, 0
  %src.11876 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}4_val_1480.11777", 4, 0
  %dst.11877 = insertvalue <{ i64, [1 x i64*] }> %dst.11875, i64* %src.11876, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11878" = bitcast i64* %new_node_ptr.11781 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11877, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.11878", align 1
  br label %block.exit.11879

block.exit.11879:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.11873", %"block.Cidr_{U_Main.{printFmt_15}_1}.11865", %"block.Cidr_{U_Main.{printFmt_14}_1}.11857", %"block.Cidr_{U_Main.{main_9}_1}.11851", %"block.Cidr_{U_Main.{adder_0}_1}.11841", %block.Cidr_Prelude.List.Nil.11837, %"block.Cidr_Prelude.List.::.11829", %block.Cidr_Prelude.Bool.True.11825, %block.Cidr_Prelude.Bool.False.11821, %"block.Cidr_Data.Vect.::.11813", %block.Cidr_Builtins.MkPair.11805, %block.CGrString.11799, %block.CGrInt.11793, %block.CGrFloat.11787, %block.CErased.11783
  %node_CGrString.11880 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.14, 1, 0
  %alloc_bytes.11881 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.11882 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.11881 to i64
  %new_node_ptr.11883 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11882 monotonic
  %new_node_ptr.11884 = inttoptr i64 %new_node_ptr.11883 to i64*
  %tag.11885 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11880, 0
  %ptr_CGrString.11886 = bitcast i64* %new_node_ptr.11884 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.11880, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11886, align 1
  %alloc_bytes.11887 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11888 = ptrtoint <{ i64 }>* %alloc_bytes.11887 to i64
  %new_node_ptr.11889 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11888 monotonic
  %new_node_ptr.11890 = inttoptr i64 %new_node_ptr.11889 to i64*
  %tag.11891 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.11892 = bitcast i64* %new_node_ptr.11890 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.11892, align 1
  %alloc_bytes.11893 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11894 = ptrtoint <{ i64 }>* %alloc_bytes.11893 to i64
  %new_node_ptr.11895 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11894 monotonic
  %new_node_ptr.11896 = inttoptr i64 %new_node_ptr.11895 to i64*
  %tag.11897 = extractvalue <{ i64 }> <{ i64 57 }>, 0
  %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11898" = bitcast i64* %new_node_ptr.11896 to <{ i64 }>*
  store <{ i64 }> <{ i64 57 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__floatToStr_1}\22.11898", align 1
  %alloc_bytes.11899 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.11900 = ptrtoint <{ i64 }>* %alloc_bytes.11899 to i64
  %new_node_ptr.11901 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11900 monotonic
  %new_node_ptr.11902 = inttoptr i64 %new_node_ptr.11901 to i64*
  %tag.11903 = extractvalue <{ i64 }> <{ i64 35 }>, 0
  %ptr_Cidr_Prelude.Show.Open.11904 = bitcast i64* %new_node_ptr.11902 to <{ i64 }>*
  store <{ i64 }> <{ i64 35 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.11904, align 1
  %"idr_Main.{main_4}6_val_1487.11905" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %new_node_ptr.11890, i64* %new_node_ptr.11896, i64* %new_node_ptr.11902, i64* %"idr_Main.{main_4}2")
  %alloc_bytes.11906 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.11907 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.11906 to i64
  %new_node_ptr.11908 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.11907 monotonic
  %new_node_ptr.11909 = inttoptr i64 %new_node_ptr.11908 to i64*
  %tag.11910 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  switch i64 %tag.11910, label %error_block [
    i64 0, label %block.CErased.11911
    i64 1, label %block.CGrFloat.11915
    i64 2, label %block.CGrInt.11921
    i64 3, label %block.CGrString.11927
    i64 4, label %block.Cidr_Builtins.MkPair.11933
    i64 5, label %"block.Cidr_Data.Vect.::.11941"
    i64 6, label %block.Cidr_Prelude.Bool.False.11949
    i64 7, label %block.Cidr_Prelude.Bool.True.11953
    i64 8, label %"block.Cidr_Prelude.List.::.11957"
    i64 9, label %block.Cidr_Prelude.List.Nil.11965
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.11969"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.11979"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.11985"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.11993"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12001"
  ]

block.CErased.11911:                              ; preds = %block.exit.11879
  %src.11912 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11913 = insertvalue <{ i64 }> undef, i64 %src.11912, 0
  %ptr_CErased.11914 = bitcast i64* %new_node_ptr.11909 to <{ i64 }>*
  store <{ i64 }> %dst.11913, <{ i64 }>* %ptr_CErased.11914, align 1
  br label %block.exit.12007

block.CGrFloat.11915:                             ; preds = %block.exit.11879
  %src.11916 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11917 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.11916, 0
  %src.11918 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 1, 0
  %dst.11919 = insertvalue <{ i64, [1 x float] }> %dst.11917, float %src.11918, 1, 0
  %ptr_CGrFloat.11920 = bitcast i64* %new_node_ptr.11909 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.11919, <{ i64, [1 x float] }>* %ptr_CGrFloat.11920, align 1
  br label %block.exit.12007

block.CGrInt.11921:                               ; preds = %block.exit.11879
  %src.11922 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11923 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.11922, 0
  %src.11924 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 2, 0
  %dst.11925 = insertvalue <{ i64, [1 x i64] }> %dst.11923, i64 %src.11924, 1, 0
  %ptr_CGrInt.11926 = bitcast i64* %new_node_ptr.11909 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.11925, <{ i64, [1 x i64] }>* %ptr_CGrInt.11926, align 1
  br label %block.exit.12007

block.CGrString.11927:                            ; preds = %block.exit.11879
  %src.11928 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11929 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.11928, 0
  %src.11930 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 3, 0
  %dst.11931 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.11929, { i8*, i64 }* %src.11930, 1, 0
  %ptr_CGrString.11932 = bitcast i64* %new_node_ptr.11909 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.11931, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.11932, align 1
  br label %block.exit.12007

block.Cidr_Builtins.MkPair.11933:                 ; preds = %block.exit.11879
  %src.11934 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11935 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11934, 0
  %src.11936 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 1
  %dst.11937 = insertvalue <{ i64, [2 x i64*] }> %dst.11935, i64* %src.11936, 1, 1
  %src.11938 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.11939 = insertvalue <{ i64, [2 x i64*] }> %dst.11937, i64* %src.11938, 1, 0
  %ptr_Cidr_Builtins.MkPair.11940 = bitcast i64* %new_node_ptr.11909 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11939, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.11940, align 1
  br label %block.exit.12007

"block.Cidr_Data.Vect.::.11941":                  ; preds = %block.exit.11879
  %src.11942 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11943 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11942, 0
  %src.11944 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 1
  %dst.11945 = insertvalue <{ i64, [2 x i64*] }> %dst.11943, i64* %src.11944, 1, 1
  %src.11946 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.11947 = insertvalue <{ i64, [2 x i64*] }> %dst.11945, i64* %src.11946, 1, 0
  %"ptr_Cidr_Data.Vect.::.11948" = bitcast i64* %new_node_ptr.11909 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11947, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.11948", align 1
  br label %block.exit.12007

block.Cidr_Prelude.Bool.False.11949:              ; preds = %block.exit.11879
  %src.11950 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11951 = insertvalue <{ i64 }> undef, i64 %src.11950, 0
  %ptr_Cidr_Prelude.Bool.False.11952 = bitcast i64* %new_node_ptr.11909 to <{ i64 }>*
  store <{ i64 }> %dst.11951, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.11952, align 1
  br label %block.exit.12007

block.Cidr_Prelude.Bool.True.11953:               ; preds = %block.exit.11879
  %src.11954 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11955 = insertvalue <{ i64 }> undef, i64 %src.11954, 0
  %ptr_Cidr_Prelude.Bool.True.11956 = bitcast i64* %new_node_ptr.11909 to <{ i64 }>*
  store <{ i64 }> %dst.11955, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.11956, align 1
  br label %block.exit.12007

"block.Cidr_Prelude.List.::.11957":               ; preds = %block.exit.11879
  %src.11958 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11959 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11958, 0
  %src.11960 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 1
  %dst.11961 = insertvalue <{ i64, [2 x i64*] }> %dst.11959, i64* %src.11960, 1, 1
  %src.11962 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.11963 = insertvalue <{ i64, [2 x i64*] }> %dst.11961, i64* %src.11962, 1, 0
  %"ptr_Cidr_Prelude.List.::.11964" = bitcast i64* %new_node_ptr.11909 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11963, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.11964", align 1
  br label %block.exit.12007

block.Cidr_Prelude.List.Nil.11965:                ; preds = %block.exit.11879
  %src.11966 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11967 = insertvalue <{ i64 }> undef, i64 %src.11966, 0
  %ptr_Cidr_Prelude.List.Nil.11968 = bitcast i64* %new_node_ptr.11909 to <{ i64 }>*
  store <{ i64 }> %dst.11967, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.11968, align 1
  br label %block.exit.12007

"block.Cidr_{U_Main.{adder_0}_1}.11969":          ; preds = %block.exit.11879
  %src.11970 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11971 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.11970, 0
  %src.11972 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 2
  %dst.11973 = insertvalue <{ i64, [3 x i64*] }> %dst.11971, i64* %src.11972, 1, 2
  %src.11974 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 1
  %dst.11975 = insertvalue <{ i64, [3 x i64*] }> %dst.11973, i64* %src.11974, 1, 1
  %src.11976 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.11977 = insertvalue <{ i64, [3 x i64*] }> %dst.11975, i64* %src.11976, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11978" = bitcast i64* %new_node_ptr.11909 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.11977, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.11978", align 1
  br label %block.exit.12007

"block.Cidr_{U_Main.{main_9}_1}.11979":           ; preds = %block.exit.11879
  %src.11980 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11981 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.11980, 0
  %src.11982 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.11983 = insertvalue <{ i64, [1 x i64*] }> %dst.11981, i64* %src.11982, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11984" = bitcast i64* %new_node_ptr.11909 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.11983, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.11984", align 1
  br label %block.exit.12007

"block.Cidr_{U_Main.{printFmt_14}_1}.11985":      ; preds = %block.exit.11879
  %src.11986 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11987 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11986, 0
  %src.11988 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 1
  %dst.11989 = insertvalue <{ i64, [2 x i64*] }> %dst.11987, i64* %src.11988, 1, 1
  %src.11990 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.11991 = insertvalue <{ i64, [2 x i64*] }> %dst.11989, i64* %src.11990, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11992" = bitcast i64* %new_node_ptr.11909 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11991, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.11992", align 1
  br label %block.exit.12007

"block.Cidr_{U_Main.{printFmt_15}_1}.11993":      ; preds = %block.exit.11879
  %src.11994 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.11995 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.11994, 0
  %src.11996 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 1
  %dst.11997 = insertvalue <{ i64, [2 x i64*] }> %dst.11995, i64* %src.11996, 1, 1
  %src.11998 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.11999 = insertvalue <{ i64, [2 x i64*] }> %dst.11997, i64* %src.11998, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12000" = bitcast i64* %new_node_ptr.11909 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.11999, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12000", align 1
  br label %block.exit.12007

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12001": ; preds = %block.exit.11879
  %src.12002 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 0
  %dst.12003 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.12002, 0
  %src.12004 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_4}6_val_1487.11905", 4, 0
  %dst.12005 = insertvalue <{ i64, [1 x i64*] }> %dst.12003, i64* %src.12004, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12006" = bitcast i64* %new_node_ptr.11909 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.12005, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12006", align 1
  br label %block.exit.12007

block.exit.12007:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12001", %"block.Cidr_{U_Main.{printFmt_15}_1}.11993", %"block.Cidr_{U_Main.{printFmt_14}_1}.11985", %"block.Cidr_{U_Main.{main_9}_1}.11979", %"block.Cidr_{U_Main.{adder_0}_1}.11969", %block.Cidr_Prelude.List.Nil.11965, %"block.Cidr_Prelude.List.::.11957", %block.Cidr_Prelude.Bool.True.11953, %block.Cidr_Prelude.Bool.False.11949, %"block.Cidr_Data.Vect.::.11941", %block.Cidr_Builtins.MkPair.11933, %block.CGrString.11927, %block.CGrInt.11921, %block.CGrFloat.11915, %block.CErased.11911
  %node_CGrString.12008 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.9, 1, 0
  %alloc_bytes.12009 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12010 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12009 to i64
  %new_node_ptr.12011 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12010 monotonic
  %new_node_ptr.12012 = inttoptr i64 %new_node_ptr.12011 to i64*
  %tag.12013 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12008, 0
  %ptr_CGrString.12014 = bitcast i64* %new_node_ptr.12012 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12008, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12014, align 1
  %"idr_Main.{main_4}6_val_1486.12015" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11909, i64* %new_node_ptr.12012)
  %alloc_bytes.12016 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12017 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12016 to i64
  %new_node_ptr.12018 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12017 monotonic
  %new_node_ptr.12019 = inttoptr i64 %new_node_ptr.12018 to i64*
  %tag.12020 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_4}6_val_1486.12015", 0
  %ptr_CGrString.12021 = bitcast i64* %new_node_ptr.12019 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_4}6_val_1486.12015", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12021, align 1
  %"idr_Main.{main_4}5_val_1483.12022" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11884, i64* %new_node_ptr.12019)
  %alloc_bytes.12023 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12024 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12023 to i64
  %new_node_ptr.12025 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12024 monotonic
  %new_node_ptr.12026 = inttoptr i64 %new_node_ptr.12025 to i64*
  %tag.12027 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_4}5_val_1483.12022", 0
  %ptr_CGrString.12028 = bitcast i64* %new_node_ptr.12026 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_4}5_val_1483.12022", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12028, align 1
  %"idr_Main.{main_4}4_val.12029" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11781, i64* %new_node_ptr.12026)
  %alloc_bytes.12030 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12031 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12030 to i64
  %new_node_ptr.12032 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12031 monotonic
  %new_node_ptr.12033 = inttoptr i64 %new_node_ptr.12032 to i64*
  %tag.12034 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_4}4_val.12029", 0
  %ptr_CGrString.12035 = bitcast i64* %new_node_ptr.12033 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_4}4_val.12029", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12035, align 1
  %result.Cidr_Builtins.MkPair.12036 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.11756, i64* %new_node_ptr.12033)
  br label %block.exit.12037

block.exit.12037:                                 ; preds = %block.exit.12007
  %"result.idr_Main.{main_4}.12038" = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Builtins.MkPair.12036, %block.exit.12007 ]
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Main.{main_4}.12038"

error_block:                                      ; preds = %block.exit.11879, %block.Cidr_Builtins.MkPair.11751, %block.exit.11748, %"idr_Main.{main_4}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_5}"(i64* %"idr_Main.{main_5}0") #0 {
"idr_Main.{main_5}.entry":
  %alloc_bytes.12039 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12040 = ptrtoint <{ i64 }>* %alloc_bytes.12039 to i64
  %new_node_ptr.12041 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12040 monotonic
  %new_node_ptr.12042 = inttoptr i64 %new_node_ptr.12041 to i64*
  %tag.12043 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.12044 = bitcast i64* %new_node_ptr.12042 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.12044, align 1
  %alloc_bytes.12045 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12046 = ptrtoint <{ i64 }>* %alloc_bytes.12045 to i64
  %new_node_ptr.12047 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12046 monotonic
  %new_node_ptr.12048 = inttoptr i64 %new_node_ptr.12047 to i64*
  %tag.12049 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.12050 = bitcast i64* %new_node_ptr.12048 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.12050, align 1
  %alloc_bytes.12051 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12052 = ptrtoint <{ i64 }>* %alloc_bytes.12051 to i64
  %new_node_ptr.12053 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12052 monotonic
  %new_node_ptr.12054 = inttoptr i64 %new_node_ptr.12053 to i64*
  %tag.12055 = extractvalue <{ i64 }> <{ i64 53 }>, 0
  %"ptr_C\22idr_{U_Main.{main_4}_1}\22.12056" = bitcast i64* %new_node_ptr.12054 to <{ i64 }>*
  store <{ i64 }> <{ i64 53 }>, <{ i64 }>* %"ptr_C\22idr_{U_Main.{main_4}_1}\22.12056", align 1
  %"result.idr_Main.{main_5}.12057" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0"(i64* %new_node_ptr.12042, i64* %new_node_ptr.12048, i64* %new_node_ptr.12054, i64* %"idr_Main.{main_5}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Main.{main_5}.12057"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Main.{main_6}"(i64* %"idr_Main.{main_6}0") #0 {
"idr_Main.{main_6}.entry":
  %node_CGrInt.12058 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 34, 1, 0
  %alloc_bytes.12059 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12060 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12059 to i64
  %new_node_ptr.12061 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12060 monotonic
  %new_node_ptr.12062 = inttoptr i64 %new_node_ptr.12061 to i64*
  %tag.12063 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12058, 0
  %ptr_CGrInt.12064 = bitcast i64* %new_node_ptr.12062 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.12058, <{ i64, [1 x i64] }>* %ptr_CGrInt.12064, align 1
  %node_CGrString.12065 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.12066 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12067 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12066 to i64
  %new_node_ptr.12068 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12067 monotonic
  %new_node_ptr.12069 = inttoptr i64 %new_node_ptr.12068 to i64*
  %tag.12070 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12065, 0
  %ptr_CGrString.12071 = bitcast i64* %new_node_ptr.12069 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12065, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12071, align 1
  %"idr_Main.{main_6}2_val_1499.12072" = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %"idr_Main.{main_6}0", i64* %new_node_ptr.12069)
  %alloc_bytes.12073 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12074 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12073 to i64
  %new_node_ptr.12075 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12074 monotonic
  %new_node_ptr.12076 = inttoptr i64 %new_node_ptr.12075 to i64*
  %tag.12077 = extractvalue <{ i64, [1 x i64] }> %"idr_Main.{main_6}2_val_1499.12072", 0
  %ptr_CGrInt.12078 = bitcast i64* %new_node_ptr.12076 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Main.{main_6}2_val_1499.12072", <{ i64, [1 x i64] }>* %ptr_CGrInt.12078, align 1
  %tag.12079 = load i64, i64* %new_node_ptr.12076, align 1
  %ptr_CGrInt.12080 = bitcast i64* %new_node_ptr.12076 to <{ i64, [1 x i64] }>*
  %node_CGrInt.12081 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.12080, align 1
  %tag.12082 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12081, 0
  switch i64 %tag.12082, label %error_block [
    i64 2, label %block.CGrInt.12083
  ]

block.CGrInt.12083:                               ; preds = %"idr_Main.{main_6}.entry"
  %"idr_Main.{main_6}_cpat_LInt64_0" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12081, 1, 0
  switch i64 %"idr_Main.{main_6}_cpat_LInt64_0", label %block.default.12084 [
    i64 0, label %block.int_0.12085
  ]

block.default.12084:                              ; preds = %block.CGrInt.12083
  br label %block.exit.12086

block.int_0.12085:                                ; preds = %block.CGrInt.12083
  br label %block.exit.12086

block.exit.12086:                                 ; preds = %block.int_0.12085, %block.default.12084
  %result.CGrInt.12087 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.12084 ], [ <{ i64 7 }>, %block.int_0.12085 ]
  br label %block.exit.12088

block.exit.12088:                                 ; preds = %block.exit.12086
  %"idr_Main.{main_6}2_val_1498.12089" = phi <{ i64 }> [ %result.CGrInt.12087, %block.exit.12086 ]
  %alloc_bytes.12090 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12091 = ptrtoint <{ i64 }>* %alloc_bytes.12090 to i64
  %new_node_ptr.12092 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12091 monotonic
  %new_node_ptr.12093 = inttoptr i64 %new_node_ptr.12092 to i64*
  %tag.12094 = extractvalue <{ i64 }> %"idr_Main.{main_6}2_val_1498.12089", 0
  switch i64 %tag.12094, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.12095
    i64 7, label %block.Cidr_Prelude.Bool.True.12097
  ]

block.Cidr_Prelude.Bool.False.12095:              ; preds = %block.exit.12088
  %ptr_Cidr_Prelude.Bool.False.12096 = bitcast i64* %new_node_ptr.12093 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}2_val_1498.12089", <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.12096, align 1
  br label %block.exit.12099

block.Cidr_Prelude.Bool.True.12097:               ; preds = %block.exit.12088
  %ptr_Cidr_Prelude.Bool.True.12098 = bitcast i64* %new_node_ptr.12093 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}2_val_1498.12089", <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12098, align 1
  br label %block.exit.12099

block.exit.12099:                                 ; preds = %block.Cidr_Prelude.Bool.True.12097, %block.Cidr_Prelude.Bool.False.12095
  %alloc_bytes.12100 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12101 = ptrtoint <{ i64 }>* %alloc_bytes.12100 to i64
  %new_node_ptr.12102 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12101 monotonic
  %new_node_ptr.12103 = inttoptr i64 %new_node_ptr.12102 to i64*
  %tag.12104 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.12105 = bitcast i64* %new_node_ptr.12103 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12105, align 1
  %"idr_Main.{main_6}2_val_1497.12106" = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.12093, i64* %new_node_ptr.12103)
  %alloc_bytes.12107 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12108 = ptrtoint <{ i64 }>* %alloc_bytes.12107 to i64
  %new_node_ptr.12109 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12108 monotonic
  %new_node_ptr.12110 = inttoptr i64 %new_node_ptr.12109 to i64*
  %tag.12111 = extractvalue <{ i64 }> %"idr_Main.{main_6}2_val_1497.12106", 0
  switch i64 %tag.12111, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.12112
    i64 27, label %block.Cidr_Prelude.Basics.Yes.12114
  ]

block.Cidr_Prelude.Basics.No.12112:               ; preds = %block.exit.12099
  %ptr_Cidr_Prelude.Basics.No.12113 = bitcast i64* %new_node_ptr.12110 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}2_val_1497.12106", <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.12113, align 1
  br label %block.exit.12116

block.Cidr_Prelude.Basics.Yes.12114:              ; preds = %block.exit.12099
  %ptr_Cidr_Prelude.Basics.Yes.12115 = bitcast i64* %new_node_ptr.12110 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}2_val_1497.12106", <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.12115, align 1
  br label %block.exit.12116

block.exit.12116:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.12114, %block.Cidr_Prelude.Basics.No.12112
  %tag.12117 = load i64, i64* %new_node_ptr.12110, align 1
  switch i64 %tag.12117, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.12118
    i64 27, label %block.Cidr_Prelude.Basics.Yes.12121
  ]

block.Cidr_Prelude.Basics.No.12118:               ; preds = %block.exit.12116
  %ptr_Cidr_Prelude.Basics.No.12119 = bitcast i64* %new_node_ptr.12110 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.12120 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.12119, align 1
  br label %block.exit.12124

block.Cidr_Prelude.Basics.Yes.12121:              ; preds = %block.exit.12116
  %ptr_Cidr_Prelude.Basics.Yes.12122 = bitcast i64* %new_node_ptr.12110 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.12123 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.12122, align 1
  br label %block.exit.12124

block.exit.12124:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.12121, %block.Cidr_Prelude.Basics.No.12118
  %"idr_Main.{main_6}2_val_1505.12125" = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.12120, %block.Cidr_Prelude.Basics.No.12118 ], [ %node_Cidr_Prelude.Basics.Yes.12123, %block.Cidr_Prelude.Basics.Yes.12121 ]
  %tag.12126 = extractvalue <{ i64 }> %"idr_Main.{main_6}2_val_1505.12125", 0
  switch i64 %tag.12126, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.12127
    i64 27, label %block.Cidr_Prelude.Basics.Yes.12128
  ]

block.Cidr_Prelude.Basics.No.12127:               ; preds = %block.exit.12124
  %src.12275 = extractvalue <{ i64 }> <{ i64 9 }>, 0
  %dst.12276 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12275, 0
  br label %block.exit.12274

block.Cidr_Prelude.Basics.Yes.12128:              ; preds = %block.exit.12124
  %"idr_Main.{main_6}3_val_1506.12129" = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %"idr_Main.{main_6}0")
  %alloc_bytes.12130 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12131 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12130 to i64
  %new_node_ptr.12132 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12131 monotonic
  %new_node_ptr.12133 = inttoptr i64 %new_node_ptr.12132 to i64*
  %tag.12134 = extractvalue <{ i64, [1 x i64] }> %"idr_Main.{main_6}3_val_1506.12129", 0
  %ptr_CGrInt.12135 = bitcast i64* %new_node_ptr.12133 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Main.{main_6}3_val_1506.12129", <{ i64, [1 x i64] }>* %ptr_CGrInt.12135, align 1
  %alloc_bytes.12136 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12137 = ptrtoint <{ i64 }>* %alloc_bytes.12136 to i64
  %new_node_ptr.12138 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12137 monotonic
  %new_node_ptr.12139 = inttoptr i64 %new_node_ptr.12138 to i64*
  %tag.12140 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.12141 = bitcast i64* %new_node_ptr.12139 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.12141, align 1
  %"idr_Main.{main_6}5_val_1512.12142" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %"idr_Main.{main_6}0")
  %alloc_bytes.12143 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12144 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12143 to i64
  %new_node_ptr.12145 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12144 monotonic
  %new_node_ptr.12146 = inttoptr i64 %new_node_ptr.12145 to i64*
  %tag.12147 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}5_val_1512.12142", 0
  %ptr_CGrString.12148 = bitcast i64* %new_node_ptr.12146 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}5_val_1512.12142", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12148, align 1
  %node_CGrString.12149 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.12150 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12151 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12150 to i64
  %new_node_ptr.12152 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12151 monotonic
  %new_node_ptr.12153 = inttoptr i64 %new_node_ptr.12152 to i64*
  %tag.12154 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12149, 0
  %ptr_CGrString.12155 = bitcast i64* %new_node_ptr.12153 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12149, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12155, align 1
  %"idr_Main.{main_6}5_val_1511.12156" = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %new_node_ptr.12146, i64* %new_node_ptr.12153)
  %alloc_bytes.12157 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12158 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12157 to i64
  %new_node_ptr.12159 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12158 monotonic
  %new_node_ptr.12160 = inttoptr i64 %new_node_ptr.12159 to i64*
  %tag.12161 = extractvalue <{ i64, [1 x i64] }> %"idr_Main.{main_6}5_val_1511.12156", 0
  %ptr_CGrInt.12162 = bitcast i64* %new_node_ptr.12160 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Main.{main_6}5_val_1511.12156", <{ i64, [1 x i64] }>* %ptr_CGrInt.12162, align 1
  %tag.12163 = load i64, i64* %new_node_ptr.12160, align 1
  %ptr_CGrInt.12164 = bitcast i64* %new_node_ptr.12160 to <{ i64, [1 x i64] }>*
  %node_CGrInt.12165 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.12164, align 1
  %tag.12166 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12165, 0
  switch i64 %tag.12166, label %error_block [
    i64 2, label %block.CGrInt.12167
  ]

block.CGrInt.12167:                               ; preds = %block.Cidr_Prelude.Basics.Yes.12128
  %"idr_Main.{main_6}_cpat_LInt64_0_1515" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12165, 1, 0
  switch i64 %"idr_Main.{main_6}_cpat_LInt64_0_1515", label %block.default.12168 [
    i64 0, label %block.int_0.12169
  ]

block.default.12168:                              ; preds = %block.CGrInt.12167
  br label %block.exit.12170

block.int_0.12169:                                ; preds = %block.CGrInt.12167
  br label %block.exit.12170

block.exit.12170:                                 ; preds = %block.int_0.12169, %block.default.12168
  %result.CGrInt.12171 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.12168 ], [ <{ i64 7 }>, %block.int_0.12169 ]
  br label %block.exit.12172

block.exit.12172:                                 ; preds = %block.exit.12170
  %"idr_Main.{main_6}5_val_1510.12173" = phi <{ i64 }> [ %result.CGrInt.12171, %block.exit.12170 ]
  %alloc_bytes.12174 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12175 = ptrtoint <{ i64 }>* %alloc_bytes.12174 to i64
  %new_node_ptr.12176 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12175 monotonic
  %new_node_ptr.12177 = inttoptr i64 %new_node_ptr.12176 to i64*
  %tag.12178 = extractvalue <{ i64 }> %"idr_Main.{main_6}5_val_1510.12173", 0
  switch i64 %tag.12178, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.12179
    i64 7, label %block.Cidr_Prelude.Bool.True.12181
  ]

block.Cidr_Prelude.Bool.False.12179:              ; preds = %block.exit.12172
  %ptr_Cidr_Prelude.Bool.False.12180 = bitcast i64* %new_node_ptr.12177 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}5_val_1510.12173", <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.12180, align 1
  br label %block.exit.12183

block.Cidr_Prelude.Bool.True.12181:               ; preds = %block.exit.12172
  %ptr_Cidr_Prelude.Bool.True.12182 = bitcast i64* %new_node_ptr.12177 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}5_val_1510.12173", <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12182, align 1
  br label %block.exit.12183

block.exit.12183:                                 ; preds = %block.Cidr_Prelude.Bool.True.12181, %block.Cidr_Prelude.Bool.False.12179
  %alloc_bytes.12184 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12185 = ptrtoint <{ i64 }>* %alloc_bytes.12184 to i64
  %new_node_ptr.12186 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12185 monotonic
  %new_node_ptr.12187 = inttoptr i64 %new_node_ptr.12186 to i64*
  %tag.12188 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.12189 = bitcast i64* %new_node_ptr.12187 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12189, align 1
  %"idr_Main.{main_6}5_val_1509.12190" = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.12177, i64* %new_node_ptr.12187)
  %alloc_bytes.12191 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12192 = ptrtoint <{ i64 }>* %alloc_bytes.12191 to i64
  %new_node_ptr.12193 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12192 monotonic
  %new_node_ptr.12194 = inttoptr i64 %new_node_ptr.12193 to i64*
  %tag.12195 = extractvalue <{ i64 }> %"idr_Main.{main_6}5_val_1509.12190", 0
  switch i64 %tag.12195, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.12196
    i64 27, label %block.Cidr_Prelude.Basics.Yes.12198
  ]

block.Cidr_Prelude.Basics.No.12196:               ; preds = %block.exit.12183
  %ptr_Cidr_Prelude.Basics.No.12197 = bitcast i64* %new_node_ptr.12194 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}5_val_1509.12190", <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.12197, align 1
  br label %block.exit.12200

block.Cidr_Prelude.Basics.Yes.12198:              ; preds = %block.exit.12183
  %ptr_Cidr_Prelude.Basics.Yes.12199 = bitcast i64* %new_node_ptr.12194 to <{ i64 }>*
  store <{ i64 }> %"idr_Main.{main_6}5_val_1509.12190", <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.12199, align 1
  br label %block.exit.12200

block.exit.12200:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.12198, %block.Cidr_Prelude.Basics.No.12196
  %tag.12201 = load i64, i64* %new_node_ptr.12194, align 1
  switch i64 %tag.12201, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.12202
    i64 27, label %block.Cidr_Prelude.Basics.Yes.12205
  ]

block.Cidr_Prelude.Basics.No.12202:               ; preds = %block.exit.12200
  %ptr_Cidr_Prelude.Basics.No.12203 = bitcast i64* %new_node_ptr.12194 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.12204 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.12203, align 1
  br label %block.exit.12208

block.Cidr_Prelude.Basics.Yes.12205:              ; preds = %block.exit.12200
  %ptr_Cidr_Prelude.Basics.Yes.12206 = bitcast i64* %new_node_ptr.12194 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.12207 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.12206, align 1
  br label %block.exit.12208

block.exit.12208:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.12205, %block.Cidr_Prelude.Basics.No.12202
  %"idr_Main.{main_6}5_val_1520.12209" = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.12204, %block.Cidr_Prelude.Basics.No.12202 ], [ %node_Cidr_Prelude.Basics.Yes.12207, %block.Cidr_Prelude.Basics.Yes.12205 ]
  %tag.12210 = extractvalue <{ i64 }> %"idr_Main.{main_6}5_val_1520.12209", 0
  switch i64 %tag.12210, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.12211
    i64 27, label %block.Cidr_Prelude.Basics.Yes.12212
  ]

block.Cidr_Prelude.Basics.No.12211:               ; preds = %block.exit.12208
  %src.12244 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.12245 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12244, 0
  br label %block.exit.12243

block.Cidr_Prelude.Basics.Yes.12212:              ; preds = %block.exit.12208
  %"idr_Main.{main_6}6_val_1522.12213" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %"idr_Main.{main_6}0")
  %alloc_bytes.12214 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12215 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12214 to i64
  %new_node_ptr.12216 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12215 monotonic
  %new_node_ptr.12217 = inttoptr i64 %new_node_ptr.12216 to i64*
  %tag.12218 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}6_val_1522.12213", 0
  %ptr_CGrString.12219 = bitcast i64* %new_node_ptr.12217 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}6_val_1522.12213", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12219, align 1
  %"idr_Main.{main_6}6_val_1521.12220" = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %new_node_ptr.12217)
  %alloc_bytes.12221 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12222 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12221 to i64
  %new_node_ptr.12223 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12222 monotonic
  %new_node_ptr.12224 = inttoptr i64 %new_node_ptr.12223 to i64*
  %tag.12225 = extractvalue <{ i64, [1 x i64] }> %"idr_Main.{main_6}6_val_1521.12220", 0
  %ptr_CGrInt.12226 = bitcast i64* %new_node_ptr.12224 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Main.{main_6}6_val_1521.12220", <{ i64, [1 x i64] }>* %ptr_CGrInt.12226, align 1
  %"idr_Main.{main_6}7_val_1525.12227" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %"idr_Main.{main_6}0")
  %alloc_bytes.12228 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12229 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12228 to i64
  %new_node_ptr.12230 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12229 monotonic
  %new_node_ptr.12231 = inttoptr i64 %new_node_ptr.12230 to i64*
  %tag.12232 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}7_val_1525.12227", 0
  %ptr_CGrString.12233 = bitcast i64* %new_node_ptr.12231 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}7_val_1525.12227", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12233, align 1
  %"idr_Main.{main_6}7_val.12234" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %new_node_ptr.12231)
  %alloc_bytes.12235 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12236 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12235 to i64
  %new_node_ptr.12237 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12236 monotonic
  %new_node_ptr.12238 = inttoptr i64 %new_node_ptr.12237 to i64*
  %tag.12239 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}7_val.12234", 0
  %ptr_CGrString.12240 = bitcast i64* %new_node_ptr.12238 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{main_6}7_val.12234", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12240, align 1
  %node_Cidr_Prelude.Strings.StrCons.12241 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.12224, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.12242 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.12241, i64* %new_node_ptr.12238, 1, 1
  br label %block.exit.12243

block.exit.12243:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.12212, %block.Cidr_Prelude.Basics.No.12211
  %"idr_Main.{main_6}5_val.12246" = phi <{ i64, [2 x i64*] }> [ %dst.12245, %block.Cidr_Prelude.Basics.No.12211 ], [ %node_Cidr_Prelude.Strings.StrCons.12242, %block.Cidr_Prelude.Basics.Yes.12212 ]
  %alloc_bytes.12247 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.12248 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.12247 to i64
  %new_node_ptr.12249 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12248 monotonic
  %new_node_ptr.12250 = inttoptr i64 %new_node_ptr.12249 to i64*
  %tag.12251 = extractvalue <{ i64, [2 x i64*] }> %"idr_Main.{main_6}5_val.12246", 0
  switch i64 %tag.12251, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.12252
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.12254
  ]

block.Cidr_Prelude.Strings.StrCons.12252:         ; preds = %block.exit.12243
  %ptr_Cidr_Prelude.Strings.StrCons.12253 = bitcast i64* %new_node_ptr.12250 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"idr_Main.{main_6}5_val.12246", <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.12253, align 1
  br label %block.exit.12258

block.Cidr_Prelude.Strings.StrNil.12254:          ; preds = %block.exit.12243
  %src.12255 = extractvalue <{ i64, [2 x i64*] }> %"idr_Main.{main_6}5_val.12246", 0
  %dst.12256 = insertvalue <{ i64 }> undef, i64 %src.12255, 0
  %ptr_Cidr_Prelude.Strings.StrNil.12257 = bitcast i64* %new_node_ptr.12250 to <{ i64 }>*
  store <{ i64 }> %dst.12256, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.12257, align 1
  br label %block.exit.12258

block.exit.12258:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.12254, %block.Cidr_Prelude.Strings.StrCons.12252
  %"idr_Main.{main_6}4_val.12259" = tail call fastcc <{ i64, [2 x i64*] }> @idr__Prelude.Strings.unpack_with_36(i64* %new_node_ptr.12139, i64* %new_node_ptr.12250)
  %alloc_bytes.12260 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.12261 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.12260 to i64
  %new_node_ptr.12262 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12261 monotonic
  %new_node_ptr.12263 = inttoptr i64 %new_node_ptr.12262 to i64*
  %tag.12264 = extractvalue <{ i64, [2 x i64*] }> %"idr_Main.{main_6}4_val.12259", 0
  switch i64 %tag.12264, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.12265"
    i64 9, label %block.Cidr_Prelude.List.Nil.12267
  ]

"block.Cidr_Prelude.List.::.12265":               ; preds = %block.exit.12258
  %"ptr_Cidr_Prelude.List.::.12266" = bitcast i64* %new_node_ptr.12263 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"idr_Main.{main_6}4_val.12259", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.12266", align 1
  br label %block.exit.12271

block.Cidr_Prelude.List.Nil.12267:                ; preds = %block.exit.12258
  %src.12268 = extractvalue <{ i64, [2 x i64*] }> %"idr_Main.{main_6}4_val.12259", 0
  %dst.12269 = insertvalue <{ i64 }> undef, i64 %src.12268, 0
  %ptr_Cidr_Prelude.List.Nil.12270 = bitcast i64* %new_node_ptr.12263 to <{ i64 }>*
  store <{ i64 }> %dst.12269, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.12270, align 1
  br label %block.exit.12271

block.exit.12271:                                 ; preds = %block.Cidr_Prelude.List.Nil.12267, %"block.Cidr_Prelude.List.::.12265"
  %"node_Cidr_Prelude.List.::.12272" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.12133, 1, 0
  %"node_Cidr_Prelude.List.::.12273" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12272", i64* %new_node_ptr.12263, 1, 1
  br label %block.exit.12274

block.exit.12274:                                 ; preds = %block.exit.12271, %block.Cidr_Prelude.Basics.No.12127
  %"idr_Main.{main_6}2_val_1496.12277" = phi <{ i64, [2 x i64*] }> [ %dst.12276, %block.Cidr_Prelude.Basics.No.12127 ], [ %"node_Cidr_Prelude.List.::.12273", %block.exit.12271 ]
  %alloc_bytes.12278 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.12279 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.12278 to i64
  %new_node_ptr.12280 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12279 monotonic
  %new_node_ptr.12281 = inttoptr i64 %new_node_ptr.12280 to i64*
  %tag.12282 = extractvalue <{ i64, [2 x i64*] }> %"idr_Main.{main_6}2_val_1496.12277", 0
  switch i64 %tag.12282, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.12283"
    i64 9, label %block.Cidr_Prelude.List.Nil.12285
  ]

"block.Cidr_Prelude.List.::.12283":               ; preds = %block.exit.12274
  %"ptr_Cidr_Prelude.List.::.12284" = bitcast i64* %new_node_ptr.12281 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"idr_Main.{main_6}2_val_1496.12277", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.12284", align 1
  br label %block.exit.12289

block.Cidr_Prelude.List.Nil.12285:                ; preds = %block.exit.12274
  %src.12286 = extractvalue <{ i64, [2 x i64*] }> %"idr_Main.{main_6}2_val_1496.12277", 0
  %dst.12287 = insertvalue <{ i64 }> undef, i64 %src.12286, 0
  %ptr_Cidr_Prelude.List.Nil.12288 = bitcast i64* %new_node_ptr.12281 to <{ i64 }>*
  store <{ i64 }> %dst.12287, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.12288, align 1
  br label %block.exit.12289

block.exit.12289:                                 ; preds = %block.Cidr_Prelude.List.Nil.12285, %"block.Cidr_Prelude.List.::.12283"
  %node_CGrString.12290 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.15, 1, 0
  %alloc_bytes.12291 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12292 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12291 to i64
  %new_node_ptr.12293 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12292 monotonic
  %new_node_ptr.12294 = inttoptr i64 %new_node_ptr.12293 to i64*
  %tag.12295 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12290, 0
  %ptr_CGrString.12296 = bitcast i64* %new_node_ptr.12294 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12290, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12296, align 1
  %"idr_Main.{main_6}2_val.12297" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.showLitString(i64* %new_node_ptr.12281, i64* %new_node_ptr.12294)
  %alloc_bytes.12298 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.12299 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.12298 to i64
  %new_node_ptr.12300 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12299 monotonic
  %new_node_ptr.12301 = inttoptr i64 %new_node_ptr.12300 to i64*
  %tag.12302 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  switch i64 %tag.12302, label %error_block [
    i64 0, label %block.CErased.12303
    i64 1, label %block.CGrFloat.12307
    i64 2, label %block.CGrInt.12313
    i64 3, label %block.CGrString.12319
    i64 4, label %block.Cidr_Builtins.MkPair.12325
    i64 5, label %"block.Cidr_Data.Vect.::.12333"
    i64 6, label %block.Cidr_Prelude.Bool.False.12341
    i64 7, label %block.Cidr_Prelude.Bool.True.12345
    i64 8, label %"block.Cidr_Prelude.List.::.12349"
    i64 9, label %block.Cidr_Prelude.List.Nil.12357
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.12361"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.12371"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.12377"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.12385"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12393"
  ]

block.CErased.12303:                              ; preds = %block.exit.12289
  %src.12304 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12305 = insertvalue <{ i64 }> undef, i64 %src.12304, 0
  %ptr_CErased.12306 = bitcast i64* %new_node_ptr.12301 to <{ i64 }>*
  store <{ i64 }> %dst.12305, <{ i64 }>* %ptr_CErased.12306, align 1
  br label %block.exit.12399

block.CGrFloat.12307:                             ; preds = %block.exit.12289
  %src.12308 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12309 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.12308, 0
  %src.12310 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 1, 0
  %dst.12311 = insertvalue <{ i64, [1 x float] }> %dst.12309, float %src.12310, 1, 0
  %ptr_CGrFloat.12312 = bitcast i64* %new_node_ptr.12301 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.12311, <{ i64, [1 x float] }>* %ptr_CGrFloat.12312, align 1
  br label %block.exit.12399

block.CGrInt.12313:                               ; preds = %block.exit.12289
  %src.12314 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12315 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.12314, 0
  %src.12316 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 2, 0
  %dst.12317 = insertvalue <{ i64, [1 x i64] }> %dst.12315, i64 %src.12316, 1, 0
  %ptr_CGrInt.12318 = bitcast i64* %new_node_ptr.12301 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.12317, <{ i64, [1 x i64] }>* %ptr_CGrInt.12318, align 1
  br label %block.exit.12399

block.CGrString.12319:                            ; preds = %block.exit.12289
  %src.12320 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12321 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.12320, 0
  %src.12322 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 3, 0
  %dst.12323 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.12321, { i8*, i64 }* %src.12322, 1, 0
  %ptr_CGrString.12324 = bitcast i64* %new_node_ptr.12301 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.12323, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12324, align 1
  br label %block.exit.12399

block.Cidr_Builtins.MkPair.12325:                 ; preds = %block.exit.12289
  %src.12326 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12327 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12326, 0
  %src.12328 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 1
  %dst.12329 = insertvalue <{ i64, [2 x i64*] }> %dst.12327, i64* %src.12328, 1, 1
  %src.12330 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12331 = insertvalue <{ i64, [2 x i64*] }> %dst.12329, i64* %src.12330, 1, 0
  %ptr_Cidr_Builtins.MkPair.12332 = bitcast i64* %new_node_ptr.12301 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12331, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.12332, align 1
  br label %block.exit.12399

"block.Cidr_Data.Vect.::.12333":                  ; preds = %block.exit.12289
  %src.12334 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12335 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12334, 0
  %src.12336 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 1
  %dst.12337 = insertvalue <{ i64, [2 x i64*] }> %dst.12335, i64* %src.12336, 1, 1
  %src.12338 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12339 = insertvalue <{ i64, [2 x i64*] }> %dst.12337, i64* %src.12338, 1, 0
  %"ptr_Cidr_Data.Vect.::.12340" = bitcast i64* %new_node_ptr.12301 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12339, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.12340", align 1
  br label %block.exit.12399

block.Cidr_Prelude.Bool.False.12341:              ; preds = %block.exit.12289
  %src.12342 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12343 = insertvalue <{ i64 }> undef, i64 %src.12342, 0
  %ptr_Cidr_Prelude.Bool.False.12344 = bitcast i64* %new_node_ptr.12301 to <{ i64 }>*
  store <{ i64 }> %dst.12343, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.12344, align 1
  br label %block.exit.12399

block.Cidr_Prelude.Bool.True.12345:               ; preds = %block.exit.12289
  %src.12346 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12347 = insertvalue <{ i64 }> undef, i64 %src.12346, 0
  %ptr_Cidr_Prelude.Bool.True.12348 = bitcast i64* %new_node_ptr.12301 to <{ i64 }>*
  store <{ i64 }> %dst.12347, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12348, align 1
  br label %block.exit.12399

"block.Cidr_Prelude.List.::.12349":               ; preds = %block.exit.12289
  %src.12350 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12351 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12350, 0
  %src.12352 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 1
  %dst.12353 = insertvalue <{ i64, [2 x i64*] }> %dst.12351, i64* %src.12352, 1, 1
  %src.12354 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12355 = insertvalue <{ i64, [2 x i64*] }> %dst.12353, i64* %src.12354, 1, 0
  %"ptr_Cidr_Prelude.List.::.12356" = bitcast i64* %new_node_ptr.12301 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12355, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.12356", align 1
  br label %block.exit.12399

block.Cidr_Prelude.List.Nil.12357:                ; preds = %block.exit.12289
  %src.12358 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12359 = insertvalue <{ i64 }> undef, i64 %src.12358, 0
  %ptr_Cidr_Prelude.List.Nil.12360 = bitcast i64* %new_node_ptr.12301 to <{ i64 }>*
  store <{ i64 }> %dst.12359, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.12360, align 1
  br label %block.exit.12399

"block.Cidr_{U_Main.{adder_0}_1}.12361":          ; preds = %block.exit.12289
  %src.12362 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12363 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.12362, 0
  %src.12364 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 2
  %dst.12365 = insertvalue <{ i64, [3 x i64*] }> %dst.12363, i64* %src.12364, 1, 2
  %src.12366 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 1
  %dst.12367 = insertvalue <{ i64, [3 x i64*] }> %dst.12365, i64* %src.12366, 1, 1
  %src.12368 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12369 = insertvalue <{ i64, [3 x i64*] }> %dst.12367, i64* %src.12368, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12370" = bitcast i64* %new_node_ptr.12301 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.12369, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12370", align 1
  br label %block.exit.12399

"block.Cidr_{U_Main.{main_9}_1}.12371":           ; preds = %block.exit.12289
  %src.12372 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12373 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.12372, 0
  %src.12374 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12375 = insertvalue <{ i64, [1 x i64*] }> %dst.12373, i64* %src.12374, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12376" = bitcast i64* %new_node_ptr.12301 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.12375, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12376", align 1
  br label %block.exit.12399

"block.Cidr_{U_Main.{printFmt_14}_1}.12377":      ; preds = %block.exit.12289
  %src.12378 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12379 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12378, 0
  %src.12380 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 1
  %dst.12381 = insertvalue <{ i64, [2 x i64*] }> %dst.12379, i64* %src.12380, 1, 1
  %src.12382 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12383 = insertvalue <{ i64, [2 x i64*] }> %dst.12381, i64* %src.12382, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12384" = bitcast i64* %new_node_ptr.12301 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12383, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12384", align 1
  br label %block.exit.12399

"block.Cidr_{U_Main.{printFmt_15}_1}.12385":      ; preds = %block.exit.12289
  %src.12386 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12387 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12386, 0
  %src.12388 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 1
  %dst.12389 = insertvalue <{ i64, [2 x i64*] }> %dst.12387, i64* %src.12388, 1, 1
  %src.12390 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12391 = insertvalue <{ i64, [2 x i64*] }> %dst.12389, i64* %src.12390, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12392" = bitcast i64* %new_node_ptr.12301 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12391, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12392", align 1
  br label %block.exit.12399

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12393": ; preds = %block.exit.12289
  %src.12394 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 0
  %dst.12395 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.12394, 0
  %src.12396 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{main_6}2_val.12297", 4, 0
  %dst.12397 = insertvalue <{ i64, [1 x i64*] }> %dst.12395, i64* %src.12396, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12398" = bitcast i64* %new_node_ptr.12301 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.12397, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12398", align 1
  br label %block.exit.12399

block.exit.12399:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12393", %"block.Cidr_{U_Main.{printFmt_15}_1}.12385", %"block.Cidr_{U_Main.{printFmt_14}_1}.12377", %"block.Cidr_{U_Main.{main_9}_1}.12371", %"block.Cidr_{U_Main.{adder_0}_1}.12361", %block.Cidr_Prelude.List.Nil.12357, %"block.Cidr_Prelude.List.::.12349", %block.Cidr_Prelude.Bool.True.12345, %block.Cidr_Prelude.Bool.False.12341, %"block.Cidr_Data.Vect.::.12333", %block.Cidr_Builtins.MkPair.12325, %block.CGrString.12319, %block.CGrInt.12313, %block.CGrFloat.12307, %block.CErased.12303
  %"result.idr_Main.{main_6}.12400" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %new_node_ptr.12062, i64* %new_node_ptr.12301)
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Main.{main_6}.12400"

error_block:                                      ; preds = %block.exit.12289, %block.exit.12274, %block.exit.12258, %block.exit.12243, %block.exit.12208, %block.exit.12200, %block.exit.12183, %block.exit.12172, %block.Cidr_Prelude.Basics.Yes.12128, %block.exit.12124, %block.exit.12116, %block.exit.12099, %block.exit.12088, %"idr_Main.{main_6}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Main.{main_8}"(i64* %"idr_Main.{main_8}0") #0 {
"idr_Main.{main_8}.entry":
  %alloc_bytes.12401 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12402 = ptrtoint <{ i64 }>* %alloc_bytes.12401 to i64
  %new_node_ptr.12403 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12402 monotonic
  %new_node_ptr.12404 = inttoptr i64 %new_node_ptr.12403 to i64*
  %tag.12405 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.12406 = bitcast i64* %new_node_ptr.12404 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.12406, align 1
  %alloc_bytes.12407 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12408 = ptrtoint <{ i64 }>* %alloc_bytes.12407 to i64
  %new_node_ptr.12409 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12408 monotonic
  %new_node_ptr.12410 = inttoptr i64 %new_node_ptr.12409 to i64*
  %tag.12411 = extractvalue <{ i64 }> <{ i64 58 }>, 0
  %"ptr_C\22idr_{U_prim__toStrInt_1}\22.12412" = bitcast i64* %new_node_ptr.12410 to <{ i64 }>*
  store <{ i64 }> <{ i64 58 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__toStrInt_1}\22.12412", align 1
  %alloc_bytes.12413 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12414 = ptrtoint <{ i64 }>* %alloc_bytes.12413 to i64
  %new_node_ptr.12415 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12414 monotonic
  %new_node_ptr.12416 = inttoptr i64 %new_node_ptr.12415 to i64*
  %tag.12417 = extractvalue <{ i64 }> <{ i64 35 }>, 0
  %ptr_Cidr_Prelude.Show.Open.12418 = bitcast i64* %new_node_ptr.12416 to <{ i64 }>*
  store <{ i64 }> <{ i64 35 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.12418, align 1
  %"result.idr_Main.{main_8}.12419" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %new_node_ptr.12404, i64* %new_node_ptr.12410, i64* %new_node_ptr.12416, i64* %"idr_Main.{main_8}0")
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"result.idr_Main.{main_8}.12419"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64] }> @"idr_Main.{main_9}"(i64* %"idr_Main.{main_9}0", i64* %"idr_Main.{main_9}1") #0 {
"idr_Main.{main_9}.entry":
  %"result.idr_Main.{main_9}.12420" = tail call fastcc <{ i64, [1 x i64] }> @idris_int_add(i64* %"idr_Main.{main_9}0", i64* %"idr_Main.{main_9}1")
  ret <{ i64, [1 x i64] }> %"result.idr_Main.{main_9}.12420"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @"idr_Main.{printFmt_14}"(i64* %"idr_Main.{printFmt_14}0", i64* %"idr_Main.{printFmt_14}1", i64* %"idr_Main.{printFmt_14}2") #0 {
"idr_Main.{printFmt_14}.entry":
  %alloc_bytes.12421 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12422 = ptrtoint <{ i64 }>* %alloc_bytes.12421 to i64
  %new_node_ptr.12423 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12422 monotonic
  %new_node_ptr.12424 = inttoptr i64 %new_node_ptr.12423 to i64*
  %tag.12425 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.12426 = bitcast i64* %new_node_ptr.12424 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.12426, align 1
  %alloc_bytes.12427 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12428 = ptrtoint <{ i64 }>* %alloc_bytes.12427 to i64
  %new_node_ptr.12429 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12428 monotonic
  %new_node_ptr.12430 = inttoptr i64 %new_node_ptr.12429 to i64*
  %tag.12431 = extractvalue <{ i64 }> <{ i64 58 }>, 0
  %"ptr_C\22idr_{U_prim__toStrInt_1}\22.12432" = bitcast i64* %new_node_ptr.12430 to <{ i64 }>*
  store <{ i64 }> <{ i64 58 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__toStrInt_1}\22.12432", align 1
  %alloc_bytes.12433 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12434 = ptrtoint <{ i64 }>* %alloc_bytes.12433 to i64
  %new_node_ptr.12435 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12434 monotonic
  %new_node_ptr.12436 = inttoptr i64 %new_node_ptr.12435 to i64*
  %tag.12437 = extractvalue <{ i64 }> <{ i64 35 }>, 0
  %ptr_Cidr_Prelude.Show.Open.12438 = bitcast i64* %new_node_ptr.12436 to <{ i64 }>*
  store <{ i64 }> <{ i64 35 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.12438, align 1
  %"idr_Main.{printFmt_14}3_val_1533.12439" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %new_node_ptr.12424, i64* %new_node_ptr.12430, i64* %new_node_ptr.12436, i64* %"idr_Main.{printFmt_14}2")
  %alloc_bytes.12440 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.12441 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.12440 to i64
  %new_node_ptr.12442 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12441 monotonic
  %new_node_ptr.12443 = inttoptr i64 %new_node_ptr.12442 to i64*
  %tag.12444 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  switch i64 %tag.12444, label %error_block [
    i64 0, label %block.CErased.12445
    i64 1, label %block.CGrFloat.12449
    i64 2, label %block.CGrInt.12455
    i64 3, label %block.CGrString.12461
    i64 4, label %block.Cidr_Builtins.MkPair.12467
    i64 5, label %"block.Cidr_Data.Vect.::.12475"
    i64 6, label %block.Cidr_Prelude.Bool.False.12483
    i64 7, label %block.Cidr_Prelude.Bool.True.12487
    i64 8, label %"block.Cidr_Prelude.List.::.12491"
    i64 9, label %block.Cidr_Prelude.List.Nil.12499
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.12503"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.12513"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.12519"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.12527"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12535"
  ]

block.CErased.12445:                              ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12446 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12447 = insertvalue <{ i64 }> undef, i64 %src.12446, 0
  %ptr_CErased.12448 = bitcast i64* %new_node_ptr.12443 to <{ i64 }>*
  store <{ i64 }> %dst.12447, <{ i64 }>* %ptr_CErased.12448, align 1
  br label %block.exit.12541

block.CGrFloat.12449:                             ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12450 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12451 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.12450, 0
  %src.12452 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 1, 0
  %dst.12453 = insertvalue <{ i64, [1 x float] }> %dst.12451, float %src.12452, 1, 0
  %ptr_CGrFloat.12454 = bitcast i64* %new_node_ptr.12443 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.12453, <{ i64, [1 x float] }>* %ptr_CGrFloat.12454, align 1
  br label %block.exit.12541

block.CGrInt.12455:                               ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12456 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12457 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.12456, 0
  %src.12458 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 2, 0
  %dst.12459 = insertvalue <{ i64, [1 x i64] }> %dst.12457, i64 %src.12458, 1, 0
  %ptr_CGrInt.12460 = bitcast i64* %new_node_ptr.12443 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.12459, <{ i64, [1 x i64] }>* %ptr_CGrInt.12460, align 1
  br label %block.exit.12541

block.CGrString.12461:                            ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12462 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12463 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.12462, 0
  %src.12464 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 3, 0
  %dst.12465 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.12463, { i8*, i64 }* %src.12464, 1, 0
  %ptr_CGrString.12466 = bitcast i64* %new_node_ptr.12443 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.12465, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12466, align 1
  br label %block.exit.12541

block.Cidr_Builtins.MkPair.12467:                 ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12468 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12469 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12468, 0
  %src.12470 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 1
  %dst.12471 = insertvalue <{ i64, [2 x i64*] }> %dst.12469, i64* %src.12470, 1, 1
  %src.12472 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12473 = insertvalue <{ i64, [2 x i64*] }> %dst.12471, i64* %src.12472, 1, 0
  %ptr_Cidr_Builtins.MkPair.12474 = bitcast i64* %new_node_ptr.12443 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12473, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.12474, align 1
  br label %block.exit.12541

"block.Cidr_Data.Vect.::.12475":                  ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12476 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12477 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12476, 0
  %src.12478 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 1
  %dst.12479 = insertvalue <{ i64, [2 x i64*] }> %dst.12477, i64* %src.12478, 1, 1
  %src.12480 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12481 = insertvalue <{ i64, [2 x i64*] }> %dst.12479, i64* %src.12480, 1, 0
  %"ptr_Cidr_Data.Vect.::.12482" = bitcast i64* %new_node_ptr.12443 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12481, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.12482", align 1
  br label %block.exit.12541

block.Cidr_Prelude.Bool.False.12483:              ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12484 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12485 = insertvalue <{ i64 }> undef, i64 %src.12484, 0
  %ptr_Cidr_Prelude.Bool.False.12486 = bitcast i64* %new_node_ptr.12443 to <{ i64 }>*
  store <{ i64 }> %dst.12485, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.12486, align 1
  br label %block.exit.12541

block.Cidr_Prelude.Bool.True.12487:               ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12488 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12489 = insertvalue <{ i64 }> undef, i64 %src.12488, 0
  %ptr_Cidr_Prelude.Bool.True.12490 = bitcast i64* %new_node_ptr.12443 to <{ i64 }>*
  store <{ i64 }> %dst.12489, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12490, align 1
  br label %block.exit.12541

"block.Cidr_Prelude.List.::.12491":               ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12492 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12493 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12492, 0
  %src.12494 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 1
  %dst.12495 = insertvalue <{ i64, [2 x i64*] }> %dst.12493, i64* %src.12494, 1, 1
  %src.12496 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12497 = insertvalue <{ i64, [2 x i64*] }> %dst.12495, i64* %src.12496, 1, 0
  %"ptr_Cidr_Prelude.List.::.12498" = bitcast i64* %new_node_ptr.12443 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12497, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.12498", align 1
  br label %block.exit.12541

block.Cidr_Prelude.List.Nil.12499:                ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12500 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12501 = insertvalue <{ i64 }> undef, i64 %src.12500, 0
  %ptr_Cidr_Prelude.List.Nil.12502 = bitcast i64* %new_node_ptr.12443 to <{ i64 }>*
  store <{ i64 }> %dst.12501, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.12502, align 1
  br label %block.exit.12541

"block.Cidr_{U_Main.{adder_0}_1}.12503":          ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12504 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12505 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.12504, 0
  %src.12506 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 2
  %dst.12507 = insertvalue <{ i64, [3 x i64*] }> %dst.12505, i64* %src.12506, 1, 2
  %src.12508 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 1
  %dst.12509 = insertvalue <{ i64, [3 x i64*] }> %dst.12507, i64* %src.12508, 1, 1
  %src.12510 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12511 = insertvalue <{ i64, [3 x i64*] }> %dst.12509, i64* %src.12510, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12512" = bitcast i64* %new_node_ptr.12443 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.12511, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12512", align 1
  br label %block.exit.12541

"block.Cidr_{U_Main.{main_9}_1}.12513":           ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12514 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12515 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.12514, 0
  %src.12516 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12517 = insertvalue <{ i64, [1 x i64*] }> %dst.12515, i64* %src.12516, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12518" = bitcast i64* %new_node_ptr.12443 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.12517, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12518", align 1
  br label %block.exit.12541

"block.Cidr_{U_Main.{printFmt_14}_1}.12519":      ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12520 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12521 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12520, 0
  %src.12522 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 1
  %dst.12523 = insertvalue <{ i64, [2 x i64*] }> %dst.12521, i64* %src.12522, 1, 1
  %src.12524 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12525 = insertvalue <{ i64, [2 x i64*] }> %dst.12523, i64* %src.12524, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12526" = bitcast i64* %new_node_ptr.12443 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12525, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12526", align 1
  br label %block.exit.12541

"block.Cidr_{U_Main.{printFmt_15}_1}.12527":      ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12528 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12529 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12528, 0
  %src.12530 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 1
  %dst.12531 = insertvalue <{ i64, [2 x i64*] }> %dst.12529, i64* %src.12530, 1, 1
  %src.12532 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12533 = insertvalue <{ i64, [2 x i64*] }> %dst.12531, i64* %src.12532, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12534" = bitcast i64* %new_node_ptr.12443 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12533, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12534", align 1
  br label %block.exit.12541

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12535": ; preds = %"idr_Main.{printFmt_14}.entry"
  %src.12536 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 0
  %dst.12537 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.12536, 0
  %src.12538 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Main.{printFmt_14}3_val_1533.12439", 4, 0
  %dst.12539 = insertvalue <{ i64, [1 x i64*] }> %dst.12537, i64* %src.12538, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12540" = bitcast i64* %new_node_ptr.12443 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.12539, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12540", align 1
  br label %block.exit.12541

block.exit.12541:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12535", %"block.Cidr_{U_Main.{printFmt_15}_1}.12527", %"block.Cidr_{U_Main.{printFmt_14}_1}.12519", %"block.Cidr_{U_Main.{main_9}_1}.12513", %"block.Cidr_{U_Main.{adder_0}_1}.12503", %block.Cidr_Prelude.List.Nil.12499, %"block.Cidr_Prelude.List.::.12491", %block.Cidr_Prelude.Bool.True.12487, %block.Cidr_Prelude.Bool.False.12483, %"block.Cidr_Data.Vect.::.12475", %block.Cidr_Builtins.MkPair.12467, %block.CGrString.12461, %block.CGrInt.12455, %block.CGrFloat.12449, %block.CErased.12445
  %"idr_Main.{printFmt_14}3_val.12542" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %"idr_Main.{printFmt_14}1", i64* %new_node_ptr.12443)
  %alloc_bytes.12543 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12544 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12543 to i64
  %new_node_ptr.12545 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12544 monotonic
  %new_node_ptr.12546 = inttoptr i64 %new_node_ptr.12545 to i64*
  %tag.12547 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{printFmt_14}3_val.12542", 0
  %ptr_CGrString.12548 = bitcast i64* %new_node_ptr.12546 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{printFmt_14}3_val.12542", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12548, align 1
  %"result.idr_Main.{printFmt_14}.12549" = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @idr_Main.printFmt(i64* %"idr_Main.{printFmt_14}0", i64* %new_node_ptr.12546)
  ret <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.idr_Main.{printFmt_14}.12549"

error_block:                                      ; preds = %"idr_Main.{printFmt_14}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @"idr_Main.{printFmt_15}"(i64* %"idr_Main.{printFmt_15}0", i64* %"idr_Main.{printFmt_15}1", i64* %"idr_Main.{printFmt_15}2") #0 {
"idr_Main.{printFmt_15}.entry":
  %"idr_Main.{printFmt_15}3_val.12550" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %"idr_Main.{printFmt_15}1", i64* %"idr_Main.{printFmt_15}2")
  %alloc_bytes.12551 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12552 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12551 to i64
  %new_node_ptr.12553 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12552 monotonic
  %new_node_ptr.12554 = inttoptr i64 %new_node_ptr.12553 to i64*
  %tag.12555 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{printFmt_15}3_val.12550", 0
  %ptr_CGrString.12556 = bitcast i64* %new_node_ptr.12554 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Main.{printFmt_15}3_val.12550", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12556, align 1
  %"result.idr_Main.{printFmt_15}.12557" = tail call fastcc <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> @idr_Main.printFmt(i64* %"idr_Main.{printFmt_15}0", i64* %new_node_ptr.12554)
  ret <{ i64, [1 x { i8*, i64 }*], [2 x i64*] }> %"result.idr_Main.{printFmt_15}.12557"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_16}"(i64* %"idr_Prelude.Show.{showLitChar_16}0") #0 {
"idr_Prelude.Show.{showLitChar_16}.entry":
  %node_CGrString.12558 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.16, 1, 0
  %alloc_bytes.12559 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12560 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12559 to i64
  %new_node_ptr.12561 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12560 monotonic
  %new_node_ptr.12562 = inttoptr i64 %new_node_ptr.12561 to i64*
  %tag.12563 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12558, 0
  %ptr_CGrString.12564 = bitcast i64* %new_node_ptr.12562 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12558, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12564, align 1
  %"result.idr_Prelude.Show.{showLitChar_16}.12565" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12562, i64* %"idr_Prelude.Show.{showLitChar_16}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_16}.12565"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_17}"(i64* %"idr_Prelude.Show.{showLitChar_17}0") #0 {
"idr_Prelude.Show.{showLitChar_17}.entry":
  %node_CGrString.12566 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.17, 1, 0
  %alloc_bytes.12567 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12568 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12567 to i64
  %new_node_ptr.12569 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12568 monotonic
  %new_node_ptr.12570 = inttoptr i64 %new_node_ptr.12569 to i64*
  %tag.12571 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12566, 0
  %ptr_CGrString.12572 = bitcast i64* %new_node_ptr.12570 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12566, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12572, align 1
  %"result.idr_Prelude.Show.{showLitChar_17}.12573" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12570, i64* %"idr_Prelude.Show.{showLitChar_17}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_17}.12573"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_18}"(i64* %"idr_Prelude.Show.{showLitChar_18}0") #0 {
"idr_Prelude.Show.{showLitChar_18}.entry":
  %node_CGrString.12574 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.18, 1, 0
  %alloc_bytes.12575 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12576 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12575 to i64
  %new_node_ptr.12577 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12576 monotonic
  %new_node_ptr.12578 = inttoptr i64 %new_node_ptr.12577 to i64*
  %tag.12579 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12574, 0
  %ptr_CGrString.12580 = bitcast i64* %new_node_ptr.12578 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12574, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12580, align 1
  %"result.idr_Prelude.Show.{showLitChar_18}.12581" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12578, i64* %"idr_Prelude.Show.{showLitChar_18}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_18}.12581"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_19}"(i64* %"idr_Prelude.Show.{showLitChar_19}0") #0 {
"idr_Prelude.Show.{showLitChar_19}.entry":
  %node_CGrString.12582 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.19, 1, 0
  %alloc_bytes.12583 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12584 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12583 to i64
  %new_node_ptr.12585 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12584 monotonic
  %new_node_ptr.12586 = inttoptr i64 %new_node_ptr.12585 to i64*
  %tag.12587 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12582, 0
  %ptr_CGrString.12588 = bitcast i64* %new_node_ptr.12586 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12582, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12588, align 1
  %"result.idr_Prelude.Show.{showLitChar_19}.12589" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12586, i64* %"idr_Prelude.Show.{showLitChar_19}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_19}.12589"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_20}"(i64* %"idr_Prelude.Show.{showLitChar_20}0") #0 {
"idr_Prelude.Show.{showLitChar_20}.entry":
  %node_CGrString.12590 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.20, 1, 0
  %alloc_bytes.12591 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12592 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12591 to i64
  %new_node_ptr.12593 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12592 monotonic
  %new_node_ptr.12594 = inttoptr i64 %new_node_ptr.12593 to i64*
  %tag.12595 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12590, 0
  %ptr_CGrString.12596 = bitcast i64* %new_node_ptr.12594 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12590, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12596, align 1
  %"result.idr_Prelude.Show.{showLitChar_20}.12597" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12594, i64* %"idr_Prelude.Show.{showLitChar_20}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_20}.12597"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_21}"(i64* %"idr_Prelude.Show.{showLitChar_21}0") #0 {
"idr_Prelude.Show.{showLitChar_21}.entry":
  %node_CGrString.12598 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.21, 1, 0
  %alloc_bytes.12599 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12600 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12599 to i64
  %new_node_ptr.12601 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12600 monotonic
  %new_node_ptr.12602 = inttoptr i64 %new_node_ptr.12601 to i64*
  %tag.12603 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12598, 0
  %ptr_CGrString.12604 = bitcast i64* %new_node_ptr.12602 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12598, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12604, align 1
  %"result.idr_Prelude.Show.{showLitChar_21}.12605" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12602, i64* %"idr_Prelude.Show.{showLitChar_21}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_21}.12605"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_22}"(i64* %"idr_Prelude.Show.{showLitChar_22}0") #0 {
"idr_Prelude.Show.{showLitChar_22}.entry":
  %node_CGrString.12606 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.22, 1, 0
  %alloc_bytes.12607 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12608 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12607 to i64
  %new_node_ptr.12609 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12608 monotonic
  %new_node_ptr.12610 = inttoptr i64 %new_node_ptr.12609 to i64*
  %tag.12611 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12606, 0
  %ptr_CGrString.12612 = bitcast i64* %new_node_ptr.12610 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12606, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12612, align 1
  %"result.idr_Prelude.Show.{showLitChar_22}.12613" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12610, i64* %"idr_Prelude.Show.{showLitChar_22}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_22}.12613"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @"idr_Prelude.Show.{showLitChar_23}"(i64* %"idr_Prelude.Show.{showLitChar_23}0") #0 {
"idr_Prelude.Show.{showLitChar_23}.entry":
  %node_CGrInt.12614 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 72, 1, 0
  %alloc_bytes.12615 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12616 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12615 to i64
  %new_node_ptr.12617 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12616 monotonic
  %new_node_ptr.12618 = inttoptr i64 %new_node_ptr.12617 to i64*
  %tag.12619 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12614, 0
  %ptr_CGrInt.12620 = bitcast i64* %new_node_ptr.12618 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.12614, <{ i64, [1 x i64] }>* %ptr_CGrInt.12620, align 1
  %"idr_Prelude.Show.{showLitChar_23}1_val.12621" = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %"idr_Prelude.Show.{showLitChar_23}0", i64* %new_node_ptr.12618)
  %alloc_bytes.12622 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12623 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12622 to i64
  %new_node_ptr.12624 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12623 monotonic
  %new_node_ptr.12625 = inttoptr i64 %new_node_ptr.12624 to i64*
  %tag.12626 = extractvalue <{ i64, [1 x i64] }> %"idr_Prelude.Show.{showLitChar_23}1_val.12621", 0
  %ptr_CGrInt.12627 = bitcast i64* %new_node_ptr.12625 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Prelude.Show.{showLitChar_23}1_val.12621", <{ i64, [1 x i64] }>* %ptr_CGrInt.12627, align 1
  %tag.12628 = load i64, i64* %new_node_ptr.12625, align 1
  %ptr_CGrInt.12629 = bitcast i64* %new_node_ptr.12625 to <{ i64, [1 x i64] }>*
  %node_CGrInt.12630 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.12629, align 1
  %tag.12631 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12630, 0
  switch i64 %tag.12631, label %error_block [
    i64 2, label %block.CGrInt.12632
  ]

block.CGrInt.12632:                               ; preds = %"idr_Prelude.Show.{showLitChar_23}.entry"
  %"idr_Prelude.Show.{showLitChar_23}_cpat_LInt64_0" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12630, 1, 0
  switch i64 %"idr_Prelude.Show.{showLitChar_23}_cpat_LInt64_0", label %block.default.12633 [
    i64 0, label %block.int_0.12634
  ]

block.default.12633:                              ; preds = %block.CGrInt.12632
  br label %block.exit.12635

block.int_0.12634:                                ; preds = %block.CGrInt.12632
  br label %block.exit.12635

block.exit.12635:                                 ; preds = %block.int_0.12634, %block.default.12633
  %result.CGrInt.12636 = phi <{ i64 }> [ <{ i64 7 }>, %block.default.12633 ], [ <{ i64 6 }>, %block.int_0.12634 ]
  br label %block.exit.12637

block.exit.12637:                                 ; preds = %block.exit.12635
  %"result.idr_Prelude.Show.{showLitChar_23}.12638" = phi <{ i64 }> [ %result.CGrInt.12636, %block.exit.12635 ]
  ret <{ i64 }> %"result.idr_Prelude.Show.{showLitChar_23}.12638"

error_block:                                      ; preds = %"idr_Prelude.Show.{showLitChar_23}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_24}"(i64* %"idr_Prelude.Show.{showLitChar_24}0") #0 {
"idr_Prelude.Show.{showLitChar_24}.entry":
  %node_CGrString.12639 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.23, 1, 0
  %alloc_bytes.12640 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12641 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12640 to i64
  %new_node_ptr.12642 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12641 monotonic
  %new_node_ptr.12643 = inttoptr i64 %new_node_ptr.12642 to i64*
  %tag.12644 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12639, 0
  %ptr_CGrString.12645 = bitcast i64* %new_node_ptr.12643 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12639, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12645, align 1
  %"result.idr_Prelude.Show.{showLitChar_24}.12646" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12643, i64* %"idr_Prelude.Show.{showLitChar_24}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_24}.12646"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_25}"(i64* %"idr_Prelude.Show.{showLitChar_25}0") #0 {
"idr_Prelude.Show.{showLitChar_25}.entry":
  %node_CGrString.12647 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.24, 1, 0
  %alloc_bytes.12648 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12649 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12648 to i64
  %new_node_ptr.12650 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12649 monotonic
  %new_node_ptr.12651 = inttoptr i64 %new_node_ptr.12650 to i64*
  %tag.12652 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12647, 0
  %ptr_CGrString.12653 = bitcast i64* %new_node_ptr.12651 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12647, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12653, align 1
  %"result.idr_Prelude.Show.{showLitChar_25}.12654" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.12651, i64* %"idr_Prelude.Show.{showLitChar_25}0")
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_25}.12654"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_26}"(i64* %"idr_Prelude.Show.{showLitChar_26}0", i64* %"idr_Prelude.Show.{showLitChar_26}1") #0 {
"idr_Prelude.Show.{showLitChar_26}.entry":
  %node_CGrInt.12655 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 92, 1, 0
  %alloc_bytes.12656 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12657 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12656 to i64
  %new_node_ptr.12658 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12657 monotonic
  %new_node_ptr.12659 = inttoptr i64 %new_node_ptr.12658 to i64*
  %tag.12660 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12655, 0
  %ptr_CGrInt.12661 = bitcast i64* %new_node_ptr.12659 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.12655, <{ i64, [1 x i64] }>* %ptr_CGrInt.12661, align 1
  %"idr_Prelude.Show.{showLitChar_26}3_val.12662" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %"idr_Prelude.Show.{showLitChar_26}0", i64* %"idr_Prelude.Show.{showLitChar_26}1")
  %alloc_bytes.12663 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12664 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12663 to i64
  %new_node_ptr.12665 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12664 monotonic
  %new_node_ptr.12666 = inttoptr i64 %new_node_ptr.12665 to i64*
  %tag.12667 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.{showLitChar_26}3_val.12662", 0
  %ptr_CGrString.12668 = bitcast i64* %new_node_ptr.12666 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.{showLitChar_26}3_val.12662", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12668, align 1
  %"result.idr_Prelude.Show.{showLitChar_26}.12669" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__strCons(i64* %new_node_ptr.12659, i64* %new_node_ptr.12666)
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_26}.12669"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.{showLitChar_27}"(i64* %"idr_Prelude.Show.{showLitChar_27}0", i64* %"idr_Prelude.Show.{showLitChar_27}1") #0 {
"idr_Prelude.Show.{showLitChar_27}.entry":
  %node_CGrInt.12670 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 92, 1, 0
  %alloc_bytes.12671 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12672 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12671 to i64
  %new_node_ptr.12673 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12672 monotonic
  %new_node_ptr.12674 = inttoptr i64 %new_node_ptr.12673 to i64*
  %tag.12675 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12670, 0
  %ptr_CGrInt.12676 = bitcast i64* %new_node_ptr.12674 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.12670, <{ i64, [1 x i64] }>* %ptr_CGrInt.12676, align 1
  %alloc_bytes.12677 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12678 = ptrtoint <{ i64 }>* %alloc_bytes.12677 to i64
  %new_node_ptr.12679 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12678 monotonic
  %new_node_ptr.12680 = inttoptr i64 %new_node_ptr.12679 to i64*
  %tag.12681 = extractvalue <{ i64 }> <{ i64 54 }>, 0
  %"ptr_C\22idr_{U_Prelude.Chars.isDigit_1}\22.12682" = bitcast i64* %new_node_ptr.12680 to <{ i64 }>*
  store <{ i64 }> <{ i64 54 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Chars.isDigit_1}\22.12682", align 1
  %alloc_bytes.12683 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12684 = ptrtoint <{ i64 }>* %alloc_bytes.12683 to i64
  %new_node_ptr.12685 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12684 monotonic
  %new_node_ptr.12686 = inttoptr i64 %new_node_ptr.12685 to i64*
  %tag.12687 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.12688 = bitcast i64* %new_node_ptr.12686 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.12688, align 1
  %alloc_bytes.12689 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12690 = ptrtoint <{ i64 }>* %alloc_bytes.12689 to i64
  %new_node_ptr.12691 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12690 monotonic
  %new_node_ptr.12692 = inttoptr i64 %new_node_ptr.12691 to i64*
  %tag.12693 = extractvalue <{ i64 }> <{ i64 58 }>, 0
  %"ptr_C\22idr_{U_prim__toStrInt_1}\22.12694" = bitcast i64* %new_node_ptr.12692 to <{ i64 }>*
  store <{ i64 }> <{ i64 58 }>, <{ i64 }>* %"ptr_C\22idr_{U_prim__toStrInt_1}\22.12694", align 1
  %alloc_bytes.12695 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.12696 = ptrtoint <{ i64 }>* %alloc_bytes.12695 to i64
  %new_node_ptr.12697 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12696 monotonic
  %new_node_ptr.12698 = inttoptr i64 %new_node_ptr.12697 to i64*
  %tag.12699 = extractvalue <{ i64 }> <{ i64 35 }>, 0
  %ptr_Cidr_Prelude.Show.Open.12700 = bitcast i64* %new_node_ptr.12698 to <{ i64 }>*
  store <{ i64 }> <{ i64 35 }>, <{ i64 }>* %ptr_Cidr_Prelude.Show.Open.12700, align 1
  %"idr_Prelude.Show.{showLitChar_27}7_val.12701" = tail call fastcc <{ i64, [1 x i64] }> @idris_ch_int(i64* %"idr_Prelude.Show.{showLitChar_27}0")
  %alloc_bytes.12702 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.12703 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.12702 to i64
  %new_node_ptr.12704 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12703 monotonic
  %new_node_ptr.12705 = inttoptr i64 %new_node_ptr.12704 to i64*
  %tag.12706 = extractvalue <{ i64, [1 x i64] }> %"idr_Prelude.Show.{showLitChar_27}7_val.12701", 0
  %ptr_CGrInt.12707 = bitcast i64* %new_node_ptr.12705 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Prelude.Show.{showLitChar_27}7_val.12701", <{ i64, [1 x i64] }>* %ptr_CGrInt.12707, align 1
  %"idr_Prelude.Show.{showLitChar_27}4_val.12708" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Prelude.Show.primNumShow(i64* %new_node_ptr.12686, i64* %new_node_ptr.12692, i64* %new_node_ptr.12698, i64* %new_node_ptr.12705)
  %alloc_bytes.12709 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.12710 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.12709 to i64
  %new_node_ptr.12711 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12710 monotonic
  %new_node_ptr.12712 = inttoptr i64 %new_node_ptr.12711 to i64*
  %tag.12713 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  switch i64 %tag.12713, label %error_block [
    i64 0, label %block.CErased.12714
    i64 1, label %block.CGrFloat.12718
    i64 2, label %block.CGrInt.12724
    i64 3, label %block.CGrString.12730
    i64 4, label %block.Cidr_Builtins.MkPair.12736
    i64 5, label %"block.Cidr_Data.Vect.::.12744"
    i64 6, label %block.Cidr_Prelude.Bool.False.12752
    i64 7, label %block.Cidr_Prelude.Bool.True.12756
    i64 8, label %"block.Cidr_Prelude.List.::.12760"
    i64 9, label %block.Cidr_Prelude.List.Nil.12768
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.12772"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.12782"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.12788"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.12796"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12804"
  ]

block.CErased.12714:                              ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12715 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12716 = insertvalue <{ i64 }> undef, i64 %src.12715, 0
  %ptr_CErased.12717 = bitcast i64* %new_node_ptr.12712 to <{ i64 }>*
  store <{ i64 }> %dst.12716, <{ i64 }>* %ptr_CErased.12717, align 1
  br label %block.exit.12810

block.CGrFloat.12718:                             ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12719 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12720 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.12719, 0
  %src.12721 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 1, 0
  %dst.12722 = insertvalue <{ i64, [1 x float] }> %dst.12720, float %src.12721, 1, 0
  %ptr_CGrFloat.12723 = bitcast i64* %new_node_ptr.12712 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.12722, <{ i64, [1 x float] }>* %ptr_CGrFloat.12723, align 1
  br label %block.exit.12810

block.CGrInt.12724:                               ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12725 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12726 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.12725, 0
  %src.12727 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 2, 0
  %dst.12728 = insertvalue <{ i64, [1 x i64] }> %dst.12726, i64 %src.12727, 1, 0
  %ptr_CGrInt.12729 = bitcast i64* %new_node_ptr.12712 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.12728, <{ i64, [1 x i64] }>* %ptr_CGrInt.12729, align 1
  br label %block.exit.12810

block.CGrString.12730:                            ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12731 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12732 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.12731, 0
  %src.12733 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 3, 0
  %dst.12734 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.12732, { i8*, i64 }* %src.12733, 1, 0
  %ptr_CGrString.12735 = bitcast i64* %new_node_ptr.12712 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.12734, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12735, align 1
  br label %block.exit.12810

block.Cidr_Builtins.MkPair.12736:                 ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12737 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12738 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12737, 0
  %src.12739 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 1
  %dst.12740 = insertvalue <{ i64, [2 x i64*] }> %dst.12738, i64* %src.12739, 1, 1
  %src.12741 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12742 = insertvalue <{ i64, [2 x i64*] }> %dst.12740, i64* %src.12741, 1, 0
  %ptr_Cidr_Builtins.MkPair.12743 = bitcast i64* %new_node_ptr.12712 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12742, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.12743, align 1
  br label %block.exit.12810

"block.Cidr_Data.Vect.::.12744":                  ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12745 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12746 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12745, 0
  %src.12747 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 1
  %dst.12748 = insertvalue <{ i64, [2 x i64*] }> %dst.12746, i64* %src.12747, 1, 1
  %src.12749 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12750 = insertvalue <{ i64, [2 x i64*] }> %dst.12748, i64* %src.12749, 1, 0
  %"ptr_Cidr_Data.Vect.::.12751" = bitcast i64* %new_node_ptr.12712 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12750, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.12751", align 1
  br label %block.exit.12810

block.Cidr_Prelude.Bool.False.12752:              ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12753 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12754 = insertvalue <{ i64 }> undef, i64 %src.12753, 0
  %ptr_Cidr_Prelude.Bool.False.12755 = bitcast i64* %new_node_ptr.12712 to <{ i64 }>*
  store <{ i64 }> %dst.12754, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.12755, align 1
  br label %block.exit.12810

block.Cidr_Prelude.Bool.True.12756:               ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12757 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12758 = insertvalue <{ i64 }> undef, i64 %src.12757, 0
  %ptr_Cidr_Prelude.Bool.True.12759 = bitcast i64* %new_node_ptr.12712 to <{ i64 }>*
  store <{ i64 }> %dst.12758, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12759, align 1
  br label %block.exit.12810

"block.Cidr_Prelude.List.::.12760":               ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12761 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12762 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12761, 0
  %src.12763 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 1
  %dst.12764 = insertvalue <{ i64, [2 x i64*] }> %dst.12762, i64* %src.12763, 1, 1
  %src.12765 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12766 = insertvalue <{ i64, [2 x i64*] }> %dst.12764, i64* %src.12765, 1, 0
  %"ptr_Cidr_Prelude.List.::.12767" = bitcast i64* %new_node_ptr.12712 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12766, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.12767", align 1
  br label %block.exit.12810

block.Cidr_Prelude.List.Nil.12768:                ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12769 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12770 = insertvalue <{ i64 }> undef, i64 %src.12769, 0
  %ptr_Cidr_Prelude.List.Nil.12771 = bitcast i64* %new_node_ptr.12712 to <{ i64 }>*
  store <{ i64 }> %dst.12770, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.12771, align 1
  br label %block.exit.12810

"block.Cidr_{U_Main.{adder_0}_1}.12772":          ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12773 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12774 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.12773, 0
  %src.12775 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 2
  %dst.12776 = insertvalue <{ i64, [3 x i64*] }> %dst.12774, i64* %src.12775, 1, 2
  %src.12777 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 1
  %dst.12778 = insertvalue <{ i64, [3 x i64*] }> %dst.12776, i64* %src.12777, 1, 1
  %src.12779 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12780 = insertvalue <{ i64, [3 x i64*] }> %dst.12778, i64* %src.12779, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12781" = bitcast i64* %new_node_ptr.12712 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.12780, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12781", align 1
  br label %block.exit.12810

"block.Cidr_{U_Main.{main_9}_1}.12782":           ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12783 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12784 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.12783, 0
  %src.12785 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12786 = insertvalue <{ i64, [1 x i64*] }> %dst.12784, i64* %src.12785, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12787" = bitcast i64* %new_node_ptr.12712 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.12786, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12787", align 1
  br label %block.exit.12810

"block.Cidr_{U_Main.{printFmt_14}_1}.12788":      ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12789 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12790 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12789, 0
  %src.12791 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 1
  %dst.12792 = insertvalue <{ i64, [2 x i64*] }> %dst.12790, i64* %src.12791, 1, 1
  %src.12793 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12794 = insertvalue <{ i64, [2 x i64*] }> %dst.12792, i64* %src.12793, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12795" = bitcast i64* %new_node_ptr.12712 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12794, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12795", align 1
  br label %block.exit.12810

"block.Cidr_{U_Main.{printFmt_15}_1}.12796":      ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12797 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12798 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.12797, 0
  %src.12799 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 1
  %dst.12800 = insertvalue <{ i64, [2 x i64*] }> %dst.12798, i64* %src.12799, 1, 1
  %src.12801 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12802 = insertvalue <{ i64, [2 x i64*] }> %dst.12800, i64* %src.12801, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12803" = bitcast i64* %new_node_ptr.12712 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.12802, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12803", align 1
  br label %block.exit.12810

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12804": ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  %src.12805 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 0
  %dst.12806 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.12805, 0
  %src.12807 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.{showLitChar_27}4_val.12708", 4, 0
  %dst.12808 = insertvalue <{ i64, [1 x i64*] }> %dst.12806, i64* %src.12807, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12809" = bitcast i64* %new_node_ptr.12712 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.12808, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12809", align 1
  br label %block.exit.12810

block.exit.12810:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12804", %"block.Cidr_{U_Main.{printFmt_15}_1}.12796", %"block.Cidr_{U_Main.{printFmt_14}_1}.12788", %"block.Cidr_{U_Main.{main_9}_1}.12782", %"block.Cidr_{U_Main.{adder_0}_1}.12772", %block.Cidr_Prelude.List.Nil.12768, %"block.Cidr_Prelude.List.::.12760", %block.Cidr_Prelude.Bool.True.12756, %block.Cidr_Prelude.Bool.False.12752, %"block.Cidr_Data.Vect.::.12744", %block.Cidr_Builtins.MkPair.12736, %block.CGrString.12730, %block.CGrInt.12724, %block.CGrFloat.12718, %block.CErased.12714
  %"idr_Prelude.Show.{showLitChar_27}3_val.12811" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_Prelude.Show.protectEsc(i64* %new_node_ptr.12680, i64* %new_node_ptr.12712, i64* %"idr_Prelude.Show.{showLitChar_27}1")
  %alloc_bytes.12812 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.12813 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.12812 to i64
  %new_node_ptr.12814 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.12813 monotonic
  %new_node_ptr.12815 = inttoptr i64 %new_node_ptr.12814 to i64*
  %tag.12816 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.{showLitChar_27}3_val.12811", 0
  %ptr_CGrString.12817 = bitcast i64* %new_node_ptr.12815 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.{showLitChar_27}3_val.12811", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12817, align 1
  %"result.idr_Prelude.Show.{showLitChar_27}.12818" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr_prim__strCons(i64* %new_node_ptr.12674, i64* %new_node_ptr.12815)
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.{showLitChar_27}.12818"

error_block:                                      ; preds = %"idr_Prelude.Show.{showLitChar_27}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [2 x i64*] }> @"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}"(i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}0", i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}1") #0 {
"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}.entry":
  %"node_Cidr_Prelude.List.::.12819" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}0", 1, 0
  %"node_Cidr_Prelude.List.::.12820" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12819", i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}1", 1, 1
  ret <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12820"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}"(i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0") #0 {
"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry":
  %tag.12821 = load i64, i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0", align 1
  switch i64 %tag.12821, label %error_block [
    i64 0, label %block.CErased.12822
    i64 1, label %block.CGrFloat.12827
    i64 2, label %block.CGrInt.12834
    i64 3, label %block.CGrString.12841
    i64 4, label %block.Cidr_Builtins.MkPair.12848
    i64 5, label %"block.Cidr_Data.Vect.::.12857"
    i64 6, label %block.Cidr_Prelude.Bool.False.12866
    i64 7, label %block.Cidr_Prelude.Bool.True.12871
    i64 8, label %"block.Cidr_Prelude.List.::.12876"
    i64 9, label %block.Cidr_Prelude.List.Nil.12885
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.12890"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.12901"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.12908"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.12917"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12926"
  ]

block.CErased.12822:                              ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_CErased.12823 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64 }>*
  %node_CErased.12824 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.12823, align 1
  %src.12825 = extractvalue <{ i64 }> %node_CErased.12824, 0
  %dst.12826 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12825, 0
  br label %block.exit.12933

block.CGrFloat.12827:                             ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_CGrFloat.12828 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [1 x float] }>*
  %node_CGrFloat.12829 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.12828, align 1
  %src.12830 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.12829, 0
  %dst.12831 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12830, 0
  %src.12832 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.12829, 1, 0
  %dst.12833 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12831, float %src.12832, 1, 0
  br label %block.exit.12933

block.CGrInt.12834:                               ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_CGrInt.12835 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [1 x i64] }>*
  %node_CGrInt.12836 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.12835, align 1
  %src.12837 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12836, 0
  %dst.12838 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12837, 0
  %src.12839 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12836, 1, 0
  %dst.12840 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12838, i64 %src.12839, 2, 0
  br label %block.exit.12933

block.CGrString.12841:                            ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_CGrString.12842 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.12843 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12842, align 1
  %src.12844 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12843, 0
  %dst.12845 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12844, 0
  %src.12846 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12843, 1, 0
  %dst.12847 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12845, { i8*, i64 }* %src.12846, 3, 0
  br label %block.exit.12933

block.Cidr_Builtins.MkPair.12848:                 ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_Cidr_Builtins.MkPair.12849 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.12850 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.12849, align 1
  %src.12851 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.12850, 0
  %dst.12852 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12851, 0
  %src.12853 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.12850, 1, 1
  %dst.12854 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12852, i64* %src.12853, 4, 1
  %src.12855 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.12850, 1, 0
  %dst.12856 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12854, i64* %src.12855, 4, 0
  br label %block.exit.12933

"block.Cidr_Data.Vect.::.12857":                  ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %"ptr_Cidr_Data.Vect.::.12858" = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.12859" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.12858", align 1
  %src.12860 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.12859", 0
  %dst.12861 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12860, 0
  %src.12862 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.12859", 1, 1
  %dst.12863 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12861, i64* %src.12862, 4, 1
  %src.12864 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.12859", 1, 0
  %dst.12865 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12863, i64* %src.12864, 4, 0
  br label %block.exit.12933

block.Cidr_Prelude.Bool.False.12866:              ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_Cidr_Prelude.Bool.False.12867 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.12868 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.12867, align 1
  %src.12869 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.12868, 0
  %dst.12870 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12869, 0
  br label %block.exit.12933

block.Cidr_Prelude.Bool.True.12871:               ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_Cidr_Prelude.Bool.True.12872 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.12873 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12872, align 1
  %src.12874 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.12873, 0
  %dst.12875 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12874, 0
  br label %block.exit.12933

"block.Cidr_Prelude.List.::.12876":               ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %"ptr_Cidr_Prelude.List.::.12877" = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.12878" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.12877", align 1
  %src.12879 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12878", 0
  %dst.12880 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12879, 0
  %src.12881 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12878", 1, 1
  %dst.12882 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12880, i64* %src.12881, 4, 1
  %src.12883 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12878", 1, 0
  %dst.12884 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12882, i64* %src.12883, 4, 0
  br label %block.exit.12933

block.Cidr_Prelude.List.Nil.12885:                ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %ptr_Cidr_Prelude.List.Nil.12886 = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.12887 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.12886, align 1
  %src.12888 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.12887, 0
  %dst.12889 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12888, 0
  br label %block.exit.12933

"block.Cidr_{U_Main.{adder_0}_1}.12890":          ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12891" = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.12892" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.12891", align 1
  %src.12893 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.12892", 0
  %dst.12894 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12893, 0
  %src.12895 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.12892", 1, 2
  %dst.12896 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12894, i64* %src.12895, 4, 2
  %src.12897 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.12892", 1, 1
  %dst.12898 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12896, i64* %src.12897, 4, 1
  %src.12899 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.12892", 1, 0
  %dst.12900 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12898, i64* %src.12899, 4, 0
  br label %block.exit.12933

"block.Cidr_{U_Main.{main_9}_1}.12901":           ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12902" = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.12903" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.12902", align 1
  %src.12904 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.12903", 0
  %dst.12905 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12904, 0
  %src.12906 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.12903", 1, 0
  %dst.12907 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12905, i64* %src.12906, 4, 0
  br label %block.exit.12933

"block.Cidr_{U_Main.{printFmt_14}_1}.12908":      ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12909" = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.12910" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.12909", align 1
  %src.12911 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.12910", 0
  %dst.12912 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12911, 0
  %src.12913 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.12910", 1, 1
  %dst.12914 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12912, i64* %src.12913, 4, 1
  %src.12915 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.12910", 1, 0
  %dst.12916 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12914, i64* %src.12915, 4, 0
  br label %block.exit.12933

"block.Cidr_{U_Main.{printFmt_15}_1}.12917":      ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12918" = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.12919" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.12918", align 1
  %src.12920 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.12919", 0
  %dst.12921 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12920, 0
  %src.12922 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.12919", 1, 1
  %dst.12923 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12921, i64* %src.12922, 4, 1
  %src.12924 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.12919", 1, 0
  %dst.12925 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12923, i64* %src.12924, 4, 0
  br label %block.exit.12933

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12926": ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12927" = bitcast i64* %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}0" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12928" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12927", align 1
  %src.12929 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12928", 0
  %dst.12930 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12929, 0
  %src.12931 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.12928", 1, 0
  %dst.12932 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12930, i64* %src.12931, 4, 0
  br label %block.exit.12933

block.exit.12933:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12926", %"block.Cidr_{U_Main.{printFmt_15}_1}.12917", %"block.Cidr_{U_Main.{printFmt_14}_1}.12908", %"block.Cidr_{U_Main.{main_9}_1}.12901", %"block.Cidr_{U_Main.{adder_0}_1}.12890", %block.Cidr_Prelude.List.Nil.12885, %"block.Cidr_Prelude.List.::.12876", %block.Cidr_Prelude.Bool.True.12871, %block.Cidr_Prelude.Bool.False.12866, %"block.Cidr_Data.Vect.::.12857", %block.Cidr_Builtins.MkPair.12848, %block.CGrString.12841, %block.CGrInt.12834, %block.CGrFloat.12827, %block.CErased.12822
  %"result.idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.12934" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.12826, %block.CErased.12822 ], [ %dst.12833, %block.CGrFloat.12827 ], [ %dst.12840, %block.CGrInt.12834 ], [ %dst.12847, %block.CGrString.12841 ], [ %dst.12856, %block.Cidr_Builtins.MkPair.12848 ], [ %dst.12865, %"block.Cidr_Data.Vect.::.12857" ], [ %dst.12870, %block.Cidr_Prelude.Bool.False.12866 ], [ %dst.12875, %block.Cidr_Prelude.Bool.True.12871 ], [ %dst.12884, %"block.Cidr_Prelude.List.::.12876" ], [ %dst.12889, %block.Cidr_Prelude.List.Nil.12885 ], [ %dst.12900, %"block.Cidr_{U_Main.{adder_0}_1}.12890" ], [ %dst.12907, %"block.Cidr_{U_Main.{main_9}_1}.12901" ], [ %dst.12916, %"block.Cidr_{U_Main.{printFmt_14}_1}.12908" ], [ %dst.12925, %"block.Cidr_{U_Main.{printFmt_15}_1}.12917" ], [ %dst.12932, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.12926" ]
  ret <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"result.idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.12934"

error_block:                                      ; preds = %"idr_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0"(i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':00", i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':01", i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02", i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03", i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04") #0 {
"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry":
  %tag.12935 = load i64, i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04", align 1
  switch i64 %tag.12935, label %error_block [
    i64 0, label %block.CErased.12936
    i64 1, label %block.CGrFloat.12941
    i64 2, label %block.CGrInt.12948
    i64 3, label %block.CGrString.12955
    i64 4, label %block.Cidr_Builtins.MkPair.12962
    i64 5, label %"block.Cidr_Data.Vect.::.12971"
    i64 6, label %block.Cidr_Prelude.Bool.False.12980
    i64 7, label %block.Cidr_Prelude.Bool.True.12985
    i64 8, label %"block.Cidr_Prelude.List.::.12990"
    i64 9, label %block.Cidr_Prelude.List.Nil.12999
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.13004"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.13015"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.13022"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.13031"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13040"
  ]

block.CErased.12936:                              ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_CErased.12937 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64 }>*
  %node_CErased.12938 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.12937, align 1
  %src.12939 = extractvalue <{ i64 }> %node_CErased.12938, 0
  %dst.12940 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12939, 0
  br label %block.exit.13047

block.CGrFloat.12941:                             ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_CGrFloat.12942 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [1 x float] }>*
  %node_CGrFloat.12943 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.12942, align 1
  %src.12944 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.12943, 0
  %dst.12945 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12944, 0
  %src.12946 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.12943, 1, 0
  %dst.12947 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12945, float %src.12946, 1, 0
  br label %block.exit.13047

block.CGrInt.12948:                               ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_CGrInt.12949 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [1 x i64] }>*
  %node_CGrInt.12950 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.12949, align 1
  %src.12951 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12950, 0
  %dst.12952 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12951, 0
  %src.12953 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.12950, 1, 0
  %dst.12954 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12952, i64 %src.12953, 2, 0
  br label %block.exit.13047

block.CGrString.12955:                            ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_CGrString.12956 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.12957 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.12956, align 1
  %src.12958 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12957, 0
  %dst.12959 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12958, 0
  %src.12960 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.12957, 1, 0
  %dst.12961 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12959, { i8*, i64 }* %src.12960, 3, 0
  br label %block.exit.13047

block.Cidr_Builtins.MkPair.12962:                 ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_Cidr_Builtins.MkPair.12963 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.12964 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.12963, align 1
  %src.12965 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.12964, 0
  %dst.12966 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12965, 0
  %src.12967 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.12964, 1, 1
  %dst.12968 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12966, i64* %src.12967, 4, 1
  %src.12969 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.12964, 1, 0
  %dst.12970 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12968, i64* %src.12969, 4, 0
  br label %block.exit.13047

"block.Cidr_Data.Vect.::.12971":                  ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %"ptr_Cidr_Data.Vect.::.12972" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.12973" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.12972", align 1
  %src.12974 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.12973", 0
  %dst.12975 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12974, 0
  %src.12976 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.12973", 1, 1
  %dst.12977 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12975, i64* %src.12976, 4, 1
  %src.12978 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.12973", 1, 0
  %dst.12979 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12977, i64* %src.12978, 4, 0
  br label %block.exit.13047

block.Cidr_Prelude.Bool.False.12980:              ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_Cidr_Prelude.Bool.False.12981 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.12982 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.12981, align 1
  %src.12983 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.12982, 0
  %dst.12984 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12983, 0
  br label %block.exit.13047

block.Cidr_Prelude.Bool.True.12985:               ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_Cidr_Prelude.Bool.True.12986 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.12987 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.12986, align 1
  %src.12988 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.12987, 0
  %dst.12989 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12988, 0
  br label %block.exit.13047

"block.Cidr_Prelude.List.::.12990":               ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %"ptr_Cidr_Prelude.List.::.12991" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.12992" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.12991", align 1
  %src.12993 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12992", 0
  %dst.12994 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.12993, 0
  %src.12995 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12992", 1, 1
  %dst.12996 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12994, i64* %src.12995, 4, 1
  %src.12997 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.12992", 1, 0
  %dst.12998 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.12996, i64* %src.12997, 4, 0
  br label %block.exit.13047

block.Cidr_Prelude.List.Nil.12999:                ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %ptr_Cidr_Prelude.List.Nil.13000 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.13001 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.13000, align 1
  %src.13002 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.13001, 0
  %dst.13003 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13002, 0
  br label %block.exit.13047

"block.Cidr_{U_Main.{adder_0}_1}.13004":          ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13005" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.13006" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13005", align 1
  %src.13007 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13006", 0
  %dst.13008 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13007, 0
  %src.13009 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13006", 1, 2
  %dst.13010 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13008, i64* %src.13009, 4, 2
  %src.13011 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13006", 1, 1
  %dst.13012 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13010, i64* %src.13011, 4, 1
  %src.13013 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13006", 1, 0
  %dst.13014 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13012, i64* %src.13013, 4, 0
  br label %block.exit.13047

"block.Cidr_{U_Main.{main_9}_1}.13015":           ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13016" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.13017" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13016", align 1
  %src.13018 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.13017", 0
  %dst.13019 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13018, 0
  %src.13020 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.13017", 1, 0
  %dst.13021 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13019, i64* %src.13020, 4, 0
  br label %block.exit.13047

"block.Cidr_{U_Main.{printFmt_14}_1}.13022":      ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13023" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13024" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13023", align 1
  %src.13025 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13024", 0
  %dst.13026 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13025, 0
  %src.13027 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13024", 1, 1
  %dst.13028 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13026, i64* %src.13027, 4, 1
  %src.13029 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13024", 1, 0
  %dst.13030 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13028, i64* %src.13029, 4, 0
  br label %block.exit.13047

"block.Cidr_{U_Main.{printFmt_15}_1}.13031":      ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13032" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13033" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13032", align 1
  %src.13034 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13033", 0
  %dst.13035 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13034, 0
  %src.13036 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13033", 1, 1
  %dst.13037 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13035, i64* %src.13036, 4, 1
  %src.13038 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13033", 1, 0
  %dst.13039 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13037, i64* %src.13038, 4, 0
  br label %block.exit.13047

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13040": ; preds = %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13041" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13042" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13041", align 1
  %src.13043 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13042", 0
  %dst.13044 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13043, 0
  %src.13045 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13042", 1, 0
  %dst.13046 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13044, i64* %src.13045, 4, 0
  br label %block.exit.13047

block.exit.13047:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13040", %"block.Cidr_{U_Main.{printFmt_15}_1}.13031", %"block.Cidr_{U_Main.{printFmt_14}_1}.13022", %"block.Cidr_{U_Main.{main_9}_1}.13015", %"block.Cidr_{U_Main.{adder_0}_1}.13004", %block.Cidr_Prelude.List.Nil.12999, %"block.Cidr_Prelude.List.::.12990", %block.Cidr_Prelude.Bool.True.12985, %block.Cidr_Prelude.Bool.False.12980, %"block.Cidr_Data.Vect.::.12971", %block.Cidr_Builtins.MkPair.12962, %block.CGrString.12955, %block.CGrInt.12948, %block.CGrFloat.12941, %block.CErased.12936
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val.13048" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.12940, %block.CErased.12936 ], [ %dst.12947, %block.CGrFloat.12941 ], [ %dst.12954, %block.CGrInt.12948 ], [ %dst.12961, %block.CGrString.12955 ], [ %dst.12970, %block.Cidr_Builtins.MkPair.12962 ], [ %dst.12979, %"block.Cidr_Data.Vect.::.12971" ], [ %dst.12984, %block.Cidr_Prelude.Bool.False.12980 ], [ %dst.12989, %block.Cidr_Prelude.Bool.True.12985 ], [ %dst.12998, %"block.Cidr_Prelude.List.::.12990" ], [ %dst.13003, %block.Cidr_Prelude.List.Nil.12999 ], [ %dst.13014, %"block.Cidr_{U_Main.{adder_0}_1}.13004" ], [ %dst.13021, %"block.Cidr_{U_Main.{main_9}_1}.13015" ], [ %dst.13030, %"block.Cidr_{U_Main.{printFmt_14}_1}.13022" ], [ %dst.13039, %"block.Cidr_{U_Main.{printFmt_15}_1}.13031" ], [ %dst.13046, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13040" ]
  %tag.13049 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val.13048", 0
  switch i64 %tag.13049, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.13050"
    i64 9, label %block.Cidr_Prelude.List.Nil.13411
  ]

"block.Cidr_Prelude.List.::.13050":               ; preds = %block.exit.13047
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val.13048", 4, 0
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val.13048", 4, 1
  %tag.13051 = load i64, i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06", align 1
  switch i64 %tag.13051, label %error_block [
    i64 0, label %block.CErased.13052
    i64 1, label %block.CGrFloat.13057
    i64 2, label %block.CGrInt.13064
    i64 3, label %block.CGrString.13071
    i64 4, label %block.Cidr_Builtins.MkPair.13078
    i64 5, label %"block.Cidr_Data.Vect.::.13087"
    i64 6, label %block.Cidr_Prelude.Bool.False.13096
    i64 7, label %block.Cidr_Prelude.Bool.True.13101
    i64 8, label %"block.Cidr_Prelude.List.::.13106"
    i64 9, label %block.Cidr_Prelude.List.Nil.13115
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.13120"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.13131"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.13138"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.13147"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13156"
  ]

block.CErased.13052:                              ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_CErased.13053 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64 }>*
  %node_CErased.13054 = load <{ i64 }>, <{ i64 }>* %ptr_CErased.13053, align 1
  %src.13055 = extractvalue <{ i64 }> %node_CErased.13054, 0
  %dst.13056 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13055, 0
  br label %block.exit.13163

block.CGrFloat.13057:                             ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_CGrFloat.13058 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [1 x float] }>*
  %node_CGrFloat.13059 = load <{ i64, [1 x float] }>, <{ i64, [1 x float] }>* %ptr_CGrFloat.13058, align 1
  %src.13060 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.13059, 0
  %dst.13061 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13060, 0
  %src.13062 = extractvalue <{ i64, [1 x float] }> %node_CGrFloat.13059, 1, 0
  %dst.13063 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13061, float %src.13062, 1, 0
  br label %block.exit.13163

block.CGrInt.13064:                               ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_CGrInt.13065 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [1 x i64] }>*
  %node_CGrInt.13066 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.13065, align 1
  %src.13067 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13066, 0
  %dst.13068 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13067, 0
  %src.13069 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13066, 1, 0
  %dst.13070 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13068, i64 %src.13069, 2, 0
  br label %block.exit.13163

block.CGrString.13071:                            ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_CGrString.13072 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.13073 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13072, align 1
  %src.13074 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13073, 0
  %dst.13075 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13074, 0
  %src.13076 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13073, 1, 0
  %dst.13077 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13075, { i8*, i64 }* %src.13076, 3, 0
  br label %block.exit.13163

block.Cidr_Builtins.MkPair.13078:                 ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_Cidr_Builtins.MkPair.13079 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [2 x i64*] }>*
  %node_Cidr_Builtins.MkPair.13080 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.13079, align 1
  %src.13081 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.13080, 0
  %dst.13082 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13081, 0
  %src.13083 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.13080, 1, 1
  %dst.13084 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13082, i64* %src.13083, 4, 1
  %src.13085 = extractvalue <{ i64, [2 x i64*] }> %node_Cidr_Builtins.MkPair.13080, 1, 0
  %dst.13086 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13084, i64* %src.13085, 4, 0
  br label %block.exit.13163

"block.Cidr_Data.Vect.::.13087":                  ; preds = %"block.Cidr_Prelude.List.::.13050"
  %"ptr_Cidr_Data.Vect.::.13088" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Data.Vect.::.13089" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.13088", align 1
  %src.13090 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.13089", 0
  %dst.13091 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13090, 0
  %src.13092 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.13089", 1, 1
  %dst.13093 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13091, i64* %src.13092, 4, 1
  %src.13094 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Data.Vect.::.13089", 1, 0
  %dst.13095 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13093, i64* %src.13094, 4, 0
  br label %block.exit.13163

block.Cidr_Prelude.Bool.False.13096:              ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_Cidr_Prelude.Bool.False.13097 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.13098 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.13097, align 1
  %src.13099 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.False.13098, 0
  %dst.13100 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13099, 0
  br label %block.exit.13163

block.Cidr_Prelude.Bool.True.13101:               ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_Cidr_Prelude.Bool.True.13102 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.13103 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.13102, align 1
  %src.13104 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.13103, 0
  %dst.13105 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13104, 0
  br label %block.exit.13163

"block.Cidr_Prelude.List.::.13106":               ; preds = %"block.Cidr_Prelude.List.::.13050"
  %"ptr_Cidr_Prelude.List.::.13107" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.13108" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13107", align 1
  %src.13109 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13108", 0
  %dst.13110 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13109, 0
  %src.13111 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13108", 1, 1
  %dst.13112 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13110, i64* %src.13111, 4, 1
  %src.13113 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13108", 1, 0
  %dst.13114 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13112, i64* %src.13113, 4, 0
  br label %block.exit.13163

block.Cidr_Prelude.List.Nil.13115:                ; preds = %"block.Cidr_Prelude.List.::.13050"
  %ptr_Cidr_Prelude.List.Nil.13116 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.13117 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.13116, align 1
  %src.13118 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.13117, 0
  %dst.13119 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13118, 0
  br label %block.exit.13163

"block.Cidr_{U_Main.{adder_0}_1}.13120":          ; preds = %"block.Cidr_Prelude.List.::.13050"
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13121" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [3 x i64*] }>*
  %"node_C\22idr_{U_Main.{adder_0}_1}\22.13122" = load <{ i64, [3 x i64*] }>, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13121", align 1
  %src.13123 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13122", 0
  %dst.13124 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13123, 0
  %src.13125 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13122", 1, 2
  %dst.13126 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13124, i64* %src.13125, 4, 2
  %src.13127 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13122", 1, 1
  %dst.13128 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13126, i64* %src.13127, 4, 1
  %src.13129 = extractvalue <{ i64, [3 x i64*] }> %"node_C\22idr_{U_Main.{adder_0}_1}\22.13122", 1, 0
  %dst.13130 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13128, i64* %src.13129, 4, 0
  br label %block.exit.13163

"block.Cidr_{U_Main.{main_9}_1}.13131":           ; preds = %"block.Cidr_Prelude.List.::.13050"
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13132" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Main.{main_9}_1}\22.13133" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13132", align 1
  %src.13134 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.13133", 0
  %dst.13135 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13134, 0
  %src.13136 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Main.{main_9}_1}\22.13133", 1, 0
  %dst.13137 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13135, i64* %src.13136, 4, 0
  br label %block.exit.13163

"block.Cidr_{U_Main.{printFmt_14}_1}.13138":      ; preds = %"block.Cidr_Prelude.List.::.13050"
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13139" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13140" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13139", align 1
  %src.13141 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13140", 0
  %dst.13142 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13141, 0
  %src.13143 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13140", 1, 1
  %dst.13144 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13142, i64* %src.13143, 4, 1
  %src.13145 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_14}_1}\22.13140", 1, 0
  %dst.13146 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13144, i64* %src.13145, 4, 0
  br label %block.exit.13163

"block.Cidr_{U_Main.{printFmt_15}_1}.13147":      ; preds = %"block.Cidr_Prelude.List.::.13050"
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13148" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [2 x i64*] }>*
  %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13149" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13148", align 1
  %src.13150 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13149", 0
  %dst.13151 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13150, 0
  %src.13152 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13149", 1, 1
  %dst.13153 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13151, i64* %src.13152, 4, 1
  %src.13154 = extractvalue <{ i64, [2 x i64*] }> %"node_C\22idr_{U_Main.{printFmt_15}_1}\22.13149", 1, 0
  %dst.13155 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13153, i64* %src.13154, 4, 0
  br label %block.exit.13163

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13156": ; preds = %"block.Cidr_Prelude.List.::.13050"
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13157" = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06" to <{ i64, [1 x i64*] }>*
  %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13158" = load <{ i64, [1 x i64*] }>, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13157", align 1
  %src.13159 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13158", 0
  %dst.13160 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> undef, i64 %src.13159, 0
  %src.13161 = extractvalue <{ i64, [1 x i64*] }> %"node_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13158", 1, 0
  %dst.13162 = insertvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %dst.13160, i64* %src.13161, 4, 0
  br label %block.exit.13163

block.exit.13163:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13156", %"block.Cidr_{U_Main.{printFmt_15}_1}.13147", %"block.Cidr_{U_Main.{printFmt_14}_1}.13138", %"block.Cidr_{U_Main.{main_9}_1}.13131", %"block.Cidr_{U_Main.{adder_0}_1}.13120", %block.Cidr_Prelude.List.Nil.13115, %"block.Cidr_Prelude.List.::.13106", %block.Cidr_Prelude.Bool.True.13101, %block.Cidr_Prelude.Bool.False.13096, %"block.Cidr_Data.Vect.::.13087", %block.Cidr_Builtins.MkPair.13078, %block.CGrString.13071, %block.CGrInt.13064, %block.CGrFloat.13057, %block.CErased.13052
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val.13164" = phi <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> [ %dst.13056, %block.CErased.13052 ], [ %dst.13063, %block.CGrFloat.13057 ], [ %dst.13070, %block.CGrInt.13064 ], [ %dst.13077, %block.CGrString.13071 ], [ %dst.13086, %block.Cidr_Builtins.MkPair.13078 ], [ %dst.13095, %"block.Cidr_Data.Vect.::.13087" ], [ %dst.13100, %block.Cidr_Prelude.Bool.False.13096 ], [ %dst.13105, %block.Cidr_Prelude.Bool.True.13101 ], [ %dst.13114, %"block.Cidr_Prelude.List.::.13106" ], [ %dst.13119, %block.Cidr_Prelude.List.Nil.13115 ], [ %dst.13130, %"block.Cidr_{U_Main.{adder_0}_1}.13120" ], [ %dst.13137, %"block.Cidr_{U_Main.{main_9}_1}.13131" ], [ %dst.13146, %"block.Cidr_{U_Main.{printFmt_14}_1}.13138" ], [ %dst.13155, %"block.Cidr_{U_Main.{printFmt_15}_1}.13147" ], [ %dst.13162, %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13156" ]
  %tag.13165 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val.13164", 0
  switch i64 %tag.13165, label %block.default.13166 [
    i64 9, label %block.Cidr_Prelude.List.Nil.13304
  ]

block.default.13166:                              ; preds = %block.exit.13163
  %alloc_bytes.13167 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13168 = ptrtoint <{ i64 }>* %alloc_bytes.13167 to i64
  %new_node_ptr.13169 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13168 monotonic
  %new_node_ptr.13170 = inttoptr i64 %new_node_ptr.13169 to i64*
  %tag.13171 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.13172 = bitcast i64* %new_node_ptr.13170 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.13172, align 1
  %alloc_bytes.13173 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13174 = ptrtoint <{ i64 }>* %alloc_bytes.13173 to i64
  %new_node_ptr.13175 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13174 monotonic
  %new_node_ptr.13176 = inttoptr i64 %new_node_ptr.13175 to i64*
  %tag.13177 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.13178 = bitcast i64* %new_node_ptr.13176 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.13178, align 1
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02", i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05")
  %alloc_bytes.13180 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.13181 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.13180 to i64
  %new_node_ptr.13182 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13181 monotonic
  %new_node_ptr.13183 = inttoptr i64 %new_node_ptr.13182 to i64*
  %tag.13184 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  switch i64 %tag.13184, label %error_block [
    i64 0, label %block.CErased.13185
    i64 1, label %block.CGrFloat.13189
    i64 2, label %block.CGrInt.13195
    i64 3, label %block.CGrString.13201
    i64 4, label %block.Cidr_Builtins.MkPair.13207
    i64 5, label %"block.Cidr_Data.Vect.::.13215"
    i64 6, label %block.Cidr_Prelude.Bool.False.13223
    i64 7, label %block.Cidr_Prelude.Bool.True.13227
    i64 8, label %"block.Cidr_Prelude.List.::.13231"
    i64 9, label %block.Cidr_Prelude.List.Nil.13239
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.13243"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.13253"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.13259"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.13267"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13275"
  ]

block.CErased.13185:                              ; preds = %block.default.13166
  %src.13186 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13187 = insertvalue <{ i64 }> undef, i64 %src.13186, 0
  %ptr_CErased.13188 = bitcast i64* %new_node_ptr.13183 to <{ i64 }>*
  store <{ i64 }> %dst.13187, <{ i64 }>* %ptr_CErased.13188, align 1
  br label %block.exit.13281

block.CGrFloat.13189:                             ; preds = %block.default.13166
  %src.13190 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13191 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.13190, 0
  %src.13192 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 1, 0
  %dst.13193 = insertvalue <{ i64, [1 x float] }> %dst.13191, float %src.13192, 1, 0
  %ptr_CGrFloat.13194 = bitcast i64* %new_node_ptr.13183 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.13193, <{ i64, [1 x float] }>* %ptr_CGrFloat.13194, align 1
  br label %block.exit.13281

block.CGrInt.13195:                               ; preds = %block.default.13166
  %src.13196 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13197 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.13196, 0
  %src.13198 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 2, 0
  %dst.13199 = insertvalue <{ i64, [1 x i64] }> %dst.13197, i64 %src.13198, 1, 0
  %ptr_CGrInt.13200 = bitcast i64* %new_node_ptr.13183 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.13199, <{ i64, [1 x i64] }>* %ptr_CGrInt.13200, align 1
  br label %block.exit.13281

block.CGrString.13201:                            ; preds = %block.default.13166
  %src.13202 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13203 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.13202, 0
  %src.13204 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 3, 0
  %dst.13205 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.13203, { i8*, i64 }* %src.13204, 1, 0
  %ptr_CGrString.13206 = bitcast i64* %new_node_ptr.13183 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.13205, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13206, align 1
  br label %block.exit.13281

block.Cidr_Builtins.MkPair.13207:                 ; preds = %block.default.13166
  %src.13208 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13209 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13208, 0
  %src.13210 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 1
  %dst.13211 = insertvalue <{ i64, [2 x i64*] }> %dst.13209, i64* %src.13210, 1, 1
  %src.13212 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13213 = insertvalue <{ i64, [2 x i64*] }> %dst.13211, i64* %src.13212, 1, 0
  %ptr_Cidr_Builtins.MkPair.13214 = bitcast i64* %new_node_ptr.13183 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13213, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.13214, align 1
  br label %block.exit.13281

"block.Cidr_Data.Vect.::.13215":                  ; preds = %block.default.13166
  %src.13216 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13217 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13216, 0
  %src.13218 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 1
  %dst.13219 = insertvalue <{ i64, [2 x i64*] }> %dst.13217, i64* %src.13218, 1, 1
  %src.13220 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13221 = insertvalue <{ i64, [2 x i64*] }> %dst.13219, i64* %src.13220, 1, 0
  %"ptr_Cidr_Data.Vect.::.13222" = bitcast i64* %new_node_ptr.13183 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13221, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.13222", align 1
  br label %block.exit.13281

block.Cidr_Prelude.Bool.False.13223:              ; preds = %block.default.13166
  %src.13224 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13225 = insertvalue <{ i64 }> undef, i64 %src.13224, 0
  %ptr_Cidr_Prelude.Bool.False.13226 = bitcast i64* %new_node_ptr.13183 to <{ i64 }>*
  store <{ i64 }> %dst.13225, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.13226, align 1
  br label %block.exit.13281

block.Cidr_Prelude.Bool.True.13227:               ; preds = %block.default.13166
  %src.13228 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13229 = insertvalue <{ i64 }> undef, i64 %src.13228, 0
  %ptr_Cidr_Prelude.Bool.True.13230 = bitcast i64* %new_node_ptr.13183 to <{ i64 }>*
  store <{ i64 }> %dst.13229, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.13230, align 1
  br label %block.exit.13281

"block.Cidr_Prelude.List.::.13231":               ; preds = %block.default.13166
  %src.13232 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13233 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13232, 0
  %src.13234 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 1
  %dst.13235 = insertvalue <{ i64, [2 x i64*] }> %dst.13233, i64* %src.13234, 1, 1
  %src.13236 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13237 = insertvalue <{ i64, [2 x i64*] }> %dst.13235, i64* %src.13236, 1, 0
  %"ptr_Cidr_Prelude.List.::.13238" = bitcast i64* %new_node_ptr.13183 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13237, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13238", align 1
  br label %block.exit.13281

block.Cidr_Prelude.List.Nil.13239:                ; preds = %block.default.13166
  %src.13240 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13241 = insertvalue <{ i64 }> undef, i64 %src.13240, 0
  %ptr_Cidr_Prelude.List.Nil.13242 = bitcast i64* %new_node_ptr.13183 to <{ i64 }>*
  store <{ i64 }> %dst.13241, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.13242, align 1
  br label %block.exit.13281

"block.Cidr_{U_Main.{adder_0}_1}.13243":          ; preds = %block.default.13166
  %src.13244 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13245 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.13244, 0
  %src.13246 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 2
  %dst.13247 = insertvalue <{ i64, [3 x i64*] }> %dst.13245, i64* %src.13246, 1, 2
  %src.13248 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 1
  %dst.13249 = insertvalue <{ i64, [3 x i64*] }> %dst.13247, i64* %src.13248, 1, 1
  %src.13250 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13251 = insertvalue <{ i64, [3 x i64*] }> %dst.13249, i64* %src.13250, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13252" = bitcast i64* %new_node_ptr.13183 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.13251, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13252", align 1
  br label %block.exit.13281

"block.Cidr_{U_Main.{main_9}_1}.13253":           ; preds = %block.default.13166
  %src.13254 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13255 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.13254, 0
  %src.13256 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13257 = insertvalue <{ i64, [1 x i64*] }> %dst.13255, i64* %src.13256, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13258" = bitcast i64* %new_node_ptr.13183 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.13257, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13258", align 1
  br label %block.exit.13281

"block.Cidr_{U_Main.{printFmt_14}_1}.13259":      ; preds = %block.default.13166
  %src.13260 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13261 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13260, 0
  %src.13262 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 1
  %dst.13263 = insertvalue <{ i64, [2 x i64*] }> %dst.13261, i64* %src.13262, 1, 1
  %src.13264 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13265 = insertvalue <{ i64, [2 x i64*] }> %dst.13263, i64* %src.13264, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13266" = bitcast i64* %new_node_ptr.13183 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13265, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13266", align 1
  br label %block.exit.13281

"block.Cidr_{U_Main.{printFmt_15}_1}.13267":      ; preds = %block.default.13166
  %src.13268 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13269 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13268, 0
  %src.13270 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 1
  %dst.13271 = insertvalue <{ i64, [2 x i64*] }> %dst.13269, i64* %src.13270, 1, 1
  %src.13272 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13273 = insertvalue <{ i64, [2 x i64*] }> %dst.13271, i64* %src.13272, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13274" = bitcast i64* %new_node_ptr.13183 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13273, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13274", align 1
  br label %block.exit.13281

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13275": ; preds = %block.default.13166
  %src.13276 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 0
  %dst.13277 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.13276, 0
  %src.13278 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1547.13179", 4, 0
  %dst.13279 = insertvalue <{ i64, [1 x i64*] }> %dst.13277, i64* %src.13278, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13280" = bitcast i64* %new_node_ptr.13183 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.13279, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13280", align 1
  br label %block.exit.13281

block.exit.13281:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13275", %"block.Cidr_{U_Main.{printFmt_15}_1}.13267", %"block.Cidr_{U_Main.{printFmt_14}_1}.13259", %"block.Cidr_{U_Main.{main_9}_1}.13253", %"block.Cidr_{U_Main.{adder_0}_1}.13243", %block.Cidr_Prelude.List.Nil.13239, %"block.Cidr_Prelude.List.::.13231", %block.Cidr_Prelude.Bool.True.13227, %block.Cidr_Prelude.Bool.False.13223, %"block.Cidr_Data.Vect.::.13215", %block.Cidr_Builtins.MkPair.13207, %block.CGrString.13201, %block.CGrInt.13195, %block.CGrFloat.13189, %block.CErased.13185
  %node_CGrString.13282 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.14, 1, 0
  %alloc_bytes.13283 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13284 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13283 to i64
  %new_node_ptr.13285 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13284 monotonic
  %new_node_ptr.13286 = inttoptr i64 %new_node_ptr.13285 to i64*
  %tag.13287 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13282, 0
  %ptr_CGrString.13288 = bitcast i64* %new_node_ptr.13286 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13282, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13288, align 1
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1546.13289" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.13183, i64* %new_node_ptr.13286)
  %alloc_bytes.13290 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13291 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13290 to i64
  %new_node_ptr.13292 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13291 monotonic
  %new_node_ptr.13293 = inttoptr i64 %new_node_ptr.13292 to i64*
  %tag.13294 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1546.13289", 0
  %ptr_CGrString.13295 = bitcast i64* %new_node_ptr.13293 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val_1546.13289", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13295, align 1
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val.13296" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03", i64* %new_node_ptr.13293)
  %alloc_bytes.13297 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13298 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13297 to i64
  %new_node_ptr.13299 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13298 monotonic
  %new_node_ptr.13300 = inttoptr i64 %new_node_ptr.13299 to i64*
  %tag.13301 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val.13296", 0
  %ptr_CGrString.13302 = bitcast i64* %new_node_ptr.13300 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':09_val.13296", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13302, align 1
  %result.default.13303 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0"(i64* %new_node_ptr.13170, i64* %new_node_ptr.13176, i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02", i64* %new_node_ptr.13300, i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06")
  br label %block.exit.13409

block.Cidr_Prelude.List.Nil.13304:                ; preds = %block.exit.13163
  %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @"idr_{APPLY_0}"(i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02", i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05")
  %alloc_bytes.13306 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.13307 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.13306 to i64
  %new_node_ptr.13308 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13307 monotonic
  %new_node_ptr.13309 = inttoptr i64 %new_node_ptr.13308 to i64*
  %tag.13310 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  switch i64 %tag.13310, label %error_block [
    i64 0, label %block.CErased.13311
    i64 1, label %block.CGrFloat.13315
    i64 2, label %block.CGrInt.13321
    i64 3, label %block.CGrString.13327
    i64 4, label %block.Cidr_Builtins.MkPair.13333
    i64 5, label %"block.Cidr_Data.Vect.::.13341"
    i64 6, label %block.Cidr_Prelude.Bool.False.13349
    i64 7, label %block.Cidr_Prelude.Bool.True.13353
    i64 8, label %"block.Cidr_Prelude.List.::.13357"
    i64 9, label %block.Cidr_Prelude.List.Nil.13365
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.13369"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.13379"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.13385"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.13393"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13401"
  ]

block.CErased.13311:                              ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13312 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13313 = insertvalue <{ i64 }> undef, i64 %src.13312, 0
  %ptr_CErased.13314 = bitcast i64* %new_node_ptr.13309 to <{ i64 }>*
  store <{ i64 }> %dst.13313, <{ i64 }>* %ptr_CErased.13314, align 1
  br label %block.exit.13407

block.CGrFloat.13315:                             ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13316 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13317 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.13316, 0
  %src.13318 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 1, 0
  %dst.13319 = insertvalue <{ i64, [1 x float] }> %dst.13317, float %src.13318, 1, 0
  %ptr_CGrFloat.13320 = bitcast i64* %new_node_ptr.13309 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.13319, <{ i64, [1 x float] }>* %ptr_CGrFloat.13320, align 1
  br label %block.exit.13407

block.CGrInt.13321:                               ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13322 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13323 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.13322, 0
  %src.13324 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 2, 0
  %dst.13325 = insertvalue <{ i64, [1 x i64] }> %dst.13323, i64 %src.13324, 1, 0
  %ptr_CGrInt.13326 = bitcast i64* %new_node_ptr.13309 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.13325, <{ i64, [1 x i64] }>* %ptr_CGrInt.13326, align 1
  br label %block.exit.13407

block.CGrString.13327:                            ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13328 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13329 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.13328, 0
  %src.13330 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 3, 0
  %dst.13331 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.13329, { i8*, i64 }* %src.13330, 1, 0
  %ptr_CGrString.13332 = bitcast i64* %new_node_ptr.13309 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.13331, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13332, align 1
  br label %block.exit.13407

block.Cidr_Builtins.MkPair.13333:                 ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13334 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13335 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13334, 0
  %src.13336 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 1
  %dst.13337 = insertvalue <{ i64, [2 x i64*] }> %dst.13335, i64* %src.13336, 1, 1
  %src.13338 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13339 = insertvalue <{ i64, [2 x i64*] }> %dst.13337, i64* %src.13338, 1, 0
  %ptr_Cidr_Builtins.MkPair.13340 = bitcast i64* %new_node_ptr.13309 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13339, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.13340, align 1
  br label %block.exit.13407

"block.Cidr_Data.Vect.::.13341":                  ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13342 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13343 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13342, 0
  %src.13344 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 1
  %dst.13345 = insertvalue <{ i64, [2 x i64*] }> %dst.13343, i64* %src.13344, 1, 1
  %src.13346 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13347 = insertvalue <{ i64, [2 x i64*] }> %dst.13345, i64* %src.13346, 1, 0
  %"ptr_Cidr_Data.Vect.::.13348" = bitcast i64* %new_node_ptr.13309 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13347, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.13348", align 1
  br label %block.exit.13407

block.Cidr_Prelude.Bool.False.13349:              ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13350 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13351 = insertvalue <{ i64 }> undef, i64 %src.13350, 0
  %ptr_Cidr_Prelude.Bool.False.13352 = bitcast i64* %new_node_ptr.13309 to <{ i64 }>*
  store <{ i64 }> %dst.13351, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.13352, align 1
  br label %block.exit.13407

block.Cidr_Prelude.Bool.True.13353:               ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13354 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13355 = insertvalue <{ i64 }> undef, i64 %src.13354, 0
  %ptr_Cidr_Prelude.Bool.True.13356 = bitcast i64* %new_node_ptr.13309 to <{ i64 }>*
  store <{ i64 }> %dst.13355, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.13356, align 1
  br label %block.exit.13407

"block.Cidr_Prelude.List.::.13357":               ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13358 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13359 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13358, 0
  %src.13360 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 1
  %dst.13361 = insertvalue <{ i64, [2 x i64*] }> %dst.13359, i64* %src.13360, 1, 1
  %src.13362 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13363 = insertvalue <{ i64, [2 x i64*] }> %dst.13361, i64* %src.13362, 1, 0
  %"ptr_Cidr_Prelude.List.::.13364" = bitcast i64* %new_node_ptr.13309 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13363, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13364", align 1
  br label %block.exit.13407

block.Cidr_Prelude.List.Nil.13365:                ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13366 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13367 = insertvalue <{ i64 }> undef, i64 %src.13366, 0
  %ptr_Cidr_Prelude.List.Nil.13368 = bitcast i64* %new_node_ptr.13309 to <{ i64 }>*
  store <{ i64 }> %dst.13367, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.13368, align 1
  br label %block.exit.13407

"block.Cidr_{U_Main.{adder_0}_1}.13369":          ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13370 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13371 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.13370, 0
  %src.13372 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 2
  %dst.13373 = insertvalue <{ i64, [3 x i64*] }> %dst.13371, i64* %src.13372, 1, 2
  %src.13374 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 1
  %dst.13375 = insertvalue <{ i64, [3 x i64*] }> %dst.13373, i64* %src.13374, 1, 1
  %src.13376 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13377 = insertvalue <{ i64, [3 x i64*] }> %dst.13375, i64* %src.13376, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13378" = bitcast i64* %new_node_ptr.13309 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.13377, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13378", align 1
  br label %block.exit.13407

"block.Cidr_{U_Main.{main_9}_1}.13379":           ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13380 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13381 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.13380, 0
  %src.13382 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13383 = insertvalue <{ i64, [1 x i64*] }> %dst.13381, i64* %src.13382, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13384" = bitcast i64* %new_node_ptr.13309 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.13383, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13384", align 1
  br label %block.exit.13407

"block.Cidr_{U_Main.{printFmt_14}_1}.13385":      ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13386 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13387 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13386, 0
  %src.13388 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 1
  %dst.13389 = insertvalue <{ i64, [2 x i64*] }> %dst.13387, i64* %src.13388, 1, 1
  %src.13390 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13391 = insertvalue <{ i64, [2 x i64*] }> %dst.13389, i64* %src.13390, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13392" = bitcast i64* %new_node_ptr.13309 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13391, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13392", align 1
  br label %block.exit.13407

"block.Cidr_{U_Main.{printFmt_15}_1}.13393":      ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13394 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13395 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13394, 0
  %src.13396 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 1
  %dst.13397 = insertvalue <{ i64, [2 x i64*] }> %dst.13395, i64* %src.13396, 1, 1
  %src.13398 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13399 = insertvalue <{ i64, [2 x i64*] }> %dst.13397, i64* %src.13398, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13400" = bitcast i64* %new_node_ptr.13309 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13399, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13400", align 1
  br label %block.exit.13407

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13401": ; preds = %block.Cidr_Prelude.List.Nil.13304
  %src.13402 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 0
  %dst.13403 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.13402, 0
  %src.13404 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':07_val.13305", 4, 0
  %dst.13405 = insertvalue <{ i64, [1 x i64*] }> %dst.13403, i64* %src.13404, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13406" = bitcast i64* %new_node_ptr.13309 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.13405, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13406", align 1
  br label %block.exit.13407

block.exit.13407:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13401", %"block.Cidr_{U_Main.{printFmt_15}_1}.13393", %"block.Cidr_{U_Main.{printFmt_14}_1}.13385", %"block.Cidr_{U_Main.{main_9}_1}.13379", %"block.Cidr_{U_Main.{adder_0}_1}.13369", %block.Cidr_Prelude.List.Nil.13365, %"block.Cidr_Prelude.List.::.13357", %block.Cidr_Prelude.Bool.True.13353, %block.Cidr_Prelude.Bool.False.13349, %"block.Cidr_Data.Vect.::.13341", %block.Cidr_Builtins.MkPair.13333, %block.CGrString.13327, %block.CGrInt.13321, %block.CGrFloat.13315, %block.CErased.13311
  %result.Cidr_Prelude.List.Nil.13408 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03", i64* %new_node_ptr.13309)
  br label %block.exit.13409

block.exit.13409:                                 ; preds = %block.exit.13407, %block.exit.13281
  %"result.Cidr_Prelude.List.::.13410" = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.default.13303, %block.exit.13281 ], [ %result.Cidr_Prelude.List.Nil.13408, %block.exit.13407 ]
  br label %block.exit.13415

block.Cidr_Prelude.List.Nil.13411:                ; preds = %block.exit.13047
  %tag.13412 = load i64, i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03", align 1
  %ptr_CGrString.13413 = bitcast i64* %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03" to <{ i64, [1 x { i8*, i64 }*] }>*
  %node_CGrString.13414 = load <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13413, align 1
  br label %block.exit.13415

block.exit.13415:                                 ; preds = %block.Cidr_Prelude.List.Nil.13411, %block.exit.13409
  %"result.idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.13416" = phi <{ i64, [1 x { i8*, i64 }*] }> [ %"result.Cidr_Prelude.List.::.13410", %block.exit.13409 ], [ %node_CGrString.13414, %block.Cidr_Prelude.List.Nil.13411 ]
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.13416"

error_block:                                      ; preds = %block.Cidr_Prelude.List.Nil.13304, %block.default.13166, %"block.Cidr_Prelude.List.::.13050", %block.exit.13047, %"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00", i64* %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01") #0 {
"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0.entry":
  %tag.13417 = load i64, i64* %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01", align 1
  %ptr_Cidr_Prelude.Bool.True.13418 = bitcast i64* %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.13419 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.13418, align 1
  %tag.13420 = extractvalue <{ i64 }> %node_Cidr_Prelude.Bool.True.13419, 0
  switch i64 %tag.13420, label %error_block [
    i64 7, label %block.Cidr_Prelude.Bool.True.13421
  ]

block.Cidr_Prelude.Bool.True.13421:               ; preds = %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0.entry"
  %tag.13422 = load i64, i64* %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00", align 1
  switch i64 %tag.13422, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.13423
    i64 7, label %block.Cidr_Prelude.Bool.True.13426
  ]

block.Cidr_Prelude.Bool.False.13423:              ; preds = %block.Cidr_Prelude.Bool.True.13421
  %ptr_Cidr_Prelude.Bool.False.13424 = bitcast i64* %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.13425 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.13424, align 1
  br label %block.exit.13429

block.Cidr_Prelude.Bool.True.13426:               ; preds = %block.Cidr_Prelude.Bool.True.13421
  %ptr_Cidr_Prelude.Bool.True.13427 = bitcast i64* %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00" to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.13428 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.13427, align 1
  br label %block.exit.13429

block.exit.13429:                                 ; preds = %block.Cidr_Prelude.Bool.True.13426, %block.Cidr_Prelude.Bool.False.13423
  %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_1550.13430" = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.13425, %block.Cidr_Prelude.Bool.False.13423 ], [ %node_Cidr_Prelude.Bool.True.13428, %block.Cidr_Prelude.Bool.True.13426 ]
  %tag.13431 = extractvalue <{ i64 }> %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_1550.13430", 0
  switch i64 %tag.13431, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.13432
    i64 7, label %block.Cidr_Prelude.Bool.True.13433
  ]

block.Cidr_Prelude.Bool.False.13432:              ; preds = %block.exit.13429
  br label %block.exit.13434

block.Cidr_Prelude.Bool.True.13433:               ; preds = %block.exit.13429
  br label %block.exit.13434

block.exit.13434:                                 ; preds = %block.Cidr_Prelude.Bool.True.13433, %block.Cidr_Prelude.Bool.False.13432
  %result.Cidr_Prelude.Bool.True.13435 = phi <{ i64 }> [ <{ i64 26 }>, %block.Cidr_Prelude.Bool.False.13432 ], [ <{ i64 27 }>, %block.Cidr_Prelude.Bool.True.13433 ]
  br label %block.exit.13436

block.exit.13436:                                 ; preds = %block.exit.13434
  %"result.idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0.13437" = phi <{ i64 }> [ %result.Cidr_Prelude.Bool.True.13435, %block.exit.13434 ]
  ret <{ i64 }> %"result.idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0.13437"

error_block:                                      ; preds = %block.exit.13429, %block.Cidr_Prelude.Bool.True.13421, %"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0"(i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:00", i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:01") #0 {
"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0.entry":
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02_val.13438" = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:00", i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:01")
  %alloc_bytes.13439 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.13440 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.13439 to i64
  %new_node_ptr.13441 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13440 monotonic
  %new_node_ptr.13442 = inttoptr i64 %new_node_ptr.13441 to i64*
  %tag.13443 = extractvalue <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02_val.13438", 0
  %ptr_CGrInt.13444 = bitcast i64* %new_node_ptr.13442 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:02_val.13438", <{ i64, [1 x i64] }>* %ptr_CGrInt.13444, align 1
  %tag.13445 = load i64, i64* %new_node_ptr.13442, align 1
  %ptr_CGrInt.13446 = bitcast i64* %new_node_ptr.13442 to <{ i64, [1 x i64] }>*
  %node_CGrInt.13447 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.13446, align 1
  %tag.13448 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13447, 0
  switch i64 %tag.13448, label %error_block [
    i64 2, label %block.CGrInt.13449
  ]

block.CGrInt.13449:                               ; preds = %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0.entry"
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13447, 1, 0
  switch i64 %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0", label %block.default.13450 [
    i64 0, label %block.int_0.13451
  ]

block.default.13450:                              ; preds = %block.CGrInt.13449
  br label %block.exit.13470

block.int_0.13451:                                ; preds = %block.CGrInt.13449
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03_val.13452" = tail call fastcc <{ i64, [1 x i64] }> @idris_int_lt(i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:00", i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:01")
  %alloc_bytes.13453 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.13454 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.13453 to i64
  %new_node_ptr.13455 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13454 monotonic
  %new_node_ptr.13456 = inttoptr i64 %new_node_ptr.13455 to i64*
  %tag.13457 = extractvalue <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03_val.13452", 0
  %ptr_CGrInt.13458 = bitcast i64* %new_node_ptr.13456 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:03_val.13452", <{ i64, [1 x i64] }>* %ptr_CGrInt.13458, align 1
  %tag.13459 = load i64, i64* %new_node_ptr.13456, align 1
  %ptr_CGrInt.13460 = bitcast i64* %new_node_ptr.13456 to <{ i64, [1 x i64] }>*
  %node_CGrInt.13461 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.13460, align 1
  %tag.13462 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13461, 0
  switch i64 %tag.13462, label %error_block [
    i64 2, label %block.CGrInt.13463
  ]

block.CGrInt.13463:                               ; preds = %block.int_0.13451
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0_1553" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13461, 1, 0
  switch i64 %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0_cpat_LInt64_0_1553", label %block.default.13464 [
    i64 0, label %block.int_0.13465
  ]

block.default.13464:                              ; preds = %block.CGrInt.13463
  br label %block.exit.13466

block.int_0.13465:                                ; preds = %block.CGrInt.13463
  br label %block.exit.13466

block.exit.13466:                                 ; preds = %block.int_0.13465, %block.default.13464
  %result.CGrInt.13467 = phi <{ i64 }> [ <{ i64 20 }>, %block.default.13464 ], [ <{ i64 19 }>, %block.int_0.13465 ]
  br label %block.exit.13468

block.exit.13468:                                 ; preds = %block.exit.13466
  %result.int_0.13469 = phi <{ i64 }> [ %result.CGrInt.13467, %block.exit.13466 ]
  br label %block.exit.13470

block.exit.13470:                                 ; preds = %block.exit.13468, %block.default.13450
  %result.CGrInt.13471 = phi <{ i64 }> [ <{ i64 18 }>, %block.default.13450 ], [ %result.int_0.13469, %block.exit.13468 ]
  br label %block.exit.13472

block.exit.13472:                                 ; preds = %block.exit.13470
  %"result.idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0.13473" = phi <{ i64 }> [ %result.CGrInt.13471, %block.exit.13470 ]
  ret <{ i64 }> %"result.idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0.13473"

error_block:                                      ; preds = %block.int_0.13451, %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Char:!compare:0.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64 }> @"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0"(i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00", i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01") #0 {
"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0.entry":
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val.13474" = tail call fastcc <{ i64, [1 x i64] }> @idris_int_eq(i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00", i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01")
  %alloc_bytes.13475 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.13476 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.13475 to i64
  %new_node_ptr.13477 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13476 monotonic
  %new_node_ptr.13478 = inttoptr i64 %new_node_ptr.13477 to i64*
  %tag.13479 = extractvalue <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val.13474", 0
  %ptr_CGrInt.13480 = bitcast i64* %new_node_ptr.13478 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val.13474", <{ i64, [1 x i64] }>* %ptr_CGrInt.13480, align 1
  %tag.13481 = load i64, i64* %new_node_ptr.13478, align 1
  %ptr_CGrInt.13482 = bitcast i64* %new_node_ptr.13478 to <{ i64, [1 x i64] }>*
  %node_CGrInt.13483 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.13482, align 1
  %tag.13484 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13483, 0
  switch i64 %tag.13484, label %error_block [
    i64 2, label %block.CGrInt.13485
  ]

block.CGrInt.13485:                               ; preds = %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0.entry"
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13483, 1, 0
  switch i64 %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0", label %block.default.13486 [
    i64 0, label %block.int_0.13487
  ]

block.default.13486:                              ; preds = %block.CGrInt.13485
  br label %block.exit.13506

block.int_0.13487:                                ; preds = %block.CGrInt.13485
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val.13488" = tail call fastcc <{ i64, [1 x i64] }> @idris_int_lt(i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00", i64* %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01")
  %alloc_bytes.13489 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.13490 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.13489 to i64
  %new_node_ptr.13491 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13490 monotonic
  %new_node_ptr.13492 = inttoptr i64 %new_node_ptr.13491 to i64*
  %tag.13493 = extractvalue <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val.13488", 0
  %ptr_CGrInt.13494 = bitcast i64* %new_node_ptr.13492 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val.13488", <{ i64, [1 x i64] }>* %ptr_CGrInt.13494, align 1
  %tag.13495 = load i64, i64* %new_node_ptr.13492, align 1
  %ptr_CGrInt.13496 = bitcast i64* %new_node_ptr.13492 to <{ i64, [1 x i64] }>*
  %node_CGrInt.13497 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.13496, align 1
  %tag.13498 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13497, 0
  switch i64 %tag.13498, label %error_block [
    i64 2, label %block.CGrInt.13499
  ]

block.CGrInt.13499:                               ; preds = %block.int_0.13487
  %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_1556" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.13497, 1, 0
  switch i64 %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_1556", label %block.default.13500 [
    i64 0, label %block.int_0.13501
  ]

block.default.13500:                              ; preds = %block.CGrInt.13499
  br label %block.exit.13502

block.int_0.13501:                                ; preds = %block.CGrInt.13499
  br label %block.exit.13502

block.exit.13502:                                 ; preds = %block.int_0.13501, %block.default.13500
  %result.CGrInt.13503 = phi <{ i64 }> [ <{ i64 20 }>, %block.default.13500 ], [ <{ i64 19 }>, %block.int_0.13501 ]
  br label %block.exit.13504

block.exit.13504:                                 ; preds = %block.exit.13502
  %result.int_0.13505 = phi <{ i64 }> [ %result.CGrInt.13503, %block.exit.13502 ]
  br label %block.exit.13506

block.exit.13506:                                 ; preds = %block.exit.13504, %block.default.13486
  %result.CGrInt.13507 = phi <{ i64 }> [ <{ i64 18 }>, %block.default.13486 ], [ %result.int_0.13505, %block.exit.13504 ]
  br label %block.exit.13508

block.exit.13508:                                 ; preds = %block.exit.13506
  %"result.idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0.13509" = phi <{ i64 }> [ %result.CGrInt.13507, %block.exit.13506 ]
  ret <{ i64 }> %"result.idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0.13509"

error_block:                                      ; preds = %block.int_0.13487, %"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0"(i64* %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:00", i64* %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:01", i64* %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:02", i64* %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:03") #0 {
"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry":
  %node_CGrString.13510 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.25, 1, 0
  %alloc_bytes.13511 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13512 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13511 to i64
  %new_node_ptr.13513 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13512 monotonic
  %new_node_ptr.13514 = inttoptr i64 %new_node_ptr.13513 to i64*
  %tag.13515 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13510, 0
  %ptr_CGrString.13516 = bitcast i64* %new_node_ptr.13514 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13510, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13516, align 1
  %alloc_bytes.13517 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13518 = ptrtoint <{ i64 }>* %alloc_bytes.13517 to i64
  %new_node_ptr.13519 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13518 monotonic
  %new_node_ptr.13520 = inttoptr i64 %new_node_ptr.13519 to i64*
  %tag.13521 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.13522 = bitcast i64* %new_node_ptr.13520 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.13522, align 1
  %alloc_bytes.13523 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13524 = ptrtoint <{ i64 }>* %alloc_bytes.13523 to i64
  %new_node_ptr.13525 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13524 monotonic
  %new_node_ptr.13526 = inttoptr i64 %new_node_ptr.13525 to i64*
  %tag.13527 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.13528 = bitcast i64* %new_node_ptr.13526 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.13528, align 1
  %node_CGrString.13529 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.13530 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13531 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13530 to i64
  %new_node_ptr.13532 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13531 monotonic
  %new_node_ptr.13533 = inttoptr i64 %new_node_ptr.13532 to i64*
  %tag.13534 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13529, 0
  %ptr_CGrString.13535 = bitcast i64* %new_node_ptr.13533 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13529, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13535, align 1
  %alloc_bytes.13536 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13537 = ptrtoint <{ i64 }>* %alloc_bytes.13536 to i64
  %new_node_ptr.13538 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13537 monotonic
  %new_node_ptr.13539 = inttoptr i64 %new_node_ptr.13538 to i64*
  %tag.13540 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.13541 = bitcast i64* %new_node_ptr.13539 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.13541, align 1
  %alloc_bytes.13542 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13543 = ptrtoint <{ i64 }>* %alloc_bytes.13542 to i64
  %new_node_ptr.13544 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13543 monotonic
  %new_node_ptr.13545 = inttoptr i64 %new_node_ptr.13544 to i64*
  %tag.13546 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.13547 = bitcast i64* %new_node_ptr.13545 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.13547, align 1
  %alloc_bytes.13548 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13549 = ptrtoint <{ i64 }>* %alloc_bytes.13548 to i64
  %new_node_ptr.13550 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13549 monotonic
  %new_node_ptr.13551 = inttoptr i64 %new_node_ptr.13550 to i64*
  %tag.13552 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.13553 = bitcast i64* %new_node_ptr.13551 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.13553, align 1
  %alloc_bytes.13554 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13555 = ptrtoint <{ i64 }>* %alloc_bytes.13554 to i64
  %new_node_ptr.13556 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13555 monotonic
  %new_node_ptr.13557 = inttoptr i64 %new_node_ptr.13556 to i64*
  %tag.13558 = extractvalue <{ i64 }> <{ i64 55 }>, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}\22.13559" = bitcast i64* %new_node_ptr.13557 to <{ i64 }>*
  store <{ i64 }> <{ i64 55 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_2}\22.13559", align 1
  %alloc_bytes.13560 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13561 = ptrtoint <{ i64 }>* %alloc_bytes.13560 to i64
  %new_node_ptr.13562 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13561 monotonic
  %new_node_ptr.13563 = inttoptr i64 %new_node_ptr.13562 to i64*
  %tag.13564 = extractvalue <{ i64 }> <{ i64 9 }>, 0
  %ptr_Cidr_Prelude.List.Nil.13565 = bitcast i64* %new_node_ptr.13563 to <{ i64 }>*
  store <{ i64 }> <{ i64 9 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.13565, align 1
  %alloc_bytes.13566 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13567 = ptrtoint <{ i64 }>* %alloc_bytes.13566 to i64
  %new_node_ptr.13568 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13567 monotonic
  %new_node_ptr.13569 = inttoptr i64 %new_node_ptr.13568 to i64*
  %tag.13570 = extractvalue <{ i64 }> <{ i64 56 }>, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}\22.13571" = bitcast i64* %new_node_ptr.13569 to <{ i64 }>*
  store <{ i64 }> <{ i64 56 }>, <{ i64 }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_29}_1}\22.13571", align 1
  %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572" = tail call fastcc <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> @idr_Data.Vect.foldrImpl(i64* %new_node_ptr.13539, i64* %new_node_ptr.13545, i64* %new_node_ptr.13551, i64* %new_node_ptr.13557, i64* %new_node_ptr.13563, i64* %new_node_ptr.13569, i64* %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:03")
  %alloc_bytes.13573 = getelementptr inbounds <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>, <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* null, i32 1
  %alloc_bytes.13574 = ptrtoint <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }>* %alloc_bytes.13573 to i64
  %new_node_ptr.13575 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13574 monotonic
  %new_node_ptr.13576 = inttoptr i64 %new_node_ptr.13575 to i64*
  %tag.13577 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  switch i64 %tag.13577, label %error_block [
    i64 0, label %block.CErased.13578
    i64 1, label %block.CGrFloat.13582
    i64 2, label %block.CGrInt.13588
    i64 3, label %block.CGrString.13594
    i64 4, label %block.Cidr_Builtins.MkPair.13600
    i64 5, label %"block.Cidr_Data.Vect.::.13608"
    i64 6, label %block.Cidr_Prelude.Bool.False.13616
    i64 7, label %block.Cidr_Prelude.Bool.True.13620
    i64 8, label %"block.Cidr_Prelude.List.::.13624"
    i64 9, label %block.Cidr_Prelude.List.Nil.13632
    i64 10, label %"block.Cidr_{U_Main.{adder_0}_1}.13636"
    i64 11, label %"block.Cidr_{U_Main.{main_9}_1}.13646"
    i64 12, label %"block.Cidr_{U_Main.{printFmt_14}_1}.13652"
    i64 13, label %"block.Cidr_{U_Main.{printFmt_15}_1}.13660"
    i64 14, label %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13668"
  ]

block.CErased.13578:                              ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13579 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13580 = insertvalue <{ i64 }> undef, i64 %src.13579, 0
  %ptr_CErased.13581 = bitcast i64* %new_node_ptr.13576 to <{ i64 }>*
  store <{ i64 }> %dst.13580, <{ i64 }>* %ptr_CErased.13581, align 1
  br label %block.exit.13674

block.CGrFloat.13582:                             ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13583 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13584 = insertvalue <{ i64, [1 x float] }> undef, i64 %src.13583, 0
  %src.13585 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 1, 0
  %dst.13586 = insertvalue <{ i64, [1 x float] }> %dst.13584, float %src.13585, 1, 0
  %ptr_CGrFloat.13587 = bitcast i64* %new_node_ptr.13576 to <{ i64, [1 x float] }>*
  store <{ i64, [1 x float] }> %dst.13586, <{ i64, [1 x float] }>* %ptr_CGrFloat.13587, align 1
  br label %block.exit.13674

block.CGrInt.13588:                               ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13589 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13590 = insertvalue <{ i64, [1 x i64] }> undef, i64 %src.13589, 0
  %src.13591 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 2, 0
  %dst.13592 = insertvalue <{ i64, [1 x i64] }> %dst.13590, i64 %src.13591, 1, 0
  %ptr_CGrInt.13593 = bitcast i64* %new_node_ptr.13576 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %dst.13592, <{ i64, [1 x i64] }>* %ptr_CGrInt.13593, align 1
  br label %block.exit.13674

block.CGrString.13594:                            ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13595 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13596 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> undef, i64 %src.13595, 0
  %src.13597 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 3, 0
  %dst.13598 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> %dst.13596, { i8*, i64 }* %src.13597, 1, 0
  %ptr_CGrString.13599 = bitcast i64* %new_node_ptr.13576 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %dst.13598, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13599, align 1
  br label %block.exit.13674

block.Cidr_Builtins.MkPair.13600:                 ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13601 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13602 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13601, 0
  %src.13603 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 1
  %dst.13604 = insertvalue <{ i64, [2 x i64*] }> %dst.13602, i64* %src.13603, 1, 1
  %src.13605 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13606 = insertvalue <{ i64, [2 x i64*] }> %dst.13604, i64* %src.13605, 1, 0
  %ptr_Cidr_Builtins.MkPair.13607 = bitcast i64* %new_node_ptr.13576 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13606, <{ i64, [2 x i64*] }>* %ptr_Cidr_Builtins.MkPair.13607, align 1
  br label %block.exit.13674

"block.Cidr_Data.Vect.::.13608":                  ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13609 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13610 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13609, 0
  %src.13611 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 1
  %dst.13612 = insertvalue <{ i64, [2 x i64*] }> %dst.13610, i64* %src.13611, 1, 1
  %src.13613 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13614 = insertvalue <{ i64, [2 x i64*] }> %dst.13612, i64* %src.13613, 1, 0
  %"ptr_Cidr_Data.Vect.::.13615" = bitcast i64* %new_node_ptr.13576 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13614, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Data.Vect.::.13615", align 1
  br label %block.exit.13674

block.Cidr_Prelude.Bool.False.13616:              ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13617 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13618 = insertvalue <{ i64 }> undef, i64 %src.13617, 0
  %ptr_Cidr_Prelude.Bool.False.13619 = bitcast i64* %new_node_ptr.13576 to <{ i64 }>*
  store <{ i64 }> %dst.13618, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.13619, align 1
  br label %block.exit.13674

block.Cidr_Prelude.Bool.True.13620:               ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13621 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13622 = insertvalue <{ i64 }> undef, i64 %src.13621, 0
  %ptr_Cidr_Prelude.Bool.True.13623 = bitcast i64* %new_node_ptr.13576 to <{ i64 }>*
  store <{ i64 }> %dst.13622, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.13623, align 1
  br label %block.exit.13674

"block.Cidr_Prelude.List.::.13624":               ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13625 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13626 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13625, 0
  %src.13627 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 1
  %dst.13628 = insertvalue <{ i64, [2 x i64*] }> %dst.13626, i64* %src.13627, 1, 1
  %src.13629 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13630 = insertvalue <{ i64, [2 x i64*] }> %dst.13628, i64* %src.13629, 1, 0
  %"ptr_Cidr_Prelude.List.::.13631" = bitcast i64* %new_node_ptr.13576 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13630, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13631", align 1
  br label %block.exit.13674

block.Cidr_Prelude.List.Nil.13632:                ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13633 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13634 = insertvalue <{ i64 }> undef, i64 %src.13633, 0
  %ptr_Cidr_Prelude.List.Nil.13635 = bitcast i64* %new_node_ptr.13576 to <{ i64 }>*
  store <{ i64 }> %dst.13634, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.13635, align 1
  br label %block.exit.13674

"block.Cidr_{U_Main.{adder_0}_1}.13636":          ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13637 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13638 = insertvalue <{ i64, [3 x i64*] }> undef, i64 %src.13637, 0
  %src.13639 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 2
  %dst.13640 = insertvalue <{ i64, [3 x i64*] }> %dst.13638, i64* %src.13639, 1, 2
  %src.13641 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 1
  %dst.13642 = insertvalue <{ i64, [3 x i64*] }> %dst.13640, i64* %src.13641, 1, 1
  %src.13643 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13644 = insertvalue <{ i64, [3 x i64*] }> %dst.13642, i64* %src.13643, 1, 0
  %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13645" = bitcast i64* %new_node_ptr.13576 to <{ i64, [3 x i64*] }>*
  store <{ i64, [3 x i64*] }> %dst.13644, <{ i64, [3 x i64*] }>* %"ptr_C\22idr_{U_Main.{adder_0}_1}\22.13645", align 1
  br label %block.exit.13674

"block.Cidr_{U_Main.{main_9}_1}.13646":           ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13647 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13648 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.13647, 0
  %src.13649 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13650 = insertvalue <{ i64, [1 x i64*] }> %dst.13648, i64* %src.13649, 1, 0
  %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13651" = bitcast i64* %new_node_ptr.13576 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.13650, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Main.{main_9}_1}\22.13651", align 1
  br label %block.exit.13674

"block.Cidr_{U_Main.{printFmt_14}_1}.13652":      ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13653 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13654 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13653, 0
  %src.13655 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 1
  %dst.13656 = insertvalue <{ i64, [2 x i64*] }> %dst.13654, i64* %src.13655, 1, 1
  %src.13657 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13658 = insertvalue <{ i64, [2 x i64*] }> %dst.13656, i64* %src.13657, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13659" = bitcast i64* %new_node_ptr.13576 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13658, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_14}_1}\22.13659", align 1
  br label %block.exit.13674

"block.Cidr_{U_Main.{printFmt_15}_1}.13660":      ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13661 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13662 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.13661, 0
  %src.13663 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 1
  %dst.13664 = insertvalue <{ i64, [2 x i64*] }> %dst.13662, i64* %src.13663, 1, 1
  %src.13665 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13666 = insertvalue <{ i64, [2 x i64*] }> %dst.13664, i64* %src.13665, 1, 0
  %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13667" = bitcast i64* %new_node_ptr.13576 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %dst.13666, <{ i64, [2 x i64*] }>* %"ptr_C\22idr_{U_Main.{printFmt_15}_1}\22.13667", align 1
  br label %block.exit.13674

"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13668": ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  %src.13669 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 0
  %dst.13670 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.13669, 0
  %src.13671 = extractvalue <{ i64, [1 x float], [1 x i64], [1 x { i8*, i64 }*], [3 x i64*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.13572", 4, 0
  %dst.13672 = insertvalue <{ i64, [1 x i64*] }> %dst.13670, i64* %src.13671, 1, 0
  %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13673" = bitcast i64* %new_node_ptr.13576 to <{ i64, [1 x i64*] }>*
  store <{ i64, [1 x i64*] }> %dst.13672, <{ i64, [1 x i64*] }>* %"ptr_C\22idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}\22.13673", align 1
  br label %block.exit.13674

block.exit.13674:                                 ; preds = %"block.Cidr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_28}_1}.13668", %"block.Cidr_{U_Main.{printFmt_15}_1}.13660", %"block.Cidr_{U_Main.{printFmt_14}_1}.13652", %"block.Cidr_{U_Main.{main_9}_1}.13646", %"block.Cidr_{U_Main.{adder_0}_1}.13636", %block.Cidr_Prelude.List.Nil.13632, %"block.Cidr_Prelude.List.::.13624", %block.Cidr_Prelude.Bool.True.13620, %block.Cidr_Prelude.Bool.False.13616, %"block.Cidr_Data.Vect.::.13608", %block.Cidr_Builtins.MkPair.13600, %block.CGrString.13594, %block.CGrInt.13588, %block.CGrFloat.13582, %block.CErased.13578
  %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val_1563.13675" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0"(i64* %new_node_ptr.13520, i64* %new_node_ptr.13526, i64* %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:02", i64* %new_node_ptr.13533, i64* %new_node_ptr.13576)
  %alloc_bytes.13676 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13677 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13676 to i64
  %new_node_ptr.13678 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13677 monotonic
  %new_node_ptr.13679 = inttoptr i64 %new_node_ptr.13678 to i64*
  %tag.13680 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val_1563.13675", 0
  %ptr_CGrString.13681 = bitcast i64* %new_node_ptr.13679 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val_1563.13675", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13681, align 1
  %node_CGrString.13682 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.26, 1, 0
  %alloc_bytes.13683 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13684 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13683 to i64
  %new_node_ptr.13685 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13684 monotonic
  %new_node_ptr.13686 = inttoptr i64 %new_node_ptr.13685 to i64*
  %tag.13687 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13682, 0
  %ptr_CGrString.13688 = bitcast i64* %new_node_ptr.13686 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13682, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13688, align 1
  %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val.13689" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.13679, i64* %new_node_ptr.13686)
  %alloc_bytes.13690 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13691 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13690 to i64
  %new_node_ptr.13692 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13691 monotonic
  %new_node_ptr.13693 = inttoptr i64 %new_node_ptr.13692 to i64*
  %tag.13694 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val.13689", 0
  %ptr_CGrString.13695 = bitcast i64* %new_node_ptr.13693 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:05_val.13689", <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13695, align 1
  %"result.idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.13696" = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_concat(i64* %new_node_ptr.13514, i64* %new_node_ptr.13693)
  ret <{ i64, [1 x { i8*, i64 }*] }> %"result.idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.13696"

error_block:                                      ; preds = %"idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [2 x i64*] }> @"idr_Prelude.Show.showLitChar:asciiTab:10"(i64* %"idr_Prelude.Show.showLitChar:asciiTab:100") #0 {
"idr_Prelude.Show.showLitChar:asciiTab:10.entry":
  %node_CGrString.13697 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.27, 1, 0
  %alloc_bytes.13698 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13699 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13698 to i64
  %new_node_ptr.13700 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13699 monotonic
  %new_node_ptr.13701 = inttoptr i64 %new_node_ptr.13700 to i64*
  %tag.13702 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13697, 0
  %ptr_CGrString.13703 = bitcast i64* %new_node_ptr.13701 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13697, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13703, align 1
  %node_CGrString.13704 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.28, 1, 0
  %alloc_bytes.13705 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13706 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13705 to i64
  %new_node_ptr.13707 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13706 monotonic
  %new_node_ptr.13708 = inttoptr i64 %new_node_ptr.13707 to i64*
  %tag.13709 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13704, 0
  %ptr_CGrString.13710 = bitcast i64* %new_node_ptr.13708 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13704, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13710, align 1
  %node_CGrString.13711 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.29, 1, 0
  %alloc_bytes.13712 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13713 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13712 to i64
  %new_node_ptr.13714 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13713 monotonic
  %new_node_ptr.13715 = inttoptr i64 %new_node_ptr.13714 to i64*
  %tag.13716 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13711, 0
  %ptr_CGrString.13717 = bitcast i64* %new_node_ptr.13715 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13711, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13717, align 1
  %node_CGrString.13718 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.30, 1, 0
  %alloc_bytes.13719 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13720 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13719 to i64
  %new_node_ptr.13721 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13720 monotonic
  %new_node_ptr.13722 = inttoptr i64 %new_node_ptr.13721 to i64*
  %tag.13723 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13718, 0
  %ptr_CGrString.13724 = bitcast i64* %new_node_ptr.13722 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13718, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13724, align 1
  %node_CGrString.13725 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.31, 1, 0
  %alloc_bytes.13726 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13727 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13726 to i64
  %new_node_ptr.13728 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13727 monotonic
  %new_node_ptr.13729 = inttoptr i64 %new_node_ptr.13728 to i64*
  %tag.13730 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13725, 0
  %ptr_CGrString.13731 = bitcast i64* %new_node_ptr.13729 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13725, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13731, align 1
  %node_CGrString.13732 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.32, 1, 0
  %alloc_bytes.13733 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13734 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13733 to i64
  %new_node_ptr.13735 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13734 monotonic
  %new_node_ptr.13736 = inttoptr i64 %new_node_ptr.13735 to i64*
  %tag.13737 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13732, 0
  %ptr_CGrString.13738 = bitcast i64* %new_node_ptr.13736 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13732, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13738, align 1
  %node_CGrString.13739 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.33, 1, 0
  %alloc_bytes.13740 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13741 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13740 to i64
  %new_node_ptr.13742 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13741 monotonic
  %new_node_ptr.13743 = inttoptr i64 %new_node_ptr.13742 to i64*
  %tag.13744 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13739, 0
  %ptr_CGrString.13745 = bitcast i64* %new_node_ptr.13743 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13739, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13745, align 1
  %node_CGrString.13746 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.34, 1, 0
  %alloc_bytes.13747 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13748 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13747 to i64
  %new_node_ptr.13749 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13748 monotonic
  %new_node_ptr.13750 = inttoptr i64 %new_node_ptr.13749 to i64*
  %tag.13751 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13746, 0
  %ptr_CGrString.13752 = bitcast i64* %new_node_ptr.13750 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13746, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13752, align 1
  %node_CGrString.13753 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.35, 1, 0
  %alloc_bytes.13754 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13755 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13754 to i64
  %new_node_ptr.13756 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13755 monotonic
  %new_node_ptr.13757 = inttoptr i64 %new_node_ptr.13756 to i64*
  %tag.13758 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13753, 0
  %ptr_CGrString.13759 = bitcast i64* %new_node_ptr.13757 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13753, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13759, align 1
  %node_CGrString.13760 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.36, 1, 0
  %alloc_bytes.13761 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13762 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13761 to i64
  %new_node_ptr.13763 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13762 monotonic
  %new_node_ptr.13764 = inttoptr i64 %new_node_ptr.13763 to i64*
  %tag.13765 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13760, 0
  %ptr_CGrString.13766 = bitcast i64* %new_node_ptr.13764 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13760, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13766, align 1
  %node_CGrString.13767 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.37, 1, 0
  %alloc_bytes.13768 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13769 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13768 to i64
  %new_node_ptr.13770 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13769 monotonic
  %new_node_ptr.13771 = inttoptr i64 %new_node_ptr.13770 to i64*
  %tag.13772 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13767, 0
  %ptr_CGrString.13773 = bitcast i64* %new_node_ptr.13771 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13767, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13773, align 1
  %node_CGrString.13774 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.38, 1, 0
  %alloc_bytes.13775 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13776 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13775 to i64
  %new_node_ptr.13777 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13776 monotonic
  %new_node_ptr.13778 = inttoptr i64 %new_node_ptr.13777 to i64*
  %tag.13779 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13774, 0
  %ptr_CGrString.13780 = bitcast i64* %new_node_ptr.13778 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13774, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13780, align 1
  %node_CGrString.13781 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.39, 1, 0
  %alloc_bytes.13782 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13783 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13782 to i64
  %new_node_ptr.13784 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13783 monotonic
  %new_node_ptr.13785 = inttoptr i64 %new_node_ptr.13784 to i64*
  %tag.13786 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13781, 0
  %ptr_CGrString.13787 = bitcast i64* %new_node_ptr.13785 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13781, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13787, align 1
  %node_CGrString.13788 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.40, 1, 0
  %alloc_bytes.13789 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13790 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13789 to i64
  %new_node_ptr.13791 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13790 monotonic
  %new_node_ptr.13792 = inttoptr i64 %new_node_ptr.13791 to i64*
  %tag.13793 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13788, 0
  %ptr_CGrString.13794 = bitcast i64* %new_node_ptr.13792 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13788, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13794, align 1
  %node_CGrString.13795 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.41, 1, 0
  %alloc_bytes.13796 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13797 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13796 to i64
  %new_node_ptr.13798 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13797 monotonic
  %new_node_ptr.13799 = inttoptr i64 %new_node_ptr.13798 to i64*
  %tag.13800 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13795, 0
  %ptr_CGrString.13801 = bitcast i64* %new_node_ptr.13799 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13795, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13801, align 1
  %node_CGrString.13802 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.42, 1, 0
  %alloc_bytes.13803 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13804 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13803 to i64
  %new_node_ptr.13805 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13804 monotonic
  %new_node_ptr.13806 = inttoptr i64 %new_node_ptr.13805 to i64*
  %tag.13807 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13802, 0
  %ptr_CGrString.13808 = bitcast i64* %new_node_ptr.13806 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13802, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13808, align 1
  %node_CGrString.13809 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.43, 1, 0
  %alloc_bytes.13810 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13811 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13810 to i64
  %new_node_ptr.13812 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13811 monotonic
  %new_node_ptr.13813 = inttoptr i64 %new_node_ptr.13812 to i64*
  %tag.13814 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13809, 0
  %ptr_CGrString.13815 = bitcast i64* %new_node_ptr.13813 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13809, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13815, align 1
  %node_CGrString.13816 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.44, 1, 0
  %alloc_bytes.13817 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13818 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13817 to i64
  %new_node_ptr.13819 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13818 monotonic
  %new_node_ptr.13820 = inttoptr i64 %new_node_ptr.13819 to i64*
  %tag.13821 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13816, 0
  %ptr_CGrString.13822 = bitcast i64* %new_node_ptr.13820 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13816, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13822, align 1
  %node_CGrString.13823 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.45, 1, 0
  %alloc_bytes.13824 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13825 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13824 to i64
  %new_node_ptr.13826 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13825 monotonic
  %new_node_ptr.13827 = inttoptr i64 %new_node_ptr.13826 to i64*
  %tag.13828 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13823, 0
  %ptr_CGrString.13829 = bitcast i64* %new_node_ptr.13827 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13823, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13829, align 1
  %node_CGrString.13830 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.46, 1, 0
  %alloc_bytes.13831 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13832 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13831 to i64
  %new_node_ptr.13833 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13832 monotonic
  %new_node_ptr.13834 = inttoptr i64 %new_node_ptr.13833 to i64*
  %tag.13835 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13830, 0
  %ptr_CGrString.13836 = bitcast i64* %new_node_ptr.13834 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13830, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13836, align 1
  %node_CGrString.13837 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.47, 1, 0
  %alloc_bytes.13838 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13839 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13838 to i64
  %new_node_ptr.13840 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13839 monotonic
  %new_node_ptr.13841 = inttoptr i64 %new_node_ptr.13840 to i64*
  %tag.13842 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13837, 0
  %ptr_CGrString.13843 = bitcast i64* %new_node_ptr.13841 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13837, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13843, align 1
  %node_CGrString.13844 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.48, 1, 0
  %alloc_bytes.13845 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13846 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13845 to i64
  %new_node_ptr.13847 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13846 monotonic
  %new_node_ptr.13848 = inttoptr i64 %new_node_ptr.13847 to i64*
  %tag.13849 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13844, 0
  %ptr_CGrString.13850 = bitcast i64* %new_node_ptr.13848 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13844, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13850, align 1
  %node_CGrString.13851 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.49, 1, 0
  %alloc_bytes.13852 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13853 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13852 to i64
  %new_node_ptr.13854 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13853 monotonic
  %new_node_ptr.13855 = inttoptr i64 %new_node_ptr.13854 to i64*
  %tag.13856 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13851, 0
  %ptr_CGrString.13857 = bitcast i64* %new_node_ptr.13855 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13851, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13857, align 1
  %node_CGrString.13858 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.50, 1, 0
  %alloc_bytes.13859 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13860 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13859 to i64
  %new_node_ptr.13861 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13860 monotonic
  %new_node_ptr.13862 = inttoptr i64 %new_node_ptr.13861 to i64*
  %tag.13863 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13858, 0
  %ptr_CGrString.13864 = bitcast i64* %new_node_ptr.13862 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13858, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13864, align 1
  %node_CGrString.13865 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.51, 1, 0
  %alloc_bytes.13866 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13867 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13866 to i64
  %new_node_ptr.13868 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13867 monotonic
  %new_node_ptr.13869 = inttoptr i64 %new_node_ptr.13868 to i64*
  %tag.13870 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13865, 0
  %ptr_CGrString.13871 = bitcast i64* %new_node_ptr.13869 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13865, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13871, align 1
  %node_CGrString.13872 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.52, 1, 0
  %alloc_bytes.13873 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13874 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13873 to i64
  %new_node_ptr.13875 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13874 monotonic
  %new_node_ptr.13876 = inttoptr i64 %new_node_ptr.13875 to i64*
  %tag.13877 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13872, 0
  %ptr_CGrString.13878 = bitcast i64* %new_node_ptr.13876 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13872, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13878, align 1
  %node_CGrString.13879 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.53, 1, 0
  %alloc_bytes.13880 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13881 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13880 to i64
  %new_node_ptr.13882 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13881 monotonic
  %new_node_ptr.13883 = inttoptr i64 %new_node_ptr.13882 to i64*
  %tag.13884 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13879, 0
  %ptr_CGrString.13885 = bitcast i64* %new_node_ptr.13883 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13879, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13885, align 1
  %node_CGrString.13886 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.54, 1, 0
  %alloc_bytes.13887 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13888 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13887 to i64
  %new_node_ptr.13889 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13888 monotonic
  %new_node_ptr.13890 = inttoptr i64 %new_node_ptr.13889 to i64*
  %tag.13891 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13886, 0
  %ptr_CGrString.13892 = bitcast i64* %new_node_ptr.13890 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13886, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13892, align 1
  %node_CGrString.13893 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.55, 1, 0
  %alloc_bytes.13894 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13895 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13894 to i64
  %new_node_ptr.13896 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13895 monotonic
  %new_node_ptr.13897 = inttoptr i64 %new_node_ptr.13896 to i64*
  %tag.13898 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13893, 0
  %ptr_CGrString.13899 = bitcast i64* %new_node_ptr.13897 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13893, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13899, align 1
  %node_CGrString.13900 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.56, 1, 0
  %alloc_bytes.13901 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13902 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13901 to i64
  %new_node_ptr.13903 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13902 monotonic
  %new_node_ptr.13904 = inttoptr i64 %new_node_ptr.13903 to i64*
  %tag.13905 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13900, 0
  %ptr_CGrString.13906 = bitcast i64* %new_node_ptr.13904 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13900, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13906, align 1
  %node_CGrString.13907 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.57, 1, 0
  %alloc_bytes.13908 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13909 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13908 to i64
  %new_node_ptr.13910 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13909 monotonic
  %new_node_ptr.13911 = inttoptr i64 %new_node_ptr.13910 to i64*
  %tag.13912 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13907, 0
  %ptr_CGrString.13913 = bitcast i64* %new_node_ptr.13911 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13907, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13913, align 1
  %node_CGrString.13914 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.58, 1, 0
  %alloc_bytes.13915 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.13916 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.13915 to i64
  %new_node_ptr.13917 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13916 monotonic
  %new_node_ptr.13918 = inttoptr i64 %new_node_ptr.13917 to i64*
  %tag.13919 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13914, 0
  %ptr_CGrString.13920 = bitcast i64* %new_node_ptr.13918 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.13914, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.13920, align 1
  %alloc_bytes.13921 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.13922 = ptrtoint <{ i64 }>* %alloc_bytes.13921 to i64
  %new_node_ptr.13923 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13922 monotonic
  %new_node_ptr.13924 = inttoptr i64 %new_node_ptr.13923 to i64*
  %tag.13925 = extractvalue <{ i64 }> <{ i64 9 }>, 0
  %ptr_Cidr_Prelude.List.Nil.13926 = bitcast i64* %new_node_ptr.13924 to <{ i64 }>*
  store <{ i64 }> <{ i64 9 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.13926, align 1
  %"node_Cidr_Prelude.List.::.13927" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13918, 1, 0
  %"node_Cidr_Prelude.List.::.13928" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13927", i64* %new_node_ptr.13924, 1, 1
  %alloc_bytes.13929 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13930 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13929 to i64
  %new_node_ptr.13931 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13930 monotonic
  %new_node_ptr.13932 = inttoptr i64 %new_node_ptr.13931 to i64*
  %tag.13933 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13928", 0
  %"ptr_Cidr_Prelude.List.::.13934" = bitcast i64* %new_node_ptr.13932 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13928", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13934", align 1
  %"node_Cidr_Prelude.List.::.13935" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13911, 1, 0
  %"node_Cidr_Prelude.List.::.13936" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13935", i64* %new_node_ptr.13932, 1, 1
  %alloc_bytes.13937 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13938 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13937 to i64
  %new_node_ptr.13939 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13938 monotonic
  %new_node_ptr.13940 = inttoptr i64 %new_node_ptr.13939 to i64*
  %tag.13941 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13936", 0
  %"ptr_Cidr_Prelude.List.::.13942" = bitcast i64* %new_node_ptr.13940 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13936", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13942", align 1
  %"node_Cidr_Prelude.List.::.13943" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13904, 1, 0
  %"node_Cidr_Prelude.List.::.13944" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13943", i64* %new_node_ptr.13940, 1, 1
  %alloc_bytes.13945 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13946 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13945 to i64
  %new_node_ptr.13947 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13946 monotonic
  %new_node_ptr.13948 = inttoptr i64 %new_node_ptr.13947 to i64*
  %tag.13949 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13944", 0
  %"ptr_Cidr_Prelude.List.::.13950" = bitcast i64* %new_node_ptr.13948 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13944", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13950", align 1
  %"node_Cidr_Prelude.List.::.13951" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13897, 1, 0
  %"node_Cidr_Prelude.List.::.13952" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13951", i64* %new_node_ptr.13948, 1, 1
  %alloc_bytes.13953 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13954 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13953 to i64
  %new_node_ptr.13955 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13954 monotonic
  %new_node_ptr.13956 = inttoptr i64 %new_node_ptr.13955 to i64*
  %tag.13957 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13952", 0
  %"ptr_Cidr_Prelude.List.::.13958" = bitcast i64* %new_node_ptr.13956 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13952", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13958", align 1
  %"node_Cidr_Prelude.List.::.13959" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13890, 1, 0
  %"node_Cidr_Prelude.List.::.13960" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13959", i64* %new_node_ptr.13956, 1, 1
  %alloc_bytes.13961 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13962 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13961 to i64
  %new_node_ptr.13963 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13962 monotonic
  %new_node_ptr.13964 = inttoptr i64 %new_node_ptr.13963 to i64*
  %tag.13965 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13960", 0
  %"ptr_Cidr_Prelude.List.::.13966" = bitcast i64* %new_node_ptr.13964 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13960", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13966", align 1
  %"node_Cidr_Prelude.List.::.13967" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13883, 1, 0
  %"node_Cidr_Prelude.List.::.13968" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13967", i64* %new_node_ptr.13964, 1, 1
  %alloc_bytes.13969 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13970 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13969 to i64
  %new_node_ptr.13971 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13970 monotonic
  %new_node_ptr.13972 = inttoptr i64 %new_node_ptr.13971 to i64*
  %tag.13973 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13968", 0
  %"ptr_Cidr_Prelude.List.::.13974" = bitcast i64* %new_node_ptr.13972 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13968", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13974", align 1
  %"node_Cidr_Prelude.List.::.13975" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13876, 1, 0
  %"node_Cidr_Prelude.List.::.13976" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13975", i64* %new_node_ptr.13972, 1, 1
  %alloc_bytes.13977 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13978 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13977 to i64
  %new_node_ptr.13979 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13978 monotonic
  %new_node_ptr.13980 = inttoptr i64 %new_node_ptr.13979 to i64*
  %tag.13981 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13976", 0
  %"ptr_Cidr_Prelude.List.::.13982" = bitcast i64* %new_node_ptr.13980 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13976", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13982", align 1
  %"node_Cidr_Prelude.List.::.13983" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13869, 1, 0
  %"node_Cidr_Prelude.List.::.13984" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13983", i64* %new_node_ptr.13980, 1, 1
  %alloc_bytes.13985 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13986 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13985 to i64
  %new_node_ptr.13987 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13986 monotonic
  %new_node_ptr.13988 = inttoptr i64 %new_node_ptr.13987 to i64*
  %tag.13989 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13984", 0
  %"ptr_Cidr_Prelude.List.::.13990" = bitcast i64* %new_node_ptr.13988 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13984", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13990", align 1
  %"node_Cidr_Prelude.List.::.13991" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13862, 1, 0
  %"node_Cidr_Prelude.List.::.13992" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13991", i64* %new_node_ptr.13988, 1, 1
  %alloc_bytes.13993 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.13994 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.13993 to i64
  %new_node_ptr.13995 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.13994 monotonic
  %new_node_ptr.13996 = inttoptr i64 %new_node_ptr.13995 to i64*
  %tag.13997 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13992", 0
  %"ptr_Cidr_Prelude.List.::.13998" = bitcast i64* %new_node_ptr.13996 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13992", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.13998", align 1
  %"node_Cidr_Prelude.List.::.13999" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13855, 1, 0
  %"node_Cidr_Prelude.List.::.14000" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.13999", i64* %new_node_ptr.13996, 1, 1
  %alloc_bytes.14001 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14002 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14001 to i64
  %new_node_ptr.14003 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14002 monotonic
  %new_node_ptr.14004 = inttoptr i64 %new_node_ptr.14003 to i64*
  %tag.14005 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14000", 0
  %"ptr_Cidr_Prelude.List.::.14006" = bitcast i64* %new_node_ptr.14004 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14000", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14006", align 1
  %"node_Cidr_Prelude.List.::.14007" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13848, 1, 0
  %"node_Cidr_Prelude.List.::.14008" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14007", i64* %new_node_ptr.14004, 1, 1
  %alloc_bytes.14009 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14010 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14009 to i64
  %new_node_ptr.14011 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14010 monotonic
  %new_node_ptr.14012 = inttoptr i64 %new_node_ptr.14011 to i64*
  %tag.14013 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14008", 0
  %"ptr_Cidr_Prelude.List.::.14014" = bitcast i64* %new_node_ptr.14012 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14008", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14014", align 1
  %"node_Cidr_Prelude.List.::.14015" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13841, 1, 0
  %"node_Cidr_Prelude.List.::.14016" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14015", i64* %new_node_ptr.14012, 1, 1
  %alloc_bytes.14017 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14018 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14017 to i64
  %new_node_ptr.14019 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14018 monotonic
  %new_node_ptr.14020 = inttoptr i64 %new_node_ptr.14019 to i64*
  %tag.14021 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14016", 0
  %"ptr_Cidr_Prelude.List.::.14022" = bitcast i64* %new_node_ptr.14020 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14016", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14022", align 1
  %"node_Cidr_Prelude.List.::.14023" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13834, 1, 0
  %"node_Cidr_Prelude.List.::.14024" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14023", i64* %new_node_ptr.14020, 1, 1
  %alloc_bytes.14025 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14026 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14025 to i64
  %new_node_ptr.14027 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14026 monotonic
  %new_node_ptr.14028 = inttoptr i64 %new_node_ptr.14027 to i64*
  %tag.14029 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14024", 0
  %"ptr_Cidr_Prelude.List.::.14030" = bitcast i64* %new_node_ptr.14028 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14024", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14030", align 1
  %"node_Cidr_Prelude.List.::.14031" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13827, 1, 0
  %"node_Cidr_Prelude.List.::.14032" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14031", i64* %new_node_ptr.14028, 1, 1
  %alloc_bytes.14033 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14034 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14033 to i64
  %new_node_ptr.14035 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14034 monotonic
  %new_node_ptr.14036 = inttoptr i64 %new_node_ptr.14035 to i64*
  %tag.14037 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14032", 0
  %"ptr_Cidr_Prelude.List.::.14038" = bitcast i64* %new_node_ptr.14036 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14032", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14038", align 1
  %"node_Cidr_Prelude.List.::.14039" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13820, 1, 0
  %"node_Cidr_Prelude.List.::.14040" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14039", i64* %new_node_ptr.14036, 1, 1
  %alloc_bytes.14041 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14042 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14041 to i64
  %new_node_ptr.14043 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14042 monotonic
  %new_node_ptr.14044 = inttoptr i64 %new_node_ptr.14043 to i64*
  %tag.14045 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14040", 0
  %"ptr_Cidr_Prelude.List.::.14046" = bitcast i64* %new_node_ptr.14044 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14040", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14046", align 1
  %"node_Cidr_Prelude.List.::.14047" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13813, 1, 0
  %"node_Cidr_Prelude.List.::.14048" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14047", i64* %new_node_ptr.14044, 1, 1
  %alloc_bytes.14049 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14050 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14049 to i64
  %new_node_ptr.14051 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14050 monotonic
  %new_node_ptr.14052 = inttoptr i64 %new_node_ptr.14051 to i64*
  %tag.14053 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14048", 0
  %"ptr_Cidr_Prelude.List.::.14054" = bitcast i64* %new_node_ptr.14052 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14048", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14054", align 1
  %"node_Cidr_Prelude.List.::.14055" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13806, 1, 0
  %"node_Cidr_Prelude.List.::.14056" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14055", i64* %new_node_ptr.14052, 1, 1
  %alloc_bytes.14057 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14058 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14057 to i64
  %new_node_ptr.14059 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14058 monotonic
  %new_node_ptr.14060 = inttoptr i64 %new_node_ptr.14059 to i64*
  %tag.14061 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14056", 0
  %"ptr_Cidr_Prelude.List.::.14062" = bitcast i64* %new_node_ptr.14060 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14056", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14062", align 1
  %"node_Cidr_Prelude.List.::.14063" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13799, 1, 0
  %"node_Cidr_Prelude.List.::.14064" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14063", i64* %new_node_ptr.14060, 1, 1
  %alloc_bytes.14065 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14066 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14065 to i64
  %new_node_ptr.14067 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14066 monotonic
  %new_node_ptr.14068 = inttoptr i64 %new_node_ptr.14067 to i64*
  %tag.14069 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14064", 0
  %"ptr_Cidr_Prelude.List.::.14070" = bitcast i64* %new_node_ptr.14068 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14064", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14070", align 1
  %"node_Cidr_Prelude.List.::.14071" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13792, 1, 0
  %"node_Cidr_Prelude.List.::.14072" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14071", i64* %new_node_ptr.14068, 1, 1
  %alloc_bytes.14073 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14074 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14073 to i64
  %new_node_ptr.14075 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14074 monotonic
  %new_node_ptr.14076 = inttoptr i64 %new_node_ptr.14075 to i64*
  %tag.14077 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14072", 0
  %"ptr_Cidr_Prelude.List.::.14078" = bitcast i64* %new_node_ptr.14076 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14072", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14078", align 1
  %"node_Cidr_Prelude.List.::.14079" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13785, 1, 0
  %"node_Cidr_Prelude.List.::.14080" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14079", i64* %new_node_ptr.14076, 1, 1
  %alloc_bytes.14081 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14082 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14081 to i64
  %new_node_ptr.14083 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14082 monotonic
  %new_node_ptr.14084 = inttoptr i64 %new_node_ptr.14083 to i64*
  %tag.14085 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14080", 0
  %"ptr_Cidr_Prelude.List.::.14086" = bitcast i64* %new_node_ptr.14084 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14080", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14086", align 1
  %"node_Cidr_Prelude.List.::.14087" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13778, 1, 0
  %"node_Cidr_Prelude.List.::.14088" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14087", i64* %new_node_ptr.14084, 1, 1
  %alloc_bytes.14089 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14090 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14089 to i64
  %new_node_ptr.14091 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14090 monotonic
  %new_node_ptr.14092 = inttoptr i64 %new_node_ptr.14091 to i64*
  %tag.14093 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14088", 0
  %"ptr_Cidr_Prelude.List.::.14094" = bitcast i64* %new_node_ptr.14092 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14088", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14094", align 1
  %"node_Cidr_Prelude.List.::.14095" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13771, 1, 0
  %"node_Cidr_Prelude.List.::.14096" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14095", i64* %new_node_ptr.14092, 1, 1
  %alloc_bytes.14097 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14098 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14097 to i64
  %new_node_ptr.14099 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14098 monotonic
  %new_node_ptr.14100 = inttoptr i64 %new_node_ptr.14099 to i64*
  %tag.14101 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14096", 0
  %"ptr_Cidr_Prelude.List.::.14102" = bitcast i64* %new_node_ptr.14100 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14096", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14102", align 1
  %"node_Cidr_Prelude.List.::.14103" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13764, 1, 0
  %"node_Cidr_Prelude.List.::.14104" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14103", i64* %new_node_ptr.14100, 1, 1
  %alloc_bytes.14105 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14106 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14105 to i64
  %new_node_ptr.14107 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14106 monotonic
  %new_node_ptr.14108 = inttoptr i64 %new_node_ptr.14107 to i64*
  %tag.14109 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14104", 0
  %"ptr_Cidr_Prelude.List.::.14110" = bitcast i64* %new_node_ptr.14108 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14104", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14110", align 1
  %"node_Cidr_Prelude.List.::.14111" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13757, 1, 0
  %"node_Cidr_Prelude.List.::.14112" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14111", i64* %new_node_ptr.14108, 1, 1
  %alloc_bytes.14113 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14114 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14113 to i64
  %new_node_ptr.14115 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14114 monotonic
  %new_node_ptr.14116 = inttoptr i64 %new_node_ptr.14115 to i64*
  %tag.14117 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14112", 0
  %"ptr_Cidr_Prelude.List.::.14118" = bitcast i64* %new_node_ptr.14116 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14112", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14118", align 1
  %"node_Cidr_Prelude.List.::.14119" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13750, 1, 0
  %"node_Cidr_Prelude.List.::.14120" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14119", i64* %new_node_ptr.14116, 1, 1
  %alloc_bytes.14121 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14122 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14121 to i64
  %new_node_ptr.14123 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14122 monotonic
  %new_node_ptr.14124 = inttoptr i64 %new_node_ptr.14123 to i64*
  %tag.14125 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14120", 0
  %"ptr_Cidr_Prelude.List.::.14126" = bitcast i64* %new_node_ptr.14124 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14120", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14126", align 1
  %"node_Cidr_Prelude.List.::.14127" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13743, 1, 0
  %"node_Cidr_Prelude.List.::.14128" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14127", i64* %new_node_ptr.14124, 1, 1
  %alloc_bytes.14129 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14130 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14129 to i64
  %new_node_ptr.14131 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14130 monotonic
  %new_node_ptr.14132 = inttoptr i64 %new_node_ptr.14131 to i64*
  %tag.14133 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14128", 0
  %"ptr_Cidr_Prelude.List.::.14134" = bitcast i64* %new_node_ptr.14132 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14128", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14134", align 1
  %"node_Cidr_Prelude.List.::.14135" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13736, 1, 0
  %"node_Cidr_Prelude.List.::.14136" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14135", i64* %new_node_ptr.14132, 1, 1
  %alloc_bytes.14137 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14138 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14137 to i64
  %new_node_ptr.14139 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14138 monotonic
  %new_node_ptr.14140 = inttoptr i64 %new_node_ptr.14139 to i64*
  %tag.14141 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14136", 0
  %"ptr_Cidr_Prelude.List.::.14142" = bitcast i64* %new_node_ptr.14140 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14136", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14142", align 1
  %"node_Cidr_Prelude.List.::.14143" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13729, 1, 0
  %"node_Cidr_Prelude.List.::.14144" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14143", i64* %new_node_ptr.14140, 1, 1
  %alloc_bytes.14145 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14146 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14145 to i64
  %new_node_ptr.14147 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14146 monotonic
  %new_node_ptr.14148 = inttoptr i64 %new_node_ptr.14147 to i64*
  %tag.14149 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14144", 0
  %"ptr_Cidr_Prelude.List.::.14150" = bitcast i64* %new_node_ptr.14148 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14144", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14150", align 1
  %"node_Cidr_Prelude.List.::.14151" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13722, 1, 0
  %"node_Cidr_Prelude.List.::.14152" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14151", i64* %new_node_ptr.14148, 1, 1
  %alloc_bytes.14153 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14154 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14153 to i64
  %new_node_ptr.14155 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14154 monotonic
  %new_node_ptr.14156 = inttoptr i64 %new_node_ptr.14155 to i64*
  %tag.14157 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14152", 0
  %"ptr_Cidr_Prelude.List.::.14158" = bitcast i64* %new_node_ptr.14156 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14152", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14158", align 1
  %"node_Cidr_Prelude.List.::.14159" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13715, 1, 0
  %"node_Cidr_Prelude.List.::.14160" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14159", i64* %new_node_ptr.14156, 1, 1
  %alloc_bytes.14161 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14162 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14161 to i64
  %new_node_ptr.14163 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14162 monotonic
  %new_node_ptr.14164 = inttoptr i64 %new_node_ptr.14163 to i64*
  %tag.14165 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14160", 0
  %"ptr_Cidr_Prelude.List.::.14166" = bitcast i64* %new_node_ptr.14164 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14160", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14166", align 1
  %"node_Cidr_Prelude.List.::.14167" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13708, 1, 0
  %"node_Cidr_Prelude.List.::.14168" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14167", i64* %new_node_ptr.14164, 1, 1
  %alloc_bytes.14169 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14170 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14169 to i64
  %new_node_ptr.14171 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14170 monotonic
  %new_node_ptr.14172 = inttoptr i64 %new_node_ptr.14171 to i64*
  %tag.14173 = extractvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14168", 0
  %"ptr_Cidr_Prelude.List.::.14174" = bitcast i64* %new_node_ptr.14172 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14168", <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14174", align 1
  %"node_Cidr_Prelude.List.::.14175" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %new_node_ptr.13701, 1, 0
  %"node_Cidr_Prelude.List.::.14176" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14175", i64* %new_node_ptr.14172, 1, 1
  ret <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14176"

error_block:                                      ; No predecessors!
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x i64*] }> @"idr_Prelude.Show.showLitChar:getAt:10"(i64* %"idr_Prelude.Show.showLitChar:getAt:100", i64* %"idr_Prelude.Show.showLitChar:getAt:101", i64* %"idr_Prelude.Show.showLitChar:getAt:102") #0 {
"idr_Prelude.Show.showLitChar:getAt:10.entry":
  %tag.14177 = load i64, i64* %"idr_Prelude.Show.showLitChar:getAt:102", align 1
  switch i64 %tag.14177, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.14178"
    i64 9, label %block.Cidr_Prelude.List.Nil.14181
  ]

"block.Cidr_Prelude.List.::.14178":               ; preds = %"idr_Prelude.Show.showLitChar:getAt:10.entry"
  %"ptr_Cidr_Prelude.List.::.14179" = bitcast i64* %"idr_Prelude.Show.showLitChar:getAt:102" to <{ i64, [2 x i64*] }>*
  %"node_Cidr_Prelude.List.::.14180" = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14179", align 1
  br label %block.exit.14186

block.Cidr_Prelude.List.Nil.14181:                ; preds = %"idr_Prelude.Show.showLitChar:getAt:10.entry"
  %ptr_Cidr_Prelude.List.Nil.14182 = bitcast i64* %"idr_Prelude.Show.showLitChar:getAt:102" to <{ i64 }>*
  %node_Cidr_Prelude.List.Nil.14183 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.14182, align 1
  %src.14184 = extractvalue <{ i64 }> %node_Cidr_Prelude.List.Nil.14183, 0
  %dst.14185 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.14184, 0
  br label %block.exit.14186

block.exit.14186:                                 ; preds = %block.Cidr_Prelude.List.Nil.14181, %"block.Cidr_Prelude.List.::.14178"
  %"idr_Prelude.Show.showLitChar:getAt:102_val.14187" = phi <{ i64, [2 x i64*] }> [ %"node_Cidr_Prelude.List.::.14180", %"block.Cidr_Prelude.List.::.14178" ], [ %dst.14185, %block.Cidr_Prelude.List.Nil.14181 ]
  %tag.14188 = extractvalue <{ i64, [2 x i64*] }> %"idr_Prelude.Show.showLitChar:getAt:102_val.14187", 0
  switch i64 %tag.14188, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.14189"
    i64 9, label %block.Cidr_Prelude.List.Nil.14223
  ]

"block.Cidr_Prelude.List.::.14189":               ; preds = %block.exit.14186
  %"idr_Prelude.Show.showLitChar:getAt:103" = extractvalue <{ i64, [2 x i64*] }> %"idr_Prelude.Show.showLitChar:getAt:102_val.14187", 1, 0
  %"idr_Prelude.Show.showLitChar:getAt:104" = extractvalue <{ i64, [2 x i64*] }> %"idr_Prelude.Show.showLitChar:getAt:102_val.14187", 1, 1
  %tag.14190 = load i64, i64* %"idr_Prelude.Show.showLitChar:getAt:101", align 1
  %ptr_CGrInt.14191 = bitcast i64* %"idr_Prelude.Show.showLitChar:getAt:101" to <{ i64, [1 x i64] }>*
  %node_CGrInt.14192 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.14191, align 1
  %tag.14193 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.14192, 0
  switch i64 %tag.14193, label %error_block [
    i64 2, label %block.CGrInt.14194
  ]

block.CGrInt.14194:                               ; preds = %"block.Cidr_Prelude.List.::.14189"
  %"idr_Prelude.Show.showLitChar:getAt:10_cpat_LInt64_0" = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.14192, 1, 0
  switch i64 %"idr_Prelude.Show.showLitChar:getAt:10_cpat_LInt64_0", label %block.default.14195 [
    i64 0, label %block.int_0.14217
  ]

block.default.14195:                              ; preds = %block.CGrInt.14194
  %node_CGrInt.14196 = insertvalue <{ i64, [1 x i64] }> <{ i64 2, [1 x i64] undef }>, i64 1, 1, 0
  %alloc_bytes.14197 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.14198 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.14197 to i64
  %new_node_ptr.14199 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14198 monotonic
  %new_node_ptr.14200 = inttoptr i64 %new_node_ptr.14199 to i64*
  %tag.14201 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.14196, 0
  %ptr_CGrInt.14202 = bitcast i64* %new_node_ptr.14200 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %node_CGrInt.14196, <{ i64, [1 x i64] }>* %ptr_CGrInt.14202, align 1
  %"idr_Prelude.Show.showLitChar:getAt:105_val.14203" = tail call fastcc <{ i64, [1 x i64] }> @idris_int_sub(i64* %"idr_Prelude.Show.showLitChar:getAt:101", i64* %new_node_ptr.14200)
  %alloc_bytes.14204 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.14205 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.14204 to i64
  %new_node_ptr.14206 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14205 monotonic
  %new_node_ptr.14207 = inttoptr i64 %new_node_ptr.14206 to i64*
  %tag.14208 = extractvalue <{ i64, [1 x i64] }> %"idr_Prelude.Show.showLitChar:getAt:105_val.14203", 0
  %ptr_CGrInt.14209 = bitcast i64* %new_node_ptr.14207 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %"idr_Prelude.Show.showLitChar:getAt:105_val.14203", <{ i64, [1 x i64] }>* %ptr_CGrInt.14209, align 1
  %alloc_bytes.14210 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14211 = ptrtoint <{ i64 }>* %alloc_bytes.14210 to i64
  %new_node_ptr.14212 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14211 monotonic
  %new_node_ptr.14213 = inttoptr i64 %new_node_ptr.14212 to i64*
  %tag.14214 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.14215 = bitcast i64* %new_node_ptr.14213 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.14215, align 1
  %result.default.14216 = tail call fastcc <{ i64, [1 x i64*] }> @"idr_Prelude.Show.showLitChar:getAt:10"(i64* %new_node_ptr.14213, i64* %new_node_ptr.14207, i64* %"idr_Prelude.Show.showLitChar:getAt:104")
  br label %block.exit.14219

block.int_0.14217:                                ; preds = %block.CGrInt.14194
  %node_Cidr_Prelude.Maybe.Just.14218 = insertvalue <{ i64, [1 x i64*] }> <{ i64 36, [1 x i64*] undef }>, i64* %"idr_Prelude.Show.showLitChar:getAt:103", 1, 0
  br label %block.exit.14219

block.exit.14219:                                 ; preds = %block.int_0.14217, %block.default.14195
  %result.CGrInt.14220 = phi <{ i64, [1 x i64*] }> [ %result.default.14216, %block.default.14195 ], [ %node_Cidr_Prelude.Maybe.Just.14218, %block.int_0.14217 ]
  br label %block.exit.14221

block.exit.14221:                                 ; preds = %block.exit.14219
  %"result.Cidr_Prelude.List.::.14222" = phi <{ i64, [1 x i64*] }> [ %result.CGrInt.14220, %block.exit.14219 ]
  br label %block.exit.14224

block.Cidr_Prelude.List.Nil.14223:                ; preds = %block.exit.14186
  %src.14225 = extractvalue <{ i64 }> <{ i64 37 }>, 0
  %dst.14226 = insertvalue <{ i64, [1 x i64*] }> undef, i64 %src.14225, 0
  br label %block.exit.14224

block.exit.14224:                                 ; preds = %block.Cidr_Prelude.List.Nil.14223, %block.exit.14221
  %"result.idr_Prelude.Show.showLitChar:getAt:10.14227" = phi <{ i64, [1 x i64*] }> [ %"result.Cidr_Prelude.List.::.14222", %block.exit.14221 ], [ %dst.14226, %block.Cidr_Prelude.List.Nil.14223 ]
  ret <{ i64, [1 x i64*] }> %"result.idr_Prelude.Show.showLitChar:getAt:10.14227"

error_block:                                      ; preds = %"block.Cidr_Prelude.List.::.14189", %block.exit.14186, %"idr_Prelude.Show.showLitChar:getAt:10.entry"
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [2 x i64*] }> @idr__Prelude.Strings.unpack_with_36(i64* %idr__Prelude.Strings.unpack_with_360, i64* %idr__Prelude.Strings.unpack_with_361) #0 {
idr__Prelude.Strings.unpack_with_36.entry:
  %tag.14228 = load i64, i64* %idr__Prelude.Strings.unpack_with_361, align 1
  switch i64 %tag.14228, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.14229
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.14232
  ]

block.Cidr_Prelude.Strings.StrCons.14229:         ; preds = %idr__Prelude.Strings.unpack_with_36.entry
  %ptr_Cidr_Prelude.Strings.StrCons.14230 = bitcast i64* %idr__Prelude.Strings.unpack_with_361 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Prelude.Strings.StrCons.14231 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.14230, align 1
  br label %block.exit.14237

block.Cidr_Prelude.Strings.StrNil.14232:          ; preds = %idr__Prelude.Strings.unpack_with_36.entry
  %ptr_Cidr_Prelude.Strings.StrNil.14233 = bitcast i64* %idr__Prelude.Strings.unpack_with_361 to <{ i64 }>*
  %node_Cidr_Prelude.Strings.StrNil.14234 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.14233, align 1
  %src.14235 = extractvalue <{ i64 }> %node_Cidr_Prelude.Strings.StrNil.14234, 0
  %dst.14236 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.14235, 0
  br label %block.exit.14237

block.exit.14237:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.14232, %block.Cidr_Prelude.Strings.StrCons.14229
  %idr__Prelude.Strings.unpack_with_361_val.14238 = phi <{ i64, [2 x i64*] }> [ %node_Cidr_Prelude.Strings.StrCons.14231, %block.Cidr_Prelude.Strings.StrCons.14229 ], [ %dst.14236, %block.Cidr_Prelude.Strings.StrNil.14232 ]
  %tag.14239 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_361_val.14238, 0
  switch i64 %tag.14239, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.14240
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.14358
  ]

block.Cidr_Prelude.Strings.StrCons.14240:         ; preds = %block.exit.14237
  %idr__Prelude.Strings.unpack_with_362 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_361_val.14238, 1, 0
  %idr__Prelude.Strings.unpack_with_363 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_361_val.14238, 1, 1
  %alloc_bytes.14241 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14242 = ptrtoint <{ i64 }>* %alloc_bytes.14241 to i64
  %new_node_ptr.14243 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14242 monotonic
  %new_node_ptr.14244 = inttoptr i64 %new_node_ptr.14243 to i64*
  %tag.14245 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.14246 = bitcast i64* %new_node_ptr.14244 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.14246, align 1
  %node_CGrString.14247 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.14248 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.14249 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.14248 to i64
  %new_node_ptr.14250 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14249 monotonic
  %new_node_ptr.14251 = inttoptr i64 %new_node_ptr.14250 to i64*
  %tag.14252 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.14247, 0
  %ptr_CGrString.14253 = bitcast i64* %new_node_ptr.14251 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.14247, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.14253, align 1
  %idr__Prelude.Strings.unpack_with_365_val_1644.14254 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %idr__Prelude.Strings.unpack_with_363, i64* %new_node_ptr.14251)
  %alloc_bytes.14255 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.14256 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.14255 to i64
  %new_node_ptr.14257 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14256 monotonic
  %new_node_ptr.14258 = inttoptr i64 %new_node_ptr.14257 to i64*
  %tag.14259 = extractvalue <{ i64, [1 x i64] }> %idr__Prelude.Strings.unpack_with_365_val_1644.14254, 0
  %ptr_CGrInt.14260 = bitcast i64* %new_node_ptr.14258 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr__Prelude.Strings.unpack_with_365_val_1644.14254, <{ i64, [1 x i64] }>* %ptr_CGrInt.14260, align 1
  %tag.14261 = load i64, i64* %new_node_ptr.14258, align 1
  %ptr_CGrInt.14262 = bitcast i64* %new_node_ptr.14258 to <{ i64, [1 x i64] }>*
  %node_CGrInt.14263 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.14262, align 1
  %tag.14264 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.14263, 0
  switch i64 %tag.14264, label %error_block [
    i64 2, label %block.CGrInt.14265
  ]

block.CGrInt.14265:                               ; preds = %block.Cidr_Prelude.Strings.StrCons.14240
  %idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.14263, 1, 0
  switch i64 %idr__Prelude.Strings.unpack_with_36_cpat_LInt64_0, label %block.default.14266 [
    i64 0, label %block.int_0.14267
  ]

block.default.14266:                              ; preds = %block.CGrInt.14265
  br label %block.exit.14268

block.int_0.14267:                                ; preds = %block.CGrInt.14265
  br label %block.exit.14268

block.exit.14268:                                 ; preds = %block.int_0.14267, %block.default.14266
  %result.CGrInt.14269 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.14266 ], [ <{ i64 7 }>, %block.int_0.14267 ]
  br label %block.exit.14270

block.exit.14270:                                 ; preds = %block.exit.14268
  %idr__Prelude.Strings.unpack_with_365_val_1643.14271 = phi <{ i64 }> [ %result.CGrInt.14269, %block.exit.14268 ]
  %alloc_bytes.14272 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14273 = ptrtoint <{ i64 }>* %alloc_bytes.14272 to i64
  %new_node_ptr.14274 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14273 monotonic
  %new_node_ptr.14275 = inttoptr i64 %new_node_ptr.14274 to i64*
  %tag.14276 = extractvalue <{ i64 }> %idr__Prelude.Strings.unpack_with_365_val_1643.14271, 0
  switch i64 %tag.14276, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.14277
    i64 7, label %block.Cidr_Prelude.Bool.True.14279
  ]

block.Cidr_Prelude.Bool.False.14277:              ; preds = %block.exit.14270
  %ptr_Cidr_Prelude.Bool.False.14278 = bitcast i64* %new_node_ptr.14275 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.unpack_with_365_val_1643.14271, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.14278, align 1
  br label %block.exit.14281

block.Cidr_Prelude.Bool.True.14279:               ; preds = %block.exit.14270
  %ptr_Cidr_Prelude.Bool.True.14280 = bitcast i64* %new_node_ptr.14275 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.unpack_with_365_val_1643.14271, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.14280, align 1
  br label %block.exit.14281

block.exit.14281:                                 ; preds = %block.Cidr_Prelude.Bool.True.14279, %block.Cidr_Prelude.Bool.False.14277
  %alloc_bytes.14282 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14283 = ptrtoint <{ i64 }>* %alloc_bytes.14282 to i64
  %new_node_ptr.14284 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14283 monotonic
  %new_node_ptr.14285 = inttoptr i64 %new_node_ptr.14284 to i64*
  %tag.14286 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.14287 = bitcast i64* %new_node_ptr.14285 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.14287, align 1
  %idr__Prelude.Strings.unpack_with_365_val_1642.14288 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.14275, i64* %new_node_ptr.14285)
  %alloc_bytes.14289 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14290 = ptrtoint <{ i64 }>* %alloc_bytes.14289 to i64
  %new_node_ptr.14291 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14290 monotonic
  %new_node_ptr.14292 = inttoptr i64 %new_node_ptr.14291 to i64*
  %tag.14293 = extractvalue <{ i64 }> %idr__Prelude.Strings.unpack_with_365_val_1642.14288, 0
  switch i64 %tag.14293, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.14294
    i64 27, label %block.Cidr_Prelude.Basics.Yes.14296
  ]

block.Cidr_Prelude.Basics.No.14294:               ; preds = %block.exit.14281
  %ptr_Cidr_Prelude.Basics.No.14295 = bitcast i64* %new_node_ptr.14292 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.unpack_with_365_val_1642.14288, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.14295, align 1
  br label %block.exit.14298

block.Cidr_Prelude.Basics.Yes.14296:              ; preds = %block.exit.14281
  %ptr_Cidr_Prelude.Basics.Yes.14297 = bitcast i64* %new_node_ptr.14292 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.unpack_with_365_val_1642.14288, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.14297, align 1
  br label %block.exit.14298

block.exit.14298:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.14296, %block.Cidr_Prelude.Basics.No.14294
  %tag.14299 = load i64, i64* %new_node_ptr.14292, align 1
  switch i64 %tag.14299, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.14300
    i64 27, label %block.Cidr_Prelude.Basics.Yes.14303
  ]

block.Cidr_Prelude.Basics.No.14300:               ; preds = %block.exit.14298
  %ptr_Cidr_Prelude.Basics.No.14301 = bitcast i64* %new_node_ptr.14292 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.14302 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.14301, align 1
  br label %block.exit.14306

block.Cidr_Prelude.Basics.Yes.14303:              ; preds = %block.exit.14298
  %ptr_Cidr_Prelude.Basics.Yes.14304 = bitcast i64* %new_node_ptr.14292 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.14305 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.14304, align 1
  br label %block.exit.14306

block.exit.14306:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.14303, %block.Cidr_Prelude.Basics.No.14300
  %idr__Prelude.Strings.unpack_with_365_val_1650.14307 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.14302, %block.Cidr_Prelude.Basics.No.14300 ], [ %node_Cidr_Prelude.Basics.Yes.14305, %block.Cidr_Prelude.Basics.Yes.14303 ]
  %tag.14308 = extractvalue <{ i64 }> %idr__Prelude.Strings.unpack_with_365_val_1650.14307, 0
  switch i64 %tag.14308, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.14309
    i64 27, label %block.Cidr_Prelude.Basics.Yes.14310
  ]

block.Cidr_Prelude.Basics.No.14309:               ; preds = %block.exit.14306
  %src.14328 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.14329 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.14328, 0
  br label %block.exit.14327

block.Cidr_Prelude.Basics.Yes.14310:              ; preds = %block.exit.14306
  %idr__Prelude.Strings.unpack_with_366_val_1651.14311 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %idr__Prelude.Strings.unpack_with_363)
  %alloc_bytes.14312 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.14313 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.14312 to i64
  %new_node_ptr.14314 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14313 monotonic
  %new_node_ptr.14315 = inttoptr i64 %new_node_ptr.14314 to i64*
  %tag.14316 = extractvalue <{ i64, [1 x i64] }> %idr__Prelude.Strings.unpack_with_366_val_1651.14311, 0
  %ptr_CGrInt.14317 = bitcast i64* %new_node_ptr.14315 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr__Prelude.Strings.unpack_with_366_val_1651.14311, <{ i64, [1 x i64] }>* %ptr_CGrInt.14317, align 1
  %idr__Prelude.Strings.unpack_with_367_val.14318 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %idr__Prelude.Strings.unpack_with_363)
  %alloc_bytes.14319 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.14320 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.14319 to i64
  %new_node_ptr.14321 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14320 monotonic
  %new_node_ptr.14322 = inttoptr i64 %new_node_ptr.14321 to i64*
  %tag.14323 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr__Prelude.Strings.unpack_with_367_val.14318, 0
  %ptr_CGrString.14324 = bitcast i64* %new_node_ptr.14322 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr__Prelude.Strings.unpack_with_367_val.14318, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.14324, align 1
  %node_Cidr_Prelude.Strings.StrCons.14325 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.14315, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.14326 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.14325, i64* %new_node_ptr.14322, 1, 1
  br label %block.exit.14327

block.exit.14327:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.14310, %block.Cidr_Prelude.Basics.No.14309
  %idr__Prelude.Strings.unpack_with_365_val.14330 = phi <{ i64, [2 x i64*] }> [ %dst.14329, %block.Cidr_Prelude.Basics.No.14309 ], [ %node_Cidr_Prelude.Strings.StrCons.14326, %block.Cidr_Prelude.Basics.Yes.14310 ]
  %alloc_bytes.14331 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14332 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14331 to i64
  %new_node_ptr.14333 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14332 monotonic
  %new_node_ptr.14334 = inttoptr i64 %new_node_ptr.14333 to i64*
  %tag.14335 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_365_val.14330, 0
  switch i64 %tag.14335, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.14336
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.14338
  ]

block.Cidr_Prelude.Strings.StrCons.14336:         ; preds = %block.exit.14327
  %ptr_Cidr_Prelude.Strings.StrCons.14337 = bitcast i64* %new_node_ptr.14334 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_365_val.14330, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.14337, align 1
  br label %block.exit.14342

block.Cidr_Prelude.Strings.StrNil.14338:          ; preds = %block.exit.14327
  %src.14339 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_365_val.14330, 0
  %dst.14340 = insertvalue <{ i64 }> undef, i64 %src.14339, 0
  %ptr_Cidr_Prelude.Strings.StrNil.14341 = bitcast i64* %new_node_ptr.14334 to <{ i64 }>*
  store <{ i64 }> %dst.14340, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.14341, align 1
  br label %block.exit.14342

block.exit.14342:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.14338, %block.Cidr_Prelude.Strings.StrCons.14336
  %idr__Prelude.Strings.unpack_with_364_val.14343 = tail call fastcc <{ i64, [2 x i64*] }> @idr__Prelude.Strings.unpack_with_36(i64* %new_node_ptr.14244, i64* %new_node_ptr.14334)
  %alloc_bytes.14344 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14345 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14344 to i64
  %new_node_ptr.14346 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14345 monotonic
  %new_node_ptr.14347 = inttoptr i64 %new_node_ptr.14346 to i64*
  %tag.14348 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_364_val.14343, 0
  switch i64 %tag.14348, label %error_block [
    i64 8, label %"block.Cidr_Prelude.List.::.14349"
    i64 9, label %block.Cidr_Prelude.List.Nil.14351
  ]

"block.Cidr_Prelude.List.::.14349":               ; preds = %block.exit.14342
  %"ptr_Cidr_Prelude.List.::.14350" = bitcast i64* %new_node_ptr.14347 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_364_val.14343, <{ i64, [2 x i64*] }>* %"ptr_Cidr_Prelude.List.::.14350", align 1
  br label %block.exit.14355

block.Cidr_Prelude.List.Nil.14351:                ; preds = %block.exit.14342
  %src.14352 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.unpack_with_364_val.14343, 0
  %dst.14353 = insertvalue <{ i64 }> undef, i64 %src.14352, 0
  %ptr_Cidr_Prelude.List.Nil.14354 = bitcast i64* %new_node_ptr.14347 to <{ i64 }>*
  store <{ i64 }> %dst.14353, <{ i64 }>* %ptr_Cidr_Prelude.List.Nil.14354, align 1
  br label %block.exit.14355

block.exit.14355:                                 ; preds = %block.Cidr_Prelude.List.Nil.14351, %"block.Cidr_Prelude.List.::.14349"
  %"node_Cidr_Prelude.List.::.14356" = insertvalue <{ i64, [2 x i64*] }> <{ i64 8, [2 x i64*] undef }>, i64* %idr__Prelude.Strings.unpack_with_362, 1, 0
  %"node_Cidr_Prelude.List.::.14357" = insertvalue <{ i64, [2 x i64*] }> %"node_Cidr_Prelude.List.::.14356", i64* %new_node_ptr.14347, 1, 1
  br label %block.exit.14359

block.Cidr_Prelude.Strings.StrNil.14358:          ; preds = %block.exit.14237
  %src.14360 = extractvalue <{ i64 }> <{ i64 9 }>, 0
  %dst.14361 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.14360, 0
  br label %block.exit.14359

block.exit.14359:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.14358, %block.exit.14355
  %result.idr__Prelude.Strings.unpack_with_36.14362 = phi <{ i64, [2 x i64*] }> [ %"node_Cidr_Prelude.List.::.14357", %block.exit.14355 ], [ %dst.14361, %block.Cidr_Prelude.Strings.StrNil.14358 ]
  ret <{ i64, [2 x i64*] }> %result.idr__Prelude.Strings.unpack_with_36.14362

error_block:                                      ; preds = %block.exit.14342, %block.exit.14327, %block.exit.14306, %block.exit.14298, %block.exit.14281, %block.exit.14270, %block.Cidr_Prelude.Strings.StrCons.14240, %block.exit.14237, %idr__Prelude.Strings.unpack_with_36.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

define private fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %idr__Prelude.Strings.ltrim_with_550, i64* %idr__Prelude.Strings.ltrim_with_551) #0 {
idr__Prelude.Strings.ltrim_with_55.entry:
  %tag.14363 = load i64, i64* %idr__Prelude.Strings.ltrim_with_551, align 1
  switch i64 %tag.14363, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.14364
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.14367
  ]

block.Cidr_Prelude.Strings.StrCons.14364:         ; preds = %idr__Prelude.Strings.ltrim_with_55.entry
  %ptr_Cidr_Prelude.Strings.StrCons.14365 = bitcast i64* %idr__Prelude.Strings.ltrim_with_551 to <{ i64, [2 x i64*] }>*
  %node_Cidr_Prelude.Strings.StrCons.14366 = load <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.14365, align 1
  br label %block.exit.14372

block.Cidr_Prelude.Strings.StrNil.14367:          ; preds = %idr__Prelude.Strings.ltrim_with_55.entry
  %ptr_Cidr_Prelude.Strings.StrNil.14368 = bitcast i64* %idr__Prelude.Strings.ltrim_with_551 to <{ i64 }>*
  %node_Cidr_Prelude.Strings.StrNil.14369 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.14368, align 1
  %src.14370 = extractvalue <{ i64 }> %node_Cidr_Prelude.Strings.StrNil.14369, 0
  %dst.14371 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.14370, 0
  br label %block.exit.14372

block.exit.14372:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.14367, %block.Cidr_Prelude.Strings.StrCons.14364
  %idr__Prelude.Strings.ltrim_with_551_val.14373 = phi <{ i64, [2 x i64*] }> [ %node_Cidr_Prelude.Strings.StrCons.14366, %block.Cidr_Prelude.Strings.StrCons.14364 ], [ %dst.14371, %block.Cidr_Prelude.Strings.StrNil.14367 ]
  %tag.14374 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.ltrim_with_551_val.14373, 0
  switch i64 %tag.14374, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.14375
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.14505
  ]

block.Cidr_Prelude.Strings.StrCons.14375:         ; preds = %block.exit.14372
  %idr__Prelude.Strings.ltrim_with_552 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.ltrim_with_551_val.14373, 1, 0
  %idr__Prelude.Strings.ltrim_with_553 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.ltrim_with_551_val.14373, 1, 1
  %idr__Prelude.Strings.ltrim_with_554_val.14376 = tail call fastcc <{ i64 }> @idr_Prelude.Chars.isSpace(i64* %idr__Prelude.Strings.ltrim_with_552)
  %alloc_bytes.14377 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14378 = ptrtoint <{ i64 }>* %alloc_bytes.14377 to i64
  %new_node_ptr.14379 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14378 monotonic
  %new_node_ptr.14380 = inttoptr i64 %new_node_ptr.14379 to i64*
  %tag.14381 = extractvalue <{ i64 }> %idr__Prelude.Strings.ltrim_with_554_val.14376, 0
  switch i64 %tag.14381, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.14382
    i64 7, label %block.Cidr_Prelude.Bool.True.14384
  ]

block.Cidr_Prelude.Bool.False.14382:              ; preds = %block.Cidr_Prelude.Strings.StrCons.14375
  %ptr_Cidr_Prelude.Bool.False.14383 = bitcast i64* %new_node_ptr.14380 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.ltrim_with_554_val.14376, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.14383, align 1
  br label %block.exit.14386

block.Cidr_Prelude.Bool.True.14384:               ; preds = %block.Cidr_Prelude.Strings.StrCons.14375
  %ptr_Cidr_Prelude.Bool.True.14385 = bitcast i64* %new_node_ptr.14380 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.ltrim_with_554_val.14376, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.14385, align 1
  br label %block.exit.14386

block.exit.14386:                                 ; preds = %block.Cidr_Prelude.Bool.True.14384, %block.Cidr_Prelude.Bool.False.14382
  %tag.14387 = load i64, i64* %new_node_ptr.14380, align 1
  switch i64 %tag.14387, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.14388
    i64 7, label %block.Cidr_Prelude.Bool.True.14391
  ]

block.Cidr_Prelude.Bool.False.14388:              ; preds = %block.exit.14386
  %ptr_Cidr_Prelude.Bool.False.14389 = bitcast i64* %new_node_ptr.14380 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.False.14390 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.14389, align 1
  br label %block.exit.14394

block.Cidr_Prelude.Bool.True.14391:               ; preds = %block.exit.14386
  %ptr_Cidr_Prelude.Bool.True.14392 = bitcast i64* %new_node_ptr.14380 to <{ i64 }>*
  %node_Cidr_Prelude.Bool.True.14393 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.14392, align 1
  br label %block.exit.14394

block.exit.14394:                                 ; preds = %block.Cidr_Prelude.Bool.True.14391, %block.Cidr_Prelude.Bool.False.14388
  %idr__Prelude.Strings.ltrim_with_554_val_1655.14395 = phi <{ i64 }> [ %node_Cidr_Prelude.Bool.False.14390, %block.Cidr_Prelude.Bool.False.14388 ], [ %node_Cidr_Prelude.Bool.True.14393, %block.Cidr_Prelude.Bool.True.14391 ]
  %tag.14396 = extractvalue <{ i64 }> %idr__Prelude.Strings.ltrim_with_554_val_1655.14395, 0
  switch i64 %tag.14396, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.14397
    i64 7, label %block.Cidr_Prelude.Bool.True.14399
  ]

block.Cidr_Prelude.Bool.False.14397:              ; preds = %block.exit.14394
  %result.Cidr_Prelude.Bool.False.14398 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_cons(i64* %idr__Prelude.Strings.ltrim_with_552, i64* %idr__Prelude.Strings.ltrim_with_553)
  br label %block.exit.14503

block.Cidr_Prelude.Bool.True.14399:               ; preds = %block.exit.14394
  %alloc_bytes.14400 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14401 = ptrtoint <{ i64 }>* %alloc_bytes.14400 to i64
  %new_node_ptr.14402 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14401 monotonic
  %new_node_ptr.14403 = inttoptr i64 %new_node_ptr.14402 to i64*
  %tag.14404 = extractvalue <{ i64 }> zeroinitializer, 0
  %ptr_CErased.14405 = bitcast i64* %new_node_ptr.14403 to <{ i64 }>*
  store <{ i64 }> zeroinitializer, <{ i64 }>* %ptr_CErased.14405, align 1
  %node_CGrString.14406 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  %alloc_bytes.14407 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.14408 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.14407 to i64
  %new_node_ptr.14409 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14408 monotonic
  %new_node_ptr.14410 = inttoptr i64 %new_node_ptr.14409 to i64*
  %tag.14411 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.14406, 0
  %ptr_CGrString.14412 = bitcast i64* %new_node_ptr.14410 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %node_CGrString.14406, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.14412, align 1
  %idr__Prelude.Strings.ltrim_with_556_val_1658.14413 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_eq(i64* %idr__Prelude.Strings.ltrim_with_553, i64* %new_node_ptr.14410)
  %alloc_bytes.14414 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.14415 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.14414 to i64
  %new_node_ptr.14416 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14415 monotonic
  %new_node_ptr.14417 = inttoptr i64 %new_node_ptr.14416 to i64*
  %tag.14418 = extractvalue <{ i64, [1 x i64] }> %idr__Prelude.Strings.ltrim_with_556_val_1658.14413, 0
  %ptr_CGrInt.14419 = bitcast i64* %new_node_ptr.14417 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr__Prelude.Strings.ltrim_with_556_val_1658.14413, <{ i64, [1 x i64] }>* %ptr_CGrInt.14419, align 1
  %tag.14420 = load i64, i64* %new_node_ptr.14417, align 1
  %ptr_CGrInt.14421 = bitcast i64* %new_node_ptr.14417 to <{ i64, [1 x i64] }>*
  %node_CGrInt.14422 = load <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* %ptr_CGrInt.14421, align 1
  %tag.14423 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.14422, 0
  switch i64 %tag.14423, label %error_block [
    i64 2, label %block.CGrInt.14424
  ]

block.CGrInt.14424:                               ; preds = %block.Cidr_Prelude.Bool.True.14399
  %idr__Prelude.Strings.ltrim_with_55_cpat_LInt64_0 = extractvalue <{ i64, [1 x i64] }> %node_CGrInt.14422, 1, 0
  switch i64 %idr__Prelude.Strings.ltrim_with_55_cpat_LInt64_0, label %block.default.14425 [
    i64 0, label %block.int_0.14426
  ]

block.default.14425:                              ; preds = %block.CGrInt.14424
  br label %block.exit.14427

block.int_0.14426:                                ; preds = %block.CGrInt.14424
  br label %block.exit.14427

block.exit.14427:                                 ; preds = %block.int_0.14426, %block.default.14425
  %result.CGrInt.14428 = phi <{ i64 }> [ <{ i64 6 }>, %block.default.14425 ], [ <{ i64 7 }>, %block.int_0.14426 ]
  br label %block.exit.14429

block.exit.14429:                                 ; preds = %block.exit.14427
  %idr__Prelude.Strings.ltrim_with_556_val_1657.14430 = phi <{ i64 }> [ %result.CGrInt.14428, %block.exit.14427 ]
  %alloc_bytes.14431 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14432 = ptrtoint <{ i64 }>* %alloc_bytes.14431 to i64
  %new_node_ptr.14433 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14432 monotonic
  %new_node_ptr.14434 = inttoptr i64 %new_node_ptr.14433 to i64*
  %tag.14435 = extractvalue <{ i64 }> %idr__Prelude.Strings.ltrim_with_556_val_1657.14430, 0
  switch i64 %tag.14435, label %error_block [
    i64 6, label %block.Cidr_Prelude.Bool.False.14436
    i64 7, label %block.Cidr_Prelude.Bool.True.14438
  ]

block.Cidr_Prelude.Bool.False.14436:              ; preds = %block.exit.14429
  %ptr_Cidr_Prelude.Bool.False.14437 = bitcast i64* %new_node_ptr.14434 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.ltrim_with_556_val_1657.14430, <{ i64 }>* %ptr_Cidr_Prelude.Bool.False.14437, align 1
  br label %block.exit.14440

block.Cidr_Prelude.Bool.True.14438:               ; preds = %block.exit.14429
  %ptr_Cidr_Prelude.Bool.True.14439 = bitcast i64* %new_node_ptr.14434 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.ltrim_with_556_val_1657.14430, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.14439, align 1
  br label %block.exit.14440

block.exit.14440:                                 ; preds = %block.Cidr_Prelude.Bool.True.14438, %block.Cidr_Prelude.Bool.False.14436
  %alloc_bytes.14441 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14442 = ptrtoint <{ i64 }>* %alloc_bytes.14441 to i64
  %new_node_ptr.14443 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14442 monotonic
  %new_node_ptr.14444 = inttoptr i64 %new_node_ptr.14443 to i64*
  %tag.14445 = extractvalue <{ i64 }> <{ i64 7 }>, 0
  %ptr_Cidr_Prelude.Bool.True.14446 = bitcast i64* %new_node_ptr.14444 to <{ i64 }>*
  store <{ i64 }> <{ i64 7 }>, <{ i64 }>* %ptr_Cidr_Prelude.Bool.True.14446, align 1
  %idr__Prelude.Strings.ltrim_with_556_val_1656.14447 = tail call fastcc <{ i64 }> @"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0"(i64* %new_node_ptr.14434, i64* %new_node_ptr.14444)
  %alloc_bytes.14448 = getelementptr inbounds <{ i64 }>, <{ i64 }>* null, i32 1
  %alloc_bytes.14449 = ptrtoint <{ i64 }>* %alloc_bytes.14448 to i64
  %new_node_ptr.14450 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14449 monotonic
  %new_node_ptr.14451 = inttoptr i64 %new_node_ptr.14450 to i64*
  %tag.14452 = extractvalue <{ i64 }> %idr__Prelude.Strings.ltrim_with_556_val_1656.14447, 0
  switch i64 %tag.14452, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.14453
    i64 27, label %block.Cidr_Prelude.Basics.Yes.14455
  ]

block.Cidr_Prelude.Basics.No.14453:               ; preds = %block.exit.14440
  %ptr_Cidr_Prelude.Basics.No.14454 = bitcast i64* %new_node_ptr.14451 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.ltrim_with_556_val_1656.14447, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.14454, align 1
  br label %block.exit.14457

block.Cidr_Prelude.Basics.Yes.14455:              ; preds = %block.exit.14440
  %ptr_Cidr_Prelude.Basics.Yes.14456 = bitcast i64* %new_node_ptr.14451 to <{ i64 }>*
  store <{ i64 }> %idr__Prelude.Strings.ltrim_with_556_val_1656.14447, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.14456, align 1
  br label %block.exit.14457

block.exit.14457:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.14455, %block.Cidr_Prelude.Basics.No.14453
  %tag.14458 = load i64, i64* %new_node_ptr.14451, align 1
  switch i64 %tag.14458, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.14459
    i64 27, label %block.Cidr_Prelude.Basics.Yes.14462
  ]

block.Cidr_Prelude.Basics.No.14459:               ; preds = %block.exit.14457
  %ptr_Cidr_Prelude.Basics.No.14460 = bitcast i64* %new_node_ptr.14451 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.No.14461 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.No.14460, align 1
  br label %block.exit.14465

block.Cidr_Prelude.Basics.Yes.14462:              ; preds = %block.exit.14457
  %ptr_Cidr_Prelude.Basics.Yes.14463 = bitcast i64* %new_node_ptr.14451 to <{ i64 }>*
  %node_Cidr_Prelude.Basics.Yes.14464 = load <{ i64 }>, <{ i64 }>* %ptr_Cidr_Prelude.Basics.Yes.14463, align 1
  br label %block.exit.14465

block.exit.14465:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.14462, %block.Cidr_Prelude.Basics.No.14459
  %idr__Prelude.Strings.ltrim_with_556_val_1664.14466 = phi <{ i64 }> [ %node_Cidr_Prelude.Basics.No.14461, %block.Cidr_Prelude.Basics.No.14459 ], [ %node_Cidr_Prelude.Basics.Yes.14464, %block.Cidr_Prelude.Basics.Yes.14462 ]
  %tag.14467 = extractvalue <{ i64 }> %idr__Prelude.Strings.ltrim_with_556_val_1664.14466, 0
  switch i64 %tag.14467, label %error_block [
    i64 26, label %block.Cidr_Prelude.Basics.No.14468
    i64 27, label %block.Cidr_Prelude.Basics.Yes.14469
  ]

block.Cidr_Prelude.Basics.No.14468:               ; preds = %block.exit.14465
  %src.14487 = extractvalue <{ i64 }> <{ i64 28 }>, 0
  %dst.14488 = insertvalue <{ i64, [2 x i64*] }> undef, i64 %src.14487, 0
  br label %block.exit.14486

block.Cidr_Prelude.Basics.Yes.14469:              ; preds = %block.exit.14465
  %idr__Prelude.Strings.ltrim_with_557_val_1665.14470 = tail call fastcc <{ i64, [1 x i64] }> @idris_str_head(i64* %idr__Prelude.Strings.ltrim_with_553)
  %alloc_bytes.14471 = getelementptr inbounds <{ i64, [1 x i64] }>, <{ i64, [1 x i64] }>* null, i32 1
  %alloc_bytes.14472 = ptrtoint <{ i64, [1 x i64] }>* %alloc_bytes.14471 to i64
  %new_node_ptr.14473 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14472 monotonic
  %new_node_ptr.14474 = inttoptr i64 %new_node_ptr.14473 to i64*
  %tag.14475 = extractvalue <{ i64, [1 x i64] }> %idr__Prelude.Strings.ltrim_with_557_val_1665.14470, 0
  %ptr_CGrInt.14476 = bitcast i64* %new_node_ptr.14474 to <{ i64, [1 x i64] }>*
  store <{ i64, [1 x i64] }> %idr__Prelude.Strings.ltrim_with_557_val_1665.14470, <{ i64, [1 x i64] }>* %ptr_CGrInt.14476, align 1
  %idr__Prelude.Strings.ltrim_with_558_val.14477 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idris_str_tail(i64* %idr__Prelude.Strings.ltrim_with_553)
  %alloc_bytes.14478 = getelementptr inbounds <{ i64, [1 x { i8*, i64 }*] }>, <{ i64, [1 x { i8*, i64 }*] }>* null, i32 1
  %alloc_bytes.14479 = ptrtoint <{ i64, [1 x { i8*, i64 }*] }>* %alloc_bytes.14478 to i64
  %new_node_ptr.14480 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14479 monotonic
  %new_node_ptr.14481 = inttoptr i64 %new_node_ptr.14480 to i64*
  %tag.14482 = extractvalue <{ i64, [1 x { i8*, i64 }*] }> %idr__Prelude.Strings.ltrim_with_558_val.14477, 0
  %ptr_CGrString.14483 = bitcast i64* %new_node_ptr.14481 to <{ i64, [1 x { i8*, i64 }*] }>*
  store <{ i64, [1 x { i8*, i64 }*] }> %idr__Prelude.Strings.ltrim_with_558_val.14477, <{ i64, [1 x { i8*, i64 }*] }>* %ptr_CGrString.14483, align 1
  %node_Cidr_Prelude.Strings.StrCons.14484 = insertvalue <{ i64, [2 x i64*] }> <{ i64 29, [2 x i64*] undef }>, i64* %new_node_ptr.14474, 1, 0
  %node_Cidr_Prelude.Strings.StrCons.14485 = insertvalue <{ i64, [2 x i64*] }> %node_Cidr_Prelude.Strings.StrCons.14484, i64* %new_node_ptr.14481, 1, 1
  br label %block.exit.14486

block.exit.14486:                                 ; preds = %block.Cidr_Prelude.Basics.Yes.14469, %block.Cidr_Prelude.Basics.No.14468
  %idr__Prelude.Strings.ltrim_with_556_val.14489 = phi <{ i64, [2 x i64*] }> [ %dst.14488, %block.Cidr_Prelude.Basics.No.14468 ], [ %node_Cidr_Prelude.Strings.StrCons.14485, %block.Cidr_Prelude.Basics.Yes.14469 ]
  %alloc_bytes.14490 = getelementptr inbounds <{ i64, [2 x i64*] }>, <{ i64, [2 x i64*] }>* null, i32 1
  %alloc_bytes.14491 = ptrtoint <{ i64, [2 x i64*] }>* %alloc_bytes.14490 to i64
  %new_node_ptr.14492 = atomicrmw add i64* @_heap_ptr_, i64 %alloc_bytes.14491 monotonic
  %new_node_ptr.14493 = inttoptr i64 %new_node_ptr.14492 to i64*
  %tag.14494 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.ltrim_with_556_val.14489, 0
  switch i64 %tag.14494, label %error_block [
    i64 29, label %block.Cidr_Prelude.Strings.StrCons.14495
    i64 28, label %block.Cidr_Prelude.Strings.StrNil.14497
  ]

block.Cidr_Prelude.Strings.StrCons.14495:         ; preds = %block.exit.14486
  %ptr_Cidr_Prelude.Strings.StrCons.14496 = bitcast i64* %new_node_ptr.14493 to <{ i64, [2 x i64*] }>*
  store <{ i64, [2 x i64*] }> %idr__Prelude.Strings.ltrim_with_556_val.14489, <{ i64, [2 x i64*] }>* %ptr_Cidr_Prelude.Strings.StrCons.14496, align 1
  br label %block.exit.14501

block.Cidr_Prelude.Strings.StrNil.14497:          ; preds = %block.exit.14486
  %src.14498 = extractvalue <{ i64, [2 x i64*] }> %idr__Prelude.Strings.ltrim_with_556_val.14489, 0
  %dst.14499 = insertvalue <{ i64 }> undef, i64 %src.14498, 0
  %ptr_Cidr_Prelude.Strings.StrNil.14500 = bitcast i64* %new_node_ptr.14493 to <{ i64 }>*
  store <{ i64 }> %dst.14499, <{ i64 }>* %ptr_Cidr_Prelude.Strings.StrNil.14500, align 1
  br label %block.exit.14501

block.exit.14501:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.14497, %block.Cidr_Prelude.Strings.StrCons.14495
  %result.Cidr_Prelude.Bool.True.14502 = tail call fastcc <{ i64, [1 x { i8*, i64 }*] }> @idr__Prelude.Strings.ltrim_with_55(i64* %new_node_ptr.14403, i64* %new_node_ptr.14493)
  br label %block.exit.14503

block.exit.14503:                                 ; preds = %block.exit.14501, %block.Cidr_Prelude.Bool.False.14397
  %result.Cidr_Prelude.Strings.StrCons.14504 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Bool.False.14398, %block.Cidr_Prelude.Bool.False.14397 ], [ %result.Cidr_Prelude.Bool.True.14502, %block.exit.14501 ]
  br label %block.exit.14507

block.Cidr_Prelude.Strings.StrNil.14505:          ; preds = %block.exit.14372
  %node_CGrString.14506 = insertvalue <{ i64, [1 x { i8*, i64 }*] }> <{ i64 3, [1 x { i8*, i64 }*] undef }>, { i8*, i64 }* @str.3, 1, 0
  br label %block.exit.14507

block.exit.14507:                                 ; preds = %block.Cidr_Prelude.Strings.StrNil.14505, %block.exit.14503
  %result.idr__Prelude.Strings.ltrim_with_55.14508 = phi <{ i64, [1 x { i8*, i64 }*] }> [ %result.Cidr_Prelude.Strings.StrCons.14504, %block.exit.14503 ], [ %node_CGrString.14506, %block.Cidr_Prelude.Strings.StrNil.14505 ]
  ret <{ i64, [1 x { i8*, i64 }*] }> %result.idr__Prelude.Strings.ltrim_with_55.14508

error_block:                                      ; preds = %block.exit.14486, %block.exit.14465, %block.exit.14457, %block.exit.14440, %block.exit.14429, %block.Cidr_Prelude.Bool.True.14399, %block.exit.14394, %block.exit.14386, %block.Cidr_Prelude.Strings.StrCons.14375, %block.exit.14372, %idr__Prelude.Strings.ltrim_with_55.entry
  tail call void @_prim_int_print(i64 666)
  unreachable
}

attributes #0 = { "no-jump-tables"="true" }
