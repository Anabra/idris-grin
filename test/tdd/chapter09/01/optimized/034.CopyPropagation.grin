primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  idr_Main.main3_val.0 <- pure (C"idr_{U_Main.{main_2}_1}")
  idr_Main.main3.0 <- store idr_Main.main3_val.0
  idr_Main.main5_val.0 <- pure (CGrInt 2)
  idr_Main.main7_val_11.0 <- pure (CGrInt 1)
  idr_Main.main7.0 <- store idr_Main.main7_val_11.0
  idr_Main.main8.0 <- store idr_Main.main5_val.0
  idr_Main.main9_val_13.0 <- pure (CGrInt 3)
  idr_Main.main9.0 <- store idr_Main.main9_val_13.0
  idr_Main.main10_val.0 <- pure (Cidr_Data.Vect.Nil)
  idr_Main.main10.0 <- store idr_Main.main10_val.0
  idr_Main.main9_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main9.0 idr_Main.main10.0)
  idr_Main.main9_14.0 <- store idr_Main.main9_val.0
  idr_Main.main8_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main8.0 idr_Main.main9_14.0)
  idr_Main.main8_15.0 <- store idr_Main.main8_val.0
  idr_Main.main7_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main7.0 idr_Main.main8_15.0)
  idr_Main.main7_16.0 <- store idr_Main.main7_val.0
  idr_Main.main8_val_19.0 <- pure (Cidr_Data.Vect.Here)
  idr_Main.main8_20.0 <- store idr_Main.main8_val_19.0
  idr_Main.main8_val_18.0 <- pure (Cidr_Data.Vect.There idr_Main.main8_20.0)
  idr_Main.main8_21.0 <- store idr_Main.main8_val_18.0
  idr_Main.main8_val_17.0 <- pure (Cidr_Data.Vect.There idr_Main.main8_21.0)
  idr_Main.main8_22.0 <- store idr_Main.main8_val_17.0
  idr_Main.main5.49.0.arity.1.0 <- pure 2
  idr_Main.main4_val.0 <- idr_Main.removeElemPrf $ idr_Main.main5.49.0.arity.1.0 idr_Main.main7_16.0 idr_Main.main8_22.0
  idr_Main.main4_23.0 <- store idr_Main.main4_val.0
  idr_Main.main1_val.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main3.0 idr_Main.main4_23.0
  idr_Main.main4_val_30.0 <- pure (C"idr_{U_Main.{main_3}_1}")
  idr_Main.main4_31.0 <- store idr_Main.main4_val_30.0
  idr_Main.main7_val_38.0 <- pure (C"idr_{U_Main.{main_4}_2}")
  idr_Main.main7_39.0 <- store idr_Main.main7_val_38.0
  idr_Main.main8_41.0 <- pure idr_Main.main9.0
  idr_Main.main9_44.0 <- pure idr_Main.main7.0
  idr_Main.main10_47.0 <- pure idr_Main.main8.0
  idr_Main.main11.0 <- pure idr_Main.main9.0
  idr_Main.main12.0 <- pure idr_Main.main10.0
  idr_Main.main11_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main9.0 idr_Main.main10.0)
  idr_Main.main11_49.0 <- store idr_Main.main11_val.0
  idr_Main.main10_val_45.0 <- pure (Cidr_Data.Vect.:: idr_Main.main8.0 idr_Main.main11_49.0)
  idr_Main.main10_50.0 <- store idr_Main.main10_val_45.0
  idr_Main.main9_val_42.0 <- pure (Cidr_Data.Vect.:: idr_Main.main7.0 idr_Main.main10_50.0)
  idr_Main.main9_51.0 <- store idr_Main.main9_val_42.0
  idr_Main.main5_val_33.0 <- idr_Main.isElem' $ idr_Main.main7_39.0 idr_Main.main9.0 idr_Main.main9_51.0
  idr_Main.main5_val_32.0 <- case idr_Main.main5_val_33.0 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Basics.Yes) ->
      pure (Cidr_Prelude.Bool.True)
  idr_Main.main5_54.0 <- store idr_Main.main5_val_32.0
  idr_Main.main2_val_25.0 <- idr_Prelude.Interactive.printLn' $ idr_Main.main4_31.0 idr_Main.main5_54.0
  idr_Main.main5_61.0 <- pure idr_Main.main4_31.0
  idr_Main.main8_69.0 <- pure idr_Main.main7_39.0
  idr_Main.main9_val_70.0 <- pure (CGrInt 10)
  idr_Main.main9_71.0 <- store idr_Main.main9_val_70.0
  idr_Main.main10_74.0 <- pure idr_Main.main7.0
  idr_Main.main11_77.0 <- pure idr_Main.main8.0
  idr_Main.main12_80.0 <- pure idr_Main.main9.0
  idr_Main.main13_val_81.0 <- pure (CGrInt 4)
  idr_Main.main13.0 <- store idr_Main.main13_val_81.0
  idr_Main.main14_val_82.0 <- pure (CGrInt 5)
  idr_Main.main14.0 <- store idr_Main.main14_val_82.0
  idr_Main.main15_val_83.0 <- pure (CGrInt 6)
  idr_Main.main15.0 <- store idr_Main.main15_val_83.0
  idr_Main.main16_val_84.0 <- pure (CGrInt 7)
  idr_Main.main16.0 <- store idr_Main.main16_val_84.0
  idr_Main.main17_val_85.0 <- pure (CGrInt 8)
  idr_Main.main17.0 <- store idr_Main.main17_val_85.0
  idr_Main.main18_val_86.0 <- pure (CGrInt 9)
  idr_Main.main18.0 <- store idr_Main.main18_val_86.0
  idr_Main.main19.0 <- pure idr_Main.main10.0
  idr_Main.main18_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main18.0 idr_Main.main10.0)
  idr_Main.main18_87.0 <- store idr_Main.main18_val.0
  idr_Main.main17_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main17.0 idr_Main.main18_87.0)
  idr_Main.main17_88.0 <- store idr_Main.main17_val.0
  idr_Main.main16_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main16.0 idr_Main.main17_88.0)
  idr_Main.main16_89.0 <- store idr_Main.main16_val.0
  idr_Main.main15_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main15.0 idr_Main.main16_89.0)
  idr_Main.main15_90.0 <- store idr_Main.main15_val.0
  idr_Main.main14_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main14.0 idr_Main.main15_90.0)
  idr_Main.main14_91.0 <- store idr_Main.main14_val.0
  idr_Main.main13_val.0 <- pure (Cidr_Data.Vect.:: idr_Main.main13.0 idr_Main.main14_91.0)
  idr_Main.main13_92.0 <- store idr_Main.main13_val.0
  idr_Main.main12_val_78.0 <- pure (Cidr_Data.Vect.:: idr_Main.main9.0 idr_Main.main13_92.0)
  idr_Main.main12_93.0 <- store idr_Main.main12_val_78.0
  idr_Main.main11_val_75.0 <- pure (Cidr_Data.Vect.:: idr_Main.main8.0 idr_Main.main12_93.0)
  idr_Main.main11_94.0 <- store idr_Main.main11_val_75.0
  idr_Main.main10_val_72.0 <- pure (Cidr_Data.Vect.:: idr_Main.main7.0 idr_Main.main11_94.0)
  idr_Main.main10_95.0 <- store idr_Main.main10_val_72.0
  idr_Main.main6_val_63.0 <- idr_Main.isElem' $ idr_Main.main7_39.0 idr_Main.main9_71.0 idr_Main.main10_95.0
  idr_Main.main6_val_62.0 <- case idr_Main.main6_val_63.0 of
    (Cidr_Prelude.Basics.No) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Basics.Yes) ->
      pure (Cidr_Prelude.Bool.True)
  idr_Main.main6_98.0 <- store idr_Main.main6_val_62.0
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.printLn' $ idr_Main.main4_31.0 idr_Main.main6_98.0
  pure ()

idr_Data.Vect.foldrImpl idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4 idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl6 =
  idr_Data.Vect.foldrImpl6_val <- fetch idr_Data.Vect.foldrImpl6
  case idr_Data.Vect.foldrImpl6_val of
    (Cidr_Data.Vect.:: idr_Data.Vect.foldrImpl7 idr_Data.Vect.foldrImpl8) ->
      idr_Data.Vect.foldrImpl12_val <- pure (C"idr_{U_Data.Vect.{foldrImpl_0}_1}" idr_Data.Vect.foldrImpl5 idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl7)
      idr_Data.Vect.foldrImpl12 <- store idr_Data.Vect.foldrImpl12_val
      idr_Data.Vect.foldrImpl $ idr_Data.Vect.foldrImpl3 idr_Data.Vect.foldrImpl4 idr_Data.Vect.foldrImpl12 idr_Data.Vect.foldrImpl8
    (Cidr_Data.Vect.Nil) ->
      "idr_{APPLY_0}0_val.0" <- fetch idr_Data.Vect.foldrImpl5
      case "idr_{APPLY_0}0_val.0" of
        (C"idr_{U_Data.Vect.{foldrImpl_0}_1}" "idr_{APPLY_0}2.0" "idr_{APPLY_0}3.0" "idr_{APPLY_0}4.0") ->
          "idr_Data.Vect.{foldrImpl_0}" $ "idr_{APPLY_0}2.0" "idr_{APPLY_0}4.0" idr_Data.Vect.foldrImpl4
        (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_9}_1}") ->
          fetch idr_Data.Vect.foldrImpl4

idr_Main.isElem' idr_Main.isElem'2 idr_Main.isElem'3 idr_Main.isElem'4 =
  idr_Main.isElem'4_val <- fetch idr_Main.isElem'4
  case idr_Main.isElem'4_val of
    (Cidr_Data.Vect.:: idr_Main.isElem'5 idr_Main.isElem'6) ->
      idr_Main.isElem'7_val_3 <- pure (C"idr_{U_Main.{main_4}_1}" idr_Main.isElem'3)
      "idr_{APPLY_0}0_val.2" <- pure idr_Main.isElem'7_val_3
      "idr_{APPLY_0}2_172.2" <- pure idr_Main.isElem'3
      (CGrInt "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Integer:!decEq:00.0.49.12.arity.1.0") <- fetch idr_Main.isElem'3
      (CGrInt "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Integer:!decEq:01.0.49.12.arity.1.0") <- fetch idr_Main.isElem'5
      idris_int_eq2.0 <- _prim_int_eq $ "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Integer:!decEq:00.0.49.12.arity.1.0" "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Integer:!decEq:01.0.49.12.arity.1.0"
      ccp.0.0 <- case idris_int_eq2.0 of
        #False ->
          pure 0
        #True ->
          pure 1
      idr_Main.isElem'7_val <- case ccp.0.0 of
        0 ->
          pure (Cidr_Prelude.Basics.No)
        #default ->
          pure (Cidr_Prelude.Basics.Yes)
      case idr_Main.isElem'7_val of
        (Cidr_Prelude.Basics.No) ->
          idr_Main.isElem'8_val <- idr_Main.isElem' $ idr_Main.isElem'2 idr_Main.isElem'3 idr_Main.isElem'6
          case idr_Main.isElem'8_val of
            (Cidr_Prelude.Basics.No) ->
              pure (Cidr_Prelude.Basics.No)
            (Cidr_Prelude.Basics.Yes) ->
              pure (Cidr_Prelude.Basics.Yes)
        (Cidr_Prelude.Basics.Yes) ->
          pure (Cidr_Prelude.Basics.Yes)
    (Cidr_Data.Vect.Nil) ->
      pure (Cidr_Prelude.Basics.No)

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0_val.4" <- fetch idr_Prelude.Interactive.printLn'2
  ccp.0 <- case "idr_{APPLY_0}0_val.4" of
    (C"idr_{U_Main.{main_2}_1}") ->
      "idr_Main.{main_2}3_val.0" <- pure (C"idr_{U_Main.{main_1}_1}")
      "idr_Main.{main_2}3.0" <- store "idr_Main.{main_2}3_val.0"
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011_val.0.0" <- pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_8}_2}")
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011.0.0" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011_val.0.0"
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012_val.0.0" <- pure (Cidr_Prelude.List.Nil)
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012.0.0" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012_val.0.0"
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013_val.0.0" <- pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_9}_1}")
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013.0.0" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013_val.0.0"
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.0.0" <- idr_Data.Vect.foldrImpl $ "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:011.0.0" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:012.0.0" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:013.0.0" idr_Prelude.Interactive.printLn'3
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_193.0.0" <- store "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_val.0.0"
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07.0.0.57.0.arity.1" <- pure #""
      unboxed.CGrString.2.0.0 <- "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" $ "idr_Main.{main_2}3.0" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:07.0.0.57.0.arity.1" "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:08_193.0.0"
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_196.0.49.10.arity.1.0" <- pure #"]"
      idris_str_concat3.0 <- _prim_string_concat $ unboxed.CGrString.2.0.0 "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:06_196.0.49.10.arity.1.0"
      "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:04.0.49.11.arity.1.0" <- pure #"["
      idris_str_concat3.1 <- _prim_string_concat $ "idr_Prelude.Show.Data.Vect.@Prelude.Show.Show$Vect len elem:!show:04.0.49.11.arity.1.0" idris_str_concat3.0
      pure idris_str_concat3.1
    (C"idr_{U_Main.{main_3}_1}") ->
      "idr_Main.{main_3}0_val.0" <- fetch idr_Prelude.Interactive.printLn'3
      ccp.5.0 <- case "idr_Main.{main_3}0_val.0" of
        (Cidr_Prelude.Bool.False) ->
          pure #"False"
        (Cidr_Prelude.Bool.True) ->
          pure #"True"
      pure ccp.5.0
  idr_Prelude.Interactive.printLn'6.49.1.arity.1 <- pure #"\n"
  idris_str_concat3.2 <- _prim_string_concat $ ccp.0 idr_Prelude.Interactive.printLn'6.49.1.arity.1
  _prim_string_print $ idris_str_concat3.2
  pure (Cidr_MkUnit)

idr_Main.removeElemPrf idr_Main.removeElemPrf1.49.arity.1 idr_Main.removeElemPrf3 idr_Main.removeElemPrf4 =
  idr_Main.removeElemPrf4_val <- fetch idr_Main.removeElemPrf4
  case idr_Main.removeElemPrf4_val of
    (Cidr_Data.Vect.Here) ->
      idr_Main.removeElemPrf3_val <- fetch idr_Main.removeElemPrf3
      (Cidr_Data.Vect.:: idr_Main.removeElemPrf5 idr_Main.removeElemPrf6) <- pure idr_Main.removeElemPrf3_val
      fetch idr_Main.removeElemPrf6
    (Cidr_Data.Vect.There idr_Main.removeElemPrf5_143) ->
      idr_Main.removeElemPrf3_val_144 <- fetch idr_Main.removeElemPrf3
      (Cidr_Data.Vect.:: idr_Main.removeElemPrf6_145 idr_Main.removeElemPrf7) <- pure idr_Main.removeElemPrf3_val_144
      idr_Main.removeElemPrf7_val <- fetch idr_Main.removeElemPrf7
      case idr_Main.removeElemPrf7_val of
        (Cidr_Data.Vect.Nil) ->
          case idr_Main.removeElemPrf1.49.arity.1 of
            0 ->
              pure (CErased)
            #default ->
              idr_Main.removeElemPrf9.41.3.arity.1 <- pure 1
              idris_int_sub2.0 <- _prim_int_sub $ idr_Main.removeElemPrf1.49.arity.1 idr_Main.removeElemPrf9.41.3.arity.1
              idr_Main.removeElemPrf8_val <- idr_Main.removeElemPrf $ idris_int_sub2.0 idr_Main.removeElemPrf7 idr_Main.removeElemPrf5_143
              idr_Main.removeElemPrf8_149 <- store idr_Main.removeElemPrf8_val
              pure (Cidr_Data.Vect.:: idr_Main.removeElemPrf6_145 idr_Main.removeElemPrf8_149)
        #default ->
          idr_Main.removeElemPrf9_165.41.4.arity.1 <- pure 1
          idris_int_sub2.1 <- _prim_int_sub $ idr_Main.removeElemPrf1.49.arity.1 idr_Main.removeElemPrf9_165.41.4.arity.1
          idr_Main.removeElemPrf8_val_160 <- idr_Main.removeElemPrf $ idris_int_sub2.1 idr_Main.removeElemPrf7 idr_Main.removeElemPrf5_143
          idr_Main.removeElemPrf8_169 <- store idr_Main.removeElemPrf8_val_160
          pure (Cidr_Data.Vect.:: idr_Main.removeElemPrf6_145 idr_Main.removeElemPrf8_169)

"idr_Data.Vect.{foldrImpl_0}" "idr_Data.Vect.{foldrImpl_0}0" "idr_Data.Vect.{foldrImpl_0}2" "idr_Data.Vect.{foldrImpl_0}3" =
  "idr_Data.Vect.{foldrImpl_0}4_val_175" <- pure (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_8}_1}" "idr_Data.Vect.{foldrImpl_0}2")
  "idr_{APPLY_0}0_val.6" <- pure "idr_Data.Vect.{foldrImpl_0}4_val_175"
  "idr_{APPLY_0}2_173.6" <- pure "idr_Data.Vect.{foldrImpl_0}2"
  "idr_Data.Vect.{foldrImpl_0}4_val" <- pure (Cidr_Prelude.List.:: "idr_Data.Vect.{foldrImpl_0}2" "idr_Data.Vect.{foldrImpl_0}3")
  "idr_Data.Vect.{foldrImpl_0}4_176" <- store "idr_Data.Vect.{foldrImpl_0}4_val"
  "idr_{APPLY_0}0_val.7" <- fetch "idr_Data.Vect.{foldrImpl_0}0"
  case "idr_{APPLY_0}0_val.7" of
    (C"idr_{U_Data.Vect.{foldrImpl_0}_1}" "idr_{APPLY_0}2.7" "idr_{APPLY_0}3.7" "idr_{APPLY_0}4.7") ->
      "idr_Data.Vect.{foldrImpl_0}" $ "idr_{APPLY_0}2.7" "idr_{APPLY_0}4.7" "idr_Data.Vect.{foldrImpl_0}4_176"
    (C"idr_{U_Prelude.Show.{Data.Vect.@Prelude.Show.Show$Vect len elem:!show:0_lam_9}_1}") ->
      pure "idr_Data.Vect.{foldrImpl_0}4_val"

"idr_Main.{main_1}.unboxed" "idr_Main.{main_1}0" =
  (CGrInt idris_int_str1_0.0.0) <- fetch "idr_Main.{main_1}0"
  idris_int_str2.0.0 <- _prim_int_str $ idris_int_str1_0.0.0
  ccp.3.0 <- pure 0
  idr_Prelude.Show.primNumShow5_val_101.0 <- pure (CGrInt ccp.3.0)
  idr_Prelude.Show.primNumShow6_val.0 <- pure (CGrInt 5)
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.49.16.arity.1.0" <- pure ccp.3.0
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.49.16.arity.1.0" <- pure 5
  idris_int_eq2.1 <- _prim_int_eq $ ccp.3.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.49.16.arity.1.0"
  ccp.0.1 <- case idris_int_eq2.1 of
    #False ->
      pure ccp.3.0
    #True ->
      pure 1
  idr_Prelude.Show.primNumShow5_val_100.0 <- case ccp.0.1 of
    0 ->
      idris_int_lt2.0 <- _prim_int_lt $ ccp.3.0 "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.49.16.arity.1.0"
      ccp.1.0 <- case idris_int_lt2.0 of
        #False ->
          pure ccp.0.1
        #True ->
          pure 1
      case ccp.1.0 of
        0 ->
          pure (Cidr_Prelude.Interfaces.GT)
        #default ->
          pure (Cidr_Prelude.Interfaces.LT)
    #default ->
      pure (Cidr_Prelude.Interfaces.EQ)
  idr_Prelude.Show.primNumShow5_val_99.0 <- case idr_Prelude.Show.primNumShow5_val_100.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      ccp.4.0 <- pure ccp.3.0
      idr_Prelude.Show.primNumShow7.0.49.4.arity.1 <- pure 5
      idris_int_eq2.2 <- _prim_int_eq $ ccp.3.0 idr_Prelude.Show.primNumShow7.0.49.4.arity.1
      ccp.0.2 <- case idris_int_eq2.2 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      case ccp.0.2 of
        0 ->
          pure (Cidr_Prelude.Bool.False)
        #default ->
          pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_99.0 of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_116.41.0.arity.1.0 <- pure #""
      idris_str_eq3.0 <- _prim_string_eq $ idris_int_str2.0.0 idr_Prelude.Show.primNumShow6_116.41.0.arity.1.0
      ccp.2.0 <- case idris_str_eq3.0 of
        #False ->
          pure ccp.3.0
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow6_val_113.0 <- case ccp.2.0 of
        0 ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          pure (Cidr_Prelude.Bool.False)
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" <- pure (Cidr_Prelude.Bool.True)
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_185.0" <- pure idr_Prelude.Show.primNumShow6_val_113.0
      idr_Prelude.Show.primNumShow6_val_112.0 <- case idr_Prelude.Show.primNumShow6_val_113.0 of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Basics.No)
        (Cidr_Prelude.Bool.True) ->
          pure (Cidr_Prelude.Basics.Yes)
      case idr_Prelude.Show.primNumShow6_val_112.0 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Bool.False)
        (Cidr_Prelude.Basics.Yes) ->
          idris_str_head2.0 <- _prim_string_head $ idris_int_str2.0.0
          idr_Prelude.Show.primNumShow8.0.49.7.arity.1 <- pure 45
          idris_int_eq2.3 <- _prim_int_eq $ idris_str_head2.0 idr_Prelude.Show.primNumShow8.0.49.7.arity.1
          ccp.0.3 <- case idris_int_eq2.3 of
            #False ->
              pure ccp.3.0
            #True ->
              pure 1
          case ccp.0.3 of
            0 ->
              pure (Cidr_Prelude.Bool.False)
            #default ->
              pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
  case idr_Prelude.Show.primNumShow5_val.0 of
    (Cidr_Prelude.Bool.False) ->
      pure idris_int_str2.0.0
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow7_137.0.49.8.arity.1 <- pure #")"
      idris_str_concat3.3 <- _prim_string_concat $ idris_int_str2.0.0 idr_Prelude.Show.primNumShow7_137.0.49.8.arity.1
      idr_Prelude.Show.primNumShow6_134.0.49.9.arity.1 <- pure #"("
      idris_str_concat3.4 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_134.0.49.9.arity.1 idris_str_concat3.3
      pure idris_str_concat3.4

"idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04" =
  "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04"
  case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':04_val" of
    (Cidr_Prelude.List.:: "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05" "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06") ->
      "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" <- fetch "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
      case "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06_val" of
        (Cidr_Prelude.List.Nil) ->
          unboxed.CGrString.9 <- "idr_Main.{main_1}.unboxed" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
          idris_str_concat3.5 <- _prim_string_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1" unboxed.CGrString.9
          pure idris_str_concat3.5
        #default ->
          unboxed.CGrString.11 <- "idr_Main.{main_1}.unboxed" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':05"
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010.49.14.arity.1" <- pure #", "
          idris_str_concat3.6 <- _prim_string_concat $ unboxed.CGrString.11 "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':010.49.14.arity.1"
          idris_str_concat3.7 <- _prim_string_concat $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1" idris_str_concat3.6
          "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':0.unboxed" $ "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':02" idris_str_concat3.7 "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':06"
    (Cidr_Prelude.List.Nil) ->
      pure "idr_Prelude.Show.Prelude.Show.@Prelude.Show.Show$List a:!show:0:show':03.57.arity.1"
