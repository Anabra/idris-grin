Heap
    0      -> {CErased[]}
    1      -> {C"idr_{U_Main.{main_0}_1}"[]}
    2      -> {Cidr_Main.Cons[{4}],Cidr_Main.Nil[]}
    3      -> {CGrInt[{T_Int64}]}
    4      -> {Cidr_Main.Cons[{4}],Cidr_Main.Nil[]}
Env
    ccp.0.0 -> {T_Int64}
    ccp.0.1 -> {T_Int64}
    ccp.0.2.0 -> {T_Int64}
    ccp.1.0 -> {T_Int64}
    ccp.2.0 -> {T_Int64}
    ccp.3.0.0 -> {T_Int64}
    ccp.4.0.0 -> {T_Int64}
    "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_67.0" -> {Cidr_Prelude.Bool.False[]
                                                                                                     ,Cidr_Prelude.Bool.True[]}
    "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" -> {Cidr_Prelude.Bool.True[]}
    idr_Main.length2 -> {2,4}
    idr_Main.length2_val -> {Cidr_Main.Cons[{4}],Cidr_Main.Nil[]}
    idr_Main.length3 -> {4}
    idr_Main.length5_6.32.0.arity.1 -> {T_Int64}
    idr_Main.main0.0 -> {0}
    idr_Main.main0_val.0 -> {CErased[]}
    idr_Main.main1.0 -> {0}
    idr_Main.main2.0 -> {1}
    idr_Main.main2_val.0 -> {C"idr_{U_Main.{main_0}_1}"[]}
    idr_Main.main3_10.0 -> {3}
    idr_Main.main3_val.0 -> {CGrInt[{T_Int64}]}
    idr_Main.main5.0.48.0.arity.1 -> {T_Int64}
    idr_Main.main5_9.0 -> {2}
    idr_Main.main5_val.0 -> {Cidr_Main.Cons[{4}],Cidr_Main.Nil[]}
    idr_Main.main6.0.48.0.arity.1 -> {T_Int64}
    idr_Main.upto0.48.arity.1 -> {T_Int64}
    idr_Main.upto1.48.arity.1 -> {T_Int64}
    idr_Main.upto2_val -> {Cidr_Prelude.Bool.False[]
                          ,Cidr_Prelude.Bool.True[]}
    idr_Main.upto2_val_57 -> {Cidr_Prelude.Interfaces.EQ[]
                             ,Cidr_Prelude.Interfaces.GT[]
                             ,Cidr_Prelude.Interfaces.LT[]}
    idr_Main.upto3.32.9.arity.1 -> {T_Int64}
    idr_Main.upto3_64 -> {4}
    idr_Main.upto3_val -> {Cidr_Main.Cons[{4}],Cidr_Main.Nil[]}
    idr_Prelude.Interactive.printLn'6.32.7.arity.1.0 -> {T_String}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00.40.arity.1" -> {T_Int64}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01.40.arity.1" -> {T_Int64}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02.32.11.arity.1" -> {T_Int64}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03.32.12.arity.1" -> {T_Int64}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.40.arity.1" -> {T_Int64}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.40.arity.1" -> {T_Int64}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_105.32.16.arity.1" -> {T_Int64}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.17.arity.1" -> {T_Int64}
    idr_Prelude.Show.primNumShow5_val.0.0 -> {Cidr_Prelude.Bool.False[]
                                             ,Cidr_Prelude.Bool.True[]}
    idr_Prelude.Show.primNumShow5_val_11.0.0 -> {Cidr_Prelude.Bool.False[]
                                                ,Cidr_Prelude.Bool.True[]}
    idr_Prelude.Show.primNumShow5_val_12.0.0 -> {Cidr_Prelude.Interfaces.EQ[]
                                                ,Cidr_Prelude.Interfaces.GT[]
                                                ,Cidr_Prelude.Interfaces.LT[]}
    idr_Prelude.Show.primNumShow6.0.40.3.arity.1.0 -> {T_Int64}
    idr_Prelude.Show.primNumShow6_28.32.2.arity.1.0.0 -> {T_String}
    idr_Prelude.Show.primNumShow6_46.0.40.7.arity.1.0 -> {T_String}
    idr_Prelude.Show.primNumShow6_val_24.0.0.0 -> {Cidr_Prelude.Basics.No[]}
    idr_Prelude.Show.primNumShow6_val_24.0.0.1 -> {Cidr_Prelude.Basics.Yes[]}
    idr_Prelude.Show.primNumShow6_val_25.0.0 -> {Cidr_Prelude.Bool.False[]
                                                ,Cidr_Prelude.Bool.True[]}
    idr_Prelude.Show.primNumShow7.32.1.arity.1.0.0 -> {T_Int64}
    idr_Prelude.Show.primNumShow7_49.32.5.arity.1.0.0 -> {T_String}
    idr_Prelude.Show.primNumShow8.32.4.arity.1.0.0.0 -> {T_Int64}
    "idr_{APPLY_0}0_val.2.0" -> {C"idr_{U_Prelude.Interactive.printLn'_1}"[{0}
                                                                          ,{0}
                                                                          ,{1}
                                                                          ,{3}]}
    "idr_{APPLY_0}2.2.0" -> {0}
    "idr_{APPLY_0}3.2.0" -> {0}
    "idr_{APPLY_0}4.2.0" -> {1}
    "idr_{APPLY_0}5.2.0" -> {3}
    "idr_{runMain_0}0_val_65.0" -> {C"idr_{U_Prelude.Interactive.printLn'_1}"[{0}
                                                                             ,{0}
                                                                             ,{1}
                                                                             ,{3}]}
    idris_int_add2.0 -> {T_Int64}
    idris_int_add2.1 -> {T_Int64}
    idris_int_eq2.0 -> {T_Bool}
    idris_int_eq2.1 -> {T_Bool}
    idris_int_eq2.2.0 -> {T_Bool}
    idris_int_lt2.0 -> {T_Bool}
    idris_int_str1_0.0.0 -> {T_Int64}
    idris_int_str2.0.0 -> {T_String}
    idris_int_sub2.0 -> {T_Int64}
    idris_int_sub2.1 -> {T_Int64}
    idris_int_sub2.3 -> {T_Int64}
    idris_int_sub2.4 -> {T_Int64}
    idris_str_concat3.0 -> {T_String}
    idris_str_concat3.1 -> {T_String}
    idris_str_concat3.2 -> {T_String}
    idris_str_eq3.0 -> {T_Bool}
    idris_str_head2.0.0 -> {T_Int64}
    unboxed.CGrInt.0 -> {T_Int64}
    unboxed.CGrInt.1.0 -> {T_Int64}
    unboxed.CGrString.1.0 -> {T_String}
Function
    _prim_int_add :: {T_Int64} -> {T_Int64} -> {T_Int64}
    _prim_int_eq :: {T_Int64} -> {T_Int64} -> {T_Bool}
    _prim_int_lt :: {T_Int64} -> {T_Int64} -> {T_Bool}
    _prim_int_str :: {T_Int64} -> {T_String}
    _prim_int_sub :: {T_Int64} -> {T_Int64} -> {T_Int64}
    _prim_string_concat :: {T_String} -> {T_String} -> {T_String}
    _prim_string_eq :: {T_String} -> {T_String} -> {T_Bool}
    _prim_string_head :: {T_String} -> {T_Int64}
    _prim_string_print :: {T_String} -> {T_Unit}
    grinMain :: {T_Unit}
    idr_Main.length.unboxed :: {2,4} -> {T_Int64}
    idr_Main.upto :: {T_Int64}
                  -> {T_Int64}
                  -> {Cidr_Main.Cons[{4}],Cidr_Main.Nil[]}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0" :: {T_Int64}
                                                                          -> {T_Int64}
                                                                          -> {Cidr_Prelude.Bool.False[],Cidr_Prelude.Bool.True[]}
    "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" :: {T_Int64}
                                                                                -> {T_Int64}
                                                                                -> {Cidr_Prelude.Interfaces.EQ[]
                                                                                   ,Cidr_Prelude.Interfaces.GT[]
                                                                                   ,Cidr_Prelude.Interfaces.LT[]}