primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
idris_int_eq.unboxed idris_int_eq0.32.arity.1 idris_int_eq1.32.arity.1 =
  (CGrInt idris_int_eq0_1) <- pure (CGrInt idris_int_eq0.32.arity.1)
  (CGrInt idris_int_eq1_1) <- pure (CGrInt idris_int_eq1.32.arity.1)
  idris_int_eq2 <- _prim_int_eq $ idris_int_eq0_1 idris_int_eq1_1
  ccp.0 <- case idris_int_eq2 of
    #False ->
      pure 0
    #True ->
      pure 1
  pure ccp.0

idris_int_lt.unboxed idris_int_lt0.32.arity.1 idris_int_lt1.32.arity.1 =
  (CGrInt idris_int_lt0_1) <- pure (CGrInt idris_int_lt0.32.arity.1)
  (CGrInt idris_int_lt1_1) <- pure (CGrInt idris_int_lt1.32.arity.1)
  idris_int_lt2 <- _prim_int_lt $ idris_int_lt0_1 idris_int_lt1_1
  ccp.1 <- case idris_int_lt2 of
    #False ->
      pure 0
    #True ->
      pure 1
  pure ccp.1

idris_str_concat idris_str_concat1 idris_str_concat2.32.arity.1 =
  (CGrString idris_str_concat1_0) <- fetch idris_str_concat1
  (CGrString idris_str_concat2_0) <- pure (CGrString idris_str_concat2.32.arity.1)
  idris_str_concat3 <- _prim_string_concat $ idris_str_concat1_0 idris_str_concat2_0
  pure (CGrString idris_str_concat3)

idris_str_eq.unboxed idris_str_eq1 idris_str_eq2.32.arity.1 =
  (CGrString idris_str_eq1_0) <- fetch idris_str_eq1
  (CGrString idris_str_eq2_0) <- pure (CGrString idris_str_eq2.32.arity.1)
  idris_str_eq3 <- _prim_string_eq $ idris_str_eq1_0 idris_str_eq2_0
  ccp.2 <- case idris_str_eq3 of
    #False ->
      pure 0
    #True ->
      pure 1
  pure ccp.2

idris_str_head.unboxed idris_str_head1 =
  (CGrString idris_str_head1_0) <- fetch idris_str_head1
  idris_str_head2 <- _prim_string_head $ idris_str_head1_0
  pure idris_str_head2

grinMain =
  "idr_{runMain_0}0_val_65.0" <- idr_Main.main $
  "idr_{runMain_0}0.0" <- store "idr_{runMain_0}0_val_65.0"
  "idr_{runMain_0}1_val.0" <- pure (CErased)
  "idr_{runMain_0}1.0" <- store "idr_{runMain_0}1_val.0"
  "idr_{APPLY_0}0.2.0" <- pure "idr_{runMain_0}0.0"
  "idr_{APPLY_0}1.2.0" <- pure "idr_{runMain_0}1.0"
  "idr_{APPLY_0}0_val.2.0" <- fetch "idr_{APPLY_0}0.2.0"
  "idr_{runMain_0}0_val.0" <- case "idr_{APPLY_0}0_val.2.0" of
    (C"idr_{U_Prelude.Interactive.printLn'_1}" "idr_{APPLY_0}2.2.0" "idr_{APPLY_0}3.2.0" "idr_{APPLY_0}4.2.0" "idr_{APPLY_0}5.2.0") ->
      idr_Prelude.Interactive.printLn' $ "idr_{APPLY_0}4.2.0" "idr_{APPLY_0}5.2.0"
  "idr_{runMain_0}0_66.0" <- store "idr_{runMain_0}0_val.0"
  "idr_{EVAL_0}0.0.0" <- pure "idr_{runMain_0}0_66.0"
  "idr_{EVAL_0}0_val.0.0" <- fetch "idr_{EVAL_0}0.0.0"
  r <- fetch "idr_{EVAL_0}0.0.0"
  pure ()

idr_Main.length.unboxed idr_Main.length2 =
  idr_Main.length2_val <- fetch idr_Main.length2
  case idr_Main.length2_val of
    (Cidr_Main.Cons idr_Main.length3) ->
      idr_Main.length4_val_3 <- pure (CErased)
      idr_Main.length4 <- store idr_Main.length4_val_3
      idr_Main.length5_val <- pure (CErased)
      idr_Main.length5 <- store idr_Main.length5_val
      unboxed.CGrInt.0 <- idr_Main.length.unboxed $ idr_Main.length3
      idr_Main.length4_val <- pure (CGrInt unboxed.CGrInt.0)
      idr_Main.length4_4 <- store idr_Main.length4_val
      idr_Main.length5_val_5 <- pure (CGrInt 1)
      idr_Main.length5_6 <- store idr_Main.length5_val_5
      (CGrInt idr_Main.length4_4.32.0.arity.1) <- fetch idr_Main.length4_4
      (CGrInt idr_Main.length5_6.32.0.arity.1) <- fetch idr_Main.length5_6
      idris_int_add0.32.arity.1.0 <- pure idr_Main.length4_4.32.0.arity.1
      idris_int_add1.32.arity.1.0 <- pure idr_Main.length5_6.32.0.arity.1
      (CGrInt idris_int_add0_1.0) <- pure (CGrInt idris_int_add0.32.arity.1.0)
      (CGrInt idris_int_add1_1.0) <- pure (CGrInt idris_int_add1.32.arity.1.0)
      idris_int_add2.0 <- _prim_int_add $ idris_int_add0_1.0 idris_int_add1_1.0
      pure idris_int_add2.0
    (Cidr_Main.Nil) ->
      pure 0

idr_Main.main =
  idr_Main.main0_val <- pure (CErased)
  idr_Main.main0 <- store idr_Main.main0_val
  idr_Main.main1_val <- pure (CErased)
  idr_Main.main1 <- store idr_Main.main1_val
  idr_Main.main2_val <- pure (C"idr_{U_Main.{main_0}_1}")
  idr_Main.main2 <- store idr_Main.main2_val
  idr_Main.main3_val_7 <- pure (CErased)
  idr_Main.main3 <- store idr_Main.main3_val_7
  idr_Main.main4_val <- pure (CErased)
  idr_Main.main4 <- store idr_Main.main4_val
  idr_Main.main5_val_8 <- pure (CGrInt 0)
  idr_Main.main5 <- store idr_Main.main5_val_8
  idr_Main.main6_val <- pure (CGrInt 100)
  idr_Main.main6 <- store idr_Main.main6_val
  idr_Main.main5_val <- idr_Main.upto $ idr_Main.main5 idr_Main.main6
  idr_Main.main5_9 <- store idr_Main.main5_val
  unboxed.CGrInt.1 <- idr_Main.length.unboxed $ idr_Main.main5_9
  idr_Main.main3_val <- pure (CGrInt unboxed.CGrInt.1)
  idr_Main.main3_10 <- store idr_Main.main3_val
  pure (C"idr_{U_Prelude.Interactive.printLn'_1}" idr_Main.main0 idr_Main.main1 idr_Main.main2 idr_Main.main3_10)

idr_prim__toStrBigInt idr_prim__toStrBigInt0 =
  idris_int_str1.0 <- pure idr_prim__toStrBigInt0
  (CGrInt idris_int_str1_0.0) <- fetch idris_int_str1.0
  idris_int_str2.0 <- _prim_int_str $ idris_int_str1_0.0
  pure (CGrString idris_int_str2.0)

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0.1" <- pure idr_Prelude.Interactive.printLn'2
  "idr_{APPLY_0}1.1" <- pure idr_Prelude.Interactive.printLn'3
  "idr_{APPLY_0}0_val.1" <- fetch "idr_{APPLY_0}0.1"
  idr_Prelude.Interactive.printLn'5_val_52 <- case "idr_{APPLY_0}0_val.1" of
    (C"idr_{U_Main.{main_0}_1}") ->
      "idr_Main.{main_0}" $ "idr_{APPLY_0}1.1"
  idr_Prelude.Interactive.printLn'5 <- store idr_Prelude.Interactive.printLn'5_val_52
  idr_Prelude.Interactive.printLn'6_val <- pure (CGrString #"\n")
  idr_Prelude.Interactive.printLn'6 <- store idr_Prelude.Interactive.printLn'6_val
  (CGrString idr_Prelude.Interactive.printLn'6.32.7.arity.1) <- fetch idr_Prelude.Interactive.printLn'6
  idr_Prelude.Interactive.printLn'5_val_51 <- idris_str_concat $ idr_Prelude.Interactive.printLn'5 idr_Prelude.Interactive.printLn'6.32.7.arity.1
  idr_Prelude.Interactive.printLn'5_53 <- store idr_Prelude.Interactive.printLn'5_val_51
  (CGrString idr_Prelude.Interactive.printLn'5_53.32.8.arity.1) <- fetch idr_Prelude.Interactive.printLn'5_53
  idris_write_str2.32.arity.1.0 <- pure idr_Prelude.Interactive.printLn'5_53.32.8.arity.1
  (CGrString idris_write_str2_0.0) <- pure (CGrString idris_write_str2.32.arity.1.0)
  _prim_string_print $ idris_write_str2_0.0
  idr_Prelude.Interactive.printLn'5_val <- pure (CUnit)
  idr_Prelude.Interactive.printLn'5_54 <- store idr_Prelude.Interactive.printLn'5_val
  pure (Cidr_MkUnit)

idr_Main.upto idr_Main.upto0 idr_Main.upto1 =
  idr_Main.upto2_val_57 <- "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" $ idr_Main.upto0 idr_Main.upto1
  idr_Main.upto2 <- store idr_Main.upto2_val_57
  idr_Main.upto2_val_58 <- fetch idr_Main.upto2
  idr_Main.upto2_val <- case idr_Main.upto2_val_58 of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0" $ idr_Main.upto0 idr_Main.upto1
  idr_Main.upto2_59 <- store idr_Main.upto2_val
  idr_Main.upto2_val_60 <- fetch idr_Main.upto2_59
  case idr_Main.upto2_val_60 of
    (Cidr_Prelude.Bool.False) ->
      idr_Main.upto3_val_62 <- pure (CGrInt 1)
      idr_Main.upto3 <- store idr_Main.upto3_val_62
      (CGrInt idr_Main.upto0.32.9.arity.1) <- fetch idr_Main.upto0
      (CGrInt idr_Main.upto3.32.9.arity.1) <- fetch idr_Main.upto3
      idris_int_add0.32.arity.1.1 <- pure idr_Main.upto0.32.9.arity.1
      idris_int_add1.32.arity.1.1 <- pure idr_Main.upto3.32.9.arity.1
      (CGrInt idris_int_add0_1.1) <- pure (CGrInt idris_int_add0.32.arity.1.1)
      (CGrInt idris_int_add1_1.1) <- pure (CGrInt idris_int_add1.32.arity.1.1)
      idris_int_add2.1 <- _prim_int_add $ idris_int_add0_1.1 idris_int_add1_1.1
      unboxed.CGrInt.6 <- pure idris_int_add2.1
      idr_Main.upto3_val_61 <- pure (CGrInt unboxed.CGrInt.6)
      idr_Main.upto3_63 <- store idr_Main.upto3_val_61
      idr_Main.upto3_val <- idr_Main.upto $ idr_Main.upto3_63 idr_Main.upto1
      idr_Main.upto3_64 <- store idr_Main.upto3_val
      pure (Cidr_Main.Cons idr_Main.upto3_64)
    (Cidr_Prelude.Bool.True) ->
      pure (Cidr_Main.Nil)

"idr_Main.{main_0}" "idr_Main.{main_0}0" =
  "idr_Main.{main_0}1_val" <- pure (CErased)
  "idr_Main.{main_0}1" <- store "idr_Main.{main_0}1_val"
  "idr_Main.{main_0}2_val" <- pure (C"idr_{U_prim__toStrBigInt_1}")
  "idr_Main.{main_0}2" <- store "idr_Main.{main_0}2_val"
  "idr_Main.{main_0}3_val" <- pure (Cidr_Prelude.Show.Open)
  "idr_Main.{main_0}3" <- store "idr_Main.{main_0}3_val"
  (Cidr_Prelude.Show.Open) <- fetch "idr_Main.{main_0}3"
  idr_Prelude.Show.primNumShow1.0 <- pure "idr_Main.{main_0}2"
  idr_Prelude.Show.primNumShow3.0 <- pure "idr_Main.{main_0}0"
  "idr_{APPLY_0}0.0.0" <- pure idr_Prelude.Show.primNumShow1.0
  "idr_{APPLY_0}1.0.0" <- pure idr_Prelude.Show.primNumShow3.0
  "idr_{APPLY_0}0_val.0.0" <- fetch "idr_{APPLY_0}0.0.0"
  idr_Prelude.Show.primNumShow4_val.0 <- case "idr_{APPLY_0}0_val.0.0" of
    (C"idr_{U_prim__toStrBigInt_1}") ->
      idr_prim__toStrBigInt $ "idr_{APPLY_0}1.0.0"
  idr_Prelude.Show.primNumShow4.0 <- store idr_Prelude.Show.primNumShow4_val.0
  idr_Prelude.Show.primNumShow2_val.0 <- pure (Cidr_Prelude.Show.Open)
  ccp.3.0 <- case idr_Prelude.Show.primNumShow2_val.0 of
    (Cidr_Prelude.Show.Open) ->
      pure 0
  idr_Prelude.Show.primNumShow5_val_13.0 <- pure (CGrInt ccp.3.0)
  idr_Prelude.Show.primNumShow5.0 <- store idr_Prelude.Show.primNumShow5_val_13.0
  idr_Prelude.Show.primNumShow6_val.0 <- pure (CGrInt 5)
  idr_Prelude.Show.primNumShow6.0 <- store idr_Prelude.Show.primNumShow6_val.0
  idr_Prelude.Show.primNumShow5_val_12.0 <- "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0" $ idr_Prelude.Show.primNumShow5.0 idr_Prelude.Show.primNumShow6.0
  idr_Prelude.Show.primNumShow5_14.0 <- store idr_Prelude.Show.primNumShow5_val_12.0
  idr_Prelude.Show.primNumShow5_val_15.0 <- fetch idr_Prelude.Show.primNumShow5_14.0
  idr_Prelude.Show.primNumShow5_val_11.0 <- case idr_Prelude.Show.primNumShow5_val_15.0 of
    (Cidr_Prelude.Interfaces.GT) ->
      pure (Cidr_Prelude.Bool.True)
    #default ->
      idr_Prelude.Show.primNumShow2_val_18.0 <- pure (Cidr_Prelude.Show.Open)
      ccp.4.0 <- case idr_Prelude.Show.primNumShow2_val_18.0 of
        (Cidr_Prelude.Show.Open) ->
          pure 0
      idr_Prelude.Show.primNumShow6_val_17.0 <- pure (CGrInt ccp.4.0)
      idr_Prelude.Show.primNumShow6_19.0 <- store idr_Prelude.Show.primNumShow6_val_17.0
      idr_Prelude.Show.primNumShow7_val.0 <- pure (CGrInt 5)
      idr_Prelude.Show.primNumShow7.0 <- store idr_Prelude.Show.primNumShow7_val.0
      (CGrInt idr_Prelude.Show.primNumShow6_19.32.1.arity.1.0) <- fetch idr_Prelude.Show.primNumShow6_19.0
      (CGrInt idr_Prelude.Show.primNumShow7.32.1.arity.1.0) <- fetch idr_Prelude.Show.primNumShow7.0
      unboxed.CGrInt.2.0 <- idris_int_eq.unboxed $ idr_Prelude.Show.primNumShow6_19.32.1.arity.1.0 idr_Prelude.Show.primNumShow7.32.1.arity.1.0
      idr_Prelude.Show.primNumShow6_val_16.0 <- pure (CGrInt unboxed.CGrInt.2.0)
      idr_Prelude.Show.primNumShow6_20.0 <- store idr_Prelude.Show.primNumShow6_val_16.0
      idr_Prelude.Show.primNumShow6_val_21.0 <- fetch idr_Prelude.Show.primNumShow6_20.0
      case idr_Prelude.Show.primNumShow6_val_21.0 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0.0 of
            0 ->
              pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_22.0 <- store idr_Prelude.Show.primNumShow5_val_11.0
  idr_Prelude.Show.primNumShow5_val_23.0 <- fetch idr_Prelude.Show.primNumShow5_22.0
  idr_Prelude.Show.primNumShow5_val.0 <- case idr_Prelude.Show.primNumShow5_val_23.0 of
    (Cidr_Prelude.Bool.False) ->
      pure (Cidr_Prelude.Bool.False)
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_val_27.0 <- pure (CGrString #"")
      idr_Prelude.Show.primNumShow6_28.0 <- store idr_Prelude.Show.primNumShow6_val_27.0
      (CGrString idr_Prelude.Show.primNumShow6_28.32.2.arity.1.0) <- fetch idr_Prelude.Show.primNumShow6_28.0
      unboxed.CGrInt.3.0 <- idris_str_eq.unboxed $ idr_Prelude.Show.primNumShow4.0 idr_Prelude.Show.primNumShow6_28.32.2.arity.1.0
      idr_Prelude.Show.primNumShow6_val_26.0 <- pure (CGrInt unboxed.CGrInt.3.0)
      idr_Prelude.Show.primNumShow6_29.0 <- store idr_Prelude.Show.primNumShow6_val_26.0
      idr_Prelude.Show.primNumShow6_val_30.0 <- fetch idr_Prelude.Show.primNumShow6_29.0
      idr_Prelude.Show.primNumShow6_val_25.0 <- case idr_Prelude.Show.primNumShow6_val_30.0 of
        (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_31.0) ->
          case idr_Prelude.Show.primNumShow_cpat_LInt64_0_31.0 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
      idr_Prelude.Show.primNumShow6_32.0 <- store idr_Prelude.Show.primNumShow6_val_25.0
      idr_Prelude.Show.primNumShow7_val_33.0 <- pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Show.primNumShow7_34.0 <- store idr_Prelude.Show.primNumShow7_val_33.0
      (Cidr_Prelude.Bool.True) <- fetch idr_Prelude.Show.primNumShow7_34.0
      idr_Prelude.Show.primNumShow6_val_24.0 <- "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" $ idr_Prelude.Show.primNumShow6_32.0
      idr_Prelude.Show.primNumShow6_35.0 <- store idr_Prelude.Show.primNumShow6_val_24.0
      idr_Prelude.Show.primNumShow6_val_36.0 <- fetch idr_Prelude.Show.primNumShow6_35.0
      case idr_Prelude.Show.primNumShow6_val_36.0 of
        (Cidr_Prelude.Basics.No) ->
          pure (Cidr_Prelude.Bool.False)
        (Cidr_Prelude.Basics.Yes) ->
          unboxed.CGrInt.4.0 <- idris_str_head.unboxed $ idr_Prelude.Show.primNumShow4.0
          idr_Prelude.Show.primNumShow7_val_38.0 <- pure (CGrInt unboxed.CGrInt.4.0)
          idr_Prelude.Show.primNumShow7_39.0 <- store idr_Prelude.Show.primNumShow7_val_38.0
          idr_Prelude.Show.primNumShow8_val.0 <- pure (CGrInt 45)
          idr_Prelude.Show.primNumShow8.0 <- store idr_Prelude.Show.primNumShow8_val.0
          (CGrInt idr_Prelude.Show.primNumShow7_39.32.4.arity.1.0) <- fetch idr_Prelude.Show.primNumShow7_39.0
          (CGrInt idr_Prelude.Show.primNumShow8.32.4.arity.1.0) <- fetch idr_Prelude.Show.primNumShow8.0
          unboxed.CGrInt.5.0 <- idris_int_eq.unboxed $ idr_Prelude.Show.primNumShow7_39.32.4.arity.1.0 idr_Prelude.Show.primNumShow8.32.4.arity.1.0
          idr_Prelude.Show.primNumShow7_val_37.0 <- pure (CGrInt unboxed.CGrInt.5.0)
          idr_Prelude.Show.primNumShow7_40.0 <- store idr_Prelude.Show.primNumShow7_val_37.0
          idr_Prelude.Show.primNumShow7_val_41.0 <- fetch idr_Prelude.Show.primNumShow7_40.0
          case idr_Prelude.Show.primNumShow7_val_41.0 of
            (CGrInt idr_Prelude.Show.primNumShow_cpat_LInt64_0_42.0) ->
              case idr_Prelude.Show.primNumShow_cpat_LInt64_0_42.0 of
                0 ->
                  pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure (Cidr_Prelude.Bool.True)
  idr_Prelude.Show.primNumShow5_43.0 <- store idr_Prelude.Show.primNumShow5_val.0
  idr_Prelude.Show.primNumShow5_val_44.0 <- fetch idr_Prelude.Show.primNumShow5_43.0
  case idr_Prelude.Show.primNumShow5_val_44.0 of
    (Cidr_Prelude.Bool.False) ->
      fetch idr_Prelude.Show.primNumShow4.0
    (Cidr_Prelude.Bool.True) ->
      idr_Prelude.Show.primNumShow6_val_45.0 <- pure (CGrString #"(")
      idr_Prelude.Show.primNumShow6_46.0 <- store idr_Prelude.Show.primNumShow6_val_45.0
      idr_Prelude.Show.primNumShow7_val_48.0 <- pure (CGrString #")")
      idr_Prelude.Show.primNumShow7_49.0 <- store idr_Prelude.Show.primNumShow7_val_48.0
      (CGrString idr_Prelude.Show.primNumShow7_49.32.5.arity.1.0) <- fetch idr_Prelude.Show.primNumShow7_49.0
      idr_Prelude.Show.primNumShow7_val_47.0 <- idris_str_concat $ idr_Prelude.Show.primNumShow4.0 idr_Prelude.Show.primNumShow7_49.32.5.arity.1.0
      idr_Prelude.Show.primNumShow7_50.0 <- store idr_Prelude.Show.primNumShow7_val_47.0
      (CGrString idr_Prelude.Show.primNumShow7_50.32.6.arity.1.0) <- fetch idr_Prelude.Show.primNumShow7_50.0
      idris_str_concat $ idr_Prelude.Show.primNumShow6_46.0 idr_Prelude.Show.primNumShow7_50.32.6.arity.1.0

"idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:0" "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00" =
  "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val" <- pure (Cidr_Prelude.Bool.True)
  case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val" of
    (Cidr_Prelude.Bool.True) ->
      "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_67" <- fetch "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00"
      case "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:00_val_67" of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Basics.No)
        (Cidr_Prelude.Bool.True) ->
          pure (Cidr_Prelude.Basics.Yes)

"idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01" =
  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01_val" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01"
  case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01_val" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0_cpat_LInt64_0" of
        0 ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00_val" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00"
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00_val" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0_cpat_LInt64_0_68") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0_cpat_LInt64_0_68" of
                0 ->
                  pure (Cidr_Prelude.Bool.True)
                #default ->
                  pure (Cidr_Prelude.Bool.False)
        #default ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02_val_69" <- pure (CGrInt 1)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02_val_69"
          (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01.32.11.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01"
          (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02.32.11.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02"
          idris_int_sub0.32.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:01.32.11.arity.1"
          idris_int_sub1.32.arity.1.0 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02.32.11.arity.1"
          (CGrInt idris_int_sub0_1.0) <- pure (CGrInt idris_int_sub0.32.arity.1.0)
          (CGrInt idris_int_sub1_1.0) <- pure (CGrInt idris_int_sub1.32.arity.1.0)
          idris_int_sub2.0 <- _prim_int_sub $ idris_int_sub0_1.0 idris_int_sub1_1.0
          unboxed.CGrInt.7 <- pure idris_int_sub2.0
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02_val" <- pure (CGrInt unboxed.CGrInt.7)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02_70" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02_val"
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00_val_71" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00"
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00_val_71" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0_cpat_LInt64_0_72") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0_cpat_LInt64_0_72" of
                0 ->
                  pure (Cidr_Prelude.Bool.False)
                #default ->
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03_val_73" <- pure (CGrInt 1)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03_val_73"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00.32.12.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03.32.12.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03"
                  idris_int_sub0.32.arity.1.1 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:00.32.12.arity.1"
                  idris_int_sub1.32.arity.1.1 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03.32.12.arity.1"
                  (CGrInt idris_int_sub0_1.1) <- pure (CGrInt idris_int_sub0.32.arity.1.1)
                  (CGrInt idris_int_sub1_1.1) <- pure (CGrInt idris_int_sub1.32.arity.1.1)
                  idris_int_sub2.1 <- _prim_int_sub $ idris_int_sub0_1.1 idris_int_sub1_1.1
                  unboxed.CGrInt.8 <- pure idris_int_sub2.1
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03_val" <- pure (CGrInt unboxed.CGrInt.8)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03_74" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03_val"
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:0" $ "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:03_74" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Eq$Nat:!==:02_70"

"idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01" =
  (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.32.13.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00"
  (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.13.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01"
  unboxed.CGrInt.9 <- idris_int_eq.unboxed $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.32.13.arity.1" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.13.arity.1"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val" <- pure (CGrInt unboxed.CGrInt.9)
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val"
  "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val_93" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02"
  case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:02_val_93" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0" of
        0 ->
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.32.14.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00"
          (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.14.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01"
          unboxed.CGrInt.10 <- idris_int_lt.unboxed $ "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:00.32.14.arity.1" "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:01.32.14.arity.1"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val" <- pure (CGrInt unboxed.CGrInt.10)
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03" <- store "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val"
          "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val_94" <- fetch "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03"
          case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:03_val_94" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_95") ->
              case "idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Integer:!compare:0_cpat_LInt64_0_95" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.GT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.LT)
        #default ->
          pure (Cidr_Prelude.Interfaces.EQ)

"idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01" =
  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01_val" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01"
  case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01_val" of
    (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0") ->
      case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0" of
        0 ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_96") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_96" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.EQ)
                #default ->
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_97" <- pure (CGrInt 1)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_97"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.15.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02.32.15.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02"
                  idris_int_sub0.32.arity.1.2 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.15.arity.1"
                  idris_int_sub1.32.arity.1.2 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02.32.15.arity.1"
                  (CGrInt idris_int_sub0_1.2) <- pure (CGrInt idris_int_sub0.32.arity.1.2)
                  (CGrInt idris_int_sub1_1.2) <- pure (CGrInt idris_int_sub1.32.arity.1.2)
                  idris_int_sub2.2 <- _prim_int_sub $ idris_int_sub0_1.2 idris_int_sub1_1.2
                  unboxed.CGrInt.11 <- pure idris_int_sub2.2
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val" <- pure (CGrInt unboxed.CGrInt.11)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_98" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val"
                  pure (Cidr_Prelude.Interfaces.GT)
        #default ->
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_104" <- pure (CGrInt 1)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_105" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_104"
          (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.32.16.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01"
          (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_105.32.16.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_105"
          idris_int_sub0.32.arity.1.3 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:01.32.16.arity.1"
          idris_int_sub1.32.arity.1.3 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_105.32.16.arity.1"
          (CGrInt idris_int_sub0_1.3) <- pure (CGrInt idris_int_sub0.32.arity.1.3)
          (CGrInt idris_int_sub1_1.3) <- pure (CGrInt idris_int_sub1.32.arity.1.3)
          idris_int_sub2.3 <- _prim_int_sub $ idris_int_sub0_1.3 idris_int_sub1_1.3
          unboxed.CGrInt.12 <- pure idris_int_sub2.3
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_103" <- pure (CGrInt unboxed.CGrInt.12)
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_106" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_val_103"
          "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val_107" <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
          case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00_val_107" of
            (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_108") ->
              case "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0_cpat_LInt64_0_108" of
                0 ->
                  pure (Cidr_Prelude.Interfaces.LT)
                #default ->
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val_109" <- pure (CGrInt 1)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val_109"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.17.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00"
                  (CGrInt "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.17.arity.1") <- fetch "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03"
                  idris_int_sub0.32.arity.1.4 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:00.32.17.arity.1"
                  idris_int_sub1.32.arity.1.4 <- pure "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03.32.17.arity.1"
                  (CGrInt idris_int_sub0_1.4) <- pure (CGrInt idris_int_sub0.32.arity.1.4)
                  (CGrInt idris_int_sub1_1.4) <- pure (CGrInt idris_int_sub1.32.arity.1.4)
                  idris_int_sub2.4 <- _prim_int_sub $ idris_int_sub0_1.4 idris_int_sub1_1.4
                  unboxed.CGrInt.13 <- pure idris_int_sub2.4
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val" <- pure (CGrInt unboxed.CGrInt.13)
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_110" <- store "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_val"
                  "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:0" $ "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:03_110" "idr_Prelude.Interfaces.Prelude.Nat.@Prelude.Interfaces.Ord$Nat:!compare:02_106"
