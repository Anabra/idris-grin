idris_int_eq idris_int_eq0 idris_int_eq1 =
  (CGrInt idris_int_eq0_1) <- fetch idris_int_eq0
  (CGrInt idris_int_eq1_1) <- fetch idris_int_eq1
  idris_int_eq2 <- _prim_int_eq idris_int_eq0_1 idris_int_eq1_1
  case idris_int_eq2 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_int_lt idris_int_lt0 idris_int_lt1 =
  (CGrInt idris_int_lt0_1) <- fetch idris_int_lt0
  (CGrInt idris_int_lt1_1) <- fetch idris_int_lt1
  idris_int_lt2 <- _prim_int_lt idris_int_lt0_1 idris_int_lt1_1
  case idris_int_lt2 of
    #False ->
      pure (CGrInt 0)
    #True ->
      pure (CGrInt 1)

idris_int_print idris_int_print0 =
  (CGrInt idris_int_print0_1) <- fetch idris_int_print0
  _prim_int_print idris_int_print0_1
  pure (CUnit)

idris_int_add idris_int_add0 idris_int_add1 =
  (CGrInt idris_int_add0_1) <- fetch idris_int_add0
  (CGrInt idris_int_add1_1) <- fetch idris_int_add1
  idris_int_add2 <- _prim_int_add idris_int_add0_1 idris_int_add1_1
  pure (CGrInt idris_int_add2)

idris_int_sub idris_int_sub0 idris_int_sub1 =
  (CGrInt idris_int_sub0_1) <- fetch idris_int_sub0
  (CGrInt idris_int_sub1_1) <- fetch idris_int_sub1
  idris_int_sub2 <- _prim_int_sub idris_int_sub0_1 idris_int_sub1_1
  pure (CGrInt idris_int_sub2)

grinMain =
  r <- idr_{runMain_0}
  pure ()

idr_Main.fn idr_Main.fn0 =
  idr_Main.fn1_val_1 <- pure (CGrInt 0)
  idr_Main.fn1 <- store idr_Main.fn1_val_1
  idr_Main.fn1_val <- idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:0 idr_Main.fn0 idr_Main.fn1
  idr_Main.fn1_2 <- store idr_Main.fn1_val
  idr_Main.fn1_val_3 <- fetch idr_Main.fn1_2
  case idr_Main.fn1_val_3 of
    (Cidr_Prelude.Interfaces.GT) ->
      idr_Main.fn2_val_5 <- pure (CGrInt 1)
      idr_Main.fn2 <- store idr_Main.fn2_val_5
      idr_Main.fn2_val_4 <- idris_int_sub idr_Main.fn0 idr_Main.fn2
      idr_Main.fn2_6 <- store idr_Main.fn2_val_4
      idr_Main.fn2_val <- idr_Main.fn idr_Main.fn2_6
      idr_Main.fn2_7 <- store idr_Main.fn2_val
      idris_int_add idr_Main.fn0 idr_Main.fn2_7
    #default ->
      pure (CGrInt 0)

idr_GrinFFI.int_print idr_GrinFFI.int_print0 idr_GrinFFI.int_print1 =
  idris_int_print idr_GrinFFI.int_print0

idr_Main.lazy_fn idr_Main.lazy_fn0 =
  pure (Cidr_{P_Main.{lazy_fn_0}_0} idr_Main.lazy_fn0)

idr_Main.main idr_Main.main0 =
  idr_Main.main1_val_12 <- pure (CGrInt 10)
  idr_Main.main1 <- store idr_Main.main1_val_12
  idr_Main.main1_val_11 <- idr_Main.fn idr_Main.main1
  idr_Main.main1_13 <- store idr_Main.main1_val_11
  idr_Main.main1_val_10 <- idr_Main.fn idr_Main.main1_13
  idr_Main.main1_14 <- store idr_Main.main1_val_10
  idr_Main.main1_val <- idr_GrinFFI.int_print idr_Main.main1_14 idr_Main.main0
  idr_Main.main1_15 <- store idr_Main.main1_val
  idr_Main.main2_val_20 <- pure (CGrInt 10)
  idr_Main.main2 <- store idr_Main.main2_val_20
  idr_Main.main2_val_19 <- idr_Main.lazy_fn idr_Main.main2
  idr_Main.main2_21 <- store idr_Main.main2_val_19
  idr_Main.main2_val_18 <- idr_{EVAL_0} idr_Main.main2_21
  idr_Main.main2_22 <- store idr_Main.main2_val_18
  idr_Main.main2_val_17 <- idr_Main.lazy_fn idr_Main.main2_22
  idr_Main.main2_23 <- store idr_Main.main2_val_17
  idr_Main.main2_val_16 <- idr_{EVAL_0} idr_Main.main2_23
  idr_Main.main2_24 <- store idr_Main.main2_val_16
  idr_Main.main2_val <- idr_GrinFFI.int_print idr_Main.main2_24 idr_Main.main0
  idr_Main.main2_25 <- store idr_Main.main2_val
  pure (Cidr_MkUnit)

idr_{EVAL_0} idr_{EVAL_0}0 =
  idr_{EVAL_0}0_val <- fetch idr_{EVAL_0}0
  case idr_{EVAL_0}0_val of
    (Cidr_{P_Main.{lazy_fn_0}_0} idr_{EVAL_0}1) ->
      idr_{EVAL_0}0_val_26 <- idr_Main.{lazy_fn_0} idr_{EVAL_0}1
      update idr_{EVAL_0}0 idr_{EVAL_0}0_val_26
      pure idr_{EVAL_0}0_val_26
    #default ->
      fetch idr_{EVAL_0}0

idr_Main.{lazy_fn_0} idr_Main.{lazy_fn_0}0 =
  idr_Main.{lazy_fn_0}1_val_27 <- pure (CGrInt 0)
  idr_Main.{lazy_fn_0}1 <- store idr_Main.{lazy_fn_0}1_val_27
  idr_Main.{lazy_fn_0}1_val <- idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:0 idr_Main.{lazy_fn_0}0 idr_Main.{lazy_fn_0}1
  idr_Main.{lazy_fn_0}1_28 <- store idr_Main.{lazy_fn_0}1_val
  idr_Main.{lazy_fn_0}1_val_29 <- fetch idr_Main.{lazy_fn_0}1_28
  case idr_Main.{lazy_fn_0}1_val_29 of
    (Cidr_Prelude.Interfaces.GT) ->
      idr_Main.{lazy_fn_0}2_val_32 <- pure (CGrInt 1)
      idr_Main.{lazy_fn_0}2 <- store idr_Main.{lazy_fn_0}2_val_32
      idr_Main.{lazy_fn_0}2_val_31 <- idris_int_sub idr_Main.{lazy_fn_0}0 idr_Main.{lazy_fn_0}2
      idr_Main.{lazy_fn_0}2_33 <- store idr_Main.{lazy_fn_0}2_val_31
      idr_Main.{lazy_fn_0}2_val_30 <- idr_Main.lazy_fn idr_Main.{lazy_fn_0}2_33
      idr_Main.{lazy_fn_0}2_34 <- store idr_Main.{lazy_fn_0}2_val_30
      idr_Main.{lazy_fn_0}2_val <- idr_{EVAL_0} idr_Main.{lazy_fn_0}2_34
      idr_Main.{lazy_fn_0}2_35 <- store idr_Main.{lazy_fn_0}2_val
      idris_int_add idr_Main.{lazy_fn_0}0 idr_Main.{lazy_fn_0}2_35
    #default ->
      pure (CGrInt 0)

idr_{runMain_0} =
  idr_{runMain_0}0_val_36 <- pure (Cidr_TheWorld)
  idr_{runMain_0}0 <- store idr_{runMain_0}0_val_36
  idr_{runMain_0}0_val <- idr_Main.main idr_{runMain_0}0
  idr_{runMain_0}0_37 <- store idr_{runMain_0}0_val
  idr_{EVAL_0} idr_{runMain_0}0_37

idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:0 idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:00 idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:01 =
  idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:02_val <- idris_int_eq idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:00 idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:01
  idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:02 <- store idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:02_val
  idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:02_val_38 <- fetch idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:02
  case idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:02_val_38 of
    (CGrInt idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:0_cpat_LInt64_0) ->
      case idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:0_cpat_LInt64_0 of
        0 ->
          idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:03_val <- idris_int_lt idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:00 idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:01
          idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:03 <- store idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:03_val
          idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:03_val_39 <- fetch idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:03
          case idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:03_val_39 of
            (CGrInt idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:0_cpat_LInt64_0_40) ->
              case idr_Prelude.Interfaces.Prelude.Interfaces.@Prelude.Interfaces.Ord$Int:!compare:0_cpat_LInt64_0_40 of
                0 ->
                  pure (Cidr_Prelude.Interfaces.GT)
                #default ->
                  pure (Cidr_Prelude.Interfaces.LT)
            #default ->
              pure (Cidr_Prelude.Interfaces.LT)
        #default ->
          pure (Cidr_Prelude.Interfaces.EQ)
    #default ->
      pure (Cidr_Prelude.Interfaces.EQ)
