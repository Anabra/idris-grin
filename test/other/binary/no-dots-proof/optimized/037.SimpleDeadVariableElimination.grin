primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
primop effectful
  _prim_int_print :: T_Int64 -> T_Unit
  _prim_string_print :: T_String -> T_Unit
  _prim_read_string :: T_String
  _prim_usleep :: T_Int64 -> T_Unit
  _prim_error :: T_String -> T_Unit
  _prim_ffi_file_eof :: T_Int64 -> T_Int64
  
primop pure
  _prim_string_concat :: T_String -> T_String -> T_String
  _prim_string_reverse :: T_String -> T_String
  _prim_string_lt :: T_String -> T_String -> T_Bool
  _prim_string_eq :: T_String -> T_String -> T_Bool
  _prim_string_head :: T_String -> T_Int64
  _prim_string_tail :: T_String -> T_String
  _prim_string_cons :: T_Int64 -> T_String -> T_String
  _prim_string_len :: T_String -> T_Int64
  _prim_int_str :: T_Int64 -> T_String
  _prim_str_int :: T_String -> T_Int64
  _prim_int_float :: T_Int64 -> T_Float
  _prim_float_string :: T_Float -> T_String
  _prim_char_int :: T_Char -> T_Int64
  _prim_int_add :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_sub :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_mul :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_div :: T_Int64 -> T_Int64 -> T_Int64
  _prim_int_eq :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ne :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_gt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_ge :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_lt :: T_Int64 -> T_Int64 -> T_Bool
  _prim_int_le :: T_Int64 -> T_Int64 -> T_Bool
  _prim_word_add :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_sub :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_mul :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_div :: T_Word64 -> T_Word64 -> T_Word64
  _prim_word_eq :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ne :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_gt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_ge :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_lt :: T_Word64 -> T_Word64 -> T_Bool
  _prim_word_le :: T_Word64 -> T_Word64 -> T_Bool
  _prim_float_add :: T_Float -> T_Float -> T_Float
  _prim_float_sub :: T_Float -> T_Float -> T_Float
  _prim_float_mul :: T_Float -> T_Float -> T_Float
  _prim_float_div :: T_Float -> T_Float -> T_Float
  _prim_float_eq :: T_Float -> T_Float -> T_Bool
  _prim_float_ne :: T_Float -> T_Float -> T_Bool
  _prim_float_gt :: T_Float -> T_Float -> T_Bool
  _prim_float_ge :: T_Float -> T_Float -> T_Bool
  _prim_float_lt :: T_Float -> T_Float -> T_Bool
  _prim_float_le :: T_Float -> T_Float -> T_Bool
  _prim_bool_eq :: T_Bool -> T_Bool -> T_Bool
  _prim_bool_ne :: T_Bool -> T_Bool -> T_Bool
  
grinMain =
  idr_Main.main0.49.0.arity.1.0 <- pure 14
  idr_Main.main0_val_9.0 <- idr_Main.parity $ idr_Main.main0.49.0.arity.1.0
  idr_Main.main0_val.0 <- case idr_Main.main0_val_9.0 of
    (Cidr_Main.Even idr_Main.main1.0) ->
      idr_Main.main1_val.0 <- fetch idr_Main.main1.0
      (CGrInt idr_Main.main_cpat_LInt64_0.0) <- pure idr_Main.main1_val.0
      idr_Main.main2_val.0 <- case idr_Main.main_cpat_LInt64_0.0 of
        0 ->
          pure (Cidr_Main.N)
        #default ->
          (CGrInt idr_Main.main1.41.0.arity.1.0) <- pure idr_Main.main1_val.0
          idr_Main.main2.41.0.arity.1.0 <- pure 1
          idris_int_sub2.0 <- _prim_int_sub $ idr_Main.main1.41.0.arity.1.0 idr_Main.main2.41.0.arity.1.0
          idr_Main.main4_val.0 <- idr_Main.parity $ idris_int_sub2.0
          idr_Main.main4.0 <- store idr_Main.main4_val.0
          idr__Main.natToBin_with_25 $ idr_Main.main4.0
      idr_Main.main2_24.0 <- store idr_Main.main2_val.0
      pure (Cidr_Main.I idr_Main.main1.0 idr_Main.main2_24.0)
    (Cidr_Main.Odd idr_Main.main1_25.0) ->
      (CGrInt idr_Main.main1_25.41.1.arity.1.0) <- fetch idr_Main.main1_25.0
      idr_Main.main2_28.41.1.arity.1.0 <- pure 1
      idris_int_add2.0 <- _prim_int_add $ idr_Main.main1_25.41.1.arity.1.0 idr_Main.main2_28.41.1.arity.1.0
      idr_Main.main2_val_26.0 <- pure (CGrInt idris_int_add2.0)
      idr_Main.main2_29.0 <- store idr_Main.main2_val_26.0
      idris_int_add2.1 <- _prim_int_add $ idr_Main.main1_25.41.1.arity.1.0 idr_Main.main2_28.41.1.arity.1.0
      idr_Main.main3_val_30.0 <- case idris_int_add2.1 of
        0 ->
          pure (Cidr_Main.N)
        #default ->
          idris_int_add2.2 <- _prim_int_add $ idr_Main.main1_25.41.1.arity.1.0 idr_Main.main2_28.41.1.arity.1.0
          idris_int_sub2.1 <- _prim_int_sub $ idris_int_add2.2 idr_Main.main2_28.41.1.arity.1.0
          idr_Main.main6_val.0 <- idr_Main.parity $ idris_int_sub2.1
          idr_Main.main6.0 <- store idr_Main.main6_val.0
          idr__Main.natToBin_with_25 $ idr_Main.main6.0
      idr_Main.main3_57.0 <- store idr_Main.main3_val_30.0
      pure (Cidr_Main.O idr_Main.main2_29.0 idr_Main.main3_57.0)
  idr_Main.main0_58.0 <- store idr_Main.main0_val.0
  "idr_Main.{main_3}4_val.0" <- pure (C"idr_{U_Main.{main_0}_1}")
  "idr_Main.{main_3}4.0" <- store "idr_Main.{main_3}4_val.0"
  "idr_Main.{main_3}2_val.0" <- idr_Prelude.Interactive.printLn' $ "idr_Main.{main_3}4.0" idr_Main.main0_58.0
  "idr_Main.{main_3}5_val.0" <- pure (C"idr_{U_Main.{main_1}_1}")
  "idr_Main.{main_3}5.0" <- store "idr_Main.{main_3}5_val.0"
  "idr_Main.{main_3}0_val.0" <- fetch idr_Main.main0_58.0
  ccp.0 <- case "idr_Main.{main_3}0_val.0" of
    (Cidr_Main.I "idr_Main.{main_3}6.0" "idr_Main.{main_3}7.0") ->
      "idr_Main.{main_3}8.41.18.arity.1.0" <- pure 2
      (CGrInt "idr_Main.{main_3}6.41.18.arity.1.0") <- fetch "idr_Main.{main_3}6.0"
      idris_int_mul2.0.0 <- _prim_int_mul $ "idr_Main.{main_3}8.41.18.arity.1.0" "idr_Main.{main_3}6.41.18.arity.1.0"
      "idr_Main.{main_3}9.41.19.arity.1.0" <- pure 1
      idris_int_add2.3 <- _prim_int_add $ idris_int_mul2.0.0 "idr_Main.{main_3}9.41.19.arity.1.0"
      pure idris_int_add2.3
    (Cidr_Main.O "idr_Main.{main_3}6_226.0" "idr_Main.{main_3}7_227.0") ->
      "idr_Main.{main_3}8_229.41.20.arity.1.0" <- pure 2
      (CGrInt "idr_Main.{main_3}6_226.41.20.arity.1.0") <- fetch "idr_Main.{main_3}6_226.0"
      idris_int_mul2.1.0 <- _prim_int_mul $ "idr_Main.{main_3}8_229.41.20.arity.1.0" "idr_Main.{main_3}6_226.41.20.arity.1.0"
      pure idris_int_mul2.1.0
  "idr_Main.{main_3}6_val.0" <- pure (CGrInt ccp.0)
  "idr_Main.{main_3}6_230.0" <- store "idr_Main.{main_3}6_val.0"
  "idr_Main.{main_3}3_val_219.0" <- idr_Prelude.Interactive.printLn' $ "idr_Main.{main_3}5.0" "idr_Main.{main_3}6_230.0"
  "idr_Main.{main_3}7_val_238.0" <- idr_Main.parity $ idr_Main.main0.49.0.arity.1.0
  "idr_Main.{main_3}7_val.0" <- case "idr_Main.{main_3}7_val_238.0" of
    (Cidr_Main.Even "idr_Main.{main_3}8_243.0") ->
      "idr_Main.{main_3}8_val_245.0" <- fetch "idr_Main.{main_3}8_243.0"
      (CGrInt "idr_Main.{main_3}_cpat_LInt64_0.0") <- pure "idr_Main.{main_3}8_val_245.0"
      "idr_Main.{main_3}9_val_244.0" <- case "idr_Main.{main_3}_cpat_LInt64_0.0" of
        0 ->
          pure (Cidr_Main.N)
        #default ->
          (CGrInt "idr_Main.{main_3}8_243.41.21.arity.1.0") <- pure "idr_Main.{main_3}8_val_245.0"
          "idr_Main.{main_3}9_248.41.21.arity.1.0" <- pure 1
          idris_int_sub2.2 <- _prim_int_sub $ "idr_Main.{main_3}8_243.41.21.arity.1.0" "idr_Main.{main_3}9_248.41.21.arity.1.0"
          "idr_Main.{main_3}11_val.0" <- idr_Main.parity $ idris_int_sub2.2
          "idr_Main.{main_3}11.0" <- store "idr_Main.{main_3}11_val.0"
          idr__Main.natToBin_with_25 $ "idr_Main.{main_3}11.0"
      "idr_Main.{main_3}9_258.0" <- store "idr_Main.{main_3}9_val_244.0"
      pure (Cidr_Main.I "idr_Main.{main_3}8_243.0" "idr_Main.{main_3}9_258.0")
    (Cidr_Main.Odd "idr_Main.{main_3}8_259.0") ->
      (CGrInt "idr_Main.{main_3}8_259.41.22.arity.1.0") <- fetch "idr_Main.{main_3}8_259.0"
      "idr_Main.{main_3}9_262.41.22.arity.1.0" <- pure 1
      idris_int_add2.4 <- _prim_int_add $ "idr_Main.{main_3}8_259.41.22.arity.1.0" "idr_Main.{main_3}9_262.41.22.arity.1.0"
      "idr_Main.{main_3}9_val_260.0" <- pure (CGrInt idris_int_add2.4)
      "idr_Main.{main_3}9_263.0" <- store "idr_Main.{main_3}9_val_260.0"
      idris_int_add2.5 <- _prim_int_add $ "idr_Main.{main_3}8_259.41.22.arity.1.0" "idr_Main.{main_3}9_262.41.22.arity.1.0"
      "idr_Main.{main_3}10_val_264.0" <- case idris_int_add2.5 of
        0 ->
          pure (Cidr_Main.N)
        #default ->
          idris_int_add2.6 <- _prim_int_add $ "idr_Main.{main_3}8_259.41.22.arity.1.0" "idr_Main.{main_3}9_262.41.22.arity.1.0"
          idris_int_sub2.3 <- _prim_int_sub $ idris_int_add2.6 "idr_Main.{main_3}9_262.41.22.arity.1.0"
          "idr_Main.{main_3}13_val.0" <- idr_Main.parity $ idris_int_sub2.3
          "idr_Main.{main_3}13.0" <- store "idr_Main.{main_3}13_val.0"
          idr__Main.natToBin_with_25 $ "idr_Main.{main_3}13.0"
      "idr_Main.{main_3}10_291.0" <- store "idr_Main.{main_3}10_val_264.0"
      pure (Cidr_Main.O "idr_Main.{main_3}9_263.0" "idr_Main.{main_3}10_291.0")
  "idr_Main.{main_3}7_292.0" <- store "idr_Main.{main_3}7_val.0"
  "idr_{runMain_0}0_val.0" <- idr_Prelude.Interactive.printLn' $ "idr_Main.{main_3}4.0" "idr_Main.{main_3}7_292.0"
  pure ()

idr_Main.parity idr_Main.parity0.49.arity.1 =
  case idr_Main.parity0.49.arity.1 of
    0 ->
      idr_Main.parity1_val <- pure (CGrInt 0)
      idr_Main.parity1 <- store idr_Main.parity1_val
      pure (Cidr_Main.Even idr_Main.parity1)
    #default ->
      idr_Main.parity1_94.41.5.arity.1 <- pure 1
      idris_int_sub2.4 <- _prim_int_sub $ idr_Main.parity0.49.arity.1 idr_Main.parity1_94.41.5.arity.1
      case idris_int_sub2.4 of
        0 ->
          idr_Main.parity2_val <- pure (CGrInt 0)
          idr_Main.parity2 <- store idr_Main.parity2_val
          pure (Cidr_Main.Odd idr_Main.parity2)
        #default ->
          idris_int_sub2.5 <- _prim_int_sub $ idris_int_sub2.4 idr_Main.parity1_94.41.5.arity.1
          idr_Main.parity3_val <- idr_Main.parity $ idris_int_sub2.5
          case idr_Main.parity3_val of
            (Cidr_Main.Even idr_Main.parity4) ->
              (CGrInt idr_Main.parity4.41.7.arity.1) <- fetch idr_Main.parity4
              idris_int_add2.7 <- _prim_int_add $ idr_Main.parity4.41.7.arity.1 idr_Main.parity1_94.41.5.arity.1
              idr_Main.parity5_val <- pure (CGrInt idris_int_add2.7)
              idr_Main.parity5_104 <- store idr_Main.parity5_val
              pure (Cidr_Main.Even idr_Main.parity5_104)
            (Cidr_Main.Odd idr_Main.parity4_105) ->
              (CGrInt idr_Main.parity4_105.41.8.arity.1) <- fetch idr_Main.parity4_105
              idris_int_add2.8 <- _prim_int_add $ idr_Main.parity4_105.41.8.arity.1 idr_Main.parity1_94.41.5.arity.1
              idr_Main.parity5_val_106 <- pure (CGrInt idris_int_add2.8)
              idr_Main.parity5_109 <- store idr_Main.parity5_val_106
              pure (Cidr_Main.Odd idr_Main.parity5_109)

idr_Prelude.Interactive.printLn' idr_Prelude.Interactive.printLn'2 idr_Prelude.Interactive.printLn'3 =
  "idr_{APPLY_0}0_val.1" <- fetch idr_Prelude.Interactive.printLn'2
  ccp.1 <- case "idr_{APPLY_0}0_val.1" of
    (C"idr_{U_Main.{main_0}_1}") ->
      unboxed.CGrString.1 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:0.unboxed" $ idr_Prelude.Interactive.printLn'3
      pure unboxed.CGrString.1
    (C"idr_{U_Main.{main_1}_1}") ->
      (CGrInt idris_int_str1_0.0.0) <- fetch idr_Prelude.Interactive.printLn'3
      idris_int_str2.0.0 <- _prim_int_str $ idris_int_str1_0.0.0
      ccp.3.0.0 <- pure 0
      idr_Prelude.Show.primNumShow6.0.49.5.arity.1.0 <- pure 5
      idris_int_eq2.0 <- _prim_int_eq $ ccp.3.0.0 idr_Prelude.Show.primNumShow6.0.49.5.arity.1.0
      ccp.0.0 <- case idris_int_eq2.0 of
        #False ->
          pure ccp.3.0.0
        #True ->
          pure 1
      idr_Prelude.Show.primNumShow5_val_170.0.0 <- case ccp.0.0 of
        0 ->
          idris_int_lt2.0 <- _prim_int_lt $ ccp.3.0.0 idr_Prelude.Show.primNumShow6.0.49.5.arity.1.0
          ccp.1.0 <- case idris_int_lt2.0 of
            #False ->
              pure ccp.0.0
            #True ->
              pure 1
          case ccp.1.0 of
            0 ->
              pure (Cidr_Prelude.Interfaces.GT)
            #default ->
              pure (Cidr_Prelude.Interfaces.LT)
        #default ->
          pure (Cidr_Prelude.Interfaces.EQ)
      idr_Prelude.Show.primNumShow5_val_169.0.0 <- case idr_Prelude.Show.primNumShow5_val_170.0.0 of
        (Cidr_Prelude.Interfaces.GT) ->
          pure (Cidr_Prelude.Bool.True)
        #default ->
          idris_int_eq2.1 <- _prim_int_eq $ ccp.3.0.0 idr_Prelude.Show.primNumShow6.0.49.5.arity.1.0
          ccp.0.1 <- case idris_int_eq2.1 of
            #False ->
              pure ccp.3.0.0
            #True ->
              pure 1
          case ccp.0.1 of
            0 ->
              pure (Cidr_Prelude.Bool.False)
            #default ->
              pure (Cidr_Prelude.Bool.True)
      idr_Prelude.Show.primNumShow5_val.0.0 <- case idr_Prelude.Show.primNumShow5_val_169.0.0 of
        (Cidr_Prelude.Bool.False) ->
          pure (Cidr_Prelude.Bool.False)
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Show.primNumShow6_186.41.10.arity.1.0.0 <- pure #""
          idris_str_eq3.0 <- _prim_string_eq $ idris_int_str2.0.0 idr_Prelude.Show.primNumShow6_186.41.10.arity.1.0.0
          ccp.2.0 <- case idris_str_eq3.0 of
            #False ->
              pure ccp.3.0.0
            #True ->
              pure 1
          idr_Prelude.Show.primNumShow6_val_183.0.0 <- case ccp.2.0 of
            0 ->
              pure (Cidr_Prelude.Bool.True)
            #default ->
              pure (Cidr_Prelude.Bool.False)
          "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0" <- pure (Cidr_Prelude.Bool.True)
          case idr_Prelude.Show.primNumShow6_val_183.0.0 of
            (Cidr_Prelude.Bool.False) ->
              pure (Cidr_Prelude.Bool.False)
            (Cidr_Prelude.Bool.True) ->
              idris_str_head2.0.0 <- _prim_string_head $ idris_int_str2.0.0
              idr_Prelude.Show.primNumShow8.41.12.arity.1.0.0.0 <- pure 45
              idris_int_eq2.2.0 <- _prim_int_eq $ idris_str_head2.0.0 idr_Prelude.Show.primNumShow8.41.12.arity.1.0.0.0
              ccp.0.2.0 <- case idris_int_eq2.2.0 of
                #False ->
                  pure ccp.3.0.0
                #True ->
                  pure 1
              case ccp.0.2.0 of
                0 ->
                  pure (Cidr_Prelude.Bool.False)
                #default ->
                  pure "idr_Decidable.Equality.Decidable.Equality.@Decidable.Equality.DecEq$Bool:!decEq:01_val.0"
      unboxed.CGrString.2 <- case idr_Prelude.Show.primNumShow5_val.0.0 of
        (Cidr_Prelude.Bool.False) ->
          pure idris_int_str2.0.0
        (Cidr_Prelude.Bool.True) ->
          idr_Prelude.Show.primNumShow7_207.41.13.arity.1.0.0 <- pure #")"
          idris_str_concat3.0 <- _prim_string_concat $ idris_int_str2.0.0 idr_Prelude.Show.primNumShow7_207.41.13.arity.1.0.0
          idr_Prelude.Show.primNumShow6_204.0.49.9.arity.1.0 <- pure #"("
          idris_str_concat3.1 <- _prim_string_concat $ idr_Prelude.Show.primNumShow6_204.0.49.9.arity.1.0 idris_str_concat3.0
          pure idris_str_concat3.1
      pure unboxed.CGrString.2
  idr_Prelude.Interactive.printLn'6.41.15.arity.1 <- pure #"\n"
  idris_str_concat3.2 <- _prim_string_concat $ ccp.1 idr_Prelude.Interactive.printLn'6.41.15.arity.1
  _prim_string_print $ idris_str_concat3.2
  pure (Cidr_MkUnit)

"idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:0.unboxed" "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:01" =
  "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:01_val" <- fetch "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:01"
  case "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:01_val" of
    (Cidr_Main.I "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:02" "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:03") ->
      unboxed.CGrString.6 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:0.unboxed" $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:03"
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:05.41.28.arity.1" <- pure #"1"
      idris_str_concat3.3 <- _prim_string_concat $ unboxed.CGrString.6 "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:05.41.28.arity.1"
      pure idris_str_concat3.3
    (Cidr_Main.N) ->
      pure #""
    (Cidr_Main.O "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:02_299" "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:03_300") ->
      unboxed.CGrString.7 <- "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:0.unboxed" $ "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:03_300"
      "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:05_306.41.29.arity.1" <- pure #"0"
      idris_str_concat3.4 <- _prim_string_concat $ unboxed.CGrString.7 "idr_Prelude.Show.Main.@Prelude.Show.Show$Bin n:!show:05_306.41.29.arity.1"
      pure idris_str_concat3.4

idr__Main.natToBin_with_25 idr__Main.natToBin_with_251 =
  idr__Main.natToBin_with_251_val <- fetch idr__Main.natToBin_with_251
  case idr__Main.natToBin_with_251_val of
    (Cidr_Main.Even idr__Main.natToBin_with_252) ->
      idr__Main.natToBin_with_252_val <- fetch idr__Main.natToBin_with_252
      (CGrInt idr__Main.natToBin_with_25_cpat_LInt64_0) <- pure idr__Main.natToBin_with_252_val
      idr__Main.natToBin_with_253_val <- case idr__Main.natToBin_with_25_cpat_LInt64_0 of
        0 ->
          pure (Cidr_Main.N)
        #default ->
          (CGrInt idr__Main.natToBin_with_252.41.30.arity.1) <- pure idr__Main.natToBin_with_252_val
          idr__Main.natToBin_with_253.41.30.arity.1 <- pure 1
          idris_int_sub2.6 <- _prim_int_sub $ idr__Main.natToBin_with_252.41.30.arity.1 idr__Main.natToBin_with_253.41.30.arity.1
          idr__Main.natToBin_with_255_val <- idr_Main.parity $ idris_int_sub2.6
          idr__Main.natToBin_with_255 <- store idr__Main.natToBin_with_255_val
          idr__Main.natToBin_with_25 $ idr__Main.natToBin_with_255
      idr__Main.natToBin_with_253_325 <- store idr__Main.natToBin_with_253_val
      pure (Cidr_Main.I idr__Main.natToBin_with_252 idr__Main.natToBin_with_253_325)
    (Cidr_Main.Odd idr__Main.natToBin_with_252_326) ->
      (CGrInt idr__Main.natToBin_with_252_326.41.31.arity.1) <- fetch idr__Main.natToBin_with_252_326
      idr__Main.natToBin_with_253_329.41.31.arity.1 <- pure 1
      idris_int_add2.9 <- _prim_int_add $ idr__Main.natToBin_with_252_326.41.31.arity.1 idr__Main.natToBin_with_253_329.41.31.arity.1
      idr__Main.natToBin_with_253_val_327 <- pure (CGrInt idris_int_add2.9)
      idr__Main.natToBin_with_253_330 <- store idr__Main.natToBin_with_253_val_327
      idris_int_add2.10 <- _prim_int_add $ idr__Main.natToBin_with_252_326.41.31.arity.1 idr__Main.natToBin_with_253_329.41.31.arity.1
      idr__Main.natToBin_with_254_val_331 <- case idris_int_add2.10 of
        0 ->
          pure (Cidr_Main.N)
        #default ->
          idris_int_add2.11 <- _prim_int_add $ idr__Main.natToBin_with_252_326.41.31.arity.1 idr__Main.natToBin_with_253_329.41.31.arity.1
          idris_int_sub2.7 <- _prim_int_sub $ idris_int_add2.11 idr__Main.natToBin_with_253_329.41.31.arity.1
          idr__Main.natToBin_with_257_val <- idr_Main.parity $ idris_int_sub2.7
          idr__Main.natToBin_with_257 <- store idr__Main.natToBin_with_257_val
          idr__Main.natToBin_with_25 $ idr__Main.natToBin_with_257
      idr__Main.natToBin_with_254_358 <- store idr__Main.natToBin_with_254_val_331
      pure (Cidr_Main.O idr__Main.natToBin_with_253_330 idr__Main.natToBin_with_254_358)
