
==================== FINAL INTERFACE ====================
2019-04-01 19:15:40.628080453 UTC

interface main:Main 8061
  interface hash: fd9786a4ffaa87f557334d49681ef8ec
  ABI hash: 6b1b47f3c41064b268fb548a37714064
  export-list hash: f7872011c3a9b41c9d69d521f2299a2e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: bd6ba295c1b124c69327a7dccad18904
  opt_hash: 875791ef924fcd11c2b687259a138b70
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.cg_main
  Main.getOpts
  Main.main
  Main.options
  Main.showUsage
module dependencies:
package dependencies: Diff-0.3.4 HUnit-1.6.0.0 QuickCheck-2.11.3
                      aeson-1.4.1.0 annotated-wl-pprint-0.7.0 ansi-terminal-0.8.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8 base-prelude-1.3 base64-bytestring-1.0.0.1
                      bifunctors-5.5.3 bimap-0.3.3 binary-0.8.6.0 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.2 bytestring-0.10.8.2
                      call-stack-0.1.0 case-insensitive-1.2.0.11 charset-0.3.7.1
                      cheapskate-0.1.1.1 clock-0.7.2 code-page-0.1.3 colour-2.3.4
                      comonad-5.0.4 containers-0.6.0.1 css-text-0.1.3.0
                      data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.4.0
                      digest-0.0.1.2 directory-1.3.3.0 distributive-0.6 dlist-0.8.0.5
                      exceptions-0.10.0 extra-1.6.13 filepath-1.4.2.1 fingertree-0.1.4.1
                      free-5.1 fsnotify-0.3.0.1 functor-infix-0.0.5 ghc-boot-th-8.6.1
                      ghc-prim-0.5.3 grin-0.1.0.0 hashable-1.2.7.0 haskeline-0.7.4.3
                      haskell-lexer-1.0.2 hinotify-0.4 hspec-2.5.5 hspec-core-2.5.5
                      hspec-expectations-0.8.2 idris-1.3.1 idris-grin-0.1.0.0
                      ieee754-0.8.0 inline-c-0.6.1.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 llvm-hs-7.0.1 llvm-hs-pretty-0.5.0.0
                      llvm-hs-pure-7.0.0 megaparsec-6.5.0 microlens-0.4.10
                      microlens-ghc-0.4.10 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.11 microlens-th-0.4.2.3
                      monad-control-1.0.2.3 mtl-2.2.2 neat-interpolation-0.3.2.2
                      network-2.8.0.0 network-uri-2.6.1.0 old-locale-1.0.0.7
                      parsec-3.1.13.0 parser-combinators-1.0.0 parsers-0.12.9
                      pretty-1.1.3.6 pretty-show-1.8.2 pretty-simple-2.2.0.0
                      prettyprinter-1.2.1 primitive-0.6.4.0 process-1.6.3.0
                      profunctors-5.3 quickcheck-io-0.2.0 random-1.1
                      recursion-schemes-5.0.3 scientific-0.3.6.2 semigroupoids-5.3.1
                      set-extra-1.4.1 setenv-0.1.1.3 shelly-1.8.1 split-0.2.3.3
                      stm-2.5.0.0 syb-0.7 system-fileio-0.3.16.4 system-filepath-0.4.14
                      tagged-0.8.6 tagsoup-0.14.7 template-haskell-2.14.0.0
                      terminal-size-0.3.2.1 terminfo-0.4.1.2 text-1.2.3.1 tf-random-0.5
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.5.0 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 uniplate-1.6.12 unix-2.7.2.2
                      unix-compat-0.5.1 unordered-containers-0.2.9.0 utf8-string-1.0.1.1
                      uuid-types-1.0.3 vector-0.12.0.1 xss-sanitize-0.3.6
                      zip-archive-0.3.3 zlib-0.6.2
orphans: fsnotify-0.3.0.1:System.FSNotify.Linux
         system-filepath-0.4.14:Filesystem.Path.CurrentOS
         system-filepath-0.4.14:Filesystem.Path idris-1.3.1:Idris.IBC
         idris-1.3.1:Idris.DeepSeq idris-1.3.1:Idris.Core.DeepSeq
         idris-1.3.1:Idris.Output cheapskate-0.1.1.1:Cheapskate
         uniplate-1.6.12:Data.Generics.Uniplate.Data
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         idris-1.3.1:Idris.Core.Binary network-2.8.0.0:Network.Socket
         idris-1.3.1:IRTS.Portable
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         idris-1.3.1:Idris.Core.Evaluate
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         grin-0.1.0.0:AbstractInterpretation.CreatedBy.Pretty
         grin-0.1.0.0:AbstractInterpretation.LiveVariable.Pretty
         grin-0.1.0.0:AbstractInterpretation.Sharing.Pretty
         grin-0.1.0.0:AbstractInterpretation.HeapPointsTo.Pretty
         grin-0.1.0.0:AbstractInterpretation.PrettyIR
         grin-0.1.0.0:Lens.Micro.Extra syb-0.7:Data.Generics.Instances
         grin-0.1.0.0:Grin.Pretty colour-2.3.4:Data.Colour
         llvm-hs-7.0.1:LLVM.Internal.OrcJIT.CompileOnDemandLayer
         llvm-hs-7.0.1:LLVM.Internal.Global
         llvm-hs-7.0.1:LLVM.Internal.Instruction
         llvm-hs-7.0.1:LLVM.Internal.Atomicity
         llvm-hs-7.0.1:LLVM.Internal.Attribute
         llvm-hs-7.0.1:LLVM.Internal.CallingConvention
         llvm-hs-7.0.1:LLVM.Internal.FastMathFlags
         llvm-hs-7.0.1:LLVM.Internal.RMWOperation
         llvm-hs-7.0.1:LLVM.Internal.TailCallKind
         llvm-hs-7.0.1:LLVM.Internal.MemoryBuffer
         llvm-hs-7.0.1:LLVM.Internal.Operand
         llvm-hs-7.0.1:LLVM.Internal.Constant
         llvm-hs-7.0.1:LLVM.Internal.FloatingPointPredicate
         llvm-hs-7.0.1:LLVM.Internal.IntegerPredicate
         llvm-hs-7.0.1:LLVM.Internal.InlineAssembly
         llvm-hs-7.0.1:LLVM.Internal.Metadata
         llvm-hs-7.0.1:LLVM.Internal.Type
         llvm-hs-7.0.1:LLVM.Internal.EncodeAST
         llvm-hs-7.0.1:LLVM.Internal.Target
         llvm-hs-7.0.1:LLVM.Internal.String
         llvm-hs-7.0.1:Control.Monad.AnyCont
         llvm-hs-7.0.1:LLVM.Internal.FFI.LLVMCTypes
         llvm-hs-pretty-0.5.0.0:LLVM.Pretty
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.5.0.0:Control.Monad.STM grin-0.1.0.0:Grin.Syntax
         microlens-platform-0.3.11:Lens.Micro.Platform
         microlens-ghc-0.4.10:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         text-1.2.3.1:Data.Text.Lazy
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.1.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         cheapskate-0.1.1.1:Cheapskate.Types clock-0.7.2:System.Clock
                         containers-0.6.0.1:Data.Graph
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.5:Data.DList fingertree-0.1.4.1:Data.FingerTree
                         fingertree-0.1.4.1:Data.PriorityQueue.FingerTree
                         free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.1:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.1:GHC.LanguageExtensions.Type
                         grin-0.1.0.0:AbstractInterpretation.IR
                         grin-0.1.0.0:AbstractInterpretation.Reduce grin-0.1.0.0:Grin.Syntax
                         grin-0.1.0.0:Grin.SyntaxDefs grin-0.1.0.0:Grin.TypeEnvDefs
                         grin-0.1.0.0:Lens.Micro.Extra
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         idris-1.3.1:IRTS.CodegenCommon idris-1.3.1:IRTS.Lang
                         idris-1.3.1:Idris.AbsSyntaxTree idris-1.3.1:Idris.Colours
                         idris-1.3.1:Idris.Core.CaseTree idris-1.3.1:Idris.Core.Evaluate
                         idris-1.3.1:Idris.Core.TT idris-1.3.1:Idris.Docstrings
                         idris-1.3.1:Idris.Options inline-c-0.6.1.0:Language.C.Inline
                         inline-c-0.6.1.0:Language.C.Inline.Context
                         llvm-hs-7.0.1:LLVM.CodeGenOpt llvm-hs-7.0.1:LLVM.CodeModel
                         llvm-hs-7.0.1:LLVM.Internal.FFI.LLVMCTypes
                         llvm-hs-7.0.1:LLVM.Relocation llvm-hs-7.0.1:LLVM.Target.Options
                         llvm-hs-pure-7.0.0:LLVM.AST llvm-hs-pure-7.0.0:LLVM.AST.AddrSpace
                         llvm-hs-pure-7.0.0:LLVM.AST.COMDAT
                         llvm-hs-pure-7.0.0:LLVM.AST.CallingConvention
                         llvm-hs-pure-7.0.0:LLVM.AST.Constant
                         llvm-hs-pure-7.0.0:LLVM.AST.DLL
                         llvm-hs-pure-7.0.0:LLVM.AST.DataLayout
                         llvm-hs-pure-7.0.0:LLVM.AST.Float
                         llvm-hs-pure-7.0.0:LLVM.AST.FloatingPointPredicate
                         llvm-hs-pure-7.0.0:LLVM.AST.FunctionAttribute
                         llvm-hs-pure-7.0.0:LLVM.AST.Global
                         llvm-hs-pure-7.0.0:LLVM.AST.InlineAssembly
                         llvm-hs-pure-7.0.0:LLVM.AST.Instruction
                         llvm-hs-pure-7.0.0:LLVM.AST.IntegerPredicate
                         llvm-hs-pure-7.0.0:LLVM.AST.Linkage
                         llvm-hs-pure-7.0.0:LLVM.AST.Name
                         llvm-hs-pure-7.0.0:LLVM.AST.Operand
                         llvm-hs-pure-7.0.0:LLVM.AST.ParameterAttribute
                         llvm-hs-pure-7.0.0:LLVM.AST.RMWOperation
                         llvm-hs-pure-7.0.0:LLVM.AST.ThreadLocalStorage
                         llvm-hs-pure-7.0.0:LLVM.AST.Type
                         llvm-hs-pure-7.0.0:LLVM.AST.Visibility
                         megaparsec-6.5.0:Text.Megaparsec.Error
                         megaparsec-6.5.0:Text.Megaparsec.Pos
                         megaparsec-6.5.0:Text.Megaparsec.State
                         megaparsec-6.5.0:Text.Megaparsec.Stream
                         microlens-0.4.10:Lens.Micro.Internal
                         microlens-ghc-0.4.10:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.11:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         network-uri-2.6.1.0:Network.URI
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.Color
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.Expr
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.ExprToOutput
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.Output
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.OutputPrinter
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         recursion-schemes-5.0.3:Data.Functor.Base
                         recursion-schemes-5.0.3:Data.Functor.Foldable
                         shelly-1.8.1:Shelly.Base tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         terminal-size-0.3.2.1:System.Console.Terminal.Common
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  base-4.12.0.0:Data.List fd97abd705fb5ad3df1892ccbda2abf9
import  -/  base-4.12.0.0:Data.Maybe 1e8e1362415df45376dffd98f8a47766
import  -/  base-4.12.0.0:Data.Monoid ac4890afff9aef0c0fb2f655366c4054
import  -/  base-4.12.0.0:Data.OldList aa3cb22f55737317f760023e16efbced
import  -/  base-4.12.0.0:Data.Semigroup.Internal 3831b76a2ac3c95467488be49c45bd01
import  -/  base-4.12.0.0:GHC.Base d5cff7070e23886f90cafac81647867a
import  -/  base-4.12.0.0:Prelude 4efa7a96beba0aef4f05942bacd5fe4a
import  -/  base-4.12.0.0:System.Console.GetOpt d54722a27da1c8078d75e8ca961ca1df
import  -/  base-4.12.0.0:System.Environment 9d8cca59ddf5961aa191b21ff23b6b63
import  -/  base-4.12.0.0:System.Exit 9470efc8d0d34a68f7f1c38306428726
import  -/  base-4.12.0.0:System.IO facce82fdfd090416f33d46d1e5e3e38
import  -/  base-4.12.0.0:Text.Read e6dcd4a5c6e6bff8b8e9c463426083a7
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  idris-1.3.1:IRTS.Compiler 89de67685f245f7e578df16471ac8d4f
import  -/  idris-1.3.1:Idris.AbsSyntax f95717c8d2e79e989fe5f8cab562fa1a
import  -/  idris-1.3.1:Idris.AbsSyntaxTree 8959fbb1d2563d79a650cc0a535770b3
import  -/  idris-1.3.1:Idris.ElabDecls f8fe3d8323b113e7e0157c219a2c216a
import  -/  idris-1.3.1:Idris.Main 67f231f54b7be5c60a7f94ae419688a2
import  -/  idris-1.3.1:Idris.ModeCommon 8560a020d20108941a33bd8ec6d071f1
import  -/  idris-1.3.1:Idris.Options 000425dcb06a56f4b5dad270ca0c4da0
import  -/  idris-grin-0.1.0.0:Idris.CodegenGrin 602a39b55562ccfc47528d146d3fdc48
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
8d02e43b4881ae70eacfa1ea516dee18
  cg_main ::
    Idris.CodegenGrin.Options -> Idris.AbsSyntaxTree.Idris ()
  {- Arity: 3,
     Strictness: <L,U(1*U,U,1*U,1*U,1*U,1*U,A,U,U,A,U,U)><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cg_main1
                  `cast`
                (<Idris.CodegenGrin.Options>_R
                 ->_R (<Idris.AbsSyntaxTree.IState>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Data.Either.Either
                                        Idris.Core.TT.Err
                                        ((),
                                         Idris.AbsSyntaxTree.IState)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                    <Idris.Core.TT.Err>_N
                                                                                    <GHC.Types.IO>_R
                                                                                    <((),
                                                                                      Idris.AbsSyntaxTree.IState)>_N)) ; Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                                  <Idris.AbsSyntaxTree.IState>_N
                                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                                     Idris.Core.TT.Err
                                                                                                                                     GHC.Types.IO>_R
                                                                                                                                  <()>_N)) -}
7a2c8632e346930f67f4b873a202803e
  cg_main1 ::
    Idris.CodegenGrin.Options
    -> Idris.AbsSyntaxTree.IState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Idris.Core.TT.Err ((), Idris.AbsSyntaxTree.IState) #)
  {- Arity: 3,
     Strictness: <L,U(1*U,U,1*U,1*U,1*U,1*U,A,U,U,A,U,U)><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S,U>,
     Unfolding: (\ (opts :: Idris.CodegenGrin.Options)
                   (eta :: Idris.AbsSyntaxTree.IState)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Idris.ElabDecls.elabPrims1 eta eta1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left e1 -> ds1
                   Data.Either.Right x
                   -> case x of wild1 { (,) a1 s' ->
                      case Idris.ModeCommon.loadInputs1
                             (case opts of wild2 { Idris.CodegenGrin.Options ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                              ds2 })
                             (GHC.Maybe.Nothing @ GHC.Types.Int)
                             s'
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild2 {
                        Data.Either.Left e1
                        -> (# ipv2,
                              Data.Either.Left
                                @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                @ ((), Idris.AbsSyntaxTree.IState)
                                e1 #)
                        Data.Either.Right x1
                        -> case x1 of wild3 { (,) a2 s'1 ->
                           case Idris.Elab.Value.elabDocTerms9
                                  Idris.ElabDecls.elabMain_info
                                  Idris.Elab.Term.ERHS
                                  GHC.Types.False
                                  Idris.ElabDecls.elabMain_tm_in
                                  s'1
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           let {
                             $j :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> Data.Either.Either
                                        (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                        (Idris.Core.TT.Term, Idris.AbsSyntaxTree.IState)
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         Data.Either.Either
                                           Idris.Core.TT.Err ((), Idris.AbsSyntaxTree.IState) #)
                               <join 2> {- Arity: 2, Strictness: <S,U><S,1*U> -}
                             = \ (ipv6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                                 (ipv7 :: Data.Either.Either
                                            (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                            (Idris.Core.TT.Term,
                                             Idris.AbsSyntaxTree.IState))[OneShot] ->
                               case ipv7 of wild4 {
                                 Data.Either.Left e1
                                 -> (# ipv6,
                                       Data.Either.Left
                                         @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                         @ ((), Idris.AbsSyntaxTree.IState)
                                         e1 #)
                                 Data.Either.Right x2
                                 -> case x2 of wild5 { (,) a3 s'2 ->
                                    case IRTS.Compiler.compile1
                                           Main.cg_main2
                                           (Idris.CodegenGrin.output opts)
                                           (GHC.Maybe.Just @ Idris.Core.TT.Term a3)
                                           s'2
                                           ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                                    case ipv9 of wild6 {
                                      Data.Either.Left e1
                                      -> (# ipv8,
                                            Data.Either.Left
                                              @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                              @ ((), Idris.AbsSyntaxTree.IState)
                                              e1 #)
                                      Data.Either.Right x3
                                      -> case x3 of wild7 { (,) a4 s'3 ->
                                         case GHC.Prim.catch#
                                                @ (Data.Either.Either GHC.IO.Exception.IOError ())
                                                @ GHC.Exception.Type.SomeException
                                                (\ (s2 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                                 case Idris.CodegenGrin.codegenGrin1
                                                        opts
                                                        a4
                                                        s2 of ds5 { (#,#) ipv10 ipv11 ->
                                                 (# ipv10,
                                                    Data.Either.Right
                                                      @ GHC.IO.Exception.IOError
                                                      @ ()
                                                      ipv11 #) })
                                                (System.IO.Error.tryIOError2 @ ())
                                                ipv8 of ds5 { (#,#) ipv10 ipv11 ->
                                         case ipv11 of wild8 {
                                           Data.Either.Left x4
                                           -> (# ipv10,
                                                 Data.Either.Left
                                                   @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                                   @ ((), Idris.AbsSyntaxTree.IState)
                                                   (Idris.Core.TT.Msg
                                                      @ Idris.Core.TT.Term
                                                      (case x4 of ww { GHC.IO.Exception.IOError ww1 ww2 ww3 ww4 ww5 ww6 ->
                                                       GHC.IO.Exception.$w$cshowsPrec3
                                                         ww1
                                                         ww2
                                                         ww3
                                                         ww4
                                                         ww6
                                                         (GHC.Types.[] @ GHC.Types.Char) })) #)
                                           Data.Either.Right y
                                           -> (# ipv10,
                                                 Data.Either.Right
                                                   @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                                   @ ((), Idris.AbsSyntaxTree.IState)
                                                   (y, s'3) #) } } } } } } }
                           } in
                           case ipv5 of wild4 {
                             Data.Either.Left e1
                             -> $j
                                  ipv4
                                  (Data.Either.Left
                                     @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                     @ (Idris.Core.TT.Term, Idris.AbsSyntaxTree.IState)
                                     e1)
                             Data.Either.Right x4
                             -> case x4 of wild5 { (,) a3 s'2 ->
                                case a3 of wild6 { (,,) tm ty17 ds ->
                                $j
                                  ipv4
                                  (Data.Either.Right
                                     @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                     @ (Idris.Core.TT.Term, Idris.AbsSyntaxTree.IState)
                                     (tm, s'2)) } } } } } } } } } }) -}
311b09bbc713f628daaac784481f6b37
  cg_main2 :: Idris.Options.Codegen
  {- Strictness: m1,
     Unfolding: (Idris.Options.Via
                   Idris.Options.IBCFormat
                   Main.cg_main3) -}
8ef021d9b13052f42917a43b6afe3bc8
  cg_main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.cg_main4) -}
5836aaf5dc633239365166319a87a4f3
  cg_main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("grin"#) -}
0ce56238caaf8e1b9a36441dee3d5a08
  getOpts :: GHC.Types.IO (GHC.Maybe.Maybe Idris.CodegenGrin.Options)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getOpts1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <GHC.Maybe.Maybe Idris.CodegenGrin.Options>_R)) -}
b08acb7feda86d769273f437effe945e
  getOpts1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Maybe.Maybe Idris.CodegenGrin.Options #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case System.Console.GetOpt.$wgetOpt'
                           @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                           (System.Console.GetOpt.Permute
                              @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                           Main.options
                           ipv1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                    case GHC.Base.++
                           @ [GHC.Types.Char]
                           ww4
                           (GHC.Base.map
                              @ [GHC.Types.Char]
                              @ [GHC.Types.Char]
                              System.Console.GetOpt.errUnrec
                              ww3) of wild {
                      []
                      -> GHC.Maybe.Just
                           @ Idris.CodegenGrin.Options
                           (Data.Semigroup.Internal.$fMonoidEndo1
                              @ Idris.CodegenGrin.Options
                              (GHC.Base.++
                                 @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                                 ww1
                                 (GHC.Base.map
                                    @ [GHC.Types.Char]
                                    @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                                    Main.getOpts2
                                      `cast`
                                    (<GHC.IO.FilePath>_R
                                     ->_R Sym (Data.Semigroup.Internal.N:Endo[0]
                                                   <Idris.CodegenGrin.Options>_R))
                                    ww2))
                              Idris.CodegenGrin.defaultOptions)
                      : ipv2 ipv3
                      -> GHC.Maybe.Nothing @ Idris.CodegenGrin.Options } } #) }) -}
7436d14b0eb839d0d08b511bc9c60242
  getOpts2 ::
    GHC.IO.FilePath
    -> Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: (\ (i :: GHC.IO.FilePath)
                   (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   (GHC.Types.: @ GHC.IO.FilePath i ds)
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
357b575b10eb68d1c22181ea362d6840
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
58cc735df782c9f0599c3a54f6c49a86
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Main.getOpts1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing -> Main.main2 ipv
                   GHC.Maybe.Just x
                   -> case x of wild1 { Idris.CodegenGrin.Options ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ->
                      case ds7 of wild2 {
                        GHC.Types.False
                        -> case Main.cg_main1
                                  wild1
                                  Idris.AbsSyntaxTree.idrisInit
                                  ipv of ds13 { (#,#) ipv2 ipv3 ->
                           case ipv3 of wild3 {
                             Data.Either.Left e1
                             -> case (GHC.IO.Handle.Text.hPutStr'
                                        GHC.IO.Handle.FD.stdout
                                        (GHC.CString.unpackAppendCString#
                                           Idris.Main.runMain2
                                           (Idris.Core.TT.$fShowErr'_$cshow e1))
                                        GHC.Types.True)
                                       `cast`
                                     (GHC.Types.N:IO[0] <()>_R)
                                       ipv2 of ds14 { (#,#) ipv4 ipv5 ->
                                System.Exit.exitFailure1 @ () ipv4 }
                             Data.Either.Right x1
                             -> case x1 of wild4 { (,) ds14 s' -> (# ipv2, GHC.Tuple.() #) } } }
                        GHC.Types.True -> Main.main2 ipv } } } }) -}
678264a824fcd9acafd8a55eb351fdda
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ GHC.Base.String
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getProgName1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (GHC.IO.Handle.Text.hPutStr'
                    GHC.IO.Handle.FD.stdout
                    (System.Console.GetOpt.usageInfo
                       @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                       (GHC.Base.++ @ GHC.Types.Char ipv1 Main.main3)
                       Main.options)
                    GHC.Types.True)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv }) -}
40f104a2f373e39aabbb58f3a1e0e2e1
  main3 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Char Main.main7 Main.main4) -}
60e86da39f0e5da4cf44cdd20371dc5e
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.CString.unpackCString# Main.main8)
                   Main.main5) -}
1f0db34d795b91b05663c1444921c25e
  main5 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Char Main.main7 Main.main6) -}
d20bf6735a9c781a80acedd229f1eee9
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Main.options103
                   (GHC.Types.[] @ GHC.Types.Char)) -}
93eda9e51d669c6ed8d5f0cdd1f5b8a6
  main7 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ' '#) -}
9e8d2ff3df0ec3111697e3a7b83a4b1c
  main8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[OPTION...]"#) -}
7be7c1d47561df8d68feb03f5df59929
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
68a44417ce16616ba7a098235161a32d
  options ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options99
                   Main.options1) -}
681f9a696f46a2ccbbaaf7c3a3552e7e
  options1 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options91
                   Main.options2) -}
f3209447e20c0fbf65c276d92314331e
  options10 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options11
                   (GHC.Types.[]
                      @ (System.Console.GetOpt.OptDescr
                           (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)))) -}
85f0d915d20966f45dd61fb8ecd80fc3
  options100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options101) -}
7937bab3e34ea86573bb5a2d2940fa7a
  options101 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Executable ELF output FILE."#) -}
8aa510b9d23f926f069bf5f99d31e931
  options102 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m2,
     Unfolding: (System.Console.GetOpt.ReqArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options105
                     `cast`
                   (<GHC.Base.String>_R
                    ->_R Sym (Data.Semigroup.Internal.N:Endo[0]
                                  <Idris.CodegenGrin.Options>_R))
                   Main.options103) -}
6b204a4fe8babcf5dc353cefd59437b3
  options103 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options104) -}
a4ac88d3fa63f71e51c7378aa048fd48
  options104 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FILE"#) -}
62511bd8070ad57d6869a26bad54025f
  options105 ::
    GHC.Base.String
    -> Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,A,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GHC.Base.String) (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   a
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
633543d42ec24440fe982ce4d324815e
  options106 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options107
                   (GHC.Types.[] @ GHC.Base.String)) -}
2f6aa23b0995600287ac9a495bfa3f46
  options107 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options108) -}
5dee6d5291762fe638e64c9e6d3cb31b
  options108 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("output"#) -}
8700e351919b21cfcef1f509d0c06c30
  options109 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options110
                   (GHC.Types.[] @ GHC.Types.Char)) -}
6d5de00f181af462e93ffd44e87af369
  options11 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options16
                   Main.options14
                   Main.options12) -}
ab90b0f1e11a5100fd3ed642e324b900
  options110 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'o'#) -}
7bd51ec0d12c78c6ebbfc125bc9bda8b
  options12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options13) -}
373ccab9382e6263f398ecc35065bb17
  options13 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Generate executable with debug symbols."#) -}
f74fdd418d399d9d20cc9d927dc38253
  options14 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options15
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
80d0a13fe17c7465911abdf402fe0acd
  options15 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   GHC.Types.True }) -}
096c8c7e222f21bbce38aa43f061f7df
  options16 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options17
                   (GHC.Types.[] @ GHC.Base.String)) -}
8815cae24674eac79c9b2000e18460c7
  options17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options18) -}
62457b780d63ec366afbf68c265a2bac
  options18 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dbg"#) -}
acf20284b99f0ad07f6a6d8e22dfa10e
  options19 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options24
                   Main.options22
                   Main.options20) -}
92b6efdabb39f195469119fa84bd0a15
  options2 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options81
                   Main.options3) -}
b8a36488078d91558a0e5662545c50c2
  options20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options21) -}
69bd2de58161fd01a9e25d2ff24622a7
  options21 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Save intermediate results in binary format too."#) -}
9229a4a738bac8d8a6fdf80a9d3048c0
  options22 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options23
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
2612ec24ec589d6c29fb8458e2025d07
  options23 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   ds9
                   GHC.Types.True
                   ds11 }) -}
1a966d3999a1098642b4843b2803d839
  options24 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options25
                   (GHC.Types.[] @ GHC.Base.String)) -}
7dcec035cf20d2669963326f5931adbc
  options25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options26) -}
35857993905f05c11eae2d77ce7b5712
  options26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("binary-intermed"#) -}
b3dbb79c3eb1927047a56fe7423d3735
  options27 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options32
                   Main.options30
                   Main.options28) -}
1bbf2a42ff8b678dd6dd98bf50534314
  options28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options29) -}
667a9de6a83f44e6269af8d5759dffb7
  options29 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Turn on interprocedural dead code elimination."#) -}
a1b73f68549ae89c382a309f582babd6
  options3 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options71
                   Main.options4) -}
75e37807c6d10417c80ba7810b86997f
  options30 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options31
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
65a5f2b1045e37159cd4a7c44a76aae5
  options31 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,A,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   GHC.Types.True
                   ds10
                   ds11 }) -}
b837b1e0a1561a9bfd47252475ed3300
  options32 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options33
                   (GHC.Types.[] @ GHC.Base.String)) -}
6d6cbfdc529cf3441971b4a5ee394ed8
  options33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options34) -}
60382a5c735911ba143f6e4b9887a44c
  options34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dead-code-elim"#) -}
21422b84b26a900e9a064734113e077f
  options35 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options42
                   Main.options38
                   Main.options36) -}
db5337a8d5f4f83c5e6a9a74a5f21e1e
  options36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options37) -}
5743ad86129f88b18a563a20ceed2e23
  options37 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Grin output directory."#) -}
0629a29976ae9f6c58468109015b6894
  options38 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m2,
     Unfolding: (System.Console.GetOpt.ReqArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options41
                     `cast`
                   (<GHC.Base.String>_R
                    ->_R Sym (Data.Semigroup.Internal.N:Endo[0]
                                  <Idris.CodegenGrin.Options>_R))
                   Main.options39) -}
cc5c23c81cfe7b8f3e48619ce3799ca1
  options39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options40) -}
d9132b2444e06130d2d39ea42f24f175
  options4 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options63
                   Main.options5) -}
a5f4a877a27d41595fa7f6a642f26ae6
  options40 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DIR"#) -}
4a778fb1c404eb855278eb72cd115997
  options41 ::
    GHC.Base.String
    -> Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,U,U,U,U,U,U,U,A,U,U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GHC.Base.String) (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   a
                   ds9
                   ds10
                   ds11 }) -}
1020819cea7c71ddbe6a3be31a5c9f6c
  options42 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options43
                   (GHC.Types.[] @ GHC.Base.String)) -}
d45144f024287f6b0cbd9116b86fbe33
  options43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options44) -}
755e935493f124b911391d783af47700
  options44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("output-dir"#) -}
270c925c7b1f0875ccdefa02db7774a4
  options45 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options50
                   Main.options48
                   Main.options46) -}
e03668b21bb043fe1391a17a63912701
  options46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options47) -}
e747ce3ad13009e299637f003ed3d573
  options47 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Turn off linting intermediate results."#) -}
7900f5cb92196d155332aeff3f9c08af
  options48 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options49
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
8325a197adb2ba483516904c6e1e9fe7
  options49 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,U,A,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   GHC.Types.False
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
111d818583ba3bdb368531f5e0735b38
  options5 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options53
                   Main.options6) -}
204405e8b29ec61155e09fa4dfa37f9f
  options50 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options51
                   (GHC.Types.[] @ GHC.Base.String)) -}
30e2950b333cd1161fbc6f6f18cfb5c6
  options51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options52) -}
5685077ba4c5a54e32e230b9b765017f
  options52 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("no-lint"#) -}
edfce9b358d37989b13a1120b4f5cb74
  options53 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options61
                   Main.options58
                   Main.options56
                   Main.options54) -}
6ba9451bc35b26f54089ada899c88465
  options54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options55) -}
f8bf02a4c2d82308cd4c57000962bfa1
  options55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Print help."#) -}
e9fe117b0d1073dd57ef6db1c7d78563
  options56 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options57
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
f87120006a13a988b2e24dfc9f94ede9
  options57 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,U,A,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   GHC.Types.True
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
d04db3292208eb821a56a58a83205450
  options58 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options59
                   (GHC.Types.[] @ GHC.Base.String)) -}
9b0beede443f63f12ef3ce91ee7ae9dc
  options59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options60) -}
650c3f676cab74923af213e9f470463b
  options6 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options45
                   Main.options7) -}
98f33f655122df296b6e3d05737fa837
  options60 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("help"#) -}
ad4b5f48732de4c2ddcdf456b3e86a9d
  options61 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options62
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b2bffc3034da48f738927bb41f03ffd0
  options62 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'h'#) -}
230b7de92c5a6de5f456e15e853a3f1a
  options63 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options68
                   Main.options66
                   Main.options64) -}
d2f0f43d6b81bd2b8d78ac168f7734ce
  options64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options65) -}
0d02e6b4d8f98fdccbc726c02bd5f483
  options65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("No optimisation."#) -}
b306d27c9ea289d37fae75eb0947a368
  options66 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options67
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
bf1f51f8f9e04c34770ac9e71222625a
  options67 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,A,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   GHC.Types.False
                   ds5
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
362f1c4530c7534c34196531259c9a21
  options68 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options69
                   (GHC.Types.[] @ GHC.Base.String)) -}
0d6fc1df7f93ad31f3ad6b36764398cb
  options69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options70) -}
8b73db6143c85f7a1f66ad157787cab0
  options7 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options35
                   Main.options8) -}
6dcea3eaba11de70572d7570d3a49e14
  options70 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("O0"#) -}
e1b937c93ce7ded8c8d9a324e30922ca
  options71 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options79
                   Main.options76
                   Main.options74
                   Main.options72) -}
1b64de78f9a2153ad6b4e6c2b54bd789
  options72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options73) -}
a7c451e0d35823cc75df1c188a98e804
  options73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Do not log to stdout."#) -}
02749a5ed492ba35384b6785328eaede
  options74 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options75
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
ba660b521c14c4ae906ae33b4ac0c569
  options75 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,U,U,A,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   GHC.Types.True
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
a465a8aca54ae0dff035a63d43594cac
  options76 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options77
                   (GHC.Types.[] @ GHC.Base.String)) -}
270d79ea0c337d0a1b091f799dd143ee
  options77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options78) -}
17d37809a6ed844b5ca0406ca2d2dc95
  options78 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quiet"#) -}
6d302cf0d9edff3fa41d9ad8bc434b5f
  options79 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options80
                   (GHC.Types.[] @ GHC.Types.Char)) -}
313e3dd70a71f7dbfb7add20d9d4b840
  options8 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options27
                   Main.options9) -}
5a4551d542ee70bf21cc0d2bdfe54dca
  options80 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'q'#) -}
55a6e4e13b0ea31b0a1a2eba2e288c60
  options81 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options89
                   Main.options86
                   Main.options84
                   Main.options82) -}
43e1f061bc4ae102cbc73e9bdb249141
  options82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options83) -}
3f958d50cd171b0fb944050d6bdba8cb
  options83 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Eval the final optimised GRIN."#) -}
0a501436f4196706f18f19cdcdc110e8
  options84 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options85
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
6eba35339820069e4f9e4d52d67d1ada
  options85 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,U,A,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   GHC.Types.True
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
194db81e53d051c53b0e20b8d21e69c4
  options86 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options87
                   (GHC.Types.[] @ GHC.Base.String)) -}
6e47044e968e9cb7ff289b7efc80a626
  options87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options88) -}
ac7d172ce5011bde249ff992f3bed92f
  options88 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("eval"#) -}
93b6da8e913cbe2160dbb7f4ad7275b6
  options89 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options90
                   (GHC.Types.[] @ GHC.Types.Char)) -}
20e008d0f3460979929be23ae6cbe07e
  options9 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options19
                   Main.options10) -}
c679101e7ab112df1cb19298a22d467a
  options90 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'e'#) -}
b51a08df2923dafa670cc5443a88516c
  options91 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options97
                   Main.options96
                   Main.options94
                   Main.options92) -}
ddfbf808d6104bd5efda60d0c9af699e
  options92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options93) -}
37612affbfb35684c172ecec4f7710b0
  options93 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Save the GRIN to the FILE."#) -}
9ac86fac04efd122b673fe320fe4cd8d
  options94 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options95
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
8d818c7a038a65c72746ea35733178ec
  options95 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(U,U,A,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   GHC.Types.True
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8
                   ds9
                   ds10
                   ds11 }) -}
3fd1bf3c705d4d4a047ff65c495a4150
  options96 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.cg_main3
                   (GHC.Types.[] @ GHC.Base.String)) -}
137a9f73b0a4e51cafd0e173b535fb8c
  options97 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options98
                   (GHC.Types.[] @ GHC.Types.Char)) -}
22173946849ef144f028a2f5f3703f22
  options98 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'g'#) -}
b59a4bc058b695478eb7f2b7ffbf37f9
  options99 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options109
                   Main.options106
                   Main.options102
                   Main.options100) -}
3d1e1fee1198b471cc165ac1c8343ce4
  showUsage :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

