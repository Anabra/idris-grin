
==================== FINAL INTERFACE ====================
2019-02-13 12:17:29.646615065 UTC

interface main:Main 8061
  interface hash: 1bb3479a5870d2c39cdeec4816bcf2e6
  ABI hash: 94c0318adc35d47b4ed08525acff1d39
  export-list hash: e1b0a2b00e01a5f7e5b0be4efd1fb879
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: bd6ba295c1b124c69327a7dccad18904
  opt_hash: 875791ef924fcd11c2b687259a138b70
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.cg_main
  Main.getOpts
  Main.main
  Main.options
  Main.showUsage
module dependencies:
package dependencies: Diff-0.3.4 HUnit-1.6.0.0 QuickCheck-2.11.3
                      aeson-1.4.1.0 annotated-wl-pprint-0.7.0 ansi-terminal-0.8.2
                      ansi-wl-pprint-0.6.8.2 array-0.5.2.0 async-2.2.1
                      attoparsec-0.13.2.2 base-4.12.0.0 base-compat-0.10.5
                      base-orphans-0.8 base-prelude-1.3 base64-bytestring-1.0.0.1
                      bifunctors-5.5.3 bimap-0.3.3 binary-0.8.6.0 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.2 bytestring-0.10.8.2
                      call-stack-0.1.0 case-insensitive-1.2.0.11 charset-0.3.7.1
                      cheapskate-0.1.1.1 clock-0.7.2 code-page-0.1.3 colour-2.3.4
                      comonad-5.0.4 containers-0.6.0.1 css-text-0.1.3.0
                      data-default-0.7.1.1 data-default-class-0.1.2.0
                      data-default-instances-containers-0.0.1
                      data-default-instances-dlist-0.0.1
                      data-default-instances-old-locale-0.0.1 deepseq-1.4.4.0
                      digest-0.0.1.2 directory-1.3.3.0 distributive-0.6 dlist-0.8.0.5
                      exceptions-0.10.0 extra-1.6.13 filepath-1.4.2.1 fingertree-0.1.4.1
                      free-5.1 fsnotify-0.3.0.1 functor-infix-0.0.5 ghc-boot-th-8.6.1
                      ghc-prim-0.5.3 grin-0.1.0.0 hashable-1.2.7.0 haskeline-0.7.4.3
                      haskell-lexer-1.0.2 hinotify-0.4 hspec-2.5.5 hspec-core-2.5.5
                      hspec-expectations-0.8.2 idris-1.3.1 idris-grin-0.1.0.0
                      ieee754-0.8.0 inline-c-0.6.1.0 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.2 llvm-hs-7.0.1 llvm-hs-pretty-0.5.0.0
                      llvm-hs-pure-7.0.0 megaparsec-6.5.0 microlens-0.4.10
                      microlens-ghc-0.4.10 microlens-mtl-0.1.11.1
                      microlens-platform-0.3.11 microlens-th-0.4.2.3
                      monad-control-1.0.2.3 mtl-2.2.2 neat-interpolation-0.3.2.2
                      network-2.8.0.0 network-uri-2.6.1.0 old-locale-1.0.0.7
                      parsec-3.1.13.0 parser-combinators-1.0.0 parsers-0.12.9
                      pretty-1.1.3.6 pretty-show-1.8.2 pretty-simple-2.2.0.0
                      prettyprinter-1.2.1 primitive-0.6.4.0 process-1.6.3.0
                      profunctors-5.3 quickcheck-io-0.2.0 random-1.1
                      recursion-schemes-5.0.3 scientific-0.3.6.2 semigroupoids-5.3.1
                      set-extra-1.4.1 setenv-0.1.1.3 shelly-1.8.1 split-0.2.3.3
                      stm-2.5.0.0 syb-0.7 system-fileio-0.3.16.4 system-filepath-0.4.14
                      tagged-0.8.6 tagsoup-0.14.7 template-haskell-2.14.0.0
                      terminal-size-0.3.2.1 terminfo-0.4.1.2 text-1.2.3.1 tf-random-0.5
                      th-abstraction-0.2.8.0 time-1.8.0.2 time-locale-compat-0.1.1.5
                      transformers-0.5.5.0 transformers-base-0.4.5.2
                      transformers-compat-0.6.2 uniplate-1.6.12 unix-2.7.2.2
                      unix-compat-0.5.1 unordered-containers-0.2.9.0 utf8-string-1.0.1.1
                      uuid-types-1.0.3 vector-0.12.0.1 xss-sanitize-0.3.6
                      zip-archive-0.3.3 zlib-0.6.2
orphans: fsnotify-0.3.0.1:System.FSNotify.Linux
         system-filepath-0.4.14:Filesystem.Path.CurrentOS
         system-filepath-0.4.14:Filesystem.Path idris-1.3.1:Idris.IBC
         idris-1.3.1:Idris.DeepSeq idris-1.3.1:Idris.Core.DeepSeq
         idris-1.3.1:Idris.Output cheapskate-0.1.1.1:Cheapskate
         uniplate-1.6.12:Data.Generics.Uniplate.Data
         data-default-instances-containers-0.0.1:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1:Data.Default.Instances.OldLocale
         idris-1.3.1:Idris.Core.Binary network-2.8.0.0:Network.Socket
         idris-1.3.1:IRTS.Portable
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         idris-1.3.1:Idris.Core.Evaluate
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         grin-0.1.0.0:AbstractInterpretation.CreatedBy.Pretty
         grin-0.1.0.0:AbstractInterpretation.LiveVariable.Pretty
         grin-0.1.0.0:AbstractInterpretation.Sharing.Pretty
         grin-0.1.0.0:AbstractInterpretation.HeapPointsTo.Pretty
         grin-0.1.0.0:AbstractInterpretation.PrettyIR
         grin-0.1.0.0:Lens.Micro.Extra syb-0.7:Data.Generics.Instances
         grin-0.1.0.0:Grin.Pretty colour-2.3.4:Data.Colour
         llvm-hs-7.0.1:LLVM.Internal.OrcJIT.CompileOnDemandLayer
         llvm-hs-7.0.1:LLVM.Internal.Global
         llvm-hs-7.0.1:LLVM.Internal.Instruction
         llvm-hs-7.0.1:LLVM.Internal.Atomicity
         llvm-hs-7.0.1:LLVM.Internal.Attribute
         llvm-hs-7.0.1:LLVM.Internal.CallingConvention
         llvm-hs-7.0.1:LLVM.Internal.FastMathFlags
         llvm-hs-7.0.1:LLVM.Internal.RMWOperation
         llvm-hs-7.0.1:LLVM.Internal.TailCallKind
         llvm-hs-7.0.1:LLVM.Internal.MemoryBuffer
         llvm-hs-7.0.1:LLVM.Internal.Operand
         llvm-hs-7.0.1:LLVM.Internal.Constant
         llvm-hs-7.0.1:LLVM.Internal.FloatingPointPredicate
         llvm-hs-7.0.1:LLVM.Internal.IntegerPredicate
         llvm-hs-7.0.1:LLVM.Internal.InlineAssembly
         llvm-hs-7.0.1:LLVM.Internal.Metadata
         llvm-hs-7.0.1:LLVM.Internal.Type
         llvm-hs-7.0.1:LLVM.Internal.EncodeAST
         llvm-hs-7.0.1:LLVM.Internal.Target
         llvm-hs-7.0.1:LLVM.Internal.String
         llvm-hs-7.0.1:Control.Monad.AnyCont
         llvm-hs-7.0.1:LLVM.Internal.FFI.LLVMCTypes
         llvm-hs-pretty-0.5.0.0:LLVM.Pretty
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.5.0.0:Control.Monad.STM grin-0.1.0.0:Grin.Syntax
         microlens-platform-0.3.11:Lens.Micro.Platform
         microlens-ghc-0.4.10:Lens.Micro.GHC
         hashable-1.2.7.0:Data.Hashable.Generic
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         text-1.2.3.1:Data.Text.Lazy
         transformers-0.5.5.0:Control.Monad.Trans.Error
         text-1.2.3.1:Data.Text binary-0.8.6.0:Data.Binary.Generic
         bytestring-0.10.8.2:Data.ByteString.Builder
         text-1.2.3.1:Data.Text.Show base-4.12.0.0:GHC.Float
         base-4.12.0.0:GHC.Base
family instance modules: aeson-1.4.1.0:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.12.0.0:Control.Applicative base-4.12.0.0:Data.Complex
                         base-4.12.0.0:Data.Functor.Compose base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         bifunctors-5.5.3:Data.Bifunctor.Biff
                         bifunctors-5.5.3:Data.Bifunctor.Clown
                         bifunctors-5.5.3:Data.Bifunctor.Flip
                         bifunctors-5.5.3:Data.Bifunctor.Join
                         bifunctors-5.5.3:Data.Bifunctor.Joker
                         bifunctors-5.5.3:Data.Bifunctor.Product
                         bifunctors-5.5.3:Data.Bifunctor.Sum
                         bifunctors-5.5.3:Data.Bifunctor.Tannen
                         bifunctors-5.5.3:Data.Bifunctor.Wrapped
                         cheapskate-0.1.1.1:Cheapskate.Types clock-0.7.2:System.Clock
                         containers-0.6.0.1:Data.Graph
                         containers-0.6.0.1:Data.IntMap.Internal
                         containers-0.6.0.1:Data.IntSet.Internal
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Sequence.Internal
                         containers-0.6.0.1:Data.Set.Internal containers-0.6.0.1:Data.Tree
                         dlist-0.8.0.5:Data.DList fingertree-0.1.4.1:Data.FingerTree
                         fingertree-0.1.4.1:Data.PriorityQueue.FingerTree
                         free-5.1:Control.Comonad.Cofree
                         free-5.1:Control.Comonad.Trans.Cofree free-5.1:Control.Monad.Free
                         free-5.1:Control.Monad.Trans.Free
                         ghc-boot-th-8.6.1:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.1:GHC.LanguageExtensions.Type
                         grin-0.1.0.0:AbstractInterpretation.IR
                         grin-0.1.0.0:AbstractInterpretation.Reduce grin-0.1.0.0:Grin.Syntax
                         grin-0.1.0.0:Grin.SyntaxDefs grin-0.1.0.0:Grin.TypeEnvDefs
                         grin-0.1.0.0:Lens.Micro.Extra
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         idris-1.3.1:IRTS.CodegenCommon idris-1.3.1:IRTS.Lang
                         idris-1.3.1:Idris.AbsSyntaxTree idris-1.3.1:Idris.Colours
                         idris-1.3.1:Idris.Core.CaseTree idris-1.3.1:Idris.Core.Evaluate
                         idris-1.3.1:Idris.Core.TT idris-1.3.1:Idris.Docstrings
                         idris-1.3.1:Idris.Options inline-c-0.6.1.0:Language.C.Inline
                         inline-c-0.6.1.0:Language.C.Inline.Context
                         llvm-hs-7.0.1:LLVM.CodeGenOpt llvm-hs-7.0.1:LLVM.CodeModel
                         llvm-hs-7.0.1:LLVM.Internal.FFI.LLVMCTypes
                         llvm-hs-7.0.1:LLVM.Relocation llvm-hs-7.0.1:LLVM.Target.Options
                         llvm-hs-pure-7.0.0:LLVM.AST llvm-hs-pure-7.0.0:LLVM.AST.AddrSpace
                         llvm-hs-pure-7.0.0:LLVM.AST.COMDAT
                         llvm-hs-pure-7.0.0:LLVM.AST.CallingConvention
                         llvm-hs-pure-7.0.0:LLVM.AST.Constant
                         llvm-hs-pure-7.0.0:LLVM.AST.DLL
                         llvm-hs-pure-7.0.0:LLVM.AST.DataLayout
                         llvm-hs-pure-7.0.0:LLVM.AST.Float
                         llvm-hs-pure-7.0.0:LLVM.AST.FloatingPointPredicate
                         llvm-hs-pure-7.0.0:LLVM.AST.FunctionAttribute
                         llvm-hs-pure-7.0.0:LLVM.AST.Global
                         llvm-hs-pure-7.0.0:LLVM.AST.InlineAssembly
                         llvm-hs-pure-7.0.0:LLVM.AST.Instruction
                         llvm-hs-pure-7.0.0:LLVM.AST.IntegerPredicate
                         llvm-hs-pure-7.0.0:LLVM.AST.Linkage
                         llvm-hs-pure-7.0.0:LLVM.AST.Name
                         llvm-hs-pure-7.0.0:LLVM.AST.Operand
                         llvm-hs-pure-7.0.0:LLVM.AST.ParameterAttribute
                         llvm-hs-pure-7.0.0:LLVM.AST.RMWOperation
                         llvm-hs-pure-7.0.0:LLVM.AST.ThreadLocalStorage
                         llvm-hs-pure-7.0.0:LLVM.AST.Type
                         llvm-hs-pure-7.0.0:LLVM.AST.Visibility
                         megaparsec-6.5.0:Text.Megaparsec.Error
                         megaparsec-6.5.0:Text.Megaparsec.Pos
                         megaparsec-6.5.0:Text.Megaparsec.State
                         megaparsec-6.5.0:Text.Megaparsec.Stream
                         microlens-0.4.10:Lens.Micro.Internal
                         microlens-ghc-0.4.10:Lens.Micro.GHC
                         microlens-mtl-0.1.11.1:Lens.Micro.Mtl.Internal
                         microlens-platform-0.3.11:Lens.Micro.Platform
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         network-uri-2.6.1.0:Network.URI
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.Color
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.Expr
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.ExprToOutput
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.Output
                         pretty-simple-2.2.0.0:Text.Pretty.Simple.Internal.OutputPrinter
                         prettyprinter-1.2.1:Data.Text.Prettyprint.Doc.Internal
                         primitive-0.6.4.0:Control.Monad.Primitive
                         primitive-0.6.4.0:Data.Primitive.Array
                         primitive-0.6.4.0:Data.Primitive.ByteArray
                         primitive-0.6.4.0:Data.Primitive.PrimArray
                         primitive-0.6.4.0:Data.Primitive.SmallArray
                         primitive-0.6.4.0:Data.Primitive.UnliftedArray
                         recursion-schemes-5.0.3:Data.Functor.Base
                         recursion-schemes-5.0.3:Data.Functor.Foldable
                         shelly-1.8.1:Shelly.Base tagged-0.8.6:Data.Tagged
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
                         terminal-size-0.3.2.1:System.Console.Terminal.Common
                         text-1.2.3.1:Data.Text text-1.2.3.1:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
                         zlib-0.6.2:Codec.Compression.Zlib.Stream
import  -/  base-4.12.0.0:Data.List fd97abd705fb5ad3df1892ccbda2abf9
import  -/  base-4.12.0.0:Data.Maybe 1e8e1362415df45376dffd98f8a47766
import  -/  base-4.12.0.0:Data.Monoid ac4890afff9aef0c0fb2f655366c4054
import  -/  base-4.12.0.0:Data.OldList aa3cb22f55737317f760023e16efbced
import  -/  base-4.12.0.0:Data.Semigroup.Internal 3831b76a2ac3c95467488be49c45bd01
import  -/  base-4.12.0.0:GHC.Base d5cff7070e23886f90cafac81647867a
import  -/  base-4.12.0.0:Prelude 4efa7a96beba0aef4f05942bacd5fe4a
import  -/  base-4.12.0.0:System.Console.GetOpt d54722a27da1c8078d75e8ca961ca1df
import  -/  base-4.12.0.0:System.Environment 9d8cca59ddf5961aa191b21ff23b6b63
import  -/  base-4.12.0.0:System.Exit 9470efc8d0d34a68f7f1c38306428726
import  -/  base-4.12.0.0:System.IO facce82fdfd090416f33d46d1e5e3e38
import  -/  base-4.12.0.0:Text.Read e6dcd4a5c6e6bff8b8e9c463426083a7
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
import  -/  idris-1.3.1:IRTS.Compiler 89de67685f245f7e578df16471ac8d4f
import  -/  idris-1.3.1:Idris.AbsSyntax f95717c8d2e79e989fe5f8cab562fa1a
import  -/  idris-1.3.1:Idris.AbsSyntaxTree 8959fbb1d2563d79a650cc0a535770b3
import  -/  idris-1.3.1:Idris.ElabDecls f8fe3d8323b113e7e0157c219a2c216a
import  -/  idris-1.3.1:Idris.Main 67f231f54b7be5c60a7f94ae419688a2
import  -/  idris-1.3.1:Idris.ModeCommon 8560a020d20108941a33bd8ec6d071f1
import  -/  idris-1.3.1:Idris.Options 000425dcb06a56f4b5dad270ca0c4da0
import  -/  idris-grin-0.1.0.0:Idris.CodegenGrin 296afbbaf779708617326c6ec9766f83
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
4bb20cdab436bd572b7e10a0677e22da
  cg_main ::
    Idris.CodegenGrin.Options -> Idris.AbsSyntaxTree.Idris ()
  {- Arity: 3,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,U,U,A,U)><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.cg_main1
                  `cast`
                (<Idris.CodegenGrin.Options>_R
                 ->_R (<Idris.AbsSyntaxTree.IState>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Data.Either.Either
                                        Idris.Core.TT.Err
                                        ((),
                                         Idris.AbsSyntaxTree.IState)>_R) ; Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                                                    <Idris.Core.TT.Err>_N
                                                                                    <GHC.Types.IO>_R
                                                                                    <((),
                                                                                      Idris.AbsSyntaxTree.IState)>_N)) ; Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                                                                  <Idris.AbsSyntaxTree.IState>_N
                                                                                                                                  <Control.Monad.Trans.Except.ExceptT
                                                                                                                                     Idris.Core.TT.Err
                                                                                                                                     GHC.Types.IO>_R
                                                                                                                                  <()>_N)) -}
bc5a523612450406edfc990eafa2e852
  cg_main1 ::
    Idris.CodegenGrin.Options
    -> Idris.AbsSyntaxTree.IState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            Idris.Core.TT.Err ((), Idris.AbsSyntaxTree.IState) #)
  {- Arity: 3,
     Strictness: <L,U(1*U,1*U,1*U,1*U,A,U,U,A,U)><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S,U>,
     Unfolding: (\ (opts :: Idris.CodegenGrin.Options)
                   (eta :: Idris.AbsSyntaxTree.IState)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Idris.ElabDecls.elabPrims1 eta eta1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left e1 -> ds1
                   Data.Either.Right x
                   -> case x of wild1 { (,) a1 s' ->
                      case Idris.ModeCommon.loadInputs1
                             (case opts of wild2 { Idris.CodegenGrin.Options ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ->
                              ds2 })
                             (GHC.Maybe.Nothing @ GHC.Types.Int)
                             s'
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      case ipv3 of wild2 {
                        Data.Either.Left e1
                        -> (# ipv2,
                              Data.Either.Left
                                @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                @ ((), Idris.AbsSyntaxTree.IState)
                                e1 #)
                        Data.Either.Right x1
                        -> case x1 of wild3 { (,) a2 s'1 ->
                           case Idris.Elab.Value.elabDocTerms9
                                  Idris.ElabDecls.elabMain_info
                                  Idris.Elab.Term.ERHS
                                  GHC.Types.False
                                  Idris.ElabDecls.elabMain_tm_in
                                  s'1
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           let {
                             $j :: GHC.Prim.State# GHC.Prim.RealWorld
                                   -> Data.Either.Either
                                        (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                        (Idris.Core.TT.Term, Idris.AbsSyntaxTree.IState)
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                         Data.Either.Either
                                           Idris.Core.TT.Err ((), Idris.AbsSyntaxTree.IState) #)
                               <join 2> {- Arity: 2, Strictness: <S,U><S,1*U> -}
                             = \ (ipv6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                                 (ipv7 :: Data.Either.Either
                                            (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                            (Idris.Core.TT.Term,
                                             Idris.AbsSyntaxTree.IState))[OneShot] ->
                               case ipv7 of wild4 {
                                 Data.Either.Left e1
                                 -> (# ipv6,
                                       Data.Either.Left
                                         @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                         @ ((), Idris.AbsSyntaxTree.IState)
                                         e1 #)
                                 Data.Either.Right x2
                                 -> case x2 of wild5 { (,) a3 s'2 ->
                                    case IRTS.Compiler.compile1
                                           Main.cg_main2
                                           (Idris.CodegenGrin.output opts)
                                           (GHC.Maybe.Just @ Idris.Core.TT.Term a3)
                                           s'2
                                           ipv6 of ds4 { (#,#) ipv8 ipv9 ->
                                    case ipv9 of wild6 {
                                      Data.Either.Left e1
                                      -> (# ipv8,
                                            Data.Either.Left
                                              @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                              @ ((), Idris.AbsSyntaxTree.IState)
                                              e1 #)
                                      Data.Either.Right x3
                                      -> case x3 of wild7 { (,) a4 s'3 ->
                                         case GHC.Prim.catch#
                                                @ (Data.Either.Either GHC.IO.Exception.IOError ())
                                                @ GHC.Exception.Type.SomeException
                                                (\ (s2 :: GHC.Prim.State#
                                                            GHC.Prim.RealWorld)[OneShot] ->
                                                 case opts of ww { Idris.CodegenGrin.Options ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ->
                                                 case a4 of ww10 { IRTS.CodegenCommon.CodegenInfo ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ww21 ww22 ww23 ww24 ww25 ww26 ->
                                                 case Idris.CodegenGrin.$wcodegenGrin
                                                        ww3
                                                        ww4
                                                        ww6
                                                        ww7
                                                        ww9
                                                        ww11
                                                        ww21
                                                        s2 of ds5 { (#,#) ipv10 ipv11 ->
                                                 (# ipv10,
                                                    Data.Either.Right
                                                      @ GHC.IO.Exception.IOError
                                                      @ ()
                                                      ipv11 #) } } })
                                                (System.IO.Error.tryIOError2 @ ())
                                                ipv8 of ds5 { (#,#) ipv10 ipv11 ->
                                         case ipv11 of wild8 {
                                           Data.Either.Left x4
                                           -> (# ipv10,
                                                 Data.Either.Left
                                                   @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                                   @ ((), Idris.AbsSyntaxTree.IState)
                                                   (Idris.Core.TT.Msg
                                                      @ Idris.Core.TT.Term
                                                      (case x4 of ww { GHC.IO.Exception.IOError ww1 ww2 ww3 ww4 ww5 ww6 ->
                                                       GHC.IO.Exception.$w$cshowsPrec3
                                                         ww1
                                                         ww2
                                                         ww3
                                                         ww4
                                                         ww6
                                                         (GHC.Types.[] @ GHC.Types.Char) })) #)
                                           Data.Either.Right y
                                           -> (# ipv10,
                                                 Data.Either.Right
                                                   @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                                   @ ((), Idris.AbsSyntaxTree.IState)
                                                   (y, s'3) #) } } } } } } }
                           } in
                           case ipv5 of wild4 {
                             Data.Either.Left e1
                             -> $j
                                  ipv4
                                  (Data.Either.Left
                                     @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                     @ (Idris.Core.TT.Term, Idris.AbsSyntaxTree.IState)
                                     e1)
                             Data.Either.Right x4
                             -> case x4 of wild5 { (,) a3 s'2 ->
                                case a3 of wild6 { (,,) tm ty17 ds ->
                                $j
                                  ipv4
                                  (Data.Either.Right
                                     @ (Idris.Core.TT.Err' Idris.Core.TT.Term)
                                     @ (Idris.Core.TT.Term, Idris.AbsSyntaxTree.IState)
                                     (tm, s'2)) } } } } } } } } } }) -}
311b09bbc713f628daaac784481f6b37
  cg_main2 :: Idris.Options.Codegen
  {- Strictness: m1,
     Unfolding: (Idris.Options.Via
                   Idris.Options.IBCFormat
                   Main.cg_main3) -}
8ef021d9b13052f42917a43b6afe3bc8
  cg_main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.cg_main4) -}
5836aaf5dc633239365166319a87a4f3
  cg_main4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("grin"#) -}
599c3c06d65d85c3d5923fb6a5e892c7
  getOpts :: GHC.Types.IO (GHC.Maybe.Maybe Idris.CodegenGrin.Options)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getOpts1
                  `cast`
                (Sym (GHC.Types.N:IO[0]
                          <GHC.Maybe.Maybe Idris.CodegenGrin.Options>_R)) -}
95363d26a08c9d6059e1e2ffe23f4bf9
  getOpts1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Maybe.Maybe Idris.CodegenGrin.Options #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case System.Console.GetOpt.$wgetOpt'
                           @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                           (System.Console.GetOpt.Permute
                              @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                           Main.options
                           ipv1 of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                    case GHC.Base.++
                           @ [GHC.Types.Char]
                           ww4
                           (GHC.Base.map
                              @ [GHC.Types.Char]
                              @ [GHC.Types.Char]
                              System.Console.GetOpt.errUnrec
                              ww3) of wild {
                      []
                      -> GHC.Maybe.Just
                           @ Idris.CodegenGrin.Options
                           (Data.Semigroup.Internal.$fMonoidEndo1
                              @ Idris.CodegenGrin.Options
                              (GHC.Base.++
                                 @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                                 ww1
                                 (GHC.Base.map
                                    @ [GHC.Types.Char]
                                    @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                                    Main.getOpts2
                                      `cast`
                                    (<GHC.IO.FilePath>_R
                                     ->_R Sym (Data.Semigroup.Internal.N:Endo[0]
                                                   <Idris.CodegenGrin.Options>_R))
                                    ww2))
                              Idris.CodegenGrin.defaultOptions)
                      : ipv2 ipv3
                      -> GHC.Maybe.Nothing @ Idris.CodegenGrin.Options } } #) }) -}
faca5f20a58ab54d3e8e3e1c27f6b37f
  getOpts2 ::
    GHC.IO.FilePath
    -> Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,U,U,U,U,U,U,U,U)>m,
     Unfolding: (\ (i :: GHC.IO.FilePath)
                   (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options
                   (GHC.Types.: @ GHC.IO.FilePath i ds)
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8 }) -}
7464bbb8d21448ec483413c60ce8ecb8
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
b2c2662934d9b644b9f1b0d4077b14e8
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Main.getOpts1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing -> Main.main2 ipv
                   GHC.Maybe.Just x
                   -> case x of wild1 { Idris.CodegenGrin.Options ds ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ->
                      case ds5 of wild2 {
                        GHC.Types.False
                        -> case Main.cg_main1
                                  wild1
                                  Idris.AbsSyntaxTree.idrisInit
                                  ipv of ds10 { (#,#) ipv2 ipv3 ->
                           case ipv3 of wild3 {
                             Data.Either.Left e1
                             -> case (GHC.IO.Handle.Text.hPutStr'
                                        GHC.IO.Handle.FD.stdout
                                        (GHC.CString.unpackAppendCString#
                                           Idris.Main.runMain2
                                           (Idris.Core.TT.$fShowErr'_$cshow e1))
                                        GHC.Types.True)
                                       `cast`
                                     (GHC.Types.N:IO[0] <()>_R)
                                       ipv2 of ds11 { (#,#) ipv4 ipv5 ->
                                System.Exit.exitFailure1 @ () ipv4 }
                             Data.Either.Right x1
                             -> case x1 of wild4 { (,) ds11 s' -> (# ipv2, GHC.Tuple.() #) } } }
                        GHC.Types.True -> Main.main2 ipv } } } }) -}
ec37cc19663756e58579c7d5a17ecc6d
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ GHC.Base.String
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getProgName1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <GHC.Base.String>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (GHC.IO.Handle.Text.hPutStr'
                    GHC.IO.Handle.FD.stdout
                    (System.Console.GetOpt.usageInfo
                       @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                       (GHC.Base.++ @ GHC.Types.Char ipv1 Main.main3)
                       Main.options)
                    GHC.Types.True)
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv }) -}
e91d739600a3accee634c6e9e6ddc960
  main3 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Char Main.main7 Main.main4) -}
ecc8be15d7e73426c7a45d74c515df17
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.CString.unpackCString# Main.main8)
                   Main.main5) -}
3710c6162e1694bcdb8194ae0f2bff5e
  main5 :: [GHC.Types.Char]
  {- Strictness: m2,
     Unfolding: (GHC.Types.: @ GHC.Types.Char Main.main7 Main.main6) -}
2f0ef2012bcd3b00fc31ad4093ca078c
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Main.options74
                   (GHC.Types.[] @ GHC.Types.Char)) -}
93eda9e51d669c6ed8d5f0cdd1f5b8a6
  main7 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ' '#) -}
9e8d2ff3df0ec3111697e3a7b83a4b1c
  main8 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("[OPTION...]"#) -}
cbae351daf83ac26196bd18393d92d12
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ccfb4958c0339d4536c6bcb943ccd5c5
  options ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options70
                   Main.options1) -}
73ff00ea5577018dc9c95ec5eae0a419
  options1 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options60
                   Main.options2) -}
9524e39e62d6580379066f66b2615993
  options10 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Save intermediate results in binary format too."#) -}
dffc4f3ea7ebb3bc3faf7dcc032ead16
  options11 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options12
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
4dca42592a88290c446fac7f2b42f918
  options12 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   GHC.Types.True }) -}
ca9b19d92ab8128efafb47ff8eb23119
  options13 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options14
                   (GHC.Types.[] @ GHC.Base.String)) -}
f87622975f459f54470ad473338b0e54
  options14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options15) -}
c578b15093b2d7cc33e0be2b40752f1a
  options15 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("binary-intermed"#) -}
18529817d2942af14c55d5db5f8e116c
  options16 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options21
                   Main.options19
                   Main.options17) -}
120a938cb61fdb167605d66ce3bacc63
  options17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options18) -}
80838c998a93e4191443930171ff9d57
  options18 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Turn on interprocedural dead code elimination."#) -}
0bd42bee10cbab0d7eb989bd581ffb09
  options19 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options20
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
73eddd448ac755e292b1804d4d1e5265
  options2 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options52
                   Main.options3) -}
e53225dac9976466e5e9d10b75fe5e1c
  options20 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,U,U,A,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   ds5
                   ds6
                   GHC.Types.True
                   ds8 }) -}
78ea685e9feec1ecfed89effbad7c7f0
  options21 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options22
                   (GHC.Types.[] @ GHC.Base.String)) -}
59d8eabc2a134d4ff23a989034fdb144
  options22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options23) -}
1a50264c424d849dba5337546e594946
  options23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("dead-code-elim"#) -}
e7670254eb7869592a09402d303f72bb
  options24 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options31
                   Main.options27
                   Main.options25) -}
b9515489ec9e5b55f3b4f31cf19a95af
  options25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options26) -}
d1b097efcd72551e895407347f551e5c
  options26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Grin output directory."#) -}
8f52a578b6bd4be05eee432e2c7df4e7
  options27 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m2,
     Unfolding: (System.Console.GetOpt.ReqArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options30
                     `cast`
                   (<GHC.Base.String>_R
                    ->_R Sym (Data.Semigroup.Internal.N:Endo[0]
                                  <Idris.CodegenGrin.Options>_R))
                   Main.options28) -}
86b151b87b670f1e4e5b6e708e2b3c63
  options28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options29) -}
3ed30c4bf49375e26c4564a1e75d0434
  options29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("DIR"#) -}
dc007ff4598a3cb6aca2c864ff8f3742
  options3 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options42
                   Main.options4) -}
51dfd53f97f5a2068425309054985643
  options30 ::
    GHC.Base.String
    -> Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,U,U,U,U,U,A,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GHC.Base.String) (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 a ds7 ds8 }) -}
77f4a639766f56c502f7a0f35fc954ac
  options31 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options32
                   (GHC.Types.[] @ GHC.Base.String)) -}
2a068a8d6fa342ada1c148d78b6078bb
  options32 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options33) -}
d7a4581b0a9759e604e379bba78234e9
  options33 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("output-dir"#) -}
3beb1b703bc378faa8622fde2cfc0a9f
  options34 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options39
                   Main.options37
                   Main.options35) -}
78c624dc733f45d96df7e46cc9a95ee2
  options35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options36) -}
7e1acddf0b8a82a742943686356323fd
  options36 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Turn off linting intermediate results."#) -}
d9918cc5a1134592f694cdb0e28b00fe
  options37 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options38
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
901f4b0fd375710c075454c8562e636d
  options38 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,U,A,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   ds4
                   GHC.Types.False
                   ds6
                   ds7
                   ds8 }) -}
6875e7bbf971526b21908644c314ec65
  options39 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options40
                   (GHC.Types.[] @ GHC.Base.String)) -}
b2a8e82e95fe03718baeb3dedbd5f674
  options4 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options34
                   Main.options5) -}
85acb2f0fd8a1f7307a4d583fed5f3e2
  options40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options41) -}
44608c5b36b519bd483342c9f75d15fb
  options41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("no-lint"#) -}
8cd9f9d6a35ca09714d70f58273018f3
  options42 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options50
                   Main.options47
                   Main.options45
                   Main.options43) -}
6e07d3f32455aa7bd51b86e8f0e588d0
  options43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options44) -}
23567f9757f7af267cbf6cb0acb6a5a2
  options44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Print help"#) -}
3647f50e6ccd5efaa4647b3c41a83649
  options45 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options46
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
b55e09879528b76b6be8b22bcf61649d
  options46 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U,A,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   ds3
                   GHC.Types.True
                   ds5
                   ds6
                   ds7
                   ds8 }) -}
4a17dfd69784d2a08bceccd43471f631
  options47 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options48
                   (GHC.Types.[] @ GHC.Base.String)) -}
3f26a08adb4d60e00c9afa13e4ae65b8
  options48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options49) -}
2f71952ad92c8676ddec2964e565bb74
  options49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("help"#) -}
b3a62e5381f063ff7b03d50a997a0961
  options5 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options24
                   Main.options6) -}
aef05fa784e471cc4e4fb2bc1859c9af
  options50 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options51
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ff0fd79594e30e11c6cd7c81e2e9c02e
  options51 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'h'#) -}
228c157cb6a3d32715a8c2335402b480
  options52 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options57
                   Main.options55
                   Main.options53) -}
e271459e5a2089dd6938a844023ab791
  options53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options54) -}
cba5b6123f8260f84ee74a3443584b15
  options54 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("No optimisation"#) -}
be1633ee85df846dd46fb1c39190480a
  options55 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options56
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
04a7692755c2e5bd948e666278a4cc0e
  options56 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,A,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   GHC.Types.False
                   ds3
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8 }) -}
2a0c82110e29b5d97de0d32a8e5b11bb
  options57 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options58
                   (GHC.Types.[] @ GHC.Base.String)) -}
a69c00289d869cca25c8f06ee3f4bd6d
  options58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options59) -}
6f1765941ec174f957053500c24650c2
  options59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("O0"#) -}
e5e92e04b5e6afc7909875ec10d5d571
  options6 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options16
                   Main.options7) -}
3d982f49687713341c46fe38d7af3036
  options60 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options68
                   Main.options65
                   Main.options63
                   Main.options61) -}
fa3cd6d892fa8fff261e3f9aaac3ed2d
  options61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options62) -}
3e03d68ff811c992652bc013d3f4c43f
  options62 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Do not log to stdout"#) -}
8353d714f4b932f7c65c381cf74bf1c8
  options63 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (System.Console.GetOpt.NoArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options64
                     `cast`
                   (Sym (Data.Semigroup.Internal.N:Endo[0]
                             <Idris.CodegenGrin.Options>_R))) -}
4e72632e2d7a1f05e88756b42a142c3a
  options64 :: Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,A,U,U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options
                   ds
                   ds1
                   ds2
                   GHC.Types.True
                   ds4
                   ds5
                   ds6
                   ds7
                   ds8 }) -}
cdc5031db5c48eebf9e52264728d42b0
  options65 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options66
                   (GHC.Types.[] @ GHC.Base.String)) -}
4820912f14d0e2fc8b56b91e07e31f86
  options66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options67) -}
f22a76527c8e0d0c26fb1de1a193d3e5
  options67 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("quiet"#) -}
39eed39ed26d098515e1c14687540cee
  options68 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options69
                   (GHC.Types.[] @ GHC.Types.Char)) -}
b038c0dd554f2148408f4c6ad0d178b0
  options69 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'q'#) -}
e4c8742cbc2e6f13d3fec5bd88f982ed
  options7 ::
    [System.Console.GetOpt.OptDescr
       (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (System.Console.GetOpt.OptDescr
                        (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options))
                   Main.options8
                   (GHC.Types.[]
                      @ (System.Console.GetOpt.OptDescr
                           (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)))) -}
e5e777ffafdedf9a5152931447019028
  options70 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options80
                   Main.options77
                   Main.options73
                   Main.options71) -}
3e097d32dd9ae0030e39184ca77ca2a7
  options71 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options72) -}
c7e5720a1b265c120154591021b9b3db
  options72 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Grin output FILE (does not work yet)"#) -}
8ba975fe75d44fd4e0ca4275ff98c58e
  options73 ::
    System.Console.GetOpt.ArgDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m2,
     Unfolding: (System.Console.GetOpt.ReqArg
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   Main.options76
                     `cast`
                   (<GHC.Base.String>_R
                    ->_R Sym (Data.Semigroup.Internal.N:Endo[0]
                                  <Idris.CodegenGrin.Options>_R))
                   Main.options74) -}
dd1bf7e83cc96617197b2ce2291aeab8
  options74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options75) -}
2efe1e383077c21a72b43c4204ea9463
  options75 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("FILE"#) -}
a1a1bdd31ecf19fa5e358803ba6060b1
  options76 ::
    GHC.Base.String
    -> Idris.CodegenGrin.Options -> Idris.CodegenGrin.Options
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U><S,1*U(U,A,U,U,U,U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GHC.Base.String) (opts :: Idris.CodegenGrin.Options) ->
                 case opts of wild { Idris.CodegenGrin.Options ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ->
                 Idris.CodegenGrin.Options ds a ds2 ds3 ds4 ds5 ds6 ds7 ds8 }) -}
8949d544f84baea9c6ab5312b0b2997d
  options77 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Main.options78
                   (GHC.Types.[] @ GHC.Base.String)) -}
4aa4aa0dd9dc97b5119b987c25264153
  options78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options79) -}
b5cedc027fa71c2e2aedca94ae57543a
  options79 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("output"#) -}
987e37f82bfaa3ebc9bb6a1ec279d7a6
  options8 ::
    System.Console.GetOpt.OptDescr
      (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
  {- Strictness: m,
     Unfolding: (System.Console.GetOpt.Option
                   @ (Data.Semigroup.Internal.Endo Idris.CodegenGrin.Options)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.options13
                   Main.options11
                   Main.options9) -}
5be6a81886fb8706177f30330167d99d
  options80 :: [GHC.Types.Char]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Main.options81
                   (GHC.Types.[] @ GHC.Types.Char)) -}
c767c0175ecf334e14f3e42f8849cdde
  options81 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# 'o'#) -}
97a6b8340faa71d31303865ed1ff83f1
  options9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.options10) -}
098f724e837bff85f79f49f00ee1bf4d
  showUsage :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main2 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

